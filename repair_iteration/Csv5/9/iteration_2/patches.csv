bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.format.setRecorded(false,  true);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecorded(false,  true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecorded(false,  true);	  this.format.setRecorded(false,    false);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
2	[BUG]  [BUGGY]  if(newRecord)  {  this.format.setRecorded(false,  false);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.setRecorded(false,  false);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.setRecorded(false,  false);  }	  this.format.setRecorded(false,    false);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
3	[BUG]  [BUGGY]  if(newRecord)  {  this.format.setRecorded(false,  false);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.setRecorded(false,  false);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.setRecorded(false,  false);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.format.setRecorded(false,    false);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
4	[BUG]  [BUGGY]  if(newRecord)  {  this.format.setRecorded(false,  false);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.setRecorded(false,  false);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.setRecorded(false,  false);  }  else  {  throw  new  IllegalStateException( " ");  }	  this.format.setRecorded(false,    false);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
5	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format.toString();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format.toString();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.NONE  :  format.toString();	  this.format    =    format    ==    null?    CSVFormat.NONE    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
6	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format.getName();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format.getName();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.NONE  :  format.getName();	  this.format    =    format    ==    null?    CSVFormat.NONE    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
7	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.NONE  :  format.toString();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.NONE  :  format.toString();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.NONE  :  format.toString();	  this.format    =    format    ==    null?    CSVFormat.NONE    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
8	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format.newInstance();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format.newInstance();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.NONE  :  format.newInstance();	  this.format    =    format    ==    null?    CSVFormat.NONE    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
9	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format.toArray(new  String[cSVFormat.size()  ]);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format.toArray(new  String[cSVFormat.size()  ]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.NONE  :  format.toArray(new  String[cSVFormat.size()  ]);	  this.format    =    format    ==    null?    CSVFormat.NONE    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
10	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format.append( "n ");  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format.append( "n ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.NONE  :  format.append( "n ");	  this.format    =    format    ==    null?    CSVFormat.NONE    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
11	[BUG]  [BUGGY]  if(newRecord)  {  out.append('n');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  out.append('n');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  out.append('n');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }	  if(newRecord)    {    this.format.append('n');    }    else    {    System.arraycopy(out,    0,    this.format,    0,    this.format.length);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
12	[BUG]  [BUGGY]  if(newRecord)  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }	  if(newRecord)    {    this.format.append('n');    }    else    {    System.arraycopy(out,    0,    this.format,    0,    this.format.length);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
13	[BUG]  [BUGGY]  if(newRecord)  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }  else  {  System.arraycopy(out,  0,  this.format.length);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }  else  {  System.arraycopy(out,  0,  this.format.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }  else  {  System.arraycopy(out,  0,  this.format.length);  }	  if(newRecord)    {    this.format.append('n');    }    else    {    System.arraycopy(out,    0,    this.format,    0,    this.format.length);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
14	[BUG]  [BUGGY]  if(newRecord)  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }  else  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }  else  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }  else  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }	  if(newRecord)    {    this.format.append('n');    }    else    {    System.arraycopy(out,    0,    this.format,    0,    this.format.length);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
15	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append('n');  }  else  {  System.arraycopy(out,  0,  this.format,  1,  this.format.length);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append('n');  }  else  {  System.arraycopy(out,  0,  this.format,  1,  this.format.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append('n');  }  else  {  System.arraycopy(out,  0,  this.format,  1,  this.format.length);  }	  if(newRecord)    {    this.format.append('n');    }    else    {    System.arraycopy(out,    0,    this.format,    0,    this.format.length);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
16	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append(format);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append(format);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append(format);  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append(format);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
17	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	safeMultiply(out,  newRecord)  {  out.append('n');  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append(format);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
18	[BUG]  [BUGGY]  out.append('n');  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  out.append('n');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	out.append('n');	  if(newRecord)    {    out.append('n');    }    else    {    out.append(format);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
19	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  if(format  ==  null)  {  out.append(format);  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  if(format  ==  null)  {  out.append(format);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	safeMultiply(out,  newRecord)  {  out.append('n');  }  else  if(format  ==  null)  {  out.append(format);  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append(format);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
20	[BUG]  [BUGGY]  Appendable  out  =(Appendable)this.newRecord.clone();  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  Appendable  out  =(Appendable)this.newRecord.clone();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	Appendable  out  =(Appendable)this.newRecord.clone();	  if(newRecord)    {    out.append('n');    }    else    {    out.append(format);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
21	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  if(format!=  null)  {  out.append(format);  }  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  if(format!=  null)  {  out.append(format);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	safeMultiply(out,  newRecord)  {  out.append('n');  }  else  if(format!=  null)  {  out.append(format);  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append(format);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
22	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  if(newRecord  ==  null)  {  out.append(format);  }  [CE]  <identifier>  expected  [FE]                                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  if(newRecord  ==  null)  {  out.append(format);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	safeMultiply(out,  newRecord)  {  out.append('n');  }  else  if(newRecord  ==  null)  {  out.append(format);  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append(format);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
23	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.toString();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.toString();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.toString();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	119	None	replace
24	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.getName();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.getName();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.getName();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	119	None	replace
25	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT  :  format.toString();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT  :  format.toString();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT  :  format.toString();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	119	None	replace
26	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.delete();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.delete();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.delete();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	119	None	replace
27	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.append( "n ");  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.append( "n ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.append( "n ");	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	119	None	replace
28	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.encode(this);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.encode(this);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.encode(this);	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	119	None	replace
29	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_TYPE  :  format.toString();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_TYPE  :  format.toString();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT_TYPE  :  format.toString();	  this.format    =    format!=    null?    CSVFormat.DEFAULT_TYPE    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	100	None	replace
30	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.toString();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.toString();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.toString();	  this.format    =    format!=    null?    CSVFormat.DEFAULT_TYPE    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	100	None	replace
31	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_TYPE  :  format.getName();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_TYPE  :  format.getName();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT_TYPE  :  format.getName();	  this.format    =    format!=    null?    CSVFormat.DEFAULT_TYPE    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	100	None	replace
32	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.getName();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.getName();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.getName();	  this.format    =    format!=    null?    CSVFormat.DEFAULT_TYPE    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	100	None	replace
33	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_TYPE  :  format.replace('',  '/');  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_TYPE  :  format.replace('',  '/');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT_TYPE  :  format.replace('',  '/');	  this.format    =    format!=    null?    CSVFormat.DEFAULT_TYPE    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	100	None	replace
34	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append( "# ");  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append( "# ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append( "# ");  }	  this.format.append(   "#   ");    	non-compiled	[CE]  <identifier>  expected	35	None	replace
35	[BUG]  [BUGGY]  this.format.append( "#n ");  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( "#n ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( "#n ");	  this.format.append(   "#   ");    	non-compiled	[CE]  <identifier>  expected	35	None	replace
36	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append( "# ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append( "# ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append( "# ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }	  this.format.append(   "#   ");    	non-compiled	[CE]  <identifier>  expected	35	None	replace
37	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append( "# ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append( "# ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append( "# ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }	  this.format.append(   "#   ");    	non-compiled	[CE]  <identifier>  expected	35	None	replace
38	[BUG]  [BUGGY]  this.format.setValue(this.newRecord  +  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(this.newRecord  +  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(this.newRecord  +  1);	  this.format.setValue(newRecord    +    1);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
39	[BUG]  [BUGGY]  this.format.setValue(newRecord  +  2);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(newRecord  +  2);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(newRecord  +  2);	  this.format.setValue(newRecord    +    1);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
40	[BUG]  [BUGGY]  this.format.setValue(newRecord  +  3);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(newRecord  +  3);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(newRecord  +  3);	  this.format.setValue(newRecord    +    1);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
41	[BUG]  [BUGGY]  this.format.setValue(newRecord  *  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(newRecord  *  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(newRecord  *  1);	  this.format.setValue(newRecord    +    1);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
42	[BUG]  [BUGGY]  this.format.addValue(newRecord  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(newRecord  +  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(newRecord  +  1);	  this.format.setValue(newRecord    +    1);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
43	[BUG]  [BUGGY]  newRecord  =  true;  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  newRecord  =  true;  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	newRecord  =  true;	  if(newRecord)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
44	[BUG]  [BUGGY]  ||  newRecord)  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  ||  newRecord)  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	||  newRecord)  {  newRecord  =  true;  }	  if(newRecord)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
45	[BUG]  [BUGGY]  ||  newRecord)  {  this.newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  ||  newRecord)  {  this.newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	||  newRecord)  {  this.newRecord  =  true;  }	  if(newRecord)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
46	[BUG]  [BUGGY]  ||  newRecord)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  ||  newRecord)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	||  newRecord)  {  throw  new  IllegalArgumentException( " ");  }	  if(newRecord)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
47	[BUG]  [BUGGY]  this.format.setRecorded(false, "true ");  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecorded(false, "true ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecorded(false, "true ");	  this.format.setRecorded(true,    true);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
48	[BUG]  [BUGGY]  this.format.setRecorded(false,  null);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecorded(false,  null);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecorded(false,  null);	  this.format.setRecorded(true,    true);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
49	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append( "None ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append( "None ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append( "None ");  }	  this.format.append(   "None   ");    	non-compiled	[CE]  <identifier>  expected	36	None	replace
50	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append( "None ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append( "None ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append( "None ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.format.append(   "None   ");    	non-compiled	[CE]  <identifier>  expected	36	None	replace
51	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append( "None ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append( "None ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append( "None ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }	  this.format.append(   "None   ");    	non-compiled	[CE]  <identifier>  expected	36	None	replace
52	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append( "None ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append( "None ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append( "None ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }	  this.format.append(   "None   ");    	non-compiled	[CE]  <identifier>  expected	36	None	replace
53	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append( "None ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append( "None ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append( "None ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }	  this.format.append(   "None   ");    	non-compiled	[CE]  <identifier>  expected	36	None	replace
54	[BUG]  [BUGGY]  this.format.setRecord(new  Record());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecord(new  Record());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecord(new  Record());	  this.format.setRecord(null);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
55	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(out);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  Record  <  CSV>(out);	  this.newRecord    =    new    Record    <    CSV>();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
56	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(false);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  Record  <  CSV>(false);	  this.newRecord    =    new    Record    <    CSV>();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
57	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(record);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(record);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  Record  <  CSV>(record);	  this.newRecord    =    new    Record    <    CSV>();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
58	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(1);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  Record  <  CSV>(1);	  this.newRecord    =    new    Record    <    CSV>();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
59	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(cSVFormat);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(cSVFormat);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  Record  <  CSV>(cSVFormat);	  this.newRecord    =    new    Record    <    CSV>();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
60	[BUG]  [BUGGY]  this.format.setValues(this.newRecord,  out);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(this.newRecord,  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(this.newRecord,  out);	  this.format.setValues(this.newRecord);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
61	[BUG]  [BUGGY]  this.format.addValues(this.newRecord);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValues(this.newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValues(this.newRecord);	  this.format.setValues(this.newRecord);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
62	[BUG]  [BUGGY]  this.format.setValues(this.newRecord,  format);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(this.newRecord,  format);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(this.newRecord,  format);	  this.format.setValues(this.newRecord);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
63	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append('#');  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append('#');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append('#');  }	  this.format.append('#');    	non-compiled	[CE]  <identifier>  expected	78	None	replace
64	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append('#');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append('#');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append('#');  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.format.append('#');    	non-compiled	[CE]  <identifier>  expected	78	None	replace
65	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append('#');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append('#');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append('#');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }	  this.format.append('#');    	non-compiled	[CE]  <identifier>  expected	78	None	replace
66	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append('#');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append('#');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append('#');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }	  this.format.append('#');    	non-compiled	[CE]  <identifier>  expected	78	None	replace
67	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append('#');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append('#');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append('#');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }	  this.format.append('#');    	non-compiled	[CE]  <identifier>  expected	78	None	replace
68	[BUG]  [BUGGY]  this.format.validate(out,  newRecord,  false);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.validate(out,  newRecord,  false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.validate(out,  newRecord,  false);	  this.format.validate(out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
69	[BUG]  [BUGGY]  this.format.validate(out,  newRecord,  0);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.validate(out,  newRecord,  0);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.validate(out,  newRecord,  0);	  this.format.validate(out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
70	[BUG]  [BUGGY]  this.format.validate(out,  newRecord,  format);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.validate(out,  newRecord,  format);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.validate(out,  newRecord,  format);	  this.format.validate(out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
71	[BUG]  [BUGGY]  this.format.validate(out,  newRecord,  true);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.validate(out,  newRecord,  true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.validate(out,  newRecord,  true);	  this.format.validate(out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
72	[BUG]  [BUGGY]  this.format.validate(out,  out.toString());  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.validate(out,  out.toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.validate(out,  out.toString());	  this.format.validate(out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
73	[BUG]  [BUGGY]  this.format.validate(out,  newRecord,  null);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.validate(out,  newRecord,  null);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.validate(out,  newRecord,  null);	  this.format.validate(out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
74	[BUG]  [BUGGY]  this.format  =  format.validate(out,  newRecord);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format.validate(out,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format.validate(out,  newRecord);	  this.format    =    format.validate(out);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
75	[BUG]  [BUGGY]  this.format  =  format.validate(out,  false);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format.validate(out,  false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format.validate(out,  false);	  this.format    =    format.validate(out);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
76	[BUG]  [BUGGY]  this.format  =  format.validate(out,  true);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format.validate(out,  true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format.validate(out,  true);	  this.format    =    format.validate(out);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
77	[BUG]  [BUGGY]  this.format  =  format.validate(out,  null);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format.validate(out,  null);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format.validate(out,  null);	  this.format    =    format.validate(out);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
78	[BUG]  [BUGGY]  this.format  =  format.validate(this.out);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format.validate(this.out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format.validate(this.out);	  this.format    =    format.validate(out);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
79	[BUG]  [BUGGY]  this.newRecord  =  false;  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  false;  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  false;	  this.newRecord    =    true;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
80	[BUG]  [BUGGY]  this.newRecord  =  null;  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  null;  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  null;	  this.newRecord    =    true;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
81	[BUG]  [BUGGY]  This.newRecord  =  false;  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  This.newRecord  =  false;  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	This.newRecord  =  false;	  this.newRecord    =    true;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
82	[BUG]  [BUGGY]  this.newRecord  = " ";  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  = " ";  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  = " ";	  this.newRecord    =    true;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
83	[BUG]  [BUGGY]  this.newRecord  |=  false;  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  |=  false;  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  |=  false;	  this.newRecord    =    true;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
84	[BUG]  [BUGGY]  this.format.setRecord(true,  true);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecord(true,  true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecord(true,  true);	  this.format.setRecord(false,    false);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
85	[BUG]  [BUGGY]  this.format.setRecord(null,  false);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecord(null,  false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecord(null,  false);	  this.format.setRecord(false,    false);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
86	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.delete();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.delete();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.delete();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_TYPE    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	121	None	replace
87	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.append( "n ");  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.append( "n ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.append( "n ");	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_TYPE    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	121	None	replace
88	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.append('n');  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.append('n');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.append('n');	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_TYPE    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	121	None	replace
89	[BUG]  [BUGGY]  this.format.addValue(this.newRecord,  out);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(this.newRecord,  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(this.newRecord,  out);	  this.format.addValue(this.newRecord);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
90	[BUG]  [BUGGY]  this.format.addValue(this.newRecord,  format);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(this.newRecord,  format);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(this.newRecord,  format);	  this.format.addValue(this.newRecord);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
91	[BUG]  [BUGGY]  this.format.addValue(this.newRecord,  0);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(this.newRecord,  0);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(this.newRecord,  0);	  this.format.addValue(this.newRecord);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
92	[BUG]  [BUGGY]  this.format.addValue(this.newRecord,  newRecord);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(this.newRecord,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(this.newRecord,  newRecord);	  this.format.addValue(this.newRecord);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
93	[BUG]  [BUGGY]  this.format.setRecord(out,  newRecord);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecord(out,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecord(out,  newRecord);	  this.format.setRecord(newRecord,    out);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
94	[BUG]  [BUGGY]  this.format.setRecord(newRecord,  out,  false);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecord(newRecord,  out,  false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecord(newRecord,  out,  false);	  this.format.setRecord(newRecord,    out);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
95	[BUG]  [BUGGY]  this.format.setRecord(newRecord,  out,  newRecord);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecord(newRecord,  out,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecord(newRecord,  out,  newRecord);	  this.format.setRecord(newRecord,    out);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
96	[BUG]  [BUGGY]  this.format.setRecord(record,  out);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecord(record,  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecord(record,  out);	  this.format.setRecord(newRecord,    out);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
97	[BUG]  [BUGGY]  this.format.setRecord(newRecord,  out,  null);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecord(newRecord,  out,  null);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecord(newRecord,  out,  null);	  this.format.setRecord(newRecord,    out);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
98	[BUG]  [BUGGY]  this.format.setRecord(newRecord,  out,  true);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecord(newRecord,  out,  true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecord(newRecord,  out,  true);	  this.format.setRecord(newRecord,    out);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
99	[BUG]  [BUGGY]  this.format.addValue(record,  newRecord);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(record,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(record,  newRecord);	  this.format.addValue(record);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
100	[BUG]  [BUGGY]  this.format.add(newRecord);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.add(newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.add(newRecord);	  this.format.addValue(record);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
101	[BUG]  [BUGGY]  this.format.addValue(this.record);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(this.record);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(this.record);	  this.format.addValue(record);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
102	[BUG]  [BUGGY]  this.format.setValue(out,  true);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(out,  true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(out,  true);	  this.format.setValues(out,    false);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
103	[BUG]  [BUGGY]  this.format.addValues(out,  false);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValues(out,  false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValues(out,  false);	  this.format.setValues(out,    false);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
104	[BUG]  [BUGGY]  this.format.setValues(out,  null);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(out,  null);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(out,  null);	  this.format.setValues(out,    false);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
105	[BUG]  [BUGGY]  this.format.addRecord(true);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addRecord(true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addRecord(true);	  this.format.addRecord(false);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
106	[BUG]  [BUGGY]  this.format.addRecord(false,  false);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addRecord(false,  false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addRecord(false,  false);	  this.format.addRecord(false);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
107	[BUG]  [BUGGY]  this.format.addRecord(false,  true);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addRecord(false,  true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addRecord(false,  true);	  this.format.addRecord(false);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
108	[BUG]  [BUGGY]  this.format.addRecord(false,  newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addRecord(false,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addRecord(false,  newRecord);	  this.format.addRecord(false);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
109	[BUG]  [BUGGY]  this.format.addValues(newRecord,  out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValues(newRecord,  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValues(newRecord,  out);	  this.format.setValues(newRecord,    out);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
110	[BUG]  [BUGGY]  this.format.setValues(newRecord,  out,  false);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(newRecord,  out,  false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(newRecord,  out,  false);	  this.format.setValues(newRecord,    out);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
111	[BUG]  [BUGGY]  this.format.setValues(newRecord,  out,  null);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(newRecord,  out,  null);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(newRecord,  out,  null);	  this.format.setValues(newRecord,    out);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
112	[BUG]  [BUGGY]  this.format.setValues(newRecord,  out,  0);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(newRecord,  out,  0);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(newRecord,  out,  0);	  this.format.setValues(newRecord,    out);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
113	[BUG]  [BUGGY]  this.format.setValue(out,  format,  newRecord);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(out,  format,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(out,  format,  newRecord);	  this.format.setValue(out,    format);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
114	[BUG]  [BUGGY]  this.format.addValue(out,  format);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(out,  format);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(out,  format);	  this.format.setValue(out,    format);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
115	[BUG]  [BUGGY]  this.format.setValue(out,  format,  false);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(out,  format,  false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(out,  format,  false);	  this.format.setValue(out,    format);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
116	[BUG]  [BUGGY]  this.format  =  format.setValue(out,  format);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format.setValue(out,  format);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format.setValue(out,  format);	  this.format.setValue(out,    format);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
117	[BUG]  [BUGGY]  this.format.setValue(out,  format  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(out,  format  +  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(out,  format  +  1);	  this.format.setValue(out,    format);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
118	[BUG]  [BUGGY]  this.format.setRecorded(false,  false,  null);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecorded(false,  false,  null);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecorded(false,  false,  null);	  this.format.setRecorded(true,   "   ");    	non-compiled	[CE]  <identifier>  expected	111	None	replace
119	[BUG]  [BUGGY]  this.format.setRecorded(false,  false,  false);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecorded(false,  false,  false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecorded(false,  false,  false);	  this.format.setRecorded(true,   "   ");    	non-compiled	[CE]  <identifier>  expected	111	None	replace
120	[BUG]  [BUGGY]  this.format  =  format  ==  null?  new  CSVFormat()  :  format.toString();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  new  CSVFormat()  :  format.toString();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  new  CSVFormat()  :  format.toString();	  this.format    =    format    ==    null?    new    CSVFormat()    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
121	[BUG]  [BUGGY]  this.format  =  format  ==  null?  new  CSVFormat()  :  format.newInstance();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  new  CSVFormat()  :  format.newInstance();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  new  CSVFormat()  :  format.newInstance();	  this.format    =    format    ==    null?    new    CSVFormat()    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
122	[BUG]  [BUGGY]  this.format  =  format  ==  null?  new  CSVFormat()  :  format.getName();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  new  CSVFormat()  :  format.getName();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  new  CSVFormat()  :  format.getName();	  this.format    =    format    ==    null?    new    CSVFormat()    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
123	[BUG]  [BUGGY]  this.format  =  format  ==  null?  new  CSVFormat()  :  format.toArray(new  CSVFormat());  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  new  CSVFormat()  :  format.toArray(new  CSVFormat());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  new  CSVFormat()  :  format.toArray(new  CSVFormat());	  this.format    =    format    ==    null?    new    CSVFormat()    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
124	[BUG]  [BUGGY]  this.format  =  format  ==  null?  new  CSVFormat()  :  format.toArray(new  CSVFormat[0]);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  new  CSVFormat()  :  format.toArray(new  CSVFormat[0]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  new  CSVFormat()  :  format.toArray(new  CSVFormat[0]);	  this.format    =    format    ==    null?    new    CSVFormat()    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
125	[BUG]  [BUGGY]  this.format  =  format  ==  null?  new  CSVFormat()  :  format.append( "n ");  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  new  CSVFormat()  :  format.append( "n ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  new  CSVFormat()  :  format.append( "n ");	  this.format    =    format    ==    null?    new    CSVFormat()    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
126	[BUG]  [BUGGY]  this.format.addValue(newRecord,  format,  out);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(newRecord,  format,  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(newRecord,  format,  out);	  this.format.addValue(newRecord,    format);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
127	[BUG]  [BUGGY]  this.format.addValue(newRecord,  format,  0);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(newRecord,  format,  0);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(newRecord,  format,  0);	  this.format.addValue(newRecord,    format);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
128	[BUG]  [BUGGY]  this.format.addValue(newRecord,  format,  false);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(newRecord,  format,  false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(newRecord,  format,  false);	  this.format.addValue(newRecord,    format);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
129	[BUG]  [BUGGY]  this.format.append(out,  format.toString());  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append(out,  format.toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append(out,  format.toString());	  this.format.append(out,    out.toString());    	non-compiled	[CE]  <identifier>  expected	106	None	replace
130	[BUG]  [BUGGY]  if(out!=  null)  {  this.format.append(out,  out.toString());  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.toString());  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(out!=  null)  {  this.format.append(out,  out.toString());  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.toString());  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(out!=  null)  {  this.format.append(out,  out.toString());  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.toString());  }	  this.format.append(out,    out.toString());    	non-compiled	[CE]  <identifier>  expected	106	None	replace
131	[BUG]  [BUGGY]  if(out!=  null)  {  this.format.append(out,  out.toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(out!=  null)  {  this.format.append(out,  out.toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(out!=  null)  {  this.format.append(out,  out.toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.format.append(out,    out.toString());    	non-compiled	[CE]  <identifier>  expected	106	None	replace
132	[BUG]  [BUGGY]  if(out!=  null)  {  this.format.append(out,  out.toString());  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(out!=  null)  {  this.format.append(out,  out.toString());  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(out!=  null)  {  this.format.append(out,  out.toString());  }	  this.format.append(out,    out.toString());    	non-compiled	[CE]  <identifier>  expected	106	None	replace
133	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append(out,  out.toString());  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.toString());  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append(out,  out.toString());  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.toString());  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append(out,  out.toString());  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.toString());  }	  this.format.append(out,    out.toString());    	non-compiled	[CE]  <identifier>  expected	106	None	replace
134	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append(out,  out.toString());  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append(out,  out.toString());  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append(out,  out.toString());  }	  this.format.append(out,    out.toString());    	non-compiled	[CE]  <identifier>  expected	106	None	replace
135	[BUG]  [BUGGY]  this.format.addValue(out,  newRecord);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(out,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(out,  newRecord);	  this.format.addValue(newRecord,    out);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
136	[BUG]  [BUGGY]  this.format.addValue(newRecord,  out,  0);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(newRecord,  out,  0);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(newRecord,  out,  0);	  this.format.addValue(newRecord,    out);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
137	[BUG]  [BUGGY]  this.format.addValue(newRecord,  out,  false);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(newRecord,  out,  false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(newRecord,  out,  false);	  this.format.addValue(newRecord,    out);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
138	[BUG]  [BUGGY]  this.format.addValue(newRecord,  out,  null);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(newRecord,  out,  null);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(newRecord,  out,  null);	  this.format.addValue(newRecord,    out);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
139	[BUG]  [BUGGY]  this.format.addValue(newRecord,  out,  format);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(newRecord,  out,  format);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(newRecord,  out,  format);	  this.format.addValue(newRecord,    out);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
140	[BUG]  [BUGGY]  this.format.addValue(newRecord,  out,  true);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(newRecord,  out,  true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(newRecord,  out,  true);	  this.format.addValue(newRecord,    out);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
141	[BUG]  [BUGGY]  this.format.append(newRecord,  out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append(newRecord,  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append(newRecord,  out);	  this.format.append(out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
142	[BUG]  [BUGGY]  this.format.append(out,  null);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append(out,  null);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append(out,  null);	  this.format.append(out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
143	[BUG]  [BUGGY]  this.format.append(out,  newRecord  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append(out,  newRecord  +  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append(out,  newRecord  +  1);	  this.format.append(out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
144	[BUG]  [BUGGY]  this.format.setRecord(!this.newRecord);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecord(!this.newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecord(!this.newRecord);	  this.format.setRecord(!newRecord);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
145	[BUG]  [BUGGY]  this.format.setRecord(!this.record);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecord(!this.record);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecord(!this.record);	  this.format.setRecord(!newRecord);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
146	[BUG]  [BUGGY]  this.format.setRecord(!record);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecord(!record);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecord(!record);	  this.format.setRecord(!newRecord);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
147	[BUG]  [BUGGY]  this.format.append(out,  true);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append(out,  true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append(out,  true);	  this.format.append(out,    false);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
148	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append(out,  false);  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append(out,  false);  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append(out,  false);  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }	  this.format.append(out,    false);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
149	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append(out,  false);  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append(out,  false);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append(out,  false);  }	  this.format.append(out,    false);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
150	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append(out,  false);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append(out,  false);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append(out,  false);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.format.append(out,    false);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
151	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append(out,  false);  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append(out,  false);  }  else  {  out.append( "n ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append(out,  false);  }  else  {  out.append( "n ");  }	  this.format.append(out,    false);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
152	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append(out,  false);  }  else  {  System.arraycopy(out,  0,  this.format,  out.length);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append(out,  false);  }  else  {  System.arraycopy(out,  0,  this.format,  out.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append(out,  false);  }  else  {  System.arraycopy(out,  0,  this.format,  out.length);  }	  this.format.append(out,    false);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
153	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.toString();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.toString();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.toString();	  this.format    =    format    ==    null?    CSVFormat.UNKNOWN    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	96	None	replace
154	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.getName();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.getName();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.getName();	  this.format    =    format    ==    null?    CSVFormat.UNKNOWN    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	96	None	replace
155	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.UNKNOWN  :  format.toString();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.UNKNOWN  :  format.toString();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.UNKNOWN  :  format.toString();	  this.format    =    format    ==    null?    CSVFormat.UNKNOWN    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	96	None	replace
156	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.append( "n ");  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.append( "n ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.append( "n ");	  this.format    =    format    ==    null?    CSVFormat.UNKNOWN    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	96	None	replace
157	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.toArray();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.toArray();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.toArray();	  this.format    =    format    ==    null?    CSVFormat.UNKNOWN    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	96	None	replace
158	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.append('n');  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.append('n');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.append('n');	  this.format    =    format    ==    null?    CSVFormat.UNKNOWN    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	96	None	replace
159	[BUG]  [BUGGY]  this.newRecord  =  new  LinkedList  <  CSVFormat>();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  LinkedList  <  CSVFormat>();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  LinkedList  <  CSVFormat>();	  this.newRecord    =    new    ArrayList    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
160	[BUG]  [BUGGY]  this.newRecord  =  new  ArrayList  <  CSVFormat>(0);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  ArrayList  <  CSVFormat>(0);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  ArrayList  <  CSVFormat>(0);	  this.newRecord    =    new    ArrayList    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
161	[BUG]  [BUGGY]  this.newRecord  =  new  ArrayList  <  CSVFormat>(1);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  ArrayList  <  CSVFormat>(1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  ArrayList  <  CSVFormat>(1);	  this.newRecord    =    new    ArrayList    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
162	[BUG]  [BUGGY]  this.newRecord  =  new  ArrayList  <  CSVFormat>(4);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  ArrayList  <  CSVFormat>(4);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  ArrayList  <  CSVFormat>(4);	  this.newRecord    =    new    ArrayList    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
163	[BUG]  [BUGGY]  this.newRecord  =  new  ArrayList  <  CSVFormat>(2);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  ArrayList  <  CSVFormat>(2);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  ArrayList  <  CSVFormat>(2);	  this.newRecord    =    new    ArrayList    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
164	[BUG]  [BUGGY]  this.format.append('[',  out);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append('[',  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append('[',  out);	  this.format.append('n',    out);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
165	[BUG]  [BUGGY]  this.format.append('N',  out);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append('N',  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append('N',  out);	  this.format.append('n',    out);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
166	[BUG]  [BUGGY]  this.format.append('#',  out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append('#',  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append('#',  out);	  this.format.append('n',    out);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
167	[BUG]  [BUGGY]  this.format.append('n',  'n');  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append('n',  'n');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append('n',  'n');	  this.format.append('n',    out);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
168	[BUG]  [BUGGY]  this.format.append('n',  '/');  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append('n',  '/');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append('n',  '/');	  this.format.append('n',    out);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
169	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append('  ');  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append('  ');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append('  ');  }	  this.format.append('    ');    	non-compiled	[CE]  <identifier>  expected	39	None	replace
170	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append('  ');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append('  ');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append('  ');  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.format.append('    ');    	non-compiled	[CE]  <identifier>  expected	39	None	replace
171	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append('  ');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append('  ');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append('  ');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }	  this.format.append('    ');    	non-compiled	[CE]  <identifier>  expected	39	None	replace
172	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append('  ');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append('  ');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append('  ');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }	  this.format.append('    ');    	non-compiled	[CE]  <identifier>  expected	39	None	replace
173	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append('  ');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append('  ');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append('  ');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }	  this.format.append('    ');    	non-compiled	[CE]  <identifier>  expected	39	None	replace
174	[BUG]  [BUGGY]  this.format.setRecorded(record);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecorded(record);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecorded(record);	  this.format.setRecorded(newRecord);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
175	[BUG]  [BUGGY]  this.format.setRecorded(newRecord  }  );  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecorded(newRecord  }  );  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecorded(newRecord  }  );	  this.format.setRecorded(newRecord);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
176	[BUG]  [BUGGY]  this.format.setRecorded(newRecord,  out);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecorded(newRecord,  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecorded(newRecord,  out);	  this.format.setRecorded(newRecord);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
177	[BUG]  [BUGGY]  this.format.setRecorded(newRecord  ==  newRecord);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecorded(newRecord  ==  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecorded(newRecord  ==  newRecord);	  this.format.setRecorded(newRecord);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
178	[BUG]  [BUGGY]  this.format.setRecorded(newRecord!=  newRecord);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecorded(newRecord!=  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecorded(newRecord!=  newRecord);	  this.format.setRecorded(newRecord);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
179	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.format);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.format);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(this.format);	  this.newRecord    =    new    Record    <    CSVFormat>(format);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
180	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(out);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(out);	  this.newRecord    =    new    Record    <    CSVFormat>(format);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
181	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(format,  newRecord);  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(format,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(format,  newRecord);	  this.newRecord    =    new    Record    <    CSVFormat>(format);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
182	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(format,  true);  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(format,  true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(format,  true);	  this.newRecord    =    new    Record    <    CSVFormat>(format);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
183	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(cSVFormat);  [CE]  <identifier>  expected  [FE]                                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(cSVFormat);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(cSVFormat);	  this.newRecord    =    new    Record    <    CSVFormat>(format);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
184	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.record);  [CE]  <identifier>  expected  [FE]                                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.record);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(this.record);	  this.newRecord    =    new    Record    <    CSVFormat>(format);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
185	[BUG]  [BUGGY]  This.newRecord  =  true;  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  This.newRecord  =  true;  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	This.newRecord  =  true;	  if(newRecord)    {    this.newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
186	[BUG]  [BUGGY]  ||(newRecord  ==  null  &&  newRecord.equals( " ")))  {  this.newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  ||(newRecord  ==  null  &&  newRecord.equals( " ")))  {  this.newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	||(newRecord  ==  null  &&  newRecord.equals( " ")))  {  this.newRecord  =  true;  }	  if(newRecord)    {    this.newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
187	[BUG]  [BUGGY]  ||(newRecord  ==  null  &&  newRecord.isEmpty()))  {  this.newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  ||(newRecord  ==  null  &&  newRecord.isEmpty()))  {  this.newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	||(newRecord  ==  null  &&  newRecord.isEmpty()))  {  this.newRecord  =  true;  }	  if(newRecord)    {    this.newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
188	[BUG]  [BUGGY]  ||(newRecord  ==  null  &&  newRecord.length()  >  0))  {  this.newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  ||(newRecord  ==  null  &&  newRecord.length()  >  0))  {  this.newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	||(newRecord  ==  null  &&  newRecord.length()  >  0))  {  this.newRecord  =  true;  }	  if(newRecord)    {    this.newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
189	[BUG]  [BUGGY]  this.format.addValue(new  Record());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(new  Record());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(new  Record());	  this.format.setValue(new    Record());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
190	[BUG]  [BUGGY]  this.format.setValue(new  Record(),  newRecord);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(new  Record(),  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(new  Record(),  newRecord);	  this.format.setValue(new    Record());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
191	[BUG]  [BUGGY]  this.format.setValue(new  Record(1));  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(new  Record(1));  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(new  Record(1));	  this.format.setValue(new    Record());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
192	[BUG]  [BUGGY]  this.format.setValue(new  RecordWriter());  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(new  RecordWriter());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(new  RecordWriter());	  this.format.setValue(new    Record());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
193	[BUG]  [BUGGY]  this.format.addRecordListener(this);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addRecordListener(this);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addRecordListener(this);	  this.format.addChangeListener(this);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
194	[BUG]  [BUGGY]  this.format.addValueListener(this);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValueListener(this);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValueListener(this);	  this.format.addChangeListener(this);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
195	[BUG]  [BUGGY]  this.format.addChangeListener(this,  newRecord);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addChangeListener(this,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addChangeListener(this,  newRecord);	  this.format.addChangeListener(this);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
196	[BUG]  [BUGGY]  this.format.addListener(this);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addListener(this);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addListener(this);	  this.format.addChangeListener(this);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
197	[BUG]  [BUGGY]  this.format.addAsStdChangeListener(this);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addAsStdChangeListener(this);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addAsStdChangeListener(this);	  this.format.addChangeListener(this);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
198	[BUG]  [BUGGY]  this.format.setValues(out,  newRecord,  0);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(out,  newRecord,  0);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(out,  newRecord,  0);	  this.format.setValues(out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
199	[BUG]  [BUGGY]  this.format.setValues(out,  newRecord,  format);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(out,  newRecord,  format);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(out,  newRecord,  format);	  this.format.setValues(out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
200	[BUG]  [BUGGY]  this.format.addValues(out,  newRecord);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValues(out,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValues(out,  newRecord);	  this.format.setValues(out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
201	[BUG]  [BUGGY]  this.format.setValues(out,  newRecord,  false);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(out,  newRecord,  false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(out,  newRecord,  false);	  this.format.setValues(out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
202	[BUG]  [BUGGY]  this.format.setValues(out,  out.toString());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(out,  out.toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(out,  out.toString());	  this.format.setValues(out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
203	[BUG]  [BUGGY]  this.format.addValues(out,  format);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValues(out,  format);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValues(out,  format);	  this.format.setValues(out,    out);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
204	[BUG]  [BUGGY]  this.format.validate(this.out,  true);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.validate(this.out,  true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.validate(this.out,  true);	  this.format.validate(out,    true);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
205	[BUG]  [BUGGY]  this.format.validate(out,  null);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.validate(out,  null);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.validate(out,  null);	  this.format.validate(out,    true);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
206	[BUG]  [BUGGY]  this.format.validate(in,  false);  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.validate(in,  false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.validate(in,  false);	  this.format.validate(out,    true);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
207	[BUG]  [BUGGY]  this.format.addRecord(newRecord,  out);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addRecord(newRecord,  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addRecord(newRecord,  out);	  this.format.addRecord(newRecord);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
208	[BUG]  [BUGGY]  this.format.addRecord(newRecord,  newRecord);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addRecord(newRecord,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addRecord(newRecord,  newRecord);	  this.format.addRecord(newRecord);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
209	[BUG]  [BUGGY]  this.format.addRecord(newRecord,  format);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addRecord(newRecord,  format);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addRecord(newRecord,  format);	  this.format.addRecord(newRecord);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
210	[BUG]  [BUGGY]  this.format.addRecord(this.newRecord);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addRecord(this.newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addRecord(this.newRecord);	  this.format.addRecord(newRecord);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
211	[BUG]  [BUGGY]  this.format  =  format.addValue(this.newRecord);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format.addValue(this.newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format.addValue(this.newRecord);	  this.format    =    format.addValue(newRecord);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
212	[BUG]  [BUGGY]  this.format  =  format.addValue(newRecord,  out);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format.addValue(newRecord,  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format.addValue(newRecord,  out);	  this.format    =    format.addValue(newRecord);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
213	[BUG]  [BUGGY]  this.format  =  format.removeValue(newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format.removeValue(newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format.removeValue(newRecord);	  this.format    =    format.addValue(newRecord);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
214	[BUG]  [BUGGY]  this.format  =  newRecord.addValue(newRecord);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  newRecord.addValue(newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  newRecord.addValue(newRecord);	  this.format    =    format.addValue(newRecord);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
215	[BUG]  [BUGGY]  this.format  =  newRecord.addValue(format);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  newRecord.addValue(format);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  newRecord.addValue(format);	  this.format    =    format.addValue(newRecord);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
216	[BUG]  [BUGGY]  this.format  =  format.add(newRecord);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format.add(newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format.add(newRecord);	  this.format    =    format.addValue(newRecord);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
217	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.validate();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.validate();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.validate();	  this.format    =    format!=    null?    CSVFormat.DEFAULT_NAME    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	101	None	replace
218	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_NAME  :  format.toString();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_NAME  :  format.toString();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT_NAME  :  format.toString();	  this.format    =    format!=    null?    CSVFormat.DEFAULT_NAME    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	101	None	replace
219	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.toString();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.toString();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.toString();	  this.format    =    format!=    null?    CSVFormat.DEFAULT_NAME    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	101	None	replace
220	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_NAME  :  format.getName();  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_NAME  :  format.getName();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT_NAME  :  format.getName();	  this.format    =    format!=    null?    CSVFormat.DEFAULT_NAME    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	101	None	replace
221	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.getName();  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.getName();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.getName();	  this.format    =    format!=    null?    CSVFormat.DEFAULT_NAME    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	101	None	replace
222	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_NAME  :  format.delete();  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_NAME  :  format.delete();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT_NAME  :  format.delete();	  this.format    =    format!=    null?    CSVFormat.DEFAULT_NAME    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	101	None	replace
223	[BUG]  [BUGGY]  if(newRecord)  {  out.append('n');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  out.append('n');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  out.append('n');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }	  if(newRecord)    {    this.format.append('n');    }    else    {    System.arraycopy(out,    0,    this.format,    0,    format.length);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
224	[BUG]  [BUGGY]  if(newRecord)  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }	  if(newRecord)    {    this.format.append('n');    }    else    {    System.arraycopy(out,    0,    this.format,    0,    format.length);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
225	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append('n');  }  else  {  System.arraycopy(out,  0,  this.format,  1,  format.length);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append('n');  }  else  {  System.arraycopy(out,  0,  this.format,  1,  format.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append('n');  }  else  {  System.arraycopy(out,  0,  this.format,  1,  format.length);  }	  if(newRecord)    {    this.format.append('n');    }    else    {    System.arraycopy(out,    0,    this.format,    0,    format.length);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
226	[BUG]  [BUGGY]  if(newRecord)  {  out.append('n');  }  else  {  System.arraycopy(out,  0,  this.format,  1,  format.length);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  out.append('n');  }  else  {  System.arraycopy(out,  0,  this.format,  1,  format.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  out.append('n');  }  else  {  System.arraycopy(out,  0,  this.format,  1,  format.length);  }	  if(newRecord)    {    this.format.append('n');    }    else    {    System.arraycopy(out,    0,    this.format,    0,    format.length);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
227	[BUG]  [BUGGY]  this.format.append( "[null] ");  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( "[null] ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( "[null] ");	  this.format.append(   "null   ");    	non-compiled	[CE]  <identifier>  expected	34	None	replace
228	[BUG]  [BUGGY]  this.format.append( "null ".toString());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( "null ".toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( "null ".toString());	  this.format.append(   "null   ");    	non-compiled	[CE]  <identifier>  expected	34	None	replace
229	[BUG]  [BUGGY]  this.format.append( ",  null ");  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( ",  null ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( ",  null ");	  this.format.append(   "null   ");    	non-compiled	[CE]  <identifier>  expected	34	None	replace
230	[BUG]  [BUGGY]  this.format.addValue(cSVFormat);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(cSVFormat);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(cSVFormat);	  this.format.setValue(cSVFormat);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
231	[BUG]  [BUGGY]  this.format.setValue(this.cSVFormat);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(this.cSVFormat);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(this.cSVFormat);	  this.format.setValue(cSVFormat);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
232	[BUG]  [BUGGY]  this.format.append(cSVFormat);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append(cSVFormat);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append(cSVFormat);	  this.format.setValue(cSVFormat);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
233	[BUG]  [BUGGY]  this.format.setValue(newRecord,  out,  false);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(newRecord,  out,  false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(newRecord,  out,  false);	  this.format.setValue(newRecord,    out);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
234	[BUG]  [BUGGY]  this.format.setValue(newRecord,  out,  null);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(newRecord,  out,  null);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(newRecord,  out,  null);	  this.format.setValue(newRecord,    out);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
235	[BUG]  [BUGGY]  this.format.setValue(newRecord,  out,  true);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(newRecord,  out,  true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(newRecord,  out,  true);	  this.format.setValue(newRecord,    out);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
236	[BUG]  [BUGGY]  this.format.setValue(newRecord,  out,  0);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(newRecord,  out,  0);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(newRecord,  out,  0);	  this.format.setValue(newRecord,    out);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
237	[BUG]  [BUGGY]  System.arraycopy(this.format,  0,  out,  0,  format.length);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  System.arraycopy(this.format,  0,  out,  0,  format.length);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	System.arraycopy(this.format,  0,  out,  0,  format.length);	  System.arraycopy(out,    0,    this.format,    0,    format.length);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
238	[BUG]  [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  format.length  -  1);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  format.length  -  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	System.arraycopy(out,  0,  this.format,  0,  format.length  -  1);	  System.arraycopy(out,    0,    this.format,    0,    format.length);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
239	[BUG]  [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  format.length  +  1);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  format.length  +  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	System.arraycopy(out,  0,  this.format,  0,  format.length  +  1);	  System.arraycopy(out,    0,    this.format,    0,    format.length);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
240	[BUG]  [BUGGY]  System.arraycopy(this.format,  0,  this.out,  0,  format.length);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  System.arraycopy(this.format,  0,  this.out,  0,  format.length);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	System.arraycopy(this.format,  0,  this.out,  0,  format.length);	  System.arraycopy(out,    0,    this.format,    0,    format.length);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
241	[BUG]  [BUGGY]  System.arraycopy(this.out,  0,  this.format,  0,  format.length);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  System.arraycopy(this.out,  0,  this.format,  0,  format.length);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	System.arraycopy(this.out,  0,  this.format,  0,  format.length);	  System.arraycopy(out,    0,    this.format,    0,    format.length);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
242	[BUG]  [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  out.length);  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  out.length);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	System.arraycopy(out,  0,  this.format,  0,  out.length);	  System.arraycopy(out,    0,    this.format,    0,    format.length);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
243	[BUG]  [BUGGY]  this.format.addValue(newRecord,  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(newRecord,  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(newRecord,  1);	  this.format.addValue(newRecord,    0);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
244	[BUG]  [BUGGY]  this.format.addValue(newRecord,  0,  newRecord);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(newRecord,  0,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(newRecord,  0,  newRecord);	  this.format.addValue(newRecord,    0);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
245	[BUG]  [BUGGY]  this.format.addValue(newRecord,  2);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(newRecord,  2);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(newRecord,  2);	  this.format.addValue(newRecord,    0);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
246	[BUG]  [BUGGY]  this.format.addValue(newRecord,  3);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(newRecord,  3);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(newRecord,  3);	  this.format.addValue(newRecord,    0);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
247	[BUG]  [BUGGY]  this.format.addValue(newRecord,  0,  newRecord.length);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(newRecord,  0,  newRecord.length);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(newRecord,  0,  newRecord.length);	  this.format.addValue(newRecord,    0);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
248	[BUG]  [BUGGY]  this.format.setRecord(0);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecord(0);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecord(0);	  this.format.setRecord(false);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
249	[BUG]  [BUGGY]  this.format.record(true);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.record(true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.record(true);	  this.format.setRecord(false);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
250	[BUG]  [BUGGY]  this.format.addRecord(this.record);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addRecord(this.record);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addRecord(this.record);	  this.format.setRecord(this.record);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
251	[BUG]  [BUGGY]  this.format.append( "[] ");  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( "[] ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( "[] ");	  this.format.append(   "[   ");    	non-compiled	[CE]  <identifier>  expected	104	None	replace
252	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append( "[ ");  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append( "[ ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append( "[ ");  }	  this.format.append(   "[   ");    	non-compiled	[CE]  <identifier>  expected	104	None	replace
253	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append( "[ ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append( "[ ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append( "[ ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.format.append(   "[   ");    	non-compiled	[CE]  <identifier>  expected	104	None	replace
254	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.UNKNOWN  :  format.getName();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.UNKNOWN  :  format.getName();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.UNKNOWN  :  format.getName();	  this.format    =    format!=    null?    CSVFormat.UNKNOWN    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	95	None	replace
255	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.UNKNOWN  :  format.append( "n ");  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.UNKNOWN  :  format.append( "n ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.UNKNOWN  :  format.append( "n ");	  this.format    =    format!=    null?    CSVFormat.UNKNOWN    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	95	None	replace
256	[BUG]  [BUGGY]  this.format.append('n',  format);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append('n',  format);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append('n',  format);	  this.format.append(out,    format);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
257	[BUG]  [BUGGY]  this.format.set(out,  format);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.set(out,  format);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.set(out,  format);	  this.format.append(out,    format);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
258	[BUG]  [BUGGY]  this.format.append(cSVFormat,  format);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append(cSVFormat,  format);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append(cSVFormat,  format);	  this.format.append(out,    format);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
259	[BUG]  [BUGGY]  this.format.setValue(newRecord,  output,  false);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(newRecord,  output,  false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(newRecord,  output,  false);	  this.format.setValue(newRecord,    output);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
260	[BUG]  [BUGGY]  this.format.setValue(newRecord,  output,  true);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(newRecord,  output,  true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(newRecord,  output,  true);	  this.format.setValue(newRecord,    output);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
261	[BUG]  [BUGGY]  this.format.setValue(newRecord,  output,  0);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(newRecord,  output,  0);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(newRecord,  output,  0);	  this.format.setValue(newRecord,    output);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
262	[BUG]  [BUGGY]  this.format.setValue(newRecord,  output,  null);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(newRecord,  output,  null);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(newRecord,  output,  null);	  this.format.setValue(newRecord,    output);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
263	[BUG]  [BUGGY]  this.format.setValues(this.newRecord  +  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(this.newRecord  +  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(this.newRecord  +  1);	  this.format.setValues(newRecord    +    1);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
264	[BUG]  [BUGGY]  this.format.setValues(newRecord  +  2);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(newRecord  +  2);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(newRecord  +  2);	  this.format.setValues(newRecord    +    1);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
265	[BUG]  [BUGGY]  this.format.setValues(out,  newRecord  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(out,  newRecord  +  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(out,  newRecord  +  1);	  this.format.setValues(newRecord    +    1);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
266	[BUG]  [BUGGY]  this.format.setValues(newRecord  *  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(newRecord  *  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(newRecord  *  1);	  this.format.setValues(newRecord    +    1);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
267	[BUG]  [BUGGY]  this.format.setValues(newRecord,  out  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(newRecord,  out  +  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(newRecord,  out  +  1);	  this.format.setValues(newRecord    +    1);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
268	[BUG]  [BUGGY]  this.format.validate(out,  false,  format);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.validate(out,  false,  format);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.validate(out,  false,  format);	  this.format.validate(out,    false);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
269	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append('[');  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append('[');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append('[');  }	  this.format.append('[');    	non-compiled	[CE]  <identifier>  expected	77	None	replace
270	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append('[');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append('[');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append('[');  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.format.append('[');    	non-compiled	[CE]  <identifier>  expected	77	None	replace
271	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append('[');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append('[');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append('[');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }	  this.format.append('[');    	non-compiled	[CE]  <identifier>  expected	77	None	replace
272	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append('[');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append('[');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append('[');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }	  this.format.append('[');    	non-compiled	[CE]  <identifier>  expected	77	None	replace
273	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append('[');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append('[');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append('[');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }	  this.format.append('[');    	non-compiled	[CE]  <identifier>  expected	77	None	replace
274	[BUG]  [BUGGY]  if(newRecord)  {  out.append('n');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  out.append('n');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  out.append('n');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }	  if(newRecord)    {    this.format.append('n');    }    else    {    System.arraycopy(out,    0,    this.format,    0,    out.length);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
275	[BUG]  [BUGGY]  if(newRecord)  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }	  if(newRecord)    {    this.format.append('n');    }    else    {    System.arraycopy(out,    0,    this.format,    0,    out.length);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
276	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append('n').append(this.format);  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append('n').append(this.format);  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append('n').append(this.format);  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }	  if(newRecord)    {    this.format.append('n');    }    else    {    System.arraycopy(out,    0,    this.format,    0,    out.length);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
277	[BUG]  [BUGGY]  if(newRecord)  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  else  {  System.arraycopy(out,  0,  out.length);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  else  {  System.arraycopy(out,  0,  out.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  else  {  System.arraycopy(out,  0,  out.length);  }	  if(newRecord)    {    this.format.append('n');    }    else    {    System.arraycopy(out,    0,    this.format,    0,    out.length);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
278	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append('n');  }  else  {  System.arraycopy(out,  0,  this.format,  1,  out.length);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append('n');  }  else  {  System.arraycopy(out,  0,  this.format,  1,  out.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append('n');  }  else  {  System.arraycopy(out,  0,  this.format,  1,  out.length);  }	  if(newRecord)    {    this.format.append('n');    }    else    {    System.arraycopy(out,    0,    this.format,    0,    out.length);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
279	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord  :  format.toString();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  newRecord  :  format.toString();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  newRecord  :  format.toString();	  this.format    =    format    ==    null?    newRecord    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
280	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord  :  format.newInstance();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  newRecord  :  format.newInstance();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  newRecord  :  format.newInstance();	  this.format    =    format    ==    null?    newRecord    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
281	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord  :  format.reset();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  newRecord  :  format.reset();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  newRecord  :  format.reset();	  this.format    =    format    ==    null?    newRecord    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
282	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord  :  format.toFormat();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  newRecord  :  format.toFormat();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  newRecord  :  format.toFormat();	  this.format    =    format    ==    null?    newRecord    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
283	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord  :  format.replace('',  '/');  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  newRecord  :  format.replace('',  '/');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  newRecord  :  format.replace('',  '/');	  this.format    =    format    ==    null?    newRecord    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
284	[BUG]  [BUGGY]  ||  newRecord)  {  this.format.append('n');  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  ||  newRecord)  {  this.format.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	||  newRecord)  {  this.format.append('n');  }	  if(newRecord)    {    this.format.append('n');    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
285	[BUG]  [BUGGY]  This.format.append('n');  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  This.format.append('n');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	This.format.append('n');	  if(newRecord)    {    this.format.append('n');    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
286	[BUG]  [BUGGY]  Appendable  newRecord  =  this.format.append('n');  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  Appendable  newRecord  =  this.format.append('n');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	Appendable  newRecord  =  this.format.append('n');	  if(newRecord)    {    this.format.append('n');    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
287	[BUG]  [BUGGY]  this.format.append('n').append(newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append('n').append(newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append('n').append(newRecord);	  if(newRecord)    {    this.format.append('n');    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
288	[BUG]  [BUGGY]  AllRecords.add(newRecord);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  AllRecords.add(newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	AllRecords.add(newRecord);	  if(newRecord)    {    this.format.append('n');    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
289	[BUG]  [BUGGY]  newRecord  =  false;  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  newRecord  =  false;  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	newRecord  =  false;	  if(newRecord)    {    newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
290	[BUG]  [BUGGY]  ||  newRecord)  {  newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  ||  newRecord)  {  newRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	||  newRecord)  {  newRecord  =  false;  }	  if(newRecord)    {    newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
291	[BUG]  [BUGGY]  ||  newRecord)  {  thisRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  ||  newRecord)  {  thisRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	||  newRecord)  {  thisRecord  =  false;  }	  if(newRecord)    {    newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
292	[BUG]  [BUGGY]  this.format.validate(out,  format,  newRecord);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.validate(out,  format,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.validate(out,  format,  newRecord);	  this.format.validate(out,    format);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
293	[BUG]  [BUGGY]  this.format.validate(out,  format,  false);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.validate(out,  format,  false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.validate(out,  format,  false);	  this.format.validate(out,    format);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
294	[BUG]  [BUGGY]  this.format.validate(out,  format,  true);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.validate(out,  format,  true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.validate(out,  format,  true);	  this.format.validate(out,    format);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
295	[BUG]  [BUGGY]  this.format  =  format.validate(out,  format);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format.validate(out,  format);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format.validate(out,  format);	  this.format.validate(out,    format);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
296	[BUG]  [BUGGY]  this.format.validate(out,  format,  null);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.validate(out,  format,  null);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.validate(out,  format,  null);	  this.format.validate(out,    format);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
297	[BUG]  [BUGGY]  this.format.validate(out,  format,  0);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.validate(out,  format,  0);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.validate(out,  format,  0);	  this.format.validate(out,    format);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
298	[BUG]  [BUGGY]  this.format  =  format.toArray();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format.toArray();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format.toArray();	  this.format    =    format.get();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
299	[BUG]  [BUGGY]  this.format  =  format!=  null?  newRecord  :  format.get();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  newRecord  :  format.get();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  newRecord  :  format.get();	  this.format    =    format.get();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
300	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord  :  format.get();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  newRecord  :  format.get();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  newRecord  :  format.get();	  this.format    =    format.get();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
301	[BUG]  [BUGGY]  this.format  =  format!=  null?  new  Record  <  CSVFormat>()  :  format.get();  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  new  Record  <  CSVFormat>()  :  format.get();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  new  Record  <  CSVFormat>()  :  format.get();	  this.format    =    format.get();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
302	[BUG]  [BUGGY]  this.format  =  format!=  null?  Format.newInstance()  :  format.get();  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  Format.newInstance()  :  format.get();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  Format.newInstance()  :  format.get();	  this.format    =    format.get();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
303	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.newInstance()  :  format.get();  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  Format.newInstance()  :  format.get();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  Format.newInstance()  :  format.get();	  this.format    =    format.get();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
304	[BUG]  [BUGGY]  this.format.setValue(newRecord,  format,  out);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(newRecord,  format,  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(newRecord,  format,  out);	  this.format.setValue(newRecord,    format);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
305	[BUG]  [BUGGY]  this.format.setValue(newRecord,  format,  false);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(newRecord,  format,  false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(newRecord,  format,  false);	  this.format.setValue(newRecord,    format);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
306	[BUG]  [BUGGY]  this.format.setValue(newRecord,  format,  true);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(newRecord,  format,  true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(newRecord,  format,  true);	  this.format.setValue(newRecord,    format);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
307	[BUG]  [BUGGY]  this.format.setValue(newRecord,  format,  0);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(newRecord,  format,  0);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(newRecord,  format,  0);	  this.format.setValue(newRecord,    format);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
308	[BUG]  [BUGGY]  this.newRecord  =  new  Record(0);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  Record(0);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  Record(0);	  this.newRecord    =    new    Record();    	non-compiled	[CE]  <identifier>  expected	114	None	replace
309	[BUG]  [BUGGY]  this.newRecord  =  new  Record(out);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  Record(out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  Record(out);	  this.newRecord    =    new    Record();    	non-compiled	[CE]  <identifier>  expected	114	None	replace
310	[BUG]  [BUGGY]  this.newRecord  =  new  Record(1);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  Record(1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  Record(1);	  this.newRecord    =    new    Record();    	non-compiled	[CE]  <identifier>  expected	114	None	replace
311	[BUG]  [BUGGY]  this.newRecord  =  new  Record(record);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  Record(record);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  Record(record);	  this.newRecord    =    new    Record();    	non-compiled	[CE]  <identifier>  expected	114	None	replace
312	[BUG]  [BUGGY]  this.newRecord  =  new  Record(true);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  Record(true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  Record(true);	  this.newRecord    =    new    Record();    	non-compiled	[CE]  <identifier>  expected	114	None	replace
313	[BUG]  [BUGGY]  this.format.setValues(out,  format,  newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(out,  format,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(out,  format,  newRecord);	  this.format.setValues(out,    format);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
314	[BUG]  [BUGGY]  this.format.setValues(out,  format,  false);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(out,  format,  false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(out,  format,  false);	  this.format.setValues(out,    format);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
315	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append( "  <  / ");  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append( "  <  / ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append( "  <  / ");  }	  this.format.append(   "    <    /   ");    	non-compiled	[CE]  <identifier>  expected	79	None	replace
316	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append( "  <  / ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append( "  <  / ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append( "  <  / ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.format.append(   "    <    /   ");    	non-compiled	[CE]  <identifier>  expected	79	None	replace
317	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append( "  <  / ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append( "  <  / ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append( "  <  / ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }	  this.format.append(   "    <    /   ");    	non-compiled	[CE]  <identifier>  expected	79	None	replace
318	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append( "  <  / ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append( "  <  / ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append( "  <  / ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }	  this.format.append(   "    <    /   ");    	non-compiled	[CE]  <identifier>  expected	79	None	replace
319	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append( "  <  / ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append( "  <  / ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append( "  <  / ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }	  this.format.append(   "    <    /   ");    	non-compiled	[CE]  <identifier>  expected	79	None	replace
320	[BUG]  [BUGGY]  this.format  =  format!=  null?  new  CSVFormat()  :  format.toString();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  new  CSVFormat()  :  format.toString();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  new  CSVFormat()  :  format.toString();	  this.format    =    format!=    null?    new    CSVFormat()    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	98	None	replace
321	[BUG]  [BUGGY]  this.format  =  format!=  null?  new  CSVFormat()  :  format.toArray(new  CSVFormat());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  new  CSVFormat()  :  format.toArray(new  CSVFormat());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  new  CSVFormat()  :  format.toArray(new  CSVFormat());	  this.format    =    format!=    null?    new    CSVFormat()    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	98	None	replace
322	[BUG]  [BUGGY]  this.format.addRecord(record,  newRecord);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addRecord(record,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addRecord(record,  newRecord);	  this.format.addRecord(record);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
323	[BUG]  [BUGGY]  this.format.setValue(out,  false);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(out,  false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(out,  false);	  this.format.setValues(out,    true);    	non-compiled	[CE]  <identifier>  expected	109	None	replace
324	[BUG]  [BUGGY]  this.format.setValues(out, "true ");  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(out, "true ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(out, "true ");	  this.format.setValues(out,    true);    	non-compiled	[CE]  <identifier>  expected	109	None	replace
325	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format.toString();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format.toString();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format.toString();	  this.format    =    format    ==    null?    CSVFormat.EMPTY    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	118	None	replace
326	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format.getName();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format.getName();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format.getName();	  this.format    =    format    ==    null?    CSVFormat.EMPTY    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	118	None	replace
327	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format.newInstance();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format.newInstance();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format.newInstance();	  this.format    =    format    ==    null?    CSVFormat.EMPTY    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	118	None	replace
328	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.EMPTY  :  format.toString();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.EMPTY  :  format.toString();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.EMPTY  :  format.toString();	  this.format    =    format    ==    null?    CSVFormat.EMPTY    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	118	None	replace
329	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format.record();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format.record();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format.record();	  this.format    =    format    ==    null?    CSVFormat.EMPTY    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	118	None	replace
330	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format.append( "n ");  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format.append( "n ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format.append( "n ");	  this.format    =    format    ==    null?    CSVFormat.EMPTY    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	118	None	replace
331	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append( "  <   ");  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append( "  <   ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append( "  <   ");  }	  this.format.append(   "    <       ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
332	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append( "  <   ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append( "  <   ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append( "  <   ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.format.append(   "    <       ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
333	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append( "  <   ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append( "  <   ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append( "  <   ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }	  this.format.append(   "    <       ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
334	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append( "  <   ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append( "  <   ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append( "  <   ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }	  this.format.append(   "    <       ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
335	[BUG]  [BUGGY]  this.format.add(out,  format);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.add(out,  format);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.add(out,  format);	  this.format.add(out);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
336	[BUG]  [BUGGY]  this.format.add(out,  newRecord);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.add(out,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.add(out,  newRecord);	  this.format.add(out);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
337	[BUG]  [BUGGY]  this.format.addAll(out);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addAll(out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addAll(out);	  this.format.add(out);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
338	[BUG]  [BUGGY]  this.format.add(cSVFormat);  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.add(cSVFormat);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.add(cSVFormat);	  this.format.add(out);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
339	[BUG]  [BUGGY]  this.format.add(out,  false);  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.add(out,  false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.add(out,  false);	  this.format.add(out);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
340	[BUG]  [BUGGY]  this.format.setValue(this.newRecord,  out);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(this.newRecord,  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(this.newRecord,  out);	  this.format.setValue(this.newRecord);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
341	[BUG]  [BUGGY]  this.format.setValue(this.newRecord,  format);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(this.newRecord,  format);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(this.newRecord,  format);	  this.format.setValue(this.newRecord);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
342	[BUG]  [BUGGY]  this.format  =  format.validate(out,  out);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format.validate(out,  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format.validate(out,  out);	  this.format.validate(out,    out);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
343	[BUG]  [BUGGY]  this.format.validate(out,  0);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.validate(out,  0);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.validate(out,  0);	  this.format.validate(out,    out);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
344	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append( "none ");  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append( "none ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append( "none ");  }	  this.format.append(   "none   ");    	non-compiled	[CE]  <identifier>  expected	105	None	replace
345	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append( "none ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append( "none ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append( "none ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.format.append(   "none   ");    	non-compiled	[CE]  <identifier>  expected	105	None	replace
346	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append( "none ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append( "none ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append( "none ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }	  this.format.append(   "none   ");    	non-compiled	[CE]  <identifier>  expected	105	None	replace
347	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append( "none ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append( "none ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append( "none ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }	  this.format.append(   "none   ");    	non-compiled	[CE]  <identifier>  expected	105	None	replace
348	[BUG]  [BUGGY]  this.format.reset();  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.reset();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.reset();	  this.format.setLength(0);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
349	[BUG]  [BUGGY]  this.format.setSize(0);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setSize(0);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setSize(0);	  this.format.setLength(0);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
350	[BUG]  [BUGGY]  this.format.add(new  Record());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.add(new  Record());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.add(new  Record());	  this.format.setLength(0);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
351	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append( "native  format ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append( "native  format ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append( "native  format ");  }	  this.format.append(   "native    format   ");    	non-compiled	[CE]  <identifier>  expected	37	None	replace
352	[BUG]  [BUGGY]  this.format.append( "[native  format] ");  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( "[native  format] ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( "[native  format] ");	  this.format.append(   "native    format   ");    	non-compiled	[CE]  <identifier>  expected	37	None	replace
353	[BUG]  [BUGGY]  this.format.append( "native  format: ");  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( "native  format: ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( "native  format: ");	  this.format.append(   "native    format   ");    	non-compiled	[CE]  <identifier>  expected	37	None	replace
354	[BUG]  [BUGGY]  this.format.append( "Native  format ");  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( "Native  format ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( "Native  format ");	  this.format.append(   "native    format   ");    	non-compiled	[CE]  <identifier>  expected	37	None	replace
355	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append( "native  format ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append( "native  format ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append( "native  format ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.format.append(   "native    format   ");    	non-compiled	[CE]  <identifier>  expected	37	None	replace
356	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append( "native  format ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append( "native  format ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append( "native  format ");  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }	  this.format.append(   "native    format   ");    	non-compiled	[CE]  <identifier>  expected	37	None	replace
357	[BUG]  [BUGGY]  Appendable  out  =  this.format.append('n');  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  Appendable  out  =  this.format.append('n');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	Appendable  out  =  this.format.append('n');	  if(newRecord)    {    this.format.append('n');    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
358	[BUG]  [BUGGY]  Appendable  out  =  this.format.get(newRecord);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  Appendable  out  =  this.format.get(newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	Appendable  out  =  this.format.get(newRecord);	  if(newRecord)    {    this.format.append('n');    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
359	[BUG]  [BUGGY]  this.format.setValues(newRecord,  format);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(newRecord,  format);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(newRecord,  format);	  this.format.setValues(newRecord,    newRecord);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
360	[BUG]  [BUGGY]  this.format.setValues(newRecord,  0);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(newRecord,  0);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(newRecord,  0);	  this.format.setValues(newRecord,    newRecord);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
361	[BUG]  [BUGGY]  this.format.setValues(newRecord,  output);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(newRecord,  output);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(newRecord,  output);	  this.format.setValues(newRecord,    newRecord);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
362	[BUG]  [BUGGY]  this.format.setValues(newRecord,  record);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(newRecord,  record);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(newRecord,  record);	  this.format.setValues(newRecord,    newRecord);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
363	[BUG]  [BUGGY]  Format  format  =  new  CSVFormat(newRecord);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  Format  format  =  new  CSVFormat(newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	Format  format  =  new  CSVFormat(newRecord);	  if(newRecord)    {    for(int    i    =    0;    i    <    out.size();    i++)    {    CSVFormat    format    =    new    CSVFormat(format);    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
364	[BUG]  [BUGGY]  AssertionError.error(out,  newRecord);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  AssertionError.error(out,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	AssertionError.error(out,  newRecord);	  if(newRecord)    {    for(int    i    =    0;    i    <    out.size();    i++)    {    CSVFormat    format    =    new    CSVFormat(format);    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
365	[BUG]  [BUGGY]  Format  format  =  new  CSVFormat(out);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  Format  format  =  new  CSVFormat(out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	Format  format  =  new  CSVFormat(out);	  if(newRecord)    {    for(int    i    =    0;    i    <    out.size();    i++)    {    CSVFormat    format    =    new    CSVFormat(format);    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
366	[BUG]  [BUGGY]  Format  format  =  new  CSVFormat(format);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  Format  format  =  new  CSVFormat(format);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	Format  format  =  new  CSVFormat(format);	  if(newRecord)    {    for(int    i    =    0;    i    <    out.size();    i++)    {    CSVFormat    format    =    new    CSVFormat(format);    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
367	[BUG]  [BUGGY]  AssertionError.warning( "Unused  newRecord ");  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  AssertionError.warning( "Unused  newRecord ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	AssertionError.warning( "Unused  newRecord ");	  if(newRecord)    {    for(int    i    =    0;    i    <    out.size();    i++)    {    CSVFormat    format    =    new    CSVFormat(format);    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
368	[BUG]  [BUGGY]  AssertionError.warning( "Unused  newRecord. ");  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  AssertionError.warning( "Unused  newRecord. ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	AssertionError.warning( "Unused  newRecord. ");	  if(newRecord)    {    for(int    i    =    0;    i    <    out.size();    i++)    {    CSVFormat    format    =    new    CSVFormat(format);    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
369	[BUG]  [BUGGY]  AssertionError.warning( "CSVFormat  format  not  supported. ");  [CE]  <identifier>  expected  [FE]                                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  AssertionError.warning( "CSVFormat  format  not  supported. ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	AssertionError.warning( "CSVFormat  format  not  supported. ");	  if(newRecord)    {    for(int    i    =    0;    i    <    out.size();    i++)    {    CSVFormat    format    =    new    CSVFormat(format);    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
370	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append( "null ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append( "null ");  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
371	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append( "n   ");  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append( "n   ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append( "n   ");  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
372	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append( "native ");  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append( "native ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append( "native ");  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
373	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append( "# ");  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append( "# ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append( "# ");  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
374	[BUG]  [BUGGY]  this.format.setRecorded(true,  null);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecorded(true,  null);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecorded(true,  null);	  this.format.setRecorded(false,   "   ");    	non-compiled	[CE]  <identifier>  expected	94	None	replace
375	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.NONE  :  format.getName();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.NONE  :  format.getName();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.NONE  :  format.getName();	  this.format    =    format!=    null?    CSVFormat.NONE    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	97	None	replace
376	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.NONE  :  format.toArray(new  String[cSVFormat.size()  ]);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.NONE  :  format.toArray(new  String[cSVFormat.size()  ]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.NONE  :  format.toArray(new  String[cSVFormat.size()  ]);	  this.format    =    format!=    null?    CSVFormat.NONE    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	97	None	replace
377	[BUG]  [BUGGY]  this.format  =  format  ==  null?  null  :  format.toString();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  null  :  format.toString();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  null  :  format.toString();	  this.format    =    format.toString();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
378	[BUG]  [BUGGY]  this.format  =  format.toUpperCase();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format.toUpperCase();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format.toUpperCase();	  this.format    =    format.toString();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
379	[BUG]  [BUGGY]  this.format  =  format.toCharArray();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format.toCharArray();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format.toCharArray();	  this.format    =    format.toString();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
380	[BUG]  [BUGGY]  this.format  =  format.toExternalFormat();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format.toExternalFormat();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format.toExternalFormat();	  this.format    =    format.toString();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
381	[BUG]  [BUGGY]  this.format  =  format.toString()  + "n ";  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format.toString()  + "n ";  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format.toString()  + "n ";	  this.format    =    format.toString();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
382	[BUG]  [BUGGY]  this.format  =  format!=  null?  newRecord  :  format.toString();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  newRecord  :  format.toString();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  newRecord  :  format.toString();	  this.format    =    format!=    null?    newRecord    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
383	[BUG]  [BUGGY]  this.format  =  format!=  null?  newRecord  :  format.newInstance();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  newRecord  :  format.newInstance();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  newRecord  :  format.newInstance();	  this.format    =    format!=    null?    newRecord    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
384	[BUG]  [BUGGY]  this.format  =  format!=  null?  newRecord  :  format.reset();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  newRecord  :  format.reset();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  newRecord  :  format.reset();	  this.format    =    format!=    null?    newRecord    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
385	[BUG]  [BUGGY]  this.format  =  format!=  null?  newRecord  :  format.replace('',  '/');  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  newRecord  :  format.replace('',  '/');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  newRecord  :  format.replace('',  '/');	  this.format    =    format!=    null?    newRecord    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
386	[BUG]  [BUGGY]  this.format  =  FormatUtils.newInstance();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  FormatUtils.newInstance();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  FormatUtils.newInstance();	  this.format    =    format.newInstance();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
387	[BUG]  [BUGGY]  this.format  =  format.newRecord();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format.newRecord();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format.newRecord();	  this.format    =    format.newInstance();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
388	[BUG]  [BUGGY]  this.format  =  format!=  null?  newInstance()  :  Format.newInstance();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  newInstance()  :  Format.newInstance();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  newInstance()  :  Format.newInstance();	  this.format    =    format.newInstance();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
389	[BUG]  [BUGGY]  this.format  =  format!=  null?  newInstance()  :  format.newInstance();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  newInstance()  :  format.newInstance();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  newInstance()  :  format.newInstance();	  this.format    =    format.newInstance();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
390	[BUG]  [BUGGY]  this.format.setValue(out,  newRecord,  0);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(out,  newRecord,  0);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(out,  newRecord,  0);	  this.format.setValue(out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
391	[BUG]  [BUGGY]  this.format.setValue(out,  newRecord,  format);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(out,  newRecord,  format);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(out,  newRecord,  format);	  this.format.setValue(out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
392	[BUG]  [BUGGY]  this.format.setValue(out,  newRecord,  true);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(out,  newRecord,  true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(out,  newRecord,  true);	  this.format.setValue(out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
393	[BUG]  [BUGGY]  this.newRecord  =  new  LinkedHashMap  <  CSVFormat>();  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  LinkedHashMap  <  CSVFormat>();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  LinkedHashMap  <  CSVFormat>();	  this.newRecord    =    new    HashMap    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	116	None	replace
394	[BUG]  [BUGGY]  this.newRecord  =  new  TreeMap  <  CSVFormat>();  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  TreeMap  <  CSVFormat>();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  TreeMap  <  CSVFormat>();	  this.newRecord    =    new    HashMap    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	116	None	replace
395	[BUG]  [BUGGY]  this.newRecord  =  new  ConcurrentHashMap  <  CSVFormat>();  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  ConcurrentHashMap  <  CSVFormat>();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  ConcurrentHashMap  <  CSVFormat>();	  this.newRecord    =    new    HashMap    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	116	None	replace
396	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(1);  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  HashMap  <  CSVFormat>(1);	  this.newRecord    =    new    HashMap    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	116	None	replace
397	[BUG]  [BUGGY]  this.format.setRecord(false,  null);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecord(false,  null);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecord(false,  null);	  this.format.setRecord(true,    false);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
398	[BUG]  [BUGGY]  this.format.setRecorded(true,  false,  newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecorded(true,  false,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecorded(true,  false,  newRecord);	  this.format.setRecorded(true,    newRecord);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
399	[BUG]  [BUGGY]  this.format.setRecorded(false,  false,  newRecord);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecorded(false,  false,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecorded(false,  false,  newRecord);	  this.format.setRecorded(true,    newRecord);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
400	[BUG]  [BUGGY]  this.format.setRecorded(false,  newRecord  }  );  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecorded(false,  newRecord  }  );  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecorded(false,  newRecord  }  );	  this.format.setRecorded(true,    newRecord);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
401	[BUG]  [BUGGY]  this.format.setInput(out,  newRecord);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setInput(out,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setInput(out,  newRecord);	  this.format.setInput(out);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
402	[BUG]  [BUGGY]  this.format.setInput(in);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setInput(in);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setInput(in);	  this.format.setInput(out);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
403	[BUG]  [BUGGY]  this.format.setInput(out,  format);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setInput(out,  format);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setInput(out,  format);	  this.format.setInput(out);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
404	[BUG]  [BUGGY]  this.format  =  format!=  null?  Format.NULL  :  format.toString();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  Format.NULL  :  format.toString();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  Format.NULL  :  format.toString();	  this.format    =    format!=    null?    Format.NULL    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
405	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.NULL  :  format.validate();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  Format.NULL  :  format.validate();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  Format.NULL  :  format.validate();	  this.format    =    format!=    null?    Format.NULL    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
406	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.NULL  :  format.toString();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  Format.NULL  :  format.toString();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  Format.NULL  :  format.toString();	  this.format    =    format!=    null?    Format.NULL    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
407	[BUG]  [BUGGY]  this.format  =  format!=  null?  Format.NULL  :  format.getName();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  Format.NULL  :  format.getName();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  Format.NULL  :  format.getName();	  this.format    =    format!=    null?    Format.NULL    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
408	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.NULL  :  format.getName();  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  Format.NULL  :  format.getName();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  Format.NULL  :  format.getName();	  this.format    =    format!=    null?    Format.NULL    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
409	[BUG]  [BUGGY]  this.format  =  format!=  null?  Format.NULL  :  format.toFormat();  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  Format.NULL  :  format.toFormat();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  Format.NULL  :  format.toFormat();	  this.format    =    format!=    null?    Format.NULL    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
410	[BUG]  [BUGGY]  this.format.addValues(newRecord,  format);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValues(newRecord,  format);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValues(newRecord,  format);	  this.format.addValues(newRecord);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
411	[BUG]  [BUGGY]  if(newRecord)  {  this.format.setRecorded(false);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.setRecorded(false);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.setRecorded(false);  }	  this.format.setRecorded(false);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
412	[BUG]  [BUGGY]  if(newRecord)  {  this.format.setRecorded(false);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.setRecorded(false);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.setRecorded(false);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.format.setRecorded(false);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
413	[BUG]  [BUGGY]  this.format.addRecorded(true);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addRecorded(true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addRecorded(true);	  this.format.setRecorded(false);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
414	[BUG]  [BUGGY]  if(newRecord)  {  this.format.setRecorded(false);  }  else  {  setRecorded(true);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.setRecorded(false);  }  else  {  setRecorded(true);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.setRecorded(false);  }  else  {  setRecorded(true);  }	  this.format.setRecorded(false);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
415	[BUG]  [BUGGY]  this.format.setValue(newRecord,  false);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(newRecord,  false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(newRecord,  false);	  this.format.setValue(newRecord,    true);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
416	[BUG]  [BUGGY]  this.format.setValue(this.newRecord,  true);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(this.newRecord,  true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(this.newRecord,  true);	  this.format.setValue(newRecord,    true);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
417	[BUG]  [BUGGY]  this.format.setValue(newRecord,  null);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(newRecord,  null);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(newRecord,  null);	  this.format.setValue(newRecord,    true);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
418	[BUG]  [BUGGY]  this.format.addValue(newRecord,  false);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(newRecord,  false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(newRecord,  false);	  this.format.setValue(newRecord,    true);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
419	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NULL  :  format.toString();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NULL  :  format.toString();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.NULL  :  format.toString();	  this.format    =    format    ==    null?    CSVFormat.NULL    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	120	None	replace
420	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.NULL  :  format.toString();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.NULL  :  format.toString();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.NULL  :  format.toString();	  this.format    =    format    ==    null?    CSVFormat.NULL    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	120	None	replace
421	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NULL  :  format.getName();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NULL  :  format.getName();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.NULL  :  format.getName();	  this.format    =    format    ==    null?    CSVFormat.NULL    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	120	None	replace
422	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NULL  :  format.toExternalFormat();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NULL  :  format.toExternalFormat();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.NULL  :  format.toExternalFormat();	  this.format    =    format    ==    null?    CSVFormat.NULL    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	120	None	replace
423	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NULL  :  format.append( "n ");  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NULL  :  format.append( "n ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.NULL  :  format.append( "n ");	  this.format    =    format    ==    null?    CSVFormat.NULL    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	120	None	replace
424	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NULL  :  format.toArray(new  String[]  {  }  );  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NULL  :  format.toArray(new  String[]  {  }  );  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.NULL  :  format.toArray(new  String[]  {  }  );	  this.format    =    format    ==    null?    CSVFormat.NULL    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	120	None	replace
425	[BUG]  [BUGGY]  this.format  =  format  ==  null?  null  :  format.toFormat();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  null  :  format.toFormat();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  null  :  format.toFormat();	  this.format    =    format.toFormat();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
426	[BUG]  [BUGGY]  this.format  =  format  ==  null?  new  Record  <  CSVFormat>()  :  format.toFormat();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  new  Record  <  CSVFormat>()  :  format.toFormat();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  new  Record  <  CSVFormat>()  :  format.toFormat();	  this.format    =    format.toFormat();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
427	[BUG]  [BUGGY]  this.format  =  format!=  null?  newRecord  :  format.toFormat();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  newRecord  :  format.toFormat();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  newRecord  :  format.toFormat();	  this.format    =    format.toFormat();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
428	[BUG]  [BUGGY]  this.format  =  format!=  null?  Format.newInstance()  :  format.toFormat();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  Format.newInstance()  :  format.toFormat();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  Format.newInstance()  :  format.toFormat();	  this.format    =    format.toFormat();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
429	[BUG]  [BUGGY]  this.format.addValue(this.out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(this.out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(this.out);	  this.format.addValue(out);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
430	[BUG]  [BUGGY]  Appendable  out  =(Appendable)newRecord.clone();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  Appendable  out  =(Appendable)newRecord.clone();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	Appendable  out  =(Appendable)newRecord.clone();	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
431	[BUG]  [BUGGY]  Appendable  out  =(Appendable)this.out.clone();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  Appendable  out  =(Appendable)this.out.clone();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	Appendable  out  =(Appendable)this.out.clone();	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
432	[BUG]  [BUGGY]  Appendable  out  =(Appendable)this.newRecord;  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  Appendable  out  =(Appendable)this.newRecord;  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	Appendable  out  =(Appendable)this.newRecord;	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
433	[BUG]  [BUGGY]  Appendable  out  =(Appendable)this.format.clone();  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  Appendable  out  =(Appendable)this.format.clone();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	Appendable  out  =(Appendable)this.format.clone();	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
434	[BUG]  [BUGGY]  AllRecords.add(out);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  AllRecords.add(out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	AllRecords.add(out);	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
435	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(1);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(1);	  this.newRecord    =    new    Record    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
436	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(0);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(0);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(0);	  this.newRecord    =    new    Record    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
437	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(2);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(2);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(2);	  this.newRecord    =    new    Record    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
438	[BUG]  [BUGGY]  this.format.setText(newRecord);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setText(newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setText(newRecord);	  this.format.setText(out);    	non-compiled	[CE]  <identifier>  expected	103	None	replace
439	[BUG]  [BUGGY]  this.format.setText(String.valueOf(out));  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setText(String.valueOf(out));  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setText(String.valueOf(out));	  this.format.setText(out);    	non-compiled	[CE]  <identifier>  expected	103	None	replace
440	[BUG]  [BUGGY]  this.format.setText( " ");  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setText( " ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setText( " ");	  this.format.setText(out);    	non-compiled	[CE]  <identifier>  expected	103	None	replace
441	[BUG]  [BUGGY]  this.format.setText(out,  newRecord);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setText(out,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setText(out,  newRecord);	  this.format.setText(out);    	non-compiled	[CE]  <identifier>  expected	103	None	replace
442	[BUG]  [BUGGY]  this.format.setText(cSVFormat);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setText(cSVFormat);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setText(cSVFormat);	  this.format.setText(out);    	non-compiled	[CE]  <identifier>  expected	103	None	replace
443	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append('N');  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append('N');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append('N');  }	  this.format.append('N');    	non-compiled	[CE]  <identifier>  expected	76	None	replace
444	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append('N');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append('N');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append('N');  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.format.append('N');    	non-compiled	[CE]  <identifier>  expected	76	None	replace
445	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append('N');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append('N');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append('N');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }	  this.format.append('N');    	non-compiled	[CE]  <identifier>  expected	76	None	replace
446	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append('N');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append('N');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append('N');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }	  this.format.append('N');    	non-compiled	[CE]  <identifier>  expected	76	None	replace
447	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append('N');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append('N');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append('N');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }	  this.format.append('N');    	non-compiled	[CE]  <identifier>  expected	76	None	replace
448	[BUG]  [BUGGY]  this.format.setRecord(this.newRecord,  out);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecord(this.newRecord,  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecord(this.newRecord,  out);	  this.format.setRecord(this.newRecord);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
449	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append('/');  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append('/');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append('/');  }	  this.format.append('/');    	non-compiled	[CE]  <identifier>  expected	41	None	replace
450	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append('/');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append('/');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append('/');  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.format.append('/');    	non-compiled	[CE]  <identifier>  expected	41	None	replace
451	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append('/');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append('/');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append('/');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }	  this.format.append('/');    	non-compiled	[CE]  <identifier>  expected	41	None	replace
452	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append('/');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append('/');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append('/');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }	  this.format.append('/');    	non-compiled	[CE]  <identifier>  expected	41	None	replace
453	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append('/');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append('/');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append('/');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }	  this.format.append('/');    	non-compiled	[CE]  <identifier>  expected	41	None	replace
454	[BUG]  [BUGGY]  this.format.setValues(newRecord,  false);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(newRecord,  false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(newRecord,  false);	  this.format.setValues(newRecord,    true);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
455	[BUG]  [BUGGY]  this.format.setValues(this.newRecord,  true);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(this.newRecord,  true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(this.newRecord,  true);	  this.format.setValues(newRecord,    true);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
456	[BUG]  [BUGGY]  this.format.addValues(newRecord,  false);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValues(newRecord,  false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValues(newRecord,  false);	  this.format.setValues(newRecord,    true);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
457	[BUG]  [BUGGY]  this.format.setValues(newRecord,  null);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(newRecord,  null);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(newRecord,  null);	  this.format.setValues(newRecord,    true);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
458	[BUG]  [BUGGY]  this.format.setValues(record,  false);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(record,  false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(record,  false);	  this.format.setValues(newRecord,    true);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
459	[BUG]  [BUGGY]  this.format.addRecorded(true,  newRecord);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addRecorded(true,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addRecorded(true,  newRecord);	  this.format.setRecorded(false,    newRecord);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
460	[BUG]  [BUGGY]  this.format.addRecorded(false,  newRecord);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addRecorded(false,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addRecorded(false,  newRecord);	  this.format.setRecorded(false,    newRecord);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
461	[BUG]  [BUGGY]  this.format.addValue(newRecord,  output,  false);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(newRecord,  output,  false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(newRecord,  output,  false);	  this.format.addValue(newRecord,    output);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
462	[BUG]  [BUGGY]  this.format.addValue(newRecord,  output,  0);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(newRecord,  output,  0);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(newRecord,  output,  0);	  this.format.addValue(newRecord,    output);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
463	[BUG]  [BUGGY]  this.format.addValue(newRecord,  output,  true);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(newRecord,  output,  true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(newRecord,  output,  true);	  this.format.addValue(newRecord,    output);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
464	[BUG]  [BUGGY]  this.format.addValue(newRecord,  output,  out);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(newRecord,  output,  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(newRecord,  output,  out);	  this.format.addValue(newRecord,    output);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
465	[BUG]  [BUGGY]  this.format.addValue(values);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(values);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(values);	  this.format.setValues(values);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
466	[BUG]  [BUGGY]  this.format.addValues(values);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValues(values);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValues(values);	  this.format.setValues(values);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
467	[BUG]  [BUGGY]  this.format.setValues(this.record);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(this.record);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(this.record);	  this.format.setValues(values);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
468	[BUG]  [BUGGY]  this.format.setValues(this.values);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(this.values);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(this.values);	  this.format.setValues(values);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
469	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.newInstance()  :  format.toString();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.newInstance()  :  format.toString();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.newInstance()  :  format.toString();	  this.format    =    format.toString();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
470	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append('n');  }  else  {  System.arraycopy(out,  0,  this.format,  format.length);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append('n');  }  else  {  System.arraycopy(out,  0,  this.format,  format.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append('n');  }  else  {  System.arraycopy(out,  0,  this.format,  format.length);  }	  if(newRecord)    {    this.format.append('n');    }    else    {    System.arraycopy(out,    0,    this.format,    0,    format.length);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
471	[BUG]  [BUGGY]  this.format.setEnd(0);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setEnd(0);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setEnd(0);	  this.format.setLength(0);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
472	[BUG]  [BUGGY]  this.format.setRecord(newRecord,  out,  format);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecord(newRecord,  out,  format);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecord(newRecord,  out,  format);	  this.format.setRecord(newRecord,    out);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
473	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(4);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(4);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(4);	  this.newRecord    =    new    Record    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
474	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(8);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(8);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(8);	  this.newRecord    =    new    Record    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
475	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord  :  format.append( "n ");  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  newRecord  :  format.append( "n ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  newRecord  :  format.append( "n ");	  this.format    =    format    ==    null?    newRecord    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
476	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append('  ');  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append('  ');  }  else  {  out.append( "n ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append('  ');  }  else  {  out.append( "n ");  }	  this.format.append('    ');    	non-compiled	[CE]  <identifier>  expected	39	None	replace
477	[BUG]  [BUGGY]  this.format.append('  ',  out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append('  ',  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append('  ',  out);	  this.format.append('    ');    	non-compiled	[CE]  <identifier>  expected	39	None	replace
478	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_TYPE  :  format.reset();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_TYPE  :  format.reset();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT_TYPE  :  format.reset();	  this.format    =    format!=    null?    CSVFormat.DEFAULT_TYPE    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	100	None	replace
479	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_TYPE  :  format.value();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_TYPE  :  format.value();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT_TYPE  :  format.value();	  this.format    =    format!=    null?    CSVFormat.DEFAULT_TYPE    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	100	None	replace
480	[BUG]  [BUGGY]  this.format  =  format.setValues(out,  format);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format.setValues(out,  format);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format.setValues(out,  format);	  this.format.setValues(out,    format);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
481	[BUG]  [BUGGY]  this.format.setValues(out,  format  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(out,  format  +  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(out,  format  +  1);	  this.format.setValues(out,    format);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
482	[BUG]  [BUGGY]  this.format.addValues(out,  out);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValues(out,  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValues(out,  out);	  this.format.addValues(out);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
483	[BUG]  [BUGGY]  this.format.append( "[n ");  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( "[n ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( "[n ");	  this.format.append(   "[   ");    	non-compiled	[CE]  <identifier>  expected	104	None	replace
484	[BUG]  [BUGGY]  this.format.append( "] ");  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( "] ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( "] ");	  this.format.append(   "[   ");    	non-compiled	[CE]  <identifier>  expected	104	None	replace
485	[BUG]  [BUGGY]  this.format.setValues(out  +  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(out  +  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(out  +  1);	  this.format.setValues(newRecord    +    1);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
486	[BUG]  [BUGGY]  this.format.setValues(newRecord  +  1,  out);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(newRecord  +  1,  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(newRecord  +  1,  out);	  this.format.setValues(newRecord    +    1);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
487	[BUG]  [BUGGY]  this.format.append( "  <  n ");  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( "  <  n ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( "  <  n ");	  this.format.append(   "    <       ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
488	[BUG]  [BUGGY]  this.format.append('  <  ');  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append('  <  ');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append('  <  ');	  this.format.append(   "    <       ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
489	[BUG]  [BUGGY]  this.format.append( "  <   ").append('>');  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( "  <   ").append('>');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( "  <   ").append('>');	  this.format.append(   "    <       ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
490	[BUG]  [BUGGY]  this.format.append( "  }   ");  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( "  }   ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( "  }   ");	  this.format.append(   "    <       ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
491	[BUG]  [BUGGY]  this.format.addValue(out,  out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(out,  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(out,  out);	  this.format.addValue(out);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
492	[BUG]  [BUGGY]  this.format  =  format.addValue(out);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format.addValue(out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format.addValue(out);	  this.format.addValue(out);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
493	[BUG]  [BUGGY]  this.format.setText(out,  format);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setText(out,  format);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setText(out,  format);	  this.format.setText(out);    	non-compiled	[CE]  <identifier>  expected	103	None	replace
494	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_NAME  :  format.reset();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_NAME  :  format.reset();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT_NAME  :  format.reset();	  this.format    =    format!=    null?    CSVFormat.DEFAULT_NAME    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	101	None	replace
495	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_NAME  :  format.toExternalFormat();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_NAME  :  format.toExternalFormat();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT_NAME  :  format.toExternalFormat();	  this.format    =    format!=    null?    CSVFormat.DEFAULT_NAME    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	101	None	replace
496	[BUG]  [BUGGY]  if(newRecord)  {  out.append('N');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  out.append('N');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  out.append('N');  }  else  {  System.arraycopy(out,  0,  this.format,  0,  this.format.length);  }	  if(newRecord)    {    this.format.append('n');    }    else    {    System.arraycopy(out,    0,    this.format,    0,    this.format.length);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
497	[BUG]  [BUGGY]  if(newRecord)  {  out.append('n');  }  else  {  System.arraycopy(out,  0,  this.format,  1,  this.format.length);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  out.append('n');  }  else  {  System.arraycopy(out,  0,  this.format,  1,  this.format.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  out.append('n');  }  else  {  System.arraycopy(out,  0,  this.format,  1,  this.format.length);  }	  if(newRecord)    {    this.format.append('n');    }    else    {    System.arraycopy(out,    0,    this.format,    0,    this.format.length);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
498	[BUG]  [BUGGY]  this.format.setValue(out,  output);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(out,  output);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(out,  output);	  this.format.setValue(newRecord,    output);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
499	[BUG]  [BUGGY]  this.format.setValue(newRecord,  output,  out);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(newRecord,  output,  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(newRecord,  output,  out);	  this.format.setValue(newRecord,    output);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
500	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append('n');  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
501	[BUG]  [BUGGY]  safeGet(out,  newRecord))  {  out.append('n');  }  else  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  safeGet(out,  newRecord))  {  out.append('n');  }  else  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	safeGet(out,  newRecord))  {  out.append('n');  }  else  {  out.append('n');  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
502	[BUG]  [BUGGY]  safeGet(out,  newRecord)  {  out.append('n');  }  else  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  safeGet(out,  newRecord)  {  out.append('n');  }  else  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	safeGet(out,  newRecord)  {  out.append('n');  }  else  {  out.append('n');  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
503	[BUG]  [BUGGY]  safeGet(out,  newRecord))  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  safeGet(out,  newRecord))  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	safeGet(out,  newRecord))  {  out.append('n');  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
504	[BUG]  [BUGGY]  safeGet(out,  newRecord)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  safeGet(out,  newRecord)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	safeGet(out,  newRecord)  {  out.append('n');  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
505	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  if(newRecord)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  if(newRecord)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	safeMultiply(out,  newRecord)  {  out.append('n');  }  if(newRecord)  {  out.append('n');  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
506	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  this.format.append('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  safeMultiply(out,  newRecord)  {  this.format.append('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	safeMultiply(out,  newRecord)  {  this.format.append('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(newRecord)    {    this.format.append('n');    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
507	[BUG]  [BUGGY]  safeGet(out,  newRecord)  {  this.format.append('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  safeGet(out,  newRecord)  {  this.format.append('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	safeGet(out,  newRecord)  {  this.format.append('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(newRecord)    {    this.format.append('n');    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
508	[BUG]  [BUGGY]  safeGet(out,  newRecord))  {  this.format.append('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  safeGet(out,  newRecord))  {  this.format.append('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	safeGet(out,  newRecord))  {  this.format.append('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(newRecord)    {    this.format.append('n');    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
509	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  this.format.append('n');  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  safeMultiply(out,  newRecord)  {  this.format.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	safeMultiply(out,  newRecord)  {  this.format.append('n');  }	  if(newRecord)    {    this.format.append('n');    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
510	[BUG]  [BUGGY]  safeGet(out,  newRecord)  {  this.format.append('n');  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  safeGet(out,  newRecord)  {  this.format.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	safeGet(out,  newRecord)  {  this.format.append('n');  }	  if(newRecord)    {    this.format.append('n');    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
511	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  this.format.append('n');  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  safeMultiply(out,  newRecord)  {  this.format.append('n');  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	safeMultiply(out,  newRecord)  {  this.format.append('n');  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  if(newRecord)    {    this.format.append('n');    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
512	[BUG]  [BUGGY]  this.format.addRecorded(true,  false);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addRecorded(true,  false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addRecorded(true,  false);	  this.format.setRecorded(false,    false);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
513	[BUG]  [BUGGY]  this.format.setValue(newRecord,  out,  format);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(newRecord,  out,  format);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(newRecord,  out,  format);	  this.format.setValue(newRecord,    out);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
514	[BUG]  [BUGGY]  this.format.setValue(newRecord,  out,  newRecord);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(newRecord,  out,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(newRecord,  out,  newRecord);	  this.format.setValue(newRecord,    out);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
515	[BUG]  [BUGGY]  this.format.append('/',  out);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append('/',  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append('/',  out);	  this.format.append('/');    	non-compiled	[CE]  <identifier>  expected	41	None	replace
516	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append('/');  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append('/');  }  else  {  out.append( "n ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append('/');  }  else  {  out.append( "n ");  }	  this.format.append('/');    	non-compiled	[CE]  <identifier>  expected	41	None	replace
517	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append('/');  }  else  {  out.append( ";n ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append('/');  }  else  {  out.append( ";n ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append('/');  }  else  {  out.append( ";n ");  }	  this.format.append('/');    	non-compiled	[CE]  <identifier>  expected	41	None	replace
518	[BUG]  [BUGGY]  this.format  =  format  ==  null?  new  CSVFormat()  :  format.reset();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  new  CSVFormat()  :  format.reset();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  new  CSVFormat()  :  format.reset();	  this.format    =    format    ==    null?    new    CSVFormat()    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
519	[BUG]  [BUGGY]  this.format.append('n',  out  +  1);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append('n',  out  +  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append('n',  out  +  1);	  this.format.append('n',    out);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
520	[BUG]  [BUGGY]  this.format.setValue(out  +  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(out  +  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(out  +  1);	  this.format.setValue(newRecord    +    1);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
521	[BUG]  [BUGGY]  this.format.setValue(newRecord  +  1,  out);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(newRecord  +  1,  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(newRecord  +  1,  out);	  this.format.setValue(newRecord    +    1);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
522	[BUG]  [BUGGY]  this.format.append( "  <  / ").append('n');  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( "  <  / ").append('n');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( "  <  / ").append('n');	  this.format.append(   "    <    /   ");    	non-compiled	[CE]  <identifier>  expected	79	None	replace
523	[BUG]  [BUGGY]  this.format.append( "  <  / ").append('>');  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( "  <  / ").append('>');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( "  <  / ").append('>');	  this.format.append(   "    <    /   ");    	non-compiled	[CE]  <identifier>  expected	79	None	replace
524	[BUG]  [BUGGY]  this.format.append( ",  <  / ");  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( ",  <  / ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( ",  <  / ");	  this.format.append(   "    <    /   ");    	non-compiled	[CE]  <identifier>  expected	79	None	replace
525	[BUG]  [BUGGY]  this.format.append( ".  <  / ");  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( ".  <  / ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( ".  <  / ");	  this.format.append(   "    <    /   ");    	non-compiled	[CE]  <identifier>  expected	79	None	replace
526	[BUG]  [BUGGY]  this.format.addValue(newRecord,  out,  newRecord);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(newRecord,  out,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(newRecord,  out,  newRecord);	  this.format.addValue(newRecord,    out);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
527	[BUG]  [BUGGY]  this.format.addValues(out,  true);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValues(out,  true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValues(out,  true);	  this.format.setValues(out,    false);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
528	[BUG]  [BUGGY]  this.format  =  format!=  null?  Format.NULL  :  format.value();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  Format.NULL  :  format.value();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  Format.NULL  :  format.value();	  this.format    =    format!=    null?    Format.NULL    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
529	[BUG]  [BUGGY]  this.format  =  format.addValue(newRecord  +  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format.addValue(newRecord  +  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format.addValue(newRecord  +  1);	  this.format    =    format.addValue(newRecord);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
530	[BUG]  [BUGGY]  this.format  =  format.appendValue(newRecord);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format.appendValue(newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format.appendValue(newRecord);	  this.format    =    format.addValue(newRecord);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
531	[BUG]  [BUGGY]  this.format.append(out,  out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append(out,  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append(out,  out);	  this.format.append(out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
532	[BUG]  [BUGGY]  this.format.append(out,  newRecord).append('n');  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append(out,  newRecord).append('n');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append(out,  newRecord).append('n');	  this.format.append(out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
533	[BUG]  [BUGGY]  this.format.append(out,  record);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append(out,  record);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append(out,  record);	  this.format.append(out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
534	[BUG]  [BUGGY]  this.format  =  format.append(out,  out.toString());  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format.append(out,  out.toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format.append(out,  out.toString());	  this.format.append(out,    out.toString());    	non-compiled	[CE]  <identifier>  expected	106	None	replace
535	[BUG]  [BUGGY]  if(out!=  null)  {  this.format.append(out,  out.toString());  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(out!=  null)  {  this.format.append(out,  out.toString());  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(out!=  null)  {  this.format.append(out,  out.toString());  }  else  {  throw  new  IllegalStateException( " ");  }	  this.format.append(out,    out.toString());    	non-compiled	[CE]  <identifier>  expected	106	None	replace
536	[BUG]  [BUGGY]  (newRecord)  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  (newRecord)  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	(newRecord)  {  newRecord  =  true;  }	  if(newRecord)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
537	[BUG]  [BUGGY]  if(newRecord  >  0)  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord  >  0)  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord  >  0)  {  newRecord  =  true;  }	  if(newRecord)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
538	[BUG]  [BUGGY]  ||  newRecord)  {  thisRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  ||  newRecord)  {  thisRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	||  newRecord)  {  thisRecord  =  true;  }	  if(newRecord)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
539	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.get();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.get();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.get();	  this.format    =    format.get();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
540	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.get();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.get();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.get();	  this.format    =    format.get();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
541	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format.get();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format.get();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.NONE  :  format.get();	  this.format    =    format.get();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
542	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.NONE  :  format.get();  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.NONE  :  format.get();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.NONE  :  format.get();	  this.format    =    format.get();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
543	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT  :  format.get();  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT  :  format.get();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT  :  format.get();	  this.format    =    format.get();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
544	[BUG]  [BUGGY]  this.format.setRecorded(out);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecorded(out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecorded(out);	  this.format.setRecorded(newRecord);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
545	[BUG]  [BUGGY]  this.format.addRecorded(newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addRecorded(newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addRecorded(newRecord);	  this.format.setRecorded(newRecord);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
546	[BUG]  [BUGGY]  this.format  =  format;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format;  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format;	  this.format.setValue(cSVFormat);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
547	[BUG]  [BUGGY]  this.format.setValue(format);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(format);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(format);	  this.format.setValue(cSVFormat);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
548	[BUG]  [BUGGY]  this.format.setValue(new  Record  <  CSVFormat>());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(new  Record  <  CSVFormat>());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(new  Record  <  CSVFormat>());	  this.format.setValue(cSVFormat);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
549	[BUG]  [BUGGY]  this.format.append( "[none] ");  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( "[none] ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( "[none] ");	  this.format.append(   "none   ");    	non-compiled	[CE]  <identifier>  expected	105	None	replace
550	[BUG]  [BUGGY]  this.format.append( "none ",  out);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( "none ",  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( "none ",  out);	  this.format.append(   "none   ");    	non-compiled	[CE]  <identifier>  expected	105	None	replace
551	[BUG]  [BUGGY]  this.format.append( "no-record ");  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( "no-record ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( "no-record ");	  this.format.append(   "none   ");    	non-compiled	[CE]  <identifier>  expected	105	None	replace
552	[BUG]  [BUGGY]  this.format  =  format!=  null?  new  CSVFormat()  :  format.newInstance();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  new  CSVFormat()  :  format.newInstance();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  new  CSVFormat()  :  format.newInstance();	  this.format    =    format.newInstance();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
553	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.newInstance(this.record):  format.newInstance();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.newInstance(this.record):  format.newInstance();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.newInstance(this.record):  format.newInstance();	  this.format    =    format.newInstance();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
554	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.newInstance()  :  format;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.newInstance()  :  format;  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.newInstance()  :  format;	  this.format    =    format.newInstance();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
555	[BUG]  [BUGGY]  Iterator  <  CSV>  it  =  this.newRecord  =  true;  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  Iterator  <  CSV>  it  =  this.newRecord  =  true;  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	Iterator  <  CSV>  it  =  this.newRecord  =  true;	  if(newRecord)    {    this.newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
556	[BUG]  [BUGGY]  Iterator  <  CSV>  it  =  newRecords.iterator();  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  Iterator  <  CSV>  it  =  newRecords.iterator();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	Iterator  <  CSV>  it  =  newRecords.iterator();	  if(newRecord)    {    this.newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
557	[BUG]  [BUGGY]  this.format.addRecord(out);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addRecord(out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addRecord(out);	  this.format.addRecord(newRecord);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
558	[BUG]  [BUGGY]  this.format.append( "  <  null> ");  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( "  <  null> ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( "  <  null> ");	  this.format.append(   "null   ");    	non-compiled	[CE]  <identifier>  expected	34	None	replace
559	[BUG]  [BUGGY]  this.format.append( "null ",  out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( "null ",  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( "null ",  out);	  this.format.append(   "null   ");    	non-compiled	[CE]  <identifier>  expected	34	None	replace
560	[BUG]  [BUGGY]  safeGet(out,  newRecord))  {  out.append('n');  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  safeGet(out,  newRecord))  {  out.append('n');  }  else  {  out.append( "n ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	safeGet(out,  newRecord))  {  out.append('n');  }  else  {  out.append( "n ");  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
561	[BUG]  [BUGGY]  safeGet(out,  newRecord)  {  out.append('n');  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  safeGet(out,  newRecord)  {  out.append('n');  }  else  {  out.append( "n ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	safeGet(out,  newRecord)  {  out.append('n');  }  else  {  out.append( "n ");  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
562	[BUG]  [BUGGY]  this.format.append( ",None ");  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( ",None ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( ",None ");	  this.format.append(   "None   ");    	non-compiled	[CE]  <identifier>  expected	36	None	replace
563	[BUG]  [BUGGY]  this.format.append( "None ",  out);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( "None ",  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( "None ",  out);	  this.format.append(   "None   ");    	non-compiled	[CE]  <identifier>  expected	36	None	replace
564	[BUG]  [BUGGY]  this.format.append( "None, ");  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( "None, ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( "None, ");	  this.format.append(   "None   ");    	non-compiled	[CE]  <identifier>  expected	36	None	replace
565	[BUG]  [BUGGY]  this.format  =  format.addChangeListener(this);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format.addChangeListener(this);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format.addChangeListener(this);	  this.format.addChangeListener(this);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
566	[BUG]  [BUGGY]  this.format.addChangeListener(this,  out);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addChangeListener(this,  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addChangeListener(this,  out);	  this.format.addChangeListener(this);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
567	[BUG]  [BUGGY]  this.format.setRecorded(false,  'n');  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecorded(false,  'n');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecorded(false,  'n');	  this.format.setRecorded(true,   "   ");    	non-compiled	[CE]  <identifier>  expected	111	None	replace
568	[BUG]  [BUGGY]  this.format  =  format.setValues(out,  out);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format.setValues(out,  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format.setValues(out,  out);	  this.format.setValues(out,    out);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
569	[BUG]  [BUGGY]  this.format.setValues(out,  out.toCharArray());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(out,  out.toCharArray());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(out,  out.toCharArray());	  this.format.setValues(out,    out);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
570	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.reset();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.reset();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.reset();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_TYPE    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	121	None	replace
571	[BUG]  [BUGGY]  if(newRecord  >  0)  {  newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord  >  0)  {  newRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord  >  0)  {  newRecord  =  false;  }	  if(newRecord)    {    newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
572	[BUG]  [BUGGY]  if(newRecord!=  false)  {  newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord!=  false)  {  newRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord!=  false)  {  newRecord  =  false;  }	  if(newRecord)    {    newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
573	[BUG]  [BUGGY]  if(newRecord  <  false)  {  newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord  <  false)  {  newRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord  <  false)  {  newRecord  =  false;  }	  if(newRecord)    {    newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
574	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord  ==  false)  {  newRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord  ==  false)  {  newRecord  =  false;  }	  if(newRecord)    {    newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
575	[BUG]  [BUGGY]  this.format.addRecord(record,  out);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addRecord(record,  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addRecord(record,  out);	  this.format.addRecord(record);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
576	[BUG]  [BUGGY]  this.format  =  format.validate(out,  getRecord());  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format.validate(out,  getRecord());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format.validate(out,  getRecord());	  this.format    =    format.validate(out);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
577	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.EMPTY  :  format.validate();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.EMPTY  :  format.validate();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.EMPTY  :  format.validate();	  this.format    =    format    ==    null?    CSVFormat.EMPTY    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	118	None	replace
578	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format.value();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format.value();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format.value();	  this.format    =    format    ==    null?    CSVFormat.EMPTY    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	118	None	replace
579	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format.reset();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format.reset();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format.reset();	  this.format    =    format    ==    null?    CSVFormat.EMPTY    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	118	None	replace
580	[BUG]  [BUGGY]  Iterator  <  Appendable>  it  =  this.format.iterator();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  Iterator  <  Appendable>  it  =  this.format.iterator();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	Iterator  <  Appendable>  it  =  this.format.iterator();	  if(newRecord)    {    this.format.append('n');    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
581	[BUG]  [BUGGY]  Iterator  <  Appendable>  it  =  this.formats.iterator();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  Iterator  <  Appendable>  it  =  this.formats.iterator();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	Iterator  <  Appendable>  it  =  this.formats.iterator();	  if(newRecord)    {    this.format.append('n');    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
582	[BUG]  [BUGGY]  Iterator  <  Appendable>  it  =  newRecords.iterator();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  Iterator  <  Appendable>  it  =  newRecords.iterator();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	Iterator  <  Appendable>  it  =  newRecords.iterator();	  if(newRecord)    {    this.format.append('n');    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
583	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.NONE  :  format.clone();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.NONE  :  format.clone();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.NONE  :  format.clone();	  this.format    =    format!=    null?    CSVFormat.NONE    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	97	None	replace
584	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.NONE  :  format.append( "n ");  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.NONE  :  format.append( "n ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.NONE  :  format.append( "n ");	  this.format    =    format!=    null?    CSVFormat.NONE    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	97	None	replace
585	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(format,  out);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(format,  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(format,  out);	  this.newRecord    =    new    Record    <    CSVFormat>(format);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
586	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(record);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(record);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(record);	  this.newRecord    =    new    Record    <    CSVFormat>(format);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
587	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(out,  format);  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(out,  format);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(out,  format);	  this.newRecord    =    new    Record    <    CSVFormat>(format);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
588	[BUG]  [BUGGY]  this.format.setOutput(out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setOutput(out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setOutput(out);	  this.format.setInput(out);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
589	[BUG]  [BUGGY]  System.arraycopy(format,  0,  out,  0,  format.length);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  System.arraycopy(format,  0,  out,  0,  format.length);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	System.arraycopy(format,  0,  out,  0,  format.length);	  System.arraycopy(out,    0,    this.format,    0,    format.length);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
590	[BUG]  [BUGGY]  System.arraycopy(out,  0,  this.format,  1,  format.length);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  System.arraycopy(out,  0,  this.format,  1,  format.length);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	System.arraycopy(out,  0,  this.format,  1,  format.length);	  System.arraycopy(out,    0,    this.format,    0,    format.length);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
591	[BUG]  [BUGGY]  this.format.setRecord(out,  format);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecord(out,  format);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecord(out,  format);	  this.format.setValue(out,    format);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
592	[BUG]  [BUGGY]  this.newRecord  =  new  ArrayList  <  CSVFormat>(out);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  ArrayList  <  CSVFormat>(out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  ArrayList  <  CSVFormat>(out);	  this.newRecord    =    new    ArrayList    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
593	[BUG]  [BUGGY]  this.newRecord  =  new  ArrayList  <  CSVFormat>(8);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  ArrayList  <  CSVFormat>(8);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  ArrayList  <  CSVFormat>(8);	  this.newRecord    =    new    ArrayList    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
594	[BUG]  [BUGGY]  this.format.append(out,  false,  format);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append(out,  false,  format);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append(out,  false,  format);	  this.format.append(out,    false);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
595	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.UNKNOWN  :  format.append('n');  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.UNKNOWN  :  format.append('n');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.UNKNOWN  :  format.append('n');	  this.format    =    format!=    null?    CSVFormat.UNKNOWN    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	95	None	replace
596	[BUG]  [BUGGY]  this.format.addRecorded(false);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addRecorded(false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addRecorded(false);	  this.format.setRecorded(false);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
597	[BUG]  [BUGGY]  this.format.recorded(true);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.recorded(true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.recorded(true);	  this.format.setRecorded(false);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
598	[BUG]  [BUGGY]  this.format.append( "native  format:  {  0  }   ");  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( "native  format:  {  0  }   ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( "native  format:  {  0  }   ");	  this.format.append(   "native    format   ");    	non-compiled	[CE]  <identifier>  expected	37	None	replace
599	[BUG]  [BUGGY]  this.format.append( "  <  native  format> ");  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( "  <  native  format> ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( "  <  native  format> ");	  this.format.append(   "native    format   ");    	non-compiled	[CE]  <identifier>  expected	37	None	replace
600	[BUG]  [BUGGY]  this.format.append( "native  format. ");  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( "native  format. ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( "native  format. ");	  this.format.append(   "native    format   ");    	non-compiled	[CE]  <identifier>  expected	37	None	replace
601	[BUG]  [BUGGY]  this.format.append('#').append(out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append('#').append(out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append('#').append(out);	  this.format.append('#');    	non-compiled	[CE]  <identifier>  expected	78	None	replace
602	[BUG]  [BUGGY]  this.format.append('#'  +  format);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append('#'  +  format);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append('#'  +  format);	  this.format.append('#');    	non-compiled	[CE]  <identifier>  expected	78	None	replace
603	[BUG]  [BUGGY]  this.format.validate(out,  out.toCharArray());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.validate(out,  out.toCharArray());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.validate(out,  out.toCharArray());	  this.format.validate(out,    out);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
604	[BUG]  [BUGGY]  this.format.append(out,  format).append('n');  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append(out,  format).append('n');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append(out,  format).append('n');	  this.format.append(out,    format);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
605	[BUG]  [BUGGY]  this.format.append(out,  format).append( "n ");  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append(out,  format).append( "n ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append(out,  format).append( "n ");	  this.format.append(out,    format);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
606	[BUG]  [BUGGY]  this.format.append(out,  format).append('/');  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append(out,  format).append('/');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append(out,  format).append('/');	  this.format.append(out,    format);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
607	[BUG]  [BUGGY]  this.format.append(out,  format  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append(out,  format  +  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append(out,  format  +  1);	  this.format.append(out,    format);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
608	[BUG]  [BUGGY]  this.format.appendRecord(true);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.appendRecord(true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.appendRecord(true);	  this.format.addRecord(false);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
609	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(out);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  HashMap  <  CSVFormat>(out);	  this.newRecord    =    new    HashMap    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	116	None	replace
610	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(8);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(8);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  HashMap  <  CSVFormat>(8);	  this.newRecord    =    new    HashMap    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	116	None	replace
611	[BUG]  [BUGGY]  this.newRecord  =  new  Rectangle  <  CSV>();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  Rectangle  <  CSV>();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  Rectangle  <  CSV>();	  this.newRecord    =    new    Record    <    CSV>();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
612	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(2);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(2);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  Record  <  CSV>(2);	  this.newRecord    =    new    Record    <    CSV>();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
613	[BUG]  [BUGGY]  this.format.setValue(out,  record);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(out,  record);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(out,  record);	  this.format.setValue(out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
614	[BUG]  [BUGGY]  this.format.setValue(out,  out);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(out,  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(out,  out);	  this.format.setValue(out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
615	[BUG]  [BUGGY]  this.format.setRecorded(false, "true ",  true);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecorded(false, "true ",  true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecorded(false, "true ",  true);	  this.format.setRecorded(true,    true);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
616	[BUG]  [BUGGY]  this.format.setRecord(!newRecord  &&  newRecord!=  null);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecord(!newRecord  &&  newRecord!=  null);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecord(!newRecord  &&  newRecord!=  null);	  this.format.setRecord(!newRecord);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
617	[BUG]  [BUGGY]  Iterator  <  Appendable>  it  =  out.iterator();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  Iterator  <  Appendable>  it  =  out.iterator();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	Iterator  <  Appendable>  it  =  out.iterator();	  if(newRecord)    {    for(int    i    =    0;    i    <    out.size();    i++)    {    CSVFormat    format    =    new    CSVFormat(format);    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
618	[BUG]  [BUGGY]  Assertions.notNull(out,  newRecord);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  Assertions.notNull(out,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	Assertions.notNull(out,  newRecord);	  if(newRecord)    {    for(int    i    =    0;    i    <    out.size();    i++)    {    CSVFormat    format    =    new    CSVFormat(format);    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
619	[BUG]  [BUGGY]  Assertions.notEmpty(newRecord);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  Assertions.notEmpty(newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	Assertions.notEmpty(newRecord);	  if(newRecord)    {    for(int    i    =    0;    i    <    out.size();    i++)    {    CSVFormat    format    =    new    CSVFormat(format);    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
620	[BUG]  [BUGGY]  Assertions.notNull(out);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  Assertions.notNull(out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	Assertions.notNull(out);	  if(newRecord)    {    for(int    i    =    0;    i    <    out.size();    i++)    {    CSVFormat    format    =    new    CSVFormat(format);    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
621	[BUG]  [BUGGY]  Assertions.notEmpty(out);  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  Assertions.notEmpty(out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	Assertions.notEmpty(out);	  if(newRecord)    {    for(int    i    =    0;    i    <    out.size();    i++)    {    CSVFormat    format    =    new    CSVFormat(format);    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
622	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append('n');  }  else  {  System.arraycopy(out,  0,  this.format,  out.length);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append('n');  }  else  {  System.arraycopy(out,  0,  this.format,  out.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append('n');  }  else  {  System.arraycopy(out,  0,  this.format,  out.length);  }	  if(newRecord)    {    this.format.append('n');    }    else    {    System.arraycopy(out,    0,    this.format,    0,    out.length);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
623	[BUG]  [BUGGY]  if(newRecord)  {  System.arraycopy(out,  0,  this.format,  out.length);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  System.arraycopy(out,  0,  this.format,  out.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  System.arraycopy(out,  0,  this.format,  out.length);  }	  if(newRecord)    {    this.format.append('n');    }    else    {    System.arraycopy(out,    0,    this.format,    0,    out.length);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
624	[BUG]  [BUGGY]  this.format  =  format!=  null?  newRecord  :  format.value();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  newRecord  :  format.value();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  newRecord  :  format.value();	  this.format    =    format!=    null?    newRecord    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
625	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.toFormat();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.toFormat();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.toFormat();	  this.format    =    format.toFormat();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
626	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.UNKNOWN  :  format.toFormat();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.UNKNOWN  :  format.toFormat();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.UNKNOWN  :  format.toFormat();	  this.format    =    format.toFormat();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
627	[BUG]  [BUGGY]  this.format  =  format!=  null?  new  CSVFormat()  :  format.toFormat();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  new  CSVFormat()  :  format.toFormat();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  new  CSVFormat()  :  format.toFormat();	  this.format    =    format.toFormat();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
628	[BUG]  [BUGGY]  this.format  =  format  ==  null?  new  CSVFormat()  :  format.toFormat();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  new  CSVFormat()  :  format.toFormat();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  new  CSVFormat()  :  format.toFormat();	  this.format    =    format.toFormat();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
629	[BUG]  [BUGGY]  this.format  =  format  ==  null?  new  CSVFormat( "null "):  format.toFormat();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  new  CSVFormat( "null "):  format.toFormat();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  new  CSVFormat( "null "):  format.toFormat();	  this.format    =    format.toFormat();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
630	[BUG]  [BUGGY]  this.format  =  format!=  null?  new  CSVFormat( "null "):  format.toFormat();  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  new  CSVFormat( "null "):  format.toFormat();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  new  CSVFormat( "null "):  format.toFormat();	  this.format    =    format.toFormat();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
631	[BUG]  [BUGGY]  safeGet(out,  format))  {  out.append('n');  }  else  {  out.append(format);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  safeGet(out,  format))  {  out.append('n');  }  else  {  out.append(format);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	safeGet(out,  format))  {  out.append('n');  }  else  {  out.append(format);  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append(format);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
632	[BUG]  [BUGGY]  safeMultiply(out,  format)  {  out.append('n');  }  else  {  out.append(format);  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  safeMultiply(out,  format)  {  out.append('n');  }  else  {  out.append(format);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	safeMultiply(out,  format)  {  out.append('n');  }  else  {  out.append(format);  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append(format);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
633	[BUG]  [BUGGY]  safeGet(out,  format))  {  out.append('n');  }  else  if(newRecord)  {  out.append(format);  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  safeGet(out,  format))  {  out.append('n');  }  else  if(newRecord)  {  out.append(format);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	safeGet(out,  format))  {  out.append('n');  }  else  if(newRecord)  {  out.append(format);  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append(format);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
634	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append('N');  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append('N');  }  else  {  out.append( "n ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append('N');  }  else  {  out.append( "n ");  }	  this.format.append('N');    	non-compiled	[CE]  <identifier>  expected	76	None	replace
635	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append('N');  }  else  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append('N');  }  else  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append('N');  }  else  {  out.append('n');  }	  this.format.append('N');    	non-compiled	[CE]  <identifier>  expected	76	None	replace
636	[BUG]  [BUGGY]  this.format.append('N',  '/');  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append('N',  '/');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append('N',  '/');	  this.format.append('N');    	non-compiled	[CE]  <identifier>  expected	76	None	replace
637	[BUG]  [BUGGY]  this.format.setValue(new  Record(),  out);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(new  Record(),  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(new  Record(),  out);	  this.format.setValue(new    Record());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
638	[BUG]  [BUGGY]  this.format.setValue(new  RecordImpl());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(new  RecordImpl());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(new  RecordImpl());	  this.format.setValue(new    Record());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
639	[BUG]  [BUGGY]  this.format.addValue(out,  record);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(out,  record);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(out,  record);	  this.format.addValue(record);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
640	[BUG]  [BUGGY]  this.format  =  format.addValue(record);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format.addValue(record);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format.addValue(record);	  this.format.addValue(record);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
641	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT  :  format.validate();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT  :  format.validate();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT  :  format.validate();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	119	None	replace
642	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.reset();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.reset();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.reset();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	119	None	replace
643	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format.clone();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format.clone();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.NONE  :  format.clone();	  this.format    =    format    ==    null?    CSVFormat.NONE    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
644	[BUG]  [BUGGY]  this.format.setRecorded(false,  out);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecorded(false,  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecorded(false,  out);	  this.format.setRecorded(false,    newRecord);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
645	[BUG]  [BUGGY]  this.format.setRecorded(false,  newRecord  ==  null);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecorded(false,  newRecord  ==  null);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecorded(false,  newRecord  ==  null);	  this.format.setRecorded(false,    newRecord);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
646	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.NULL  :  format.validate();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.NULL  :  format.validate();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.NULL  :  format.validate();	  this.format    =    format    ==    null?    CSVFormat.NULL    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	120	None	replace
647	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NULL  :  format.append('n');  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NULL  :  format.append('n');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.NULL  :  format.append('n');	  this.format    =    format    ==    null?    CSVFormat.NULL    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	120	None	replace
648	[BUG]  [BUGGY]  this.format.setValue(newRecord,  format  +  1);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(newRecord,  format  +  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(newRecord,  format  +  1);	  this.format.setValue(newRecord,    format);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
649	[BUG]  [BUGGY]  this.format.setRecord(null,  true);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecord(null,  true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecord(null,  true);	  this.format.setRecord(false,    true);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
650	[BUG]  [BUGGY]  this.format.setRecord(true, "true ");  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecord(true, "true ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecord(true, "true ");	  this.format.setRecord(false,    true);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
651	[BUG]  [BUGGY]  this.format.addRecorded(false,  false);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addRecorded(false,  false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addRecorded(false,  false);	  this.format.setRecorded(true,    false);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
652	[BUG]  [BUGGY]  this.format.validate(out,  false,  out);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.validate(out,  false,  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.validate(out,  false,  out);	  this.format.validate(out,    false);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
653	[BUG]  [BUGGY]  this.format.addValue(this.in);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(this.in);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(this.in);	  this.format.addValue(this.newRecord);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
654	[BUG]  [BUGGY]  this.format.addValue(this.newRecord  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(this.newRecord  +  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(this.newRecord  +  1);	  this.format.addValue(this.newRecord);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
655	[BUG]  [BUGGY]  this.format.append('[').append(']');  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append('[').append(']');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append('[').append(']');	  this.format.append('[');    	non-compiled	[CE]  <identifier>  expected	77	None	replace
656	[BUG]  [BUGGY]  this.format.append('[').append( "]');  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append('[').append( "]');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append('[').append( "]');	  this.format.append('[');    	non-compiled	[CE]  <identifier>  expected	77	None	replace
657	[BUG]  [BUGGY]  this.format.append(']');  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append(']');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append(']');	  this.format.append('[');    	non-compiled	[CE]  <identifier>  expected	77	None	replace
658	[BUG]  [BUGGY]  this.format.add(out,  out);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.add(out,  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.add(out,  out);	  this.format.add(out);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
659	[BUG]  [BUGGY]  this.newRecord  =  new  RecordImpl();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  RecordImpl();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  RecordImpl();	  this.newRecord    =    new    Record();    	non-compiled	[CE]  <identifier>  expected	114	None	replace
660	[BUG]  [BUGGY]  this.newRecord  =  new  RecordWriter();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  RecordWriter();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  RecordWriter();	  this.newRecord    =    new    Record();    	non-compiled	[CE]  <identifier>  expected	114	None	replace
661	[BUG]  [BUGGY]  this.format.addValue(out,  output);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(out,  output);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(out,  output);	  this.format.addValue(newRecord,    output);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
662	[BUG]  [BUGGY]  this.format.addValue(newRecord,  output,  newRecord);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(newRecord,  output,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(newRecord,  output,  newRecord);	  this.format.addValue(newRecord,    output);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
663	[BUG]  [BUGGY]  this.format.addValue(out,  false);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(out,  false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(out,  false);	  this.format.setValues(out,    true);    	non-compiled	[CE]  <identifier>  expected	109	None	replace
664	[BUG]  [BUGGY]  this.format.validate(out,  format,  out);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.validate(out,  format,  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.validate(out,  format,  out);	  this.format.validate(out,    format);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
665	[BUG]  [BUGGY]  this.format.addValue(out,  0);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(out,  0);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(out,  0);	  this.format.addValue(newRecord,    0);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
666	[BUG]  [BUGGY]  this.format.addValue(newRecord,  -1);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(newRecord,  -1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(newRecord,  -1);	  this.format.addValue(newRecord,    0);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
667	[BUG]  [BUGGY]  this.format.addValue(this.out,  0);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(this.out,  0);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(this.out,  0);	  this.format.addValue(newRecord,    0);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
668	[BUG]  [BUGGY]  this.format.addRecord(true,  false);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addRecord(true,  false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addRecord(true,  false);	  this.format.setRecord(false,    false);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
669	[BUG]  [BUGGY]  this.format.append( "# ",  out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( "# ",  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( "# ",  out);	  this.format.append(   "#   ");    	non-compiled	[CE]  <identifier>  expected	35	None	replace
670	[BUG]  [BUGGY]  this.format  =  format!=  null?  new  CSVFormat()  :  format.reset();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  new  CSVFormat()  :  format.reset();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  new  CSVFormat()  :  format.reset();	  this.format    =    format!=    null?    new    CSVFormat()    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	98	None	replace
671	[BUG]  [BUGGY]  this.format  =  format!=  null?  new  CSVFormat()  :  format.toArray(new  String[]  {  }  );  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  new  CSVFormat()  :  format.toArray(new  String[]  {  }  );  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  new  CSVFormat()  :  format.toArray(new  String[]  {  }  );	  this.format    =    format!=    null?    new    CSVFormat()    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	98	None	replace
672	[BUG]  [BUGGY]  this.format.validate(out,  newRecord,  out);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.validate(out,  newRecord,  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.validate(out,  newRecord,  out);	  this.format.validate(out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
673	[BUG]  [BUGGY]  this.format.setRecord(this);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecord(this);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecord(this);	  this.format.setRecord(null);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
674	[BUG]  [BUGGY]  this.format  =  format.print(out);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format.print(out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format.print(out);	  this.format    =    format.validate(out);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
675	[BUG]  [BUGGY]  this.format  =  format.append('n');  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format.append('n');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format.append('n');	  this.format    =    format.validate(out);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
676	[BUG]  [BUGGY]  Assertions.notEmpty(out,  newRecord);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  Assertions.notEmpty(out,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	Assertions.notEmpty(out,  newRecord);	  if(newRecord)    {    for(int    i    =    0;    i    <    out.size();    i++)    {    CSVFormat    format    =    new    CSVFormat(format);    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
677	[BUG]  [BUGGY]  Assertions.notNull(out,   "newRecord ");  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  Assertions.notNull(out,   "newRecord ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	Assertions.notNull(out,   "newRecord ");	  if(newRecord)    {    for(int    i    =    0;    i    <    out.size();    i++)    {    CSVFormat    format    =    new    CSVFormat(format);    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
678	[BUG]  [BUGGY]  Assertions.notEmpty(out,   "newRecord ");  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  Assertions.notEmpty(out,   "newRecord ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	Assertions.notEmpty(out,   "newRecord ");	  if(newRecord)    {    for(int    i    =    0;    i    <    out.size();    i++)    {    CSVFormat    format    =    new    CSVFormat(format);    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
679	[BUG]  [BUGGY]  Iterator  <  CSVFormat>  it  =  format.iterator();  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  Iterator  <  CSVFormat>  it  =  format.iterator();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	Iterator  <  CSVFormat>  it  =  format.iterator();	  if(newRecord)    {    for(int    i    =    0;    i    <    out.size();    i++)    {    CSVFormat    format    =    new    CSVFormat(format);    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
680	[BUG]  [BUGGY]  this.newRecord  =  newRecord;  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  newRecord;  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  newRecord;	  if(newRecord)    {    for(int    i    =    0;    i    <    out.size();    i++)    {    CSVFormat    format    =    new    CSVFormat(format);    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
681	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(4);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(4);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  HashMap  <  CSVFormat>(4);	  this.newRecord    =    new    HashMap    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	116	None	replace
682	[BUG]  [BUGGY]  this.format  =  format!=  null?  Format.NULL  :  format.append('n');  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  Format.NULL  :  format.append('n');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  Format.NULL  :  format.append('n');	  this.format    =    format!=    null?    Format.NULL    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
683	[BUG]  [BUGGY]  this.format  =  format!=  null?  Format.NULL  :  format.append( "n ");  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  Format.NULL  :  format.append( "n ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  Format.NULL  :  format.append( "n ");	  this.format    =    format!=    null?    Format.NULL    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
684	[BUG]  [BUGGY]  this.format.setRecorded(false,  newRecord!=  null);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecorded(false,  newRecord!=  null);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecorded(false,  newRecord!=  null);	  this.format.setRecorded(false,    newRecord);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
685	[BUG]  [BUGGY]  this.format  =  format!=  null?  newRecord  :  format.append( "n ");  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  newRecord  :  format.append( "n ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  newRecord  :  format.append( "n ");	  this.format    =    format!=    null?    newRecord    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
686	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NULL  :  format.append( ", ");  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NULL  :  format.append( ", ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.NULL  :  format.append( ", ");	  this.format    =    format    ==    null?    CSVFormat.NULL    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	120	None	replace
687	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NULL  :  format.append('/');  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NULL  :  format.append('/');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.NULL  :  format.append('/');	  this.format    =    format    ==    null?    CSVFormat.NULL    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	120	None	replace
688	[BUG]  [BUGGY]  this.format.setRecorded(null,  true);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecorded(null,  true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecorded(null,  true);	  this.format.setRecorded(true,    true);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
689	[BUG]  [BUGGY]  this.format.append(out,  FormatUtils.indexOf(newRecord));  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append(out,  FormatUtils.indexOf(newRecord));  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append(out,  FormatUtils.indexOf(newRecord));	  this.format.append(out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
690	[BUG]  [BUGGY]  this.format.append(out,  newRecord).append('/');  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append(out,  newRecord).append('/');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append(out,  newRecord).append('/');	  this.format.append(out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
691	[BUG]  [BUGGY]  parent  ==  null  ||  newRecord)  {  out.append('n');  }  else  {  out.append(format);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  parent  ==  null  ||  newRecord)  {  out.append('n');  }  else  {  out.append(format);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	parent  ==  null  ||  newRecord)  {  out.append('n');  }  else  {  out.append(format);  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append(format);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
692	[BUG]  [BUGGY]  parent  ==  null  &&  newRecord)  {  out.append('n');  }  else  {  out.append(format);  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  parent  ==  null  &&  newRecord)  {  out.append('n');  }  else  {  out.append(format);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	parent  ==  null  &&  newRecord)  {  out.append('n');  }  else  {  out.append(format);  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append(format);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
693	[BUG]  [BUGGY]  parent  ==  null  &&  newRecord)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  parent  ==  null  &&  newRecord)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	parent  ==  null  &&  newRecord)  {  out.append('n');  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append(format);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
694	[BUG]  [BUGGY]  parent  ==  null  ||  newRecord)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  parent  ==  null  ||  newRecord)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	parent  ==  null  ||  newRecord)  {  out.append('n');  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append(format);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
695	[BUG]  [BUGGY]  parent  ==  null  &&  newRecord  <  =  parent.getType())  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  parent  ==  null  &&  newRecord  <  =  parent.getType())  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	parent  ==  null  &&  newRecord  <  =  parent.getType())  {  out.append('n');  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append(format);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
696	[BUG]  [BUGGY]  this.format.setText(out.toString());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setText(out.toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setText(out.toString());	  this.format.setText(out);    	non-compiled	[CE]  <identifier>  expected	103	None	replace
697	[BUG]  [BUGGY]  this.format.setPath(out);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setPath(out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setPath(out);	  this.format.setText(out);    	non-compiled	[CE]  <identifier>  expected	103	None	replace
698	[BUG]  [BUGGY]  this.format.setLabel(out);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setLabel(out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setLabel(out);	  this.format.setText(out);    	non-compiled	[CE]  <identifier>  expected	103	None	replace
699	[BUG]  [BUGGY]  safeMultiply(out,  format))  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  safeMultiply(out,  format))  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	safeMultiply(out,  format))  {  out.append('n');  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
700	[BUG]  [BUGGY]  safeMultiply(out,  format)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  safeMultiply(out,  format)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	safeMultiply(out,  format)  {  out.append('n');  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
701	[BUG]  [BUGGY]  out.append(newRecord).append('n');  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  out.append(newRecord).append('n');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	out.append(newRecord).append('n');	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
702	[BUG]  [BUGGY]  this.format.addValues(record);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValues(record);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValues(record);	  this.format.addValues(newRecord);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
703	[BUG]  [BUGGY]  this.format.setText(this.newRecord);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setText(this.newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setText(this.newRecord);	  this.format.setValue(this.newRecord);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
704	[BUG]  [BUGGY]  this.format  =  format  ==  null?  new  CSVFormat()  :  format.append('n');  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  new  CSVFormat()  :  format.append('n');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  new  CSVFormat()  :  format.append('n');	  this.format    =    format    ==    null?    new    CSVFormat()    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
705	[BUG]  [BUGGY]  this.format  =  format  ==  null?  new  CSVFormat()  :  format.append( ", ");  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  new  CSVFormat()  :  format.append( ", ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  new  CSVFormat()  :  format.append( ", ");	  this.format    =    format    ==    null?    new    CSVFormat()    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
706	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(format);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(format);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  Record  <  CSV>(format);	  this.newRecord    =    new    Record    <    CSV>();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
707	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(4);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(4);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  Record  <  CSV>(4);	  this.newRecord    =    new    Record    <    CSV>();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
708	[BUG]  [BUGGY]  this.format.setRecord(newRecord,  format);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecord(newRecord,  format);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecord(newRecord,  format);	  this.format.setRecord(newRecord,    out);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
709	[BUG]  [BUGGY]  this.format.append( "Native  format: ");  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( "Native  format: ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( "Native  format: ");	  this.format.append(   "native    format   ");    	non-compiled	[CE]  <identifier>  expected	37	None	replace
710	[BUG]  [BUGGY]  this.format.setRecord(newRecord,  false);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecord(newRecord,  false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecord(newRecord,  false);	  this.format.setRecord(true,    false);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
711	[BUG]  [BUGGY]  this.format.setValues(out,  false,  format);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(out,  false,  format);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(out,  false,  format);	  this.format.setValues(out,    false);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
712	[BUG]  [BUGGY]  this.format.setValues(out,  false,  out);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(out,  false,  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(out,  false,  out);	  this.format.setValues(out,    false);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
713	[BUG]  [BUGGY]  this.format.append( "  <   ").append(out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( "  <   ").append(out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( "  <   ").append(out);	  this.format.append(   "    <       ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
714	[BUG]  [BUGGY]  this.format.append( "  <   ").append('n');  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( "  <   ").append('n');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( "  <   ").append('n');	  this.format.append(   "    <       ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
715	[BUG]  [BUGGY]  this.format.append( "  <   ").append(newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( "  <   ").append(newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( "  <   ").append(newRecord);	  this.format.append(   "    <       ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
716	[BUG]  [BUGGY]  this.format.validate(out,  out,  newRecord);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.validate(out,  out,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.validate(out,  out,  newRecord);	  this.format.validate(out,    out);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
717	[BUG]  [BUGGY]  this.format.validate(out,  FormatUtils.EMPTY);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.validate(out,  FormatUtils.EMPTY);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.validate(out,  FormatUtils.EMPTY);	  this.format.validate(out,    out);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
718	[BUG]  [BUGGY]  this.format  =  format!=  null?  format.get()  :  null;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  format.get()  :  null;  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  format.get()  :  null;	  this.format    =    format.get();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
719	[BUG]  [BUGGY]  this.format  =  format.toArray(new  String[cSVFormat.size()  ]);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format.toArray(new  String[cSVFormat.size()  ]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format.toArray(new  String[cSVFormat.size()  ]);	  this.format    =    format.get();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
720	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_NAME  :  format.append( "n ");  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_NAME  :  format.append( "n ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT_NAME  :  format.append( "n ");	  this.format    =    format!=    null?    CSVFormat.DEFAULT_NAME    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	101	None	replace
721	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_NAME  :  format.append('n');  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_NAME  :  format.append('n');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT_NAME  :  format.append('n');	  this.format    =    format!=    null?    CSVFormat.DEFAULT_NAME    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	101	None	replace
722	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_NAME  :  format.append( ", ");  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_NAME  :  format.append( ", ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT_NAME  :  format.append( ", ");	  this.format    =    format!=    null?    CSVFormat.DEFAULT_NAME    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	101	None	replace
723	[BUG]  [BUGGY]  if(newRecord)  {  this.format.append('n',  out);  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord)  {  this.format.append('n',  out);  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord)  {  this.format.append('n',  out);  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }	  if(newRecord)    {    this.format.append('n');    }    else    {    System.arraycopy(out,    0,    this.format,    0,    out.length);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
724	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(this);	  this.newRecord    =    new    Record    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
725	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format.append( ", ");  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format.append( ", ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format.append( ", ");	  this.format    =    format    ==    null?    CSVFormat.EMPTY    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	118	None	replace
726	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format.append('n');  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format.append('n');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format.append('n');	  this.format    =    format    ==    null?    CSVFormat.EMPTY    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	118	None	replace
727	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format.append('/');  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format.append('/');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format.append('/');	  this.format    =    format    ==    null?    CSVFormat.EMPTY    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	118	None	replace
728	[BUG]  [BUGGY]  this.format.setRecorded(newRecord!=  0);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecorded(newRecord!=  0);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecorded(newRecord!=  0);	  this.format.setRecorded(newRecord);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
729	[BUG]  [BUGGY]  this.format.addValue(this);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(this);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(this);	  this.format.addChangeListener(this);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
730	[BUG]  [BUGGY]  this.format.setValues(out,  format.toString());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(out,  format.toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(out,  format.toString());	  this.format.setValues(out,    format);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
731	[BUG]  [BUGGY]  this.format.append(out,  false,  out);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append(out,  false,  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append(out,  false,  out);	  this.format.append(out,    false);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
732	[BUG]  [BUGGY]  this.format.append(in,  true);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append(in,  true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append(in,  true);	  this.format.append(out,    false);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
733	[BUG]  [BUGGY]  this.format.setValue(value);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(value);	  this.format.setValue(cSVFormat);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
734	[BUG]  [BUGGY]  this.format.setValues(newRecord,  out,  format);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(newRecord,  out,  format);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(newRecord,  out,  format);	  this.format.setValues(newRecord,    out);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
735	[BUG]  [BUGGY]  this.format.setValues(newRecord,  out,  newRecord);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(newRecord,  out,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(newRecord,  out,  newRecord);	  this.format.setValues(newRecord,    out);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
736	[BUG]  [BUGGY]  this.format  =  format  ==  null?  new  Instance()  :  format.newInstance();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  new  Instance()  :  format.newInstance();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  new  Instance()  :  format.newInstance();	  this.format    =    format.newInstance();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
737	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.newInstance()  :  format;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.newInstance()  :  format;  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.newInstance()  :  format;	  this.format    =    format.newInstance();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
738	[BUG]  [BUGGY]  if(newRecord  <  =  true)  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  if(newRecord  <  =  true)  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	if(newRecord  <  =  true)  {  newRecord  =  true;  }	  if(newRecord)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
739	[BUG]  [BUGGY]  this.format  =  format!=  null?  new  CSVFormat()  :  format.append( "n ");  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  new  CSVFormat()  :  format.append( "n ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  new  CSVFormat()  :  format.append( "n ");	  this.format    =    format!=    null?    new    CSVFormat()    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	98	None	replace
740	[BUG]  [BUGGY]  this.format  =  format!=  null?  new  CSVFormat()  :  format.clone();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  new  CSVFormat()  :  format.clone();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  new  CSVFormat()  :  format.clone();	  this.format    =    format!=    null?    new    CSVFormat()    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	98	None	replace
741	[BUG]  [BUGGY]  this.format  =  format!=  null?  new  CSVFormat()  :  format.append('n');  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  new  CSVFormat()  :  format.append('n');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  new  CSVFormat()  :  format.append('n');	  this.format    =    format!=    null?    new    CSVFormat()    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	98	None	replace
742	[BUG]  [BUGGY]  <  T>  newRecord)  {  this.format.append('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  <  T>  newRecord)  {  this.format.append('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	<  T>  newRecord)  {  this.format.append('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(newRecord)    {    this.format.append('n');    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
743	[BUG]  [BUGGY]  <  V>  newRecord)  {  this.format.append('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  <  V>  newRecord)  {  this.format.append('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	<  V>  newRecord)  {  this.format.append('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(newRecord)    {    this.format.append('n');    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
744	[BUG]  [BUGGY]  <  T>  newRecord)  {  this.format.append('n');  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  <  T>  newRecord)  {  this.format.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	<  T>  newRecord)  {  this.format.append('n');  }	  if(newRecord)    {    this.format.append('n');    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
745	[BUG]  [BUGGY]  }  else  if(newRecord)  {  this.format.append('n');  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  }  else  if(newRecord)  {  this.format.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	}  else  if(newRecord)  {  this.format.append('n');  }	  if(newRecord)    {    this.format.append('n');    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
746	[BUG]  [BUGGY]  }  else  if(newRecord)  {  this.format.append('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  }  else  if(newRecord)  {  this.format.append('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	}  else  if(newRecord)  {  this.format.append('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(newRecord)    {    this.format.append('n');    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
747	[BUG]  [BUGGY]  <  V>  newRecord)  {  this.format.append('n');  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  <  V>  newRecord)  {  this.format.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	<  V>  newRecord)  {  this.format.append('n');  }	  if(newRecord)    {    this.format.append('n');    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
748	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_TYPE  :  format.append( "n ");  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_TYPE  :  format.append( "n ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT_TYPE  :  format.append( "n ");	  this.format    =    format!=    null?    CSVFormat.DEFAULT_TYPE    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	100	None	replace
749	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_TYPE  :  format.append('n');  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_TYPE  :  format.append('n');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT_TYPE  :  format.append('n');	  this.format    =    format!=    null?    CSVFormat.DEFAULT_TYPE    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	100	None	replace
750	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_TYPE  :  format.append( "  <  unknown> ");  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_TYPE  :  format.append( "  <  unknown> ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT_TYPE  :  format.append( "  <  unknown> ");	  this.format    =    format!=    null?    CSVFormat.DEFAULT_TYPE    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	100	None	replace
751	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format.append( ", ");  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format.append( ", ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.NONE  :  format.append( ", ");	  this.format    =    format    ==    null?    CSVFormat.NONE    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
752	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format.cloneTree();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format.cloneTree();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.NONE  :  format.cloneTree();	  this.format    =    format    ==    null?    CSVFormat.NONE    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
753	[BUG]  [BUGGY]  Iterator  <  CSV>  it  =  this.format.iterator();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  Iterator  <  CSV>  it  =  this.format.iterator();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	Iterator  <  CSV>  it  =  this.format.iterator();	  if(newRecord)    {    this.format.append('n');    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
754	[BUG]  [BUGGY]  This.format  =  this.format.append('n');  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  This.format  =  this.format.append('n');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	This.format  =  this.format.append('n');	  if(newRecord)    {    this.format.append('n');    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
755	[BUG]  [BUGGY]  this.format.append('n',  out.toString());  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append('n',  out.toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append('n',  out.toString());	  this.format.append(out,    out.toString());    	non-compiled	[CE]  <identifier>  expected	106	None	replace
756	[BUG]  [BUGGY]  this.format.append(out,  FormatUtils.toString(out));  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append(out,  FormatUtils.toString(out));  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append(out,  FormatUtils.toString(out));	  this.format.append(out,    out.toString());    	non-compiled	[CE]  <identifier>  expected	106	None	replace
757	[BUG]  [BUGGY]  this.format.append(in,  format.toString());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append(in,  format.toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append(in,  format.toString());	  this.format.append(out,    out.toString());    	non-compiled	[CE]  <identifier>  expected	106	None	replace
758	[BUG]  [BUGGY]  this.format.append(out,  FormatUtils.toFormatName(out));  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append(out,  FormatUtils.toFormatName(out));  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append(out,  FormatUtils.toFormatName(out));	  this.format.append(out,    out.toString());    	non-compiled	[CE]  <identifier>  expected	106	None	replace
759	[BUG]  [BUGGY]  this.format.append('#').append(this);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append('#').append(this);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append('#').append(this);	  this.format.append('#');    	non-compiled	[CE]  <identifier>  expected	78	None	replace
760	[BUG]  [BUGGY]  this.format.validate(out,  format,  out.toString());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.validate(out,  format,  out.toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.validate(out,  format,  out.toString());	  this.format.validate(out,    format);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
761	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.NONE  :  format.cloneTree();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.NONE  :  format.cloneTree();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.NONE  :  format.cloneTree();	  this.format    =    format!=    null?    CSVFormat.NONE    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	97	None	replace
762	[BUG]  [BUGGY]  this.format.addValues(newRecord,  true);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValues(newRecord,  true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValues(newRecord,  true);	  this.format.setValues(newRecord,    true);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
763	[BUG]  [BUGGY]  ||  newRecord)  {  this.newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  ||  newRecord)  {  this.newRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	||  newRecord)  {  this.newRecord  =  false;  }	  if(newRecord)    {    this.newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
764	[BUG]  [BUGGY]  this.format.addValue(record,  0);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(record,  0);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(record,  0);	  this.format.addValue(newRecord,    0);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
765	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord  :  format.append('n');  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  newRecord  :  format.append('n');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  newRecord  :  format.append('n');	  this.format    =    format    ==    null?    newRecord    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
766	[BUG]  [BUGGY]  this.format  =  format.append('  ');  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format.append('  ');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format.append('  ');	  this.format.append('    ');    	non-compiled	[CE]  <identifier>  expected	39	None	replace
767	[BUG]  [BUGGY]  this.format.append( "  ' ");  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( "  ' ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( "  ' ");	  this.format.append('    ');    	non-compiled	[CE]  <identifier>  expected	39	None	replace
768	[BUG]  [BUGGY]  this.format.setRecorded(false,   "# ");  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecorded(false,   "# ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecorded(false,   "# ");	  this.format.setRecorded(true,   "   ");    	non-compiled	[CE]  <identifier>  expected	111	None	replace
769	[BUG]  [BUGGY]  this.format.append( "  <  unknown> ");  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( "  <  unknown> ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( "  <  unknown> ");	  this.format.append(   "none   ");    	non-compiled	[CE]  <identifier>  expected	105	None	replace
770	[BUG]  [BUGGY]  this.format.append( "[no] ");  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( "[no] ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( "[no] ");	  this.format.append(   "none   ");    	non-compiled	[CE]  <identifier>  expected	105	None	replace
771	[BUG]  [BUGGY]  this.format.setRecord(recorded);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecord(recorded);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecord(recorded);	  this.format.setRecord(out);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
772	[BUG]  [BUGGY]  this.format.append( "  <  / ").append(out);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( "  <  / ").append(out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( "  <  / ").append(out);	  this.format.append(   "    <    /   ");    	non-compiled	[CE]  <identifier>  expected	79	None	replace
773	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.append('n');  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.append('n');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.append('n');	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	119	None	replace
774	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.append( ", ");  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.append( ", ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.append( ", ");	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	119	None	replace
775	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.append( ", ");  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.append( ", ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.append( ", ");	  this.format    =    format    ==    null?    CSVFormat.UNKNOWN    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	96	None	replace
776	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.append( "  <  unknown> ");  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.append( "  <  unknown> ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.append( "  <  unknown> ");	  this.format    =    format    ==    null?    CSVFormat.UNKNOWN    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	96	None	replace
777	[BUG]  [BUGGY]  this.format.setRecorded(false, " ",  newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecorded(false, " ",  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecorded(false, " ",  newRecord);	  this.format.setRecorded(true,    newRecord);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
778	[BUG]  [BUGGY]  this.format.setRecorded(true,  newRecord!=  null);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecorded(true,  newRecord!=  null);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecorded(true,  newRecord!=  null);	  this.format.setRecorded(true,    newRecord);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
779	[BUG]  [BUGGY]  this.format.setRecorded(false,  newRecord, " ");  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setRecorded(false,  newRecord, " ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setRecorded(false,  newRecord, " ");	  this.format.setRecorded(true,    newRecord);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
780	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.append( ", ");  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.append( ", ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.append( ", ");	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_TYPE    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	121	None	replace
781	[BUG]  [BUGGY]  this.format.append( ";n ");  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( ";n ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( ";n ");	  this.format.setLength(0);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
782	[BUG]  [BUGGY]  this.format.append( "  {  null  }   ");  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( "  {  null  }   ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( "  {  null  }   ");	  this.format.append(   "null   ");    	non-compiled	[CE]  <identifier>  expected	34	None	replace
783	[BUG]  [BUGGY]  System.arraycopy(format,  0,  this.format,  0,  out.length);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  System.arraycopy(format,  0,  this.format,  0,  out.length);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	System.arraycopy(format,  0,  this.format,  0,  out.length);	  System.arraycopy(out,    0,    this.format,    0,    format.length);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
784	[BUG]  [BUGGY]  System.arraycopy(format,  0,  this.format,  0,  format.length);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  System.arraycopy(format,  0,  this.format,  0,  format.length);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	System.arraycopy(format,  0,  this.format,  0,  format.length);	  System.arraycopy(out,    0,    this.format,    0,    format.length);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
785	[BUG]  [BUGGY]  System.arraycopy(cSVFormat,  0,  this.format,  0,  format.length);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  System.arraycopy(cSVFormat,  0,  this.format,  0,  format.length);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	System.arraycopy(cSVFormat,  0,  this.format,  0,  format.length);	  System.arraycopy(out,    0,    this.format,    0,    format.length);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
786	[BUG]  [BUGGY]  this.format.setValues(new  HashMap  <  String,Object>());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(new  HashMap  <  String,Object>());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(new  HashMap  <  String,Object>());	  this.format.setValues(values);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
787	[BUG]  [BUGGY]  this.format.setValues(new  HashSet  <  CSV>());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValues(new  HashSet  <  CSV>());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValues(new  HashSet  <  CSV>());	  this.format.setValues(values);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
788	[BUG]  [BUGGY]  this.format.setValue(newRecord,  output,  newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(newRecord,  output,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(newRecord,  output,  newRecord);	  this.format.setValue(newRecord,    output);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
789	[BUG]  [BUGGY]  this.format.addValue(value);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(value);	  this.format.addValue(record);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
790	[BUG]  [BUGGY]  this.format.append( "[None] ");  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( "[None] ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( "[None] ");	  this.format.append(   "None   ");    	non-compiled	[CE]  <identifier>  expected	36	None	replace
791	[BUG]  [BUGGY]  this.format.setValue(out,  format.toString());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setValue(out,  format.toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setValue(out,  format.toString());	  this.format.setValue(out,    format);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
792	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.UNKNOWN  :  format.append( ", ");  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.UNKNOWN  :  format.append( ", ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format!=  null?  CSVFormat.UNKNOWN  :  format.append( ", ");	  this.format    =    format!=    null?    CSVFormat.UNKNOWN    :    format.validate();    	non-compiled	[CE]  <identifier>  expected	95	None	replace
793	[BUG]  [BUGGY]  this.format.addValue(newRecord,  format,  newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(newRecord,  format,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(newRecord,  format,  newRecord);	  this.format.addValue(newRecord,    format);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
794	[BUG]  [BUGGY]  this.format.addValue(newRecord,  true);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.addValue(newRecord,  true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.addValue(newRecord,  true);	  this.format.setValue(newRecord,    true);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
795	[BUG]  [BUGGY]  [Delete]  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  [Delete]  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	[Delete]	  if(newRecord)    {    out.append('n');    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
796	[BUG]  [BUGGY]  out.append('[').append(newRecord)  {  out.append(']');  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  out.append('[').append(newRecord)  {  out.append(']');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	out.append('[').append(newRecord)  {  out.append(']');  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
797	[BUG]  [BUGGY]  out.append('[').append(newRecord).append(']');  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  out.append('[').append(newRecord).append(']');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	out.append('[').append(newRecord).append(']');	  if(newRecord)    {    out.append('n');    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
798	[BUG]  [BUGGY]  out.append('[').append(newRecord).append( "] ");  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  out.append('[').append(newRecord).append( "] ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	out.append('[').append(newRecord).append( "] ");	  if(newRecord)    {    out.append('n');    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
799	[BUG]  [BUGGY]  out.append('[').append(newRecord)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  out.append('[').append(newRecord)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	out.append('[').append(newRecord)  {  out.append('n');  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
800	[BUG]  [BUGGY]  out.append( "n ").append(newRecord)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  out.append( "n ").append(newRecord)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	out.append( "n ").append(newRecord)  {  out.append('n');  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
801	[BUG]  [BUGGY]  this.format.append( ", ");  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append( ", ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append( ", ");	  this.format.append(   "[   ");    	non-compiled	[CE]  <identifier>  expected	104	None	replace
802	[BUG]  [BUGGY]  this.format.setInputName(out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setInputName(out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setInputName(out);	  this.format.setInput(out);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
803	[BUG]  [BUGGY]  this.format.setName(out);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.setName(out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.setName(out);	  this.format.setInput(out);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
804	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format.toFormat();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format.toFormat();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.NONE  :  format.toFormat();	  this.format    =    format.toFormat();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
805	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.toFormat();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.toFormat();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.toFormat();	  this.format    =    format.toFormat();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
806	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NULL  :  format.toFormat();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NULL  :  format.toFormat();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format  ==  null?  CSVFormat.NULL  :  format.toFormat();	  this.format    =    format.toFormat();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
807	[BUG]  [BUGGY]  this.format.append('[',  ']');  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append('[',  ']');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append('[',  ']');	  this.format.append('[');    	non-compiled	[CE]  <identifier>  expected	77	None	replace
808	[BUG]  [BUGGY]  this.format.append('[').append(this);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append('[').append(this);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append('[').append(this);	  this.format.append('[');    	non-compiled	[CE]  <identifier>  expected	77	None	replace
809	[BUG]  [BUGGY]  this.format.append('['  +  format.toString());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append('['  +  format.toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append('['  +  format.toString());	  this.format.append('[');    	non-compiled	[CE]  <identifier>  expected	77	None	replace
810	[BUG]  [BUGGY]  this.format.append('N',  'n');  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append('N',  'n');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append('N',  'n');	  this.format.append('N');    	non-compiled	[CE]  <identifier>  expected	76	None	replace
811	[BUG]  [BUGGY]  this.format.append('N',  '-');  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append('N',  '-');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append('N',  '-');	  this.format.append('N');    	non-compiled	[CE]  <identifier>  expected	76	None	replace
812	[BUG]  [BUGGY]  this.format  =  format.append('N');  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format.append('N');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format.append('N');	  this.format.append('N');    	non-compiled	[CE]  <identifier>  expected	76	None	replace
813	[BUG]  [BUGGY]  this.format.validate(out,  newRecord,  offset);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.validate(out,  newRecord,  offset);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.validate(out,  newRecord,  offset);	  this.format.validate(out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
814	[BUG]  [BUGGY]  this.format  =  format.append(out);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format  =  format.append(out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format  =  format.append(out);	  this.format.append(out,    format);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
815	[BUG]  [BUGGY]  this.record  =  new  ArrayList  <  CSVFormat>();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.record  =  new  ArrayList  <  CSVFormat>();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.record  =  new  ArrayList  <  CSVFormat>();	  this.format.setRecord(this.record);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
816	[BUG]  [BUGGY]  this.record  =  new  CSVFormat();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.record  =  new  CSVFormat();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.record  =  new  CSVFormat();	  this.format.setRecord(this.record);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
817	[BUG]  [BUGGY]  this.record  =  format;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.record  =  format;  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.record  =  format;	  this.format.setRecord(this.record);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
818	[BUG]  [BUGGY]  this.format.append('/',  '/');  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append('/',  '/');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append('/',  '/');	  this.format.append('/');    	non-compiled	[CE]  <identifier>  expected	41	None	replace
819	[BUG]  [BUGGY]  this.format.append('/').append(this);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append('/').append(this);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append('/').append(this);	  this.format.append('/');    	non-compiled	[CE]  <identifier>  expected	41	None	replace
820	[BUG]  [BUGGY]  this.format.append(':');  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;      [BUGGY]  this.format.append(':');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	64	64	1	replace	this.format.append(':');	  this.format.append('/');    	non-compiled	[CE]  <identifier>  expected	41	None	replace
