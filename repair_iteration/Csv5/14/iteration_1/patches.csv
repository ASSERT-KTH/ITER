bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.print(null,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  this.print(null,  nullString,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(null,  nullString,  0,  strValue.length());	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
2	[BUG]  [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0,  strValue  =  strValue.length();  i  <  strValue.length();  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0,  strValue  =  strValue.length();  i  <  strValue.length();  ++i)  {  out.append('n');  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  for(int  i  =  0,  strValue  =  strValue.length();  i  <  strValue.length();  ++i)  {  out.append('n');  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
3	[BUG]  [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
4	[BUG]  [BUGGY]  this.print(nullString,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  this.print(nullString,  nullString,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(nullString,  nullString,  0,  strValue.length());	  this.print(strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
5	[BUG]  [BUGGY]  this.print(value,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  this.print(value,  strValue,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(value,  strValue,  0,  strValue.length());	  this.print(strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
6	[BUG]  [BUGGY]  this.print(nullString,  nullValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  this.print(nullString,  nullValue,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(nullString,  nullValue,  0,  strValue.length());	  this.print(strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
7	[BUG]  [BUGGY]  this.print(str,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  this.print(str,  nullString,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(str,  nullString,  0,  strValue.length());	  this.print(strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
8	[BUG]  [BUGGY]  this.print(null,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  this.print(null,  strValue,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(null,  strValue,  0,  strValue.length());	  this.print(strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
9	[BUG]  [BUGGY]  out.write(strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  out.write(strValue,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.write(strValue,  0,  strValue.length());	  out.write(strValue);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
10	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.write(strValue);  }  else  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  if(strValue!=  null)  {  out.write(strValue);  }  else  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.write(strValue);  }  else  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }	  out.write(strValue);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
11	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.write(strValue);  }  else  {  this.print(nullString,  strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  if(strValue!=  null)  {  out.write(strValue);  }  else  {  this.print(nullString,  strValue,  0,  strValue.length());  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.write(strValue);  }  else  {  this.print(nullString,  strValue,  0,  strValue.length());  }	  out.write(strValue);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
12	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.write(strValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  if(strValue!=  null)  {  out.write(strValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.write(strValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  out.write(strValue);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
13	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.write(strValue);  }  else  {  this.print(null,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  if(strValue!=  null)  {  out.write(strValue);  }  else  {  this.print(null,  nullString,  0,  strValue.length());  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.write(strValue);  }  else  {  this.print(null,  nullString,  0,  strValue.length());  }	  out.write(strValue);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
14	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.write(strValue);  }  else  {  this.print(nullString,  null,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  if(strValue!=  null)  {  out.write(strValue);  }  else  {  this.print(nullString,  null,  0,  strValue.length());  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.write(strValue);  }  else  {  this.print(nullString,  null,  0,  strValue.length());  }	  out.write(strValue);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
15	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(value,  0,  strValue.length()));  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  this.print(value,  0,  strValue.length()));  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(value,  0,  strValue.length()));	  System.arraycopy(strValue,    0,    this.print(strValue,    0,    strValue.length()));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
16	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()  -  1));  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()  -  1));  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()  -  1));	  System.arraycopy(strValue,    0,    this.print(strValue,    0,    strValue.length()));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
17	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(nullString,  0,  strValue.length()));  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  this.print(nullString,  0,  strValue.length()));  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(nullString,  0,  strValue.length()));	  System.arraycopy(strValue,    0,    this.print(strValue,    0,    strValue.length()));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
18	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()  +  1));  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()  +  1));  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()  +  1));	  System.arraycopy(strValue,    0,    this.print(strValue,    0,    strValue.length()));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
19	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()  -  2));  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()  -  2));  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()  -  2));	  System.arraycopy(strValue,    0,    this.print(strValue,    0,    strValue.length()));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
20	[BUG]  [BUGGY]  System.arraycopy(value,  0,  this.print(strValue,  0,  strValue.length()));  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(value,  0,  this.print(strValue,  0,  strValue.length()));  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  this.print(strValue,  0,  strValue.length()));	  System.arraycopy(strValue,    0,    this.print(strValue,    0,    strValue.length()));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
21	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  strValue.length()  -  1);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.strValue,  strValue.length()  -  1);	  System.arraycopy(strValue,    0,    this.strValue,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
22	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  this.strValue.length());  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  this.strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  strValue,  this.strValue.length());	  System.arraycopy(strValue,    0,    this.strValue,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
23	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  strValue,  strValue.length());	  System.arraycopy(strValue,    0,    this.strValue,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
24	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  strValue.length()  -  2);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  strValue.length()  -  2);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.strValue,  strValue.length()  -  2);	  System.arraycopy(strValue,    0,    this.strValue,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
25	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  strValue.length()  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  strValue.length()  +  1);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.strValue,  strValue.length()  +  1);	  System.arraycopy(strValue,    0,    this.strValue,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
26	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  this.strValue,  strValue.length());  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(this.strValue,  0,  this.strValue,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  this.strValue,  strValue.length());	  System.arraycopy(strValue,    0,    this.strValue,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
27	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  this.strValue);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  this.strValue);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  strValue,  this.strValue);	  System.arraycopy(strValue,    0,    this.strValue,    strValue);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
28	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  nullString);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  nullString);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.strValue,  nullString);	  System.arraycopy(strValue,    0,    this.strValue,    strValue);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
29	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  this.strValue,  strValue);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(this.strValue,  0,  this.strValue,  strValue);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  this.strValue,  strValue);	  System.arraycopy(strValue,    0,    this.strValue,    strValue);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
30	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  value);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  value);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.strValue,  value);	  System.arraycopy(strValue,    0,    this.strValue,    strValue);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
31	[BUG]  [BUGGY]  print(nullString,  null,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  print(nullString,  null,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(nullString,  null,  0,  strValue.length());	  print(strValue,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
32	[BUG]  [BUGGY]  print(strValue,  nullString,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  print(strValue,  nullString,  0,  strValue.length()  -  1);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(strValue,  nullString,  0,  strValue.length()  -  1);	  print(strValue,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
33	[BUG]  [BUGGY]  print(nullString,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  print(nullString,  strValue,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(nullString,  strValue,  0,  strValue.length());	  print(strValue,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
34	[BUG]  [BUGGY]  print(nullString,  nullValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  print(nullString,  nullValue,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(nullString,  nullValue,  0,  strValue.length());	  print(strValue,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
35	[BUG]  [BUGGY]  print(strValue,  nullString,  0,  strValue.length()  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  print(strValue,  nullString,  0,  strValue.length()  +  1);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(strValue,  nullString,  0,  strValue.length()  +  1);	  print(strValue,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
36	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    out,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
37	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.out,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  this.out,  strValue,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.out,  strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    out,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
38	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(value,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  this.print(value,  strValue,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(value,  strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    out,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
39	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  nullString,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  nullString,  strValue,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  nullString,  strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    out,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
40	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(nullString,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  this.print(nullString,  strValue,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(nullString,  strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    out,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
41	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
42	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
43	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  this.strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(this.strValue,  0,  this.strValue,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  this.strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
44	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length()  -  1);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length()  -  1);	  System.arraycopy(strValue,    0,    this.strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
45	[BUG]  [BUGGY]  System.arraycopy(value,  0,  this.strValue,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(value,  0,  this.strValue,  strValue,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  this.strValue,  strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
46	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  1,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  1,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.strValue,  1,  strValue.length());	  System.arraycopy(strValue,    0,    this.strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
47	[BUG]  [BUGGY]  this.print(nullString,  null,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  this.print(nullString,  null,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(nullString,  null,  0,  strValue.length());	  this.print(nullString,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	4	None	replace
48	[BUG]  [BUGGY]  this.print(nullString,  strValue,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  this.print(nullString,  strValue,  0,  strValue.length()  -  1);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(nullString,  strValue,  0,  strValue.length()  -  1);	  this.print(nullString,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	4	None	replace
49	[BUG]  [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(nullString,  null,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(nullString,  null,  0,  strValue.length());  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(nullString,  null,  0,  strValue.length());  }	  System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    this.print(nullString,    null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
50	[BUG]  [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(nullString,  null,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(nullString,  null,  0,  strValue.length());  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(nullString,  null,  0,  strValue.length());  }	  System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    this.print(nullString,    null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
51	[BUG]  [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  else  {  this.print(nullString,  null,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  else  {  this.print(nullString,  null,  0,  strValue.length());  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  else  {  this.print(nullString,  null,  0,  strValue.length());  }	  System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    this.print(nullString,    null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
52	[BUG]  [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  else  {  this.print(nullString,  null,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  else  {  this.print(nullString,  null,  0,  strValue.length());  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  else  {  this.print(nullString,  null,  0,  strValue.length());  }	  System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    this.print(nullString,    null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
53	[BUG]  [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  else  {  print(nullString,  null,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  else  {  print(nullString,  null,  0,  strValue.length());  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  else  {  print(nullString,  null,  0,  strValue.length());  }	  System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    this.print(nullString,    null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
54	[BUG]  [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }	  System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    this.print(nullString,    null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
55	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(nullString),  0,  strValue.length());  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  this.print(nullString),  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(nullString),  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.print(strValue),    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
56	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(value),  0,  strValue.length());  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  this.print(value),  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(value),  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.print(strValue),    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
57	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(strValue),  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  this.print(strValue),  0,  strValue.length()  -  1);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(strValue),  0,  strValue.length()  -  1);	  System.arraycopy(strValue,    0,    this.print(strValue),    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
58	[BUG]  [BUGGY]  ||(strValue  ==  null  &&  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  ||(strValue  ==  null  &&  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue  ==  null  &&  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ");  }	  if(strValue    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
59	[BUG]  [BUGGY]  ||(strValue  ==  null  &&  strValue.equals( " ")))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  ||(strValue  ==  null  &&  strValue.equals( " ")))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue  ==  null  &&  strValue.equals( " ")))  {  throw  new  IllegalStateException( " ");  }	  if(strValue    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
60	[BUG]  [BUGGY]  ||(strValue!=  null  &&  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  ||(strValue!=  null  &&  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue!=  null  &&  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ");  }	  if(strValue    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
61	[BUG]  [BUGGY]  if(strValue!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  if(strValue!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(strValue    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
62	[BUG]  [BUGGY]  ||(strValue!=  null  &&  strValue.equals( " ")))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  ||(strValue!=  null  &&  strValue.equals( " ")))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue!=  null  &&  strValue.equals( " ")))  {  throw  new  IllegalStateException( " ");  }	  if(strValue    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
63	[BUG]  [BUGGY]  final  String  strValue  =  nullString  ==  null?  Constants.EMPTY  :  nullString;  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  final  String  strValue  =  nullString  ==  null?  Constants.EMPTY  :  nullString;  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	final  String  strValue  =  nullString  ==  null?  Constants.EMPTY  :  nullString;	  if(strValue    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
64	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  nullString,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  nullString,  0,  strValue.length());	  System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
65	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  out,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  out,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  out,  0,  strValue.length());	  System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
66	[BUG]  [BUGGY]  out.print(nullString);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  out.print(nullString);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.print(nullString);	  if(strValue!=    null)    {    out.print(nullString);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
67	[BUG]  [BUGGY]  if(strValue  ==  null)  {  out.print(nullString);  }  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  if(strValue  ==  null)  {  out.print(nullString);  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  out.print(nullString);  }	  if(strValue!=    null)    {    out.print(nullString);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
68	[BUG]  [BUGGY]  if(strValue!=  null  ||  strValue.length()  ==  0)  {  out.print(nullString);  }  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  if(strValue!=  null  ||  strValue.length()  ==  0)  {  out.print(nullString);  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null  ||  strValue.length()  ==  0)  {  out.print(nullString);  }	  if(strValue!=    null)    {    out.print(nullString);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
69	[BUG]  [BUGGY]  if(strValue  ==  null  ||  strValue.length()  ==  0)  {  out.print(nullString);  }  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  if(strValue  ==  null  ||  strValue.length()  ==  0)  {  out.print(nullString);  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null  ||  strValue.length()  ==  0)  {  out.print(nullString);  }	  if(strValue!=    null)    {    out.print(nullString);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
70	[BUG]  [BUGGY]  if(strValue  ==  null  ||  strValue!=  null)  {  out.print(nullString);  }  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  if(strValue  ==  null  ||  strValue!=  null)  {  out.print(nullString);  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null  ||  strValue!=  null)  {  out.print(nullString);  }	  if(strValue!=    null)    {    out.print(nullString);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
71	[BUG]  [BUGGY]  if(strValue!=  null  ||  strValue  ==  null)  {  out.print(nullString);  }  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  if(strValue!=  null  ||  strValue  ==  null)  {  out.print(nullString);  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null  ||  strValue  ==  null)  {  out.print(nullString);  }	  if(strValue!=    null)    {    out.print(nullString);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
72	[BUG]  [BUGGY]  this.print(strValue,  nullString,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  this.print(strValue,  nullString,  0,  strValue.length()  -  1);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(strValue,  nullString,  0,  strValue.length()  -  1);	  this.print(strValue,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
73	[BUG]  [BUGGY]  this.print(strValue,  nullString,  0,  strValue.length()  +  1);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  this.print(strValue,  nullString,  0,  strValue.length()  +  1);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(strValue,  nullString,  0,  strValue.length()  +  1);	  this.print(strValue,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
74	[BUG]  [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }	  System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    this.print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
75	[BUG]  [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }	  System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    this.print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
76	[BUG]  [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  else  {  this.print(null,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  else  {  this.print(null,  nullString,  0,  strValue.length());  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  else  {  this.print(null,  nullString,  0,  strValue.length());  }	  System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    this.print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
77	[BUG]  [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  else  {  this.print(null,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  else  {  this.print(null,  nullString,  0,  strValue.length());  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  else  {  this.print(null,  nullString,  0,  strValue.length());  }	  System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    this.print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
78	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(null,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  this.print(null,  nullString,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(null,  nullString,  0,  strValue.length());	  System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    this.print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
79	[BUG]  [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  else  {  print(null,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  else  {  print(null,  nullString,  0,  strValue.length());  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  else  {  print(null,  nullString,  0,  strValue.length());  }	  System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    this.print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
80	[BUG]  [BUGGY]  print(null,  nullString,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  print(null,  nullString,  0,  strValue.length()  -  1);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(null,  nullString,  0,  strValue.length()  -  1);	  print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	12	None	replace
81	[BUG]  [BUGGY]  print(null,  nullString,  0,  strValue.length()  +  1);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  print(null,  nullString,  0,  strValue.length()  +  1);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(null,  nullString,  0,  strValue.length()  +  1);	  print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	12	None	replace
82	[BUG]  [BUGGY]  print(null,  nullString,  0,  strValue.length()  -  2);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  print(null,  nullString,  0,  strValue.length()  -  2);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(null,  nullString,  0,  strValue.length()  -  2);	  print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	12	None	replace
83	[BUG]  [BUGGY]  if(strValue!=  null)  {  print(null,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  if(strValue!=  null)  {  print(null,  nullString,  0,  strValue.length());  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  print(null,  nullString,  0,  strValue.length());  }	  print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	12	None	replace
84	[BUG]  [BUGGY]  print(null,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  print(null,  strValue,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(null,  strValue,  0,  strValue.length());	  print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	12	None	replace
85	[BUG]  [BUGGY]  ||(strValue  ==  null  &&  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  ||(strValue  ==  null  &&  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue  ==  null  &&  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(strValue    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
86	[BUG]  [BUGGY]  ||(strValue  ==  null  &&  strValue.equals( " ")))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  ||(strValue  ==  null  &&  strValue.equals( " ")))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue  ==  null  &&  strValue.equals( " ")))  {  throw  new  IllegalArgumentException( " ");  }	  if(strValue    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
87	[BUG]  [BUGGY]  ||(strValue!=  null  &&  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  ||(strValue!=  null  &&  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue!=  null  &&  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(strValue    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
88	[BUG]  [BUGGY]  if(strValue!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  if(strValue!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(strValue    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
89	[BUG]  [BUGGY]  ||(strValue!=  null  &&  strValue.equals( " ")))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  ||(strValue!=  null  &&  strValue.equals( " ")))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue!=  null  &&  strValue.equals( " ")))  {  throw  new  IllegalArgumentException( " ");  }	  if(strValue    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
90	[BUG]  [BUGGY]  System.arraycopy(value,  0,  this.print(strValue),  0,  strValue.length());  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(value,  0,  this.print(strValue),  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  this.print(strValue),  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.print(strValue),    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
91	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(value,  strValue),  0,  strValue.length());  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  this.print(value,  strValue),  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(value,  strValue),  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.print(strValue),    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
92	[BUG]  [BUGGY]  if(newRecord)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  if(newRecord)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(newRecord)  {  throw  new  IllegalArgumentException( " ");  }	  if(strValue    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
93	[BUG]  [BUGGY]  final  strValue  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  final  strValue  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	final  strValue  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(strValue    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
94	[BUG]  [BUGGY]  final  String  strValue  =  nullString;  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  final  String  strValue  =  nullString;  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	final  String  strValue  =  nullString;	  if(strValue    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
95	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  Thread.currentThread().interrupt();  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Thread.currentThread().interrupt();	  if(strValue    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
96	[BUG]  [BUGGY]  MutableFormat.print(null,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  MutableFormat.print(null,  strValue,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(null,  strValue,  0,  strValue.length());	  if(strValue    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
97	[BUG]  [BUGGY]  if(newRecord)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  if(newRecord)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(newRecord)  {  throw  new  IllegalStateException( " ");  }	  if(strValue    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
98	[BUG]  [BUGGY]  final  strValue  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  final  strValue  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	final  strValue  ==  null)  {  throw  new  IllegalStateException( " ");  }	  if(strValue    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
99	[BUG]  [BUGGY]  MutableFormat.print(null,  nullString,  strValue);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  MutableFormat.print(null,  nullString,  strValue);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(null,  nullString,  strValue);	  if(strValue    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
100	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  nullString,  0,  strValue.length());  this.print(nullString,  null,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  nullString,  0,  strValue.length());  this.print(nullString,  null,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  nullString,  0,  strValue.length());  this.print(nullString,  null,  0,  strValue.length());	  System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    this.print(nullString,    null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
101	[BUG]  [BUGGY]  System.arraycopy(value,  0,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(value,  0,  strValue,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
102	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  value,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  value,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  value,  0,  strValue.length());	  System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
103	[BUG]  [BUGGY]  System.arraycopy(null,  0,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(null,  0,  strValue,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(null,  0,  strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
104	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  buffer,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  buffer,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  buffer,  0,  strValue.length());	  System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
105	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  this.print,  strValue,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print,  strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    out,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
106	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  out,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  out,  nullString,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  out,  nullString,  0,  strValue.length());	  System.arraycopy(strValue,    0,    out,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
107	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  null,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  null,  strValue,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  null,  strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    out,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
108	[BUG]  [BUGGY]  System.arraycopy(value,  0,  out,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(value,  0,  out,  strValue,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  out,  strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    out,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
109	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  value,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  value,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.strValue,  value,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
110	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  nullString,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.strValue,  nullString,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
111	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.print(null,  nullString);  }  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  if(strValue!=  null)  {  out.print(null,  nullString);  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.print(null,  nullString);  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
112	[BUG]  [BUGGY]  System.arraycopy(nullString,  0,  this.print(strValue,  0,  strValue.length()));  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(nullString,  0,  this.print(strValue,  0,  strValue.length()));  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(nullString,  0,  this.print(strValue,  0,  strValue.length()));	  System.arraycopy(strValue,    0,    this.print(strValue,    0,    strValue.length()));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
113	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  nullString,  0,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  nullString,  0,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  nullString,  0,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());	  System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    this.print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
114	[BUG]  [BUGGY]  print(null,  nullString,  0,  strValue.length()  -  4);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  print(null,  nullString,  0,  strValue.length()  -  4);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(null,  nullString,  0,  strValue.length()  -  4);	  print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	12	None	replace
115	[BUG]  [BUGGY]  if(newRecord)  {  out.print(nullString);  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  if(newRecord)  {  out.print(nullString);  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(newRecord)  {  out.print(nullString);  }	  if(strValue!=    null)    {    out.print(nullString);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
116	[BUG]  [BUGGY]  Output.print(nullString);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  Output.print(nullString);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Output.print(nullString);	  if(strValue!=    null)    {    out.print(nullString);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
117	[BUG]  [BUGGY]  if(strValue  ==  null)  {  out.print(NullString);  }  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  if(strValue  ==  null)  {  out.print(NullString);  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  out.print(NullString);  }	  if(strValue!=    null)    {    out.print(nullString);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
118	[BUG]  [BUGGY]  out.print(strValue);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  out.print(strValue);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.print(strValue);	  if(strValue!=    null)    {    out.print(nullString);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
119	[BUG]  [BUGGY]  this.print(strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  this.print(strValue,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(strValue,  0,  strValue.length());	  this.print(nullString,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	4	None	replace
120	[BUG]  [BUGGY]  out.write(nullString);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  out.write(nullString);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.write(nullString);	  out.write(strValue);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
121	[BUG]  [BUGGY]  out.write('n');  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  out.write('n');  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.write('n');	  out.write(strValue);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
122	[BUG]  [BUGGY]  out.write('ufffd');  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  out.write('ufffd');  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.write('ufffd');	  out.write(strValue);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
123	[BUG]  [BUGGY]  out.write(strValue.toString());  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  out.write(strValue.toString());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.write(strValue.toString());	  out.write(strValue);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
124	[BUG]  [BUGGY]  System.arraycopy(value,  0,  this.strValue,  strValue.length());  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(value,  0,  this.strValue,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  this.strValue,  strValue.length());	  System.arraycopy(strValue,    0,    this.strValue,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
125	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  value.length());  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  value.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.strValue,  value.length());	  System.arraycopy(strValue,    0,    this.strValue,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
126	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  nullString.length());  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  nullString.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.strValue,  nullString.length());	  System.arraycopy(strValue,    0,    this.strValue,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
127	[BUG]  [BUGGY]  System.arraycopy(value,  0,  this.strValue,  strValue);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(value,  0,  this.strValue,  strValue);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  this.strValue,  strValue);	  System.arraycopy(strValue,    0,    this.strValue,    strValue);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
128	[BUG]  [BUGGY]  out.append('n');  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  out.append('n');  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.append('n');	  out.write(strValue);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
129	[BUG]  [BUGGY]  out.append(nullString);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  out.append(nullString);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.append(nullString);	  out.write(strValue);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
130	[BUG]  [BUGGY]  Printer  out  =  new  Printer(strValue,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  Printer  out  =  new  Printer(strValue,  nullString,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Printer  out  =  new  Printer(strValue,  nullString,  0,  strValue.length());	  print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	12	None	replace
131	[BUG]  [BUGGY]  print(null,  nullString,  0,  strValue.toString());  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  print(null,  nullString,  0,  strValue.toString());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(null,  nullString,  0,  strValue.toString());	  print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	12	None	replace
132	[BUG]  [BUGGY]  print(nullString,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  print(nullString,  nullString,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(nullString,  nullString,  0,  strValue.length());	  print(strValue,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
133	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  strValue,  1,  strValue.length());  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  strValue,  1,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  strValue,  1,  strValue.length());	  System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
134	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(value,  strValue,  0,  strValue.length()));  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  this.print(value,  strValue,  0,  strValue.length()));  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(value,  strValue,  0,  strValue.length()));	  System.arraycopy(strValue,    0,    this.print(strValue,    0,    strValue.length()));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
135	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  strValue.toString());  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  strValue.toString());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.strValue,  strValue.toString());	  System.arraycopy(strValue,    0,    this.strValue,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
136	[BUG]  [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    this.print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
137	[BUG]  [BUGGY]  Printer  out  =  null.print(strValue);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  Printer  out  =  null.print(strValue);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Printer  out  =  null.print(strValue);	  if(strValue!=    null)    {    out.print(nullString);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
138	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.print(nullString,  strValue);  }  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  if(strValue!=  null)  {  out.print(nullString,  strValue);  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.print(nullString,  strValue);  }	  if(strValue!=    null)    {    out.print(nullString);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
139	[BUG]  [BUGGY]  this.print(strValue,  nullString);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  this.print(strValue,  nullString);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(strValue,  nullString);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
140	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.length,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  System.arraycopy(strValue,  0,  this.length,  strValue,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.length,  strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    out,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
141	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	throw  new  IllegalArgumentException( " ");	  if(strValue    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
142	[BUG]  [BUGGY]  reader.print(null,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  reader.print(null,  strValue,  0,  strValue.length());  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	reader.print(null,  strValue,  0,  strValue.length());	  if(strValue    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
143	[BUG]  [BUGGY]  Thread.currentThread().intermediate();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  Thread.currentThread().intermediate();  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Thread.currentThread().intermediate();	  if(strValue    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
144	[BUG]  [BUGGY]  MutableFormat.print(this,  nullString,  strValue);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  MutableFormat.print(this,  nullString,  strValue);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(this,  nullString,  strValue);	  if(strValue    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
145	[BUG]  [BUGGY]  Parchet.checkState(strValue  ==  null);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  Parchet.checkState(strValue  ==  null);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Parchet.checkState(strValue  ==  null);	  if(strValue    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
146	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	throw  new  IllegalStateException( " ");	  if(strValue    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
147	[BUG]  [BUGGY]  Parchet.checkNotNull(strValue);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  Parchet.checkNotNull(strValue);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Parchet.checkNotNull(strValue);	  if(strValue    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
148	[BUG]  [BUGGY]  MutableFormat.print(null,  strValue);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());    [BUGGY]  MutableFormat.print(null,  strValue);  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(null,  strValue);	  if(strValue    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
