bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  null,  strValue,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  null,  strValue,  0,  strValue.length()  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  null,  strValue,  0,  strValue.length()  -  1);	  System.arraycopy(strValue,    0,    null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	107	None	replace
2	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  null,  value,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  null,  value,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  null,  value,  0,  strValue.length());	  System.arraycopy(strValue,    0,    null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	107	None	replace
3	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  newRecord,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  newRecord,  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  newRecord,  strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	107	None	replace
4	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  null,  this.strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  null,  this.strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  null,  this.strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	107	None	replace
5	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  null,  strValue,  0,  strValue.length()  -  2);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  null,  strValue,  0,  strValue.length()  -  2);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  null,  strValue,  0,  strValue.length()  -  2);	  System.arraycopy(strValue,    0,    null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	107	None	replace
6	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.value,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.value,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.value,  0,  strValue.length());	  System.arraycopy(strValue,    0,    value,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	102	None	replace
7	[BUG]  [BUGGY]  final  Object  strValue  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  final  Object  strValue  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	final  Object  strValue  ==  null)  {  throw  new  IllegalStateException( " ");  }	  final    strValue    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
8	[BUG]  [BUGGY]  final  String  strValue  =  nullString!=  null?  Constants.EMPTY  :  nullString;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  final  String  strValue  =  nullString!=  null?  Constants.EMPTY  :  nullString;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	final  String  strValue  =  nullString!=  null?  Constants.EMPTY  :  nullString;	  final    strValue    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
9	[BUG]  [BUGGY]  final  String  strValue  =  nullString  ==  null?  Constants.EMPTY  :  null;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  final  String  strValue  =  nullString  ==  null?  Constants.EMPTY  :  null;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	final  String  strValue  =  nullString  ==  null?  Constants.EMPTY  :  null;	  final    strValue    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
10	[BUG]  [BUGGY]  final  String  strValue  =  nullString  ==  null?  Constants.NULL  :  nullString;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  final  String  strValue  =  nullString  ==  null?  Constants.NULL  :  nullString;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	final  String  strValue  =  nullString  ==  null?  Constants.NULL  :  nullString;	  final    strValue    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
11	[BUG]  [BUGGY]  print(strValue,  nullString,  0,  strValue.toString());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  print(strValue,  nullString,  0,  strValue.toString());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(strValue,  nullString,  0,  strValue.toString());	  print(null,    nullString,    0,    strValue.toString());    	non-compiled	[CE]  <identifier>  expected	131	None	replace
12	[BUG]  [BUGGY]  print(null,  strValue,  0,  strValue.toString());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  print(null,  strValue,  0,  strValue.toString());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(null,  strValue,  0,  strValue.toString());	  print(null,    nullString,    0,    strValue.toString());    	non-compiled	[CE]  <identifier>  expected	131	None	replace
13	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  data.length());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  data.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.strValue,  data.length());	  System.arraycopy(value,    0,    this.strValue,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	124	None	replace
14	[BUG]  [BUGGY]  this.print(strValue,  nullString,  1,  strValue.length());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  this.print(strValue,  nullString,  1,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(strValue,  nullString,  1,  strValue.length());	  this.print(strValue,    nullString,    0,    strValue.length()    +    1);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
15	[BUG]  [BUGGY]  this.print(trValue,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  this.print(trValue,  nullString,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(trValue,  nullString,  0,  strValue.length());	  this.print(strValue,    nullString,    0,    strValue.length()    +    1);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
16	[BUG]  [BUGGY]  this.print(strValue,  newRecord,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  this.print(strValue,  newRecord,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(strValue,  newRecord,  0,  strValue.length());	  this.print(strValue,    nullString,    0,    strValue.length()    +    1);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
17	[BUG]  [BUGGY]  reader.print(null,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  reader.print(null,  nullString,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	reader.print(null,  nullString,  0,  strValue.length());	  reader.print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	142	None	replace
18	[BUG]  [BUGGY]  reader.print(this,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  reader.print(this,  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	reader.print(this,  strValue,  0,  strValue.length());	  reader.print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	142	None	replace
19	[BUG]  [BUGGY]  reader.print(this,  null,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  reader.print(this,  null,  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	reader.print(this,  null,  strValue,  0,  strValue.length());	  reader.print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	142	None	replace
20	[BUG]  [BUGGY]  reader.print(null,  strValue,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  reader.print(null,  strValue,  0,  strValue.length()  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	reader.print(null,  strValue,  0,  strValue.length()  -  1);	  reader.print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	142	None	replace
21	[BUG]  [BUGGY]  reader.print(null,  null,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  reader.print(null,  null,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	reader.print(null,  null,  0,  strValue.length());	  reader.print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	142	None	replace
22	[BUG]  [BUGGY]  reader.print(this,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  reader.print(this,  nullString,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	reader.print(this,  nullString,  0,  strValue.length());	  reader.print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	142	None	replace
23	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  strValue,  strValue.length());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  strValue,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  strValue,  strValue.length());	  System.arraycopy(strValue,    0,    this.strValue,    strValue.length()    +    1);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
24	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  strValue,  this.strValue.length());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  strValue,  this.strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  strValue,  this.strValue.length());	  System.arraycopy(strValue,    0,    this.strValue,    strValue.length()    +    1);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
25	[BUG]  [BUGGY]  System.arraycopy(trValue,  0,  this.strValue,  strValue.length());  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(trValue,  0,  this.strValue,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(trValue,  0,  this.strValue,  strValue.length());	  System.arraycopy(strValue,    0,    this.strValue,    strValue.length()    +    1);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
26	[BUG]  [BUGGY]  System.arraycopy(value,  0,  this.print(strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  0,  this.print(strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  this.print(strValue,  0,  strValue.length());	  System.arraycopy(value,    0,    this.print(strValue),    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	90	None	replace
27	[BUG]  [BUGGY]  System.arraycopy(this.print(strValue,  0,  this.print(strValue),  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.print(strValue,  0,  this.print(strValue),  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.print(strValue,  0,  this.print(strValue),  0,  strValue.length());	  System.arraycopy(value,    0,    this.print(strValue),    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	90	None	replace
28	[BUG]  [BUGGY]  System.arraycopy(value,  0,  this.print(nullString),  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  0,  this.print(nullString),  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  this.print(nullString),  0,  strValue.length());	  System.arraycopy(value,    0,    this.print(strValue),    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	90	None	replace
29	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  nullString);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  nullString);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  strValue,  nullString);	  System.arraycopy(strValue,    0,    this.strValue,    nullString);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
30	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  this.strValue,  nullString);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.strValue,  0,  this.strValue,  nullString);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  this.strValue,  nullString);	  System.arraycopy(strValue,    0,    this.strValue,    nullString);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
31	[BUG]  [BUGGY]  System.arraycopy(value,  0,  this.strValue,  nullString);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  0,  this.strValue,  nullString);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  this.strValue,  nullString);	  System.arraycopy(strValue,    0,    this.strValue,    nullString);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
32	[BUG]  [BUGGY]  System.arraycopy(value,  0,  this.strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  0,  this.strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  this.strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.strValue,    value,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	109	None	replace
33	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length()  -  2);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length()  -  2);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length()  -  2);	  System.arraycopy(strValue,    0,    this.strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
34	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length()  +  1);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length()  +  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length()  +  1);	  System.arraycopy(strValue,    0,    this.strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
35	[BUG]  [BUGGY]  this.print(strValue,  nullValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  this.print(strValue,  nullValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(strValue,  nullValue,  0,  strValue.length());	  this.print(nullString,    nullValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
36	[BUG]  [BUGGY]  this.print(nullString,  nullValue,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  this.print(nullString,  nullValue,  0,  strValue.length()  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(nullString,  nullValue,  0,  strValue.length()  -  1);	  this.print(nullString,    nullValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
37	[BUG]  [BUGGY]  this.print(nullString,  nullValue,  0,  strValue.length()  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  this.print(nullString,  nullValue,  0,  strValue.length()  +  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(nullString,  nullValue,  0,  strValue.length()  +  1);	  this.print(nullString,    nullValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
38	[BUG]  [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }	  if(strValue!=    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
39	[BUG]  [BUGGY]  if(newRecord)  {  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(newRecord)  {  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(newRecord)  {  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }	  if(strValue!=    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
40	[BUG]  [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }	  if(strValue!=    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
41	[BUG]  [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }	  if(strValue!=    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
42	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  nullString,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  nullString,  0,  strValue.length()  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  nullString,  0,  strValue.length()  -  1);	  System.arraycopy(strValue,    0,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	64	None	replace
43	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  nullString,  1,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  nullString,  1,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  nullString,  1,  strValue.length());	  System.arraycopy(strValue,    0,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	64	None	replace
44	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  nullString,  0,  strValue.length()  -  2);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  nullString,  0,  strValue.length()  -  2);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  nullString,  0,  strValue.length()  -  2);	  System.arraycopy(strValue,    0,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	64	None	replace
45	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  new  String(strValue),  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  new  String(strValue),  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  new  String(strValue),  0,  strValue.length());	  System.arraycopy(strValue,    0,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	64	None	replace
46	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(nullString,  0,  strValue.length()  -  1));  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(nullString,  0,  strValue.length()  -  1));  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(nullString,  0,  strValue.length()  -  1));	  System.arraycopy(strValue,    0,    this.print(nullString,    0,    strValue.length()));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
47	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(nullString,  0,  strValue.length()  +  1));  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(nullString,  0,  strValue.length()  +  1));  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(nullString,  0,  strValue.length()  +  1));	  System.arraycopy(strValue,    0,    this.print(nullString,    0,    strValue.length()));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
48	[BUG]  [BUGGY]  System.arraycopy(this.print(strValue,  0,  this.print(nullString,  0,  strValue.length()));  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.print(strValue,  0,  this.print(nullString,  0,  strValue.length()));  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.print(strValue,  0,  this.print(nullString,  0,  strValue.length()));	  System.arraycopy(strValue,    0,    this.print(nullString,    0,    strValue.length()));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
49	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.print(nullString);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.print(nullString);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.print(nullString);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  out.print(nullString);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
50	[BUG]  [BUGGY]  if(strValue  ==  null)  {  out.print(nullString);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  out.print(nullString);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  out.print(nullString);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  out.print(nullString);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
51	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.print(nullString);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.print(nullString);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.print(nullString);  }  else  {  throw  new  IllegalStateException( " ");  }	  out.print(nullString);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
52	[BUG]  [BUGGY]  if(strValue  ==  null)  {  out.print(nullString);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  out.print(nullString);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  out.print(nullString);  }  else  {  throw  new  IllegalStateException( " ");  }	  out.print(nullString);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
53	[BUG]  [BUGGY]  final  String  strValue  =  value  ==  null?  Constants.EMPTY  :  nullString;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  final  String  strValue  =  value  ==  null?  Constants.EMPTY  :  nullString;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	final  String  strValue  =  value  ==  null?  Constants.EMPTY  :  nullString;	  final    String    strValue    =    nullString    ==    null?    Constants.EMPTY    :    nullString;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
54	[BUG]  [BUGGY]  final  String  strValue  =  this.nullString  ==  null?  Constants.EMPTY  :  nullString;  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  final  String  strValue  =  this.nullString  ==  null?  Constants.EMPTY  :  nullString;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	final  String  strValue  =  this.nullString  ==  null?  Constants.EMPTY  :  nullString;	  final    String    strValue    =    nullString    ==    null?    Constants.EMPTY    :    nullString;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
55	[BUG]  [BUGGY]  final  String  strValue  =  nullString  ==  null?  Constants.EMPTY  :  new  String(strValue);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  final  String  strValue  =  nullString  ==  null?  Constants.EMPTY  :  new  String(strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	final  String  strValue  =  nullString  ==  null?  Constants.EMPTY  :  new  String(strValue);	  final    String    strValue    =    nullString    ==    null?    Constants.EMPTY    :    nullString;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
56	[BUG]  [BUGGY]  final  String  strValue  =  nullString  ==  null?  Constants.EMPTY  :  value;  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  final  String  strValue  =  nullString  ==  null?  Constants.EMPTY  :  value;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	final  String  strValue  =  nullString  ==  null?  Constants.EMPTY  :  value;	  final    String    strValue    =    nullString    ==    null?    Constants.EMPTY    :    nullString;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
57	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(value,  nullString),  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(value,  nullString),  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(value,  nullString),  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.print(value,    strValue),    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	91	None	replace
58	[BUG]  [BUGGY]  System.arraycopy(value,  0,  this.print(strValue,  strValue),  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  0,  this.print(strValue,  strValue),  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  this.print(strValue,  strValue),  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.print(value,    strValue),    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	91	None	replace
59	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(nullString,  strValue),  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(nullString,  strValue),  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(nullString,  strValue),  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.print(value,    strValue),    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	91	None	replace
60	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(value,  strValue),  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(value,  strValue),  0,  strValue.length()  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(value,  strValue),  0,  strValue.length()  -  1);	  System.arraycopy(strValue,    0,    this.print(value,    strValue),    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	91	None	replace
61	[BUG]  [BUGGY]  System.arraycopy(value,  strValue,  0,  this.print(strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  strValue,  0,  this.print(strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  strValue,  0,  this.print(strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.print(value,    strValue),    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	91	None	replace
62	[BUG]  [BUGGY]  if(strValue  ==  null)  {  for(int  i  =  0,  strValue  =  strValue.length();  i  <  strValue.length();  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  for(int  i  =  0,  strValue  =  strValue.length();  i  <  strValue.length();  ++i)  {  out.append('n');  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  for(int  i  =  0,  strValue  =  strValue.length();  i  <  strValue.length();  ++i)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0,    strValue    =    strValue.length();    i    <    strValue.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
63	[BUG]  [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0,  strValue  =  value.length();  i  <  strValue.length();  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0,  strValue  =  value.length();  i  <  strValue.length();  ++i)  {  out.append('n');  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  for(int  i  =  0,  strValue  =  value.length();  i  <  strValue.length();  ++i)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0,    strValue    =    strValue.length();    i    <    strValue.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
64	[BUG]  [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0,  strValue  =  nullString.length();  i  <  strValue.length();  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0,  strValue  =  nullString.length();  i  <  strValue.length();  ++i)  {  out.append('n');  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  for(int  i  =  0,  strValue  =  nullString.length();  i  <  strValue.length();  ++i)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0,    strValue    =    strValue.length();    i    <    strValue.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
65	[BUG]  [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0,  strValue  =  strValue.length();  i  <  value.length();  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0,  strValue  =  strValue.length();  i  <  value.length();  ++i)  {  out.append('n');  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  for(int  i  =  0,  strValue  =  strValue.length();  i  <  value.length();  ++i)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0,    strValue    =    strValue.length();    i    <    strValue.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
66	[BUG]  [BUGGY]  if(strValue  ==  null)  {  for(int  i  =  0,  strValue  =  value.length();  i  <  strValue.length();  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  for(int  i  =  0,  strValue  =  value.length();  i  <  strValue.length();  ++i)  {  out.append('n');  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  for(int  i  =  0,  strValue  =  value.length();  i  <  strValue.length();  ++i)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0,    strValue    =    strValue.length();    i    <    strValue.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
67	[BUG]  [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0,  strValue  =  null.length();  i  <  strValue.length();  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0,  strValue  =  null.length();  i  <  strValue.length();  ++i)  {  out.append('n');  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  for(int  i  =  0,  strValue  =  null.length();  i  <  strValue.length();  ++i)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0,    strValue    =    strValue.length();    i    <    strValue.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
68	[BUG]  [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()));  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()));  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()));  }	  System.arraycopy(value,    0,    this.print(strValue,    0,    strValue.length()));    	non-compiled	[CE]  <identifier>  expected	20	None	replace
69	[BUG]  [BUGGY]  System.arraycopy(value,  0,  this.print(strValue,  0,  strValue.length()  -  1));  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  0,  this.print(strValue,  0,  strValue.length()  -  1));  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  this.print(strValue,  0,  strValue.length()  -  1));	  System.arraycopy(value,    0,    this.print(strValue,    0,    strValue.length()));    	non-compiled	[CE]  <identifier>  expected	20	None	replace
70	[BUG]  [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  System.arraycopy(value,    0,    this.print(strValue,    0,    strValue.length()));    	non-compiled	[CE]  <identifier>  expected	20	None	replace
71	[BUG]  [BUGGY]  Parchet.checkNotNull(value);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Parchet.checkNotNull(value);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Parchet.checkNotNull(value);	  Parchet.checkNotNull(strValue);    	non-compiled	[CE]  <identifier>  expected	147	None	replace
72	[BUG]  [BUGGY]  Parchet.checkNotNull(nullString);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Parchet.checkNotNull(nullString);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Parchet.checkNotNull(nullString);	  Parchet.checkNotNull(strValue);    	non-compiled	[CE]  <identifier>  expected	147	None	replace
73	[BUG]  [BUGGY]  Parchet.checkNotNull(this.print(strValue,  strValue));  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Parchet.checkNotNull(this.print(strValue,  strValue));  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Parchet.checkNotNull(this.print(strValue,  strValue));	  Parchet.checkNotNull(strValue);    	non-compiled	[CE]  <identifier>  expected	147	None	replace
74	[BUG]  [BUGGY]  Parchet.checkState(strValue!=  null);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Parchet.checkState(strValue!=  null);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Parchet.checkState(strValue!=  null);	  Parchet.checkNotNull(strValue);    	non-compiled	[CE]  <identifier>  expected	147	None	replace
75	[BUG]  [BUGGY]  Parchet.checkNotNull(this.print(strValue));  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Parchet.checkNotNull(this.print(strValue));  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Parchet.checkNotNull(this.print(strValue));	  Parchet.checkNotNull(strValue);    	non-compiled	[CE]  <identifier>  expected	147	None	replace
76	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.strValue,    strValue.length()    -    2);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
77	[BUG]  [BUGGY]  Parchet.checkState(null,  strValue  ==  null);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Parchet.checkState(null,  strValue  ==  null);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Parchet.checkState(null,  strValue  ==  null);	  Parchet.checkState(strValue    ==    null);    	non-compiled	[CE]  <identifier>  expected	145	None	replace
78	[BUG]  [BUGGY]  Parchet.checkState(this.print(strValue,  strValue)  ==  null);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Parchet.checkState(this.print(strValue,  strValue)  ==  null);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Parchet.checkState(this.print(strValue,  strValue)  ==  null);	  Parchet.checkState(strValue    ==    null);    	non-compiled	[CE]  <identifier>  expected	145	None	replace
79	[BUG]  [BUGGY]  Parchet.checkState(this.print(strValue,  strValue  ==  null);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Parchet.checkState(this.print(strValue,  strValue  ==  null);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Parchet.checkState(this.print(strValue,  strValue  ==  null);	  Parchet.checkState(strValue    ==    null);    	non-compiled	[CE]  <identifier>  expected	145	None	replace
80	[BUG]  [BUGGY]  Parchet.checkState(this.print(strValue),  strValue  ==  null);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Parchet.checkState(this.print(strValue),  strValue  ==  null);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Parchet.checkState(this.print(strValue),  strValue  ==  null);	  Parchet.checkState(strValue    ==    null);    	non-compiled	[CE]  <identifier>  expected	145	None	replace
81	[BUG]  [BUGGY]  Parchet.checkState(nullString  ==  null);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Parchet.checkState(nullString  ==  null);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Parchet.checkState(nullString  ==  null);	  Parchet.checkState(strValue    ==    null);    	non-compiled	[CE]  <identifier>  expected	145	None	replace
82	[BUG]  [BUGGY]  if(strValue.length()  >  0)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue.length()  >  0)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue.length()  >  0)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }	  System.arraycopy(strValue,    0,    nullString,    0,    strValue.length());    this.print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	113	None	replace
83	[BUG]  [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.print(null,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.print(null,  nullString,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.print(null,  nullString,  0,  strValue.length());  }	  System.arraycopy(strValue,    0,    nullString,    0,    strValue.length());    this.print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	113	None	replace
84	[BUG]  [BUGGY]  ||  newRecord)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||  newRecord)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||  newRecord)  {  throw  new  IllegalStateException( " ");  }	  if(newRecord)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
85	[BUG]  [BUGGY]  allowPrinting(newRecord)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  allowPrinting(newRecord)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	allowPrinting(newRecord)  {  throw  new  IllegalStateException( " ");  }	  if(newRecord)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
86	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Thread.currentThread().setContextClassLoader(this);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Thread.currentThread().setContextClassLoader(this);	  if(newRecord)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
87	[BUG]  [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length());  }	  if(strValue    ==    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    }    else    {    this.print(nullString,    null,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
88	[BUG]  [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length());  }	  if(strValue    ==    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    }    else    {    this.print(nullString,    null,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
89	[BUG]  [BUGGY]  if(strValue!=  null)  {  this.print(value,  strValue,  0,  strValue.length());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  this.print(value,  strValue,  0,  strValue.length());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  this.print(value,  strValue,  0,  strValue.length());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.print(value,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
90	[BUG]  [BUGGY]  if(strValue!=  null)  {  this.print(value,  strValue,  0,  strValue.length());  }  else  {  System.arraycopy(strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  this.print(value,  strValue,  0,  strValue.length());  }  else  {  System.arraycopy(strValue,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  this.print(value,  strValue,  0,  strValue.length());  }  else  {  System.arraycopy(strValue,  0,  strValue.length());  }	  this.print(value,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
91	[BUG]  [BUGGY]  this.print(value,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  this.print(value,  nullString,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(value,  nullString,  0,  strValue.length());	  this.print(value,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
92	[BUG]  [BUGGY]  if(strValue!=  null)  {  this.print(value,  strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  this.print(value,  strValue,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  this.print(value,  strValue,  0,  strValue.length());  }	  this.print(value,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
93	[BUG]  [BUGGY]  this.print(str,  nullString,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  this.print(str,  nullString,  0,  strValue.length()  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(str,  nullString,  0,  strValue.length()  -  1);	  this.print(str,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
94	[BUG]  [BUGGY]  if(strValue  ==  null  ||  strValue  ==  null)  {  out.print(nullString);  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null  ||  strValue  ==  null)  {  out.print(nullString);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null  ||  strValue  ==  null)  {  out.print(nullString);  }	  if(strValue!=    null    ||    strValue    ==    null)    {    out.print(nullString);    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
95	[BUG]  [BUGGY]  if(strValue  ==  null  ||  strValue  >=  null)  {  out.print(nullString);  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null  ||  strValue  >=  null)  {  out.print(nullString);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null  ||  strValue  >=  null)  {  out.print(nullString);  }	  if(strValue!=    null    ||    strValue    ==    null)    {    out.print(nullString);    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
96	[BUG]  [BUGGY]  if(strValue  ==  null  ||  strValue  ==  null)  {  out.print(NullString);  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null  ||  strValue  ==  null)  {  out.print(NullString);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null  ||  strValue  ==  null)  {  out.print(NullString);  }	  if(strValue!=    null    ||    strValue    ==    null)    {    out.print(nullString);    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
97	[BUG]  [BUGGY]  this.print(nullString,  strValue);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  this.print(nullString,  strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(nullString,  strValue);	  this.print(strValue,    nullString);    	non-compiled	[CE]  <identifier>  expected	139	None	replace
98	[BUG]  [BUGGY]  this.print(null,  strValue,  nullString);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  this.print(null,  strValue,  nullString);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(null,  strValue,  nullString);	  this.print(strValue,    nullString);    	non-compiled	[CE]  <identifier>  expected	139	None	replace
99	[BUG]  [BUGGY]  this.print(strValue,  nullString,  0);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  this.print(strValue,  nullString,  0);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(strValue,  nullString,  0);	  this.print(strValue,    nullString);    	non-compiled	[CE]  <identifier>  expected	139	None	replace
100	[BUG]  [BUGGY]  this.print(strValue,  strValue,  nullString);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  this.print(strValue,  strValue,  nullString);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(strValue,  strValue,  nullString);	  this.print(strValue,    nullString);    	non-compiled	[CE]  <identifier>  expected	139	None	replace
101	[BUG]  [BUGGY]  this.print(strValue,  nullString,  false);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  this.print(strValue,  nullString,  false);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(strValue,  nullString,  false);	  this.print(strValue,    nullString);    	non-compiled	[CE]  <identifier>  expected	139	None	replace
102	[BUG]  [BUGGY]  ||(nullString!=  null  &&  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(nullString!=  null  &&  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(nullString!=  null  &&  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  ||(strValue!=    null    &&    strValue.length()    >    0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
103	[BUG]  [BUGGY]  ||(value!=  null  &&  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(value!=  null  &&  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(value!=  null  &&  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  ||(strValue!=    null    &&    strValue.length()    >    0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
104	[BUG]  [BUGGY]  ||(strValue!=  null  &&  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(strValue!=  null  &&  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue!=  null  &&  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ".getMessage());  }	  ||(strValue!=    null    &&    strValue.length()    >    0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
105	[BUG]  [BUGGY]  ||(strValue  >=  null  &&  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(strValue  >=  null  &&  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue  >=  null  &&  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  ||(strValue!=    null    &&    strValue.length()    >    0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
106	[BUG]  [BUGGY]  ||(strValue!=  null  &&  strValue.length()  <  =  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(strValue!=  null  &&  strValue.length()  <  =  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue!=  null  &&  strValue.length()  <  =  0))  {  throw  new  IllegalArgumentException( " ");  }	  ||(strValue!=    null    &&    strValue.length()    >    0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
107	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.out,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.out,  nullString,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.out,  nullString,  0,  strValue.length());	  System.arraycopy(strValue,    0,    out,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	106	None	replace
108	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(nullString,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(nullString,  0,  strValue.length());	  System.arraycopy(strValue,    0,    out,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	106	None	replace
109	[BUG]  [BUGGY]  Thread.currentThread().interrupt(this);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Thread.currentThread().interrupt(this);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Thread.currentThread().interrupt(this);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  <identifier>  expected	95	None	replace
110	[BUG]  [BUGGY]  Thread.currentThread().interrupt(strValue);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Thread.currentThread().interrupt(strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Thread.currentThread().interrupt(strValue);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  <identifier>  expected	95	None	replace
111	[BUG]  [BUGGY]  Thread.currentThread().interrupt(nullString);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Thread.currentThread().interrupt(nullString);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Thread.currentThread().interrupt(nullString);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  <identifier>  expected	95	None	replace
112	[BUG]  [BUGGY]  Thread.currentThread().interrupt(this,  nullString);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Thread.currentThread().interrupt(this,  nullString);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Thread.currentThread().interrupt(this,  nullString);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  <identifier>  expected	95	None	replace
113	[BUG]  [BUGGY]  thread.interrupt();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  thread.interrupt();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	thread.interrupt();	  Thread.currentThread().interrupt();    	non-compiled	[CE]  <identifier>  expected	95	None	replace
114	[BUG]  [BUGGY]  if(strValue.length()  >  0)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(nullString,  null,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue.length()  >  0)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(nullString,  null,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue.length()  >  0)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(nullString,  null,  0,  strValue.length());  }	  System.arraycopy(strValue,    0,    nullString,    0,    strValue.length());    this.print(nullString,    null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	100	None	replace
115	[BUG]  [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  nullString,  0,  strValue.length());  this.print(nullString,  null,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  nullString,  0,  strValue.length());  this.print(nullString,  null,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  System.arraycopy(strValue,  0,  nullString,  0,  strValue.length());  this.print(nullString,  null,  0,  strValue.length());  }	  System.arraycopy(strValue,    0,    nullString,    0,    strValue.length());    this.print(nullString,    null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	100	None	replace
116	[BUG]  [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.print(nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.print(nullString,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.print(nullString,  0,  strValue.length());  }	  System.arraycopy(strValue,    0,    nullString,    0,    strValue.length());    this.print(nullString,    null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	100	None	replace
117	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.write(nullString);  }  else  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.write(nullString);  }  else  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.write(nullString);  }  else  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }	  out.write(nullString);    	non-compiled	[CE]  <identifier>  expected	120	None	replace
118	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.write(nullString);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.write(nullString);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.write(nullString);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  out.write(nullString);    	non-compiled	[CE]  <identifier>  expected	120	None	replace
119	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.write(nullString);  }  else  {  this.print(strValue,  null,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.write(nullString);  }  else  {  this.print(strValue,  null,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.write(nullString);  }  else  {  this.print(strValue,  null,  0,  strValue.length());  }	  out.write(nullString);    	non-compiled	[CE]  <identifier>  expected	120	None	replace
120	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.write(nullString);  }  else  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.write(nullString);  }  else  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.write(nullString);  }  else  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length());  }	  out.write(nullString);    	non-compiled	[CE]  <identifier>  expected	120	None	replace
121	[BUG]  [BUGGY]  if(strValue  ==  null)  {  out.write(nullString);  }  else  {  this.print(strValue,  null,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  out.write(nullString);  }  else  {  this.print(strValue,  null,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  out.write(nullString);  }  else  {  this.print(strValue,  null,  0,  strValue.length());  }	  out.write(nullString);    	non-compiled	[CE]  <identifier>  expected	120	None	replace
122	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.write(nullString);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.write(nullString);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.write(nullString);  }	  out.write(nullString);    	non-compiled	[CE]  <identifier>  expected	120	None	replace
123	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  this.strValue.toString());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  this.strValue.toString());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  strValue,  this.strValue.toString());	  System.arraycopy(strValue,    0,    this.strValue,    strValue.toString());    	non-compiled	[CE]  <identifier>  expected	135	None	replace
124	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  nullString.toString());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  nullString.toString());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.strValue,  nullString.toString());	  System.arraycopy(strValue,    0,    this.strValue,    strValue.toString());    	non-compiled	[CE]  <identifier>  expected	135	None	replace
125	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  value.toString());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  value.toString());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.strValue,  value.toString());	  System.arraycopy(strValue,    0,    this.strValue,    strValue.toString());    	non-compiled	[CE]  <identifier>  expected	135	None	replace
126	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  this.strValue,  strValue.toString());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.strValue,  0,  this.strValue,  strValue.toString());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  this.strValue,  strValue.toString());	  System.arraycopy(strValue,    0,    this.strValue,    strValue.toString());    	non-compiled	[CE]  <identifier>  expected	135	None	replace
127	[BUG]  [BUGGY]  System.arraycopy(value,  0,  this.strValue,  strValue.toString());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  0,  this.strValue,  strValue.toString());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  this.strValue,  strValue.toString());	  System.arraycopy(strValue,    0,    this.strValue,    strValue.toString());    	non-compiled	[CE]  <identifier>  expected	135	None	replace
128	[BUG]  [BUGGY]  if(strValue!=  null)  {  Output.print(nullString);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  Output.print(nullString);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  Output.print(nullString);  }	  Output.print(nullString);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
129	[BUG]  [BUGGY]  if(strValue  ==  null)  {  Output.print(nullString);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  Output.print(nullString);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  Output.print(nullString);  }	  Output.print(nullString);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
130	[BUG]  [BUGGY]  Output.print(strValue);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Output.print(strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Output.print(strValue);	  Output.print(nullString);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
131	[BUG]  [BUGGY]  if(strValue!=  null)  {  Output.print(nullString);  }  else  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  Output.print(nullString);  }  else  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  Output.print(nullString);  }  else  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }	  Output.print(nullString);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
132	[BUG]  [BUGGY]  if(strValue!=  null)  {  Output.print(nullString);  }  else  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()));  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  Output.print(nullString);  }  else  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()));  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  Output.print(nullString);  }  else  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()));  }	  Output.print(nullString);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
133	[BUG]  [BUGGY]  if(strValue!=  null)  {  Output.print(nullString);  }  else  {  this.print(strValue,  null,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  Output.print(nullString);  }  else  {  this.print(strValue,  null,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  Output.print(nullString);  }  else  {  this.print(strValue,  null,  0,  strValue.length());  }	  Output.print(nullString);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
134	[BUG]  [BUGGY]  if(strValue!=  null)  {  Output.print(nullString);  }  else  {  this.print(null,  strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  Output.print(nullString);  }  else  {  this.print(null,  strValue,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  Output.print(nullString);  }  else  {  this.print(null,  strValue,  0,  strValue.length());  }	  Output.print(nullString);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
135	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  nullString,  value,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  nullString,  value,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  nullString,  value,  0,  strValue.length());	  System.arraycopy(strValue,    0,    nullString,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
136	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  nullString,  strValue,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  nullString,  strValue,  0,  strValue.length()  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  nullString,  strValue,  0,  strValue.length()  -  1);	  System.arraycopy(strValue,    0,    nullString,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
137	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  nullString,  this.strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  nullString,  this.strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  nullString,  this.strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    nullString,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
138	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  nullString,  this.print(strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  nullString,  this.print(strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  nullString,  this.print(strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    nullString,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
139	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.write('n');  }  else  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.write('n');  }  else  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.write('n');  }  else  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }	  out.write('n');    	non-compiled	[CE]  <identifier>  expected	121	None	replace
140	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }	  out.write('n');    	non-compiled	[CE]  <identifier>  expected	121	None	replace
141	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.write('n');  }  else  {  this.print(strValue,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.write('n');  }  else  {  this.print(strValue,  nullString,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.write('n');  }  else  {  this.print(strValue,  nullString,  0,  strValue.length());  }	  out.write('n');    	non-compiled	[CE]  <identifier>  expected	121	None	replace
142	[BUG]  [BUGGY]  if(strValue  ==  null)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  out.write('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }	  out.write('n');    	non-compiled	[CE]  <identifier>  expected	121	None	replace
143	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.write('n');  }  else  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()));  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.write('n');  }  else  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()));  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.write('n');  }  else  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()));  }	  out.write('n');    	non-compiled	[CE]  <identifier>  expected	121	None	replace
144	[BUG]  [BUGGY]  ||(nullString!=  null  &&  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(nullString!=  null  &&  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(nullString!=  null  &&  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ");  }	  ||(strValue!=    null    &&    strValue.length()    >    0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
145	[BUG]  [BUGGY]  ||(value!=  null  &&  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(value!=  null  &&  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(value!=  null  &&  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ");  }	  ||(strValue!=    null    &&    strValue.length()    >    0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
146	[BUG]  [BUGGY]  ||(strValue!=  null  &&  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ".getMessage());  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(strValue!=  null  &&  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ".getMessage());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue!=  null  &&  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ".getMessage());  }	  ||(strValue!=    null    &&    strValue.length()    >    0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
147	[BUG]  [BUGGY]  ||(strValue!=  null  &&  strValue.length()  >  0))  throw  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(strValue!=  null  &&  strValue.length()  >  0))  throw  new  IllegalStateException( " ");  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue!=  null  &&  strValue.length()  >  0))  throw  new  IllegalStateException( " ");	  ||(strValue!=    null    &&    strValue.length()    >    0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
148	[BUG]  [BUGGY]  ||(strValue  >=  null  &&  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(strValue  >=  null  &&  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue  >=  null  &&  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ");  }	  ||(strValue!=    null    &&    strValue.length()    >    0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
149	[BUG]  [BUGGY]  if(newRecord)  {  out.print(strValue);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(newRecord)  {  out.print(strValue);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(newRecord)  {  out.print(strValue);  }	  if(newRecord)    {    out.print(nullString);    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
150	[BUG]  [BUGGY]  Printer  out.print(nullString);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Printer  out.print(nullString);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Printer  out.print(nullString);	  if(newRecord)    {    out.print(nullString);    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
151	[BUG]  [BUGGY]  if(strValue  ==  null)  {  out.write(strValue);  }  else  {  this.print(nullString,  null,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  out.write(strValue);  }  else  {  this.print(nullString,  null,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  out.write(strValue);  }  else  {  this.print(nullString,  null,  0,  strValue.length());  }	  if(strValue!=    null)    {    out.write(strValue);    }    else    {    this.print(nullString,    null,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
152	[BUG]  [BUGGY]  if(newRecord)  {  if(strValue!=  null)  {  out.write(strValue);  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(newRecord)  {  if(strValue!=  null)  {  out.write(strValue);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(newRecord)  {  if(strValue!=  null)  {  out.write(strValue);  }	  if(strValue!=    null)    {    out.write(strValue);    }    else    {    this.print(nullString,    null,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
153	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.write(strValue);  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.write(strValue);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.write(strValue);  }	  if(strValue!=    null)    {    out.write(strValue);    }    else    {    this.print(nullString,    null,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
154	[BUG]  [BUGGY]  if(newRecord)  {  if(strValue!=  null)  {  out.write(strValue);  }  else  {  this.print(nullString,  null,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(newRecord)  {  if(strValue!=  null)  {  out.write(strValue);  }  else  {  this.print(nullString,  null,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(newRecord)  {  if(strValue!=  null)  {  out.write(strValue);  }  else  {  this.print(nullString,  null,  0,  strValue.length());  }	  if(strValue!=    null)    {    out.write(strValue);    }    else    {    this.print(nullString,    null,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
155	[BUG]  [BUGGY]  MutableFormat.print(this,  strValue);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(this,  strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(this,  strValue);	  MutableFormat.print(null,    strValue);    	non-compiled	[CE]  <identifier>  expected	148	None	replace
156	[BUG]  [BUGGY]  MutableFormat.print(null,  nullString);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(null,  nullString);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(null,  nullString);	  MutableFormat.print(null,    strValue);    	non-compiled	[CE]  <identifier>  expected	148	None	replace
157	[BUG]  [BUGGY]  MutableFormat.print(null,  null);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(null,  null);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(null,  null);	  MutableFormat.print(null,    strValue);    	non-compiled	[CE]  <identifier>  expected	148	None	replace
158	[BUG]  [BUGGY]  MutableFormat.print(format,  null,  strValue);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(format,  null,  strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(format,  null,  strValue);	  MutableFormat.print(null,    strValue);    	non-compiled	[CE]  <identifier>  expected	148	None	replace
159	[BUG]  [BUGGY]  MutableFormat.println(strValue);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.println(strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.println(strValue);	  MutableFormat.print(null,    strValue);    	non-compiled	[CE]  <identifier>  expected	148	None	replace
160	[BUG]  [BUGGY]  MutableFormat.print(out,  null,  strValue);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(out,  null,  strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(out,  null,  strValue);	  MutableFormat.print(null,    strValue);    	non-compiled	[CE]  <identifier>  expected	148	None	replace
161	[BUG]  [BUGGY]  if(strValue  ==  null  ||  strValue.length()!=  0)  {  out.print(nullString);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null  ||  strValue.length()!=  0)  {  out.print(nullString);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null  ||  strValue.length()!=  0)  {  out.print(nullString);  }	  if(strValue!=    null    ||    strValue.length()    ==    0)    {    out.print(nullString);    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
162	[BUG]  [BUGGY]  if(strValue  ==  null  ||  strValue.length()  >=  0)  {  out.print(nullString);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null  ||  strValue.length()  >=  0)  {  out.print(nullString);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null  ||  strValue.length()  >=  0)  {  out.print(nullString);  }	  if(strValue!=    null    ||    strValue.length()    ==    0)    {    out.print(nullString);    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
163	[BUG]  [BUGGY]  out.print(strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.print(strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.print(strValue,  0,  strValue.length());	  if(strValue!=    null    ||    strValue.length()    ==    0)    {    out.print(nullString);    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
164	[BUG]  [BUGGY]  if(strValue!=  null  ||  strValue.length()  >=  0)  {  out.print(nullString);  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null  ||  strValue.length()  >=  0)  {  out.print(nullString);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null  ||  strValue.length()  >=  0)  {  out.print(nullString);  }	  if(strValue!=    null    ||    strValue.length()    ==    0)    {    out.print(nullString);    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
165	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  value,  out,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  value,  out,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  value,  out,  0,  strValue.length());	  System.arraycopy(value,    0,    out,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	108	None	replace
166	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  out,  value,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  out,  value,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  out,  value,  0,  strValue.length());	  System.arraycopy(value,    0,    out,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	108	None	replace
167	[BUG]  [BUGGY]  Printer  out  =  this.print(strValue);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Printer  out  =  this.print(strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Printer  out  =  this.print(strValue);	  Printer    out    =    null.print(strValue);    	non-compiled	[CE]  <identifier>  expected	137	None	replace
168	[BUG]  [BUGGY]  Printer  out  =  this.format.print(strValue);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Printer  out  =  this.format.print(strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Printer  out  =  this.format.print(strValue);	  Printer    out    =    null.print(strValue);    	non-compiled	[CE]  <identifier>  expected	137	None	replace
169	[BUG]  [BUGGY]  Printer  out  =  this.newRecord.print(strValue);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Printer  out  =  this.newRecord.print(strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Printer  out  =  this.newRecord.print(strValue);	  Printer    out    =    null.print(strValue);    	non-compiled	[CE]  <identifier>  expected	137	None	replace
170	[BUG]  [BUGGY]  Printer  out  =  this.print(strValue,  nullString);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Printer  out  =  this.print(strValue,  nullString);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Printer  out  =  this.print(strValue,  nullString);	  Printer    out    =    null.print(strValue);    	non-compiled	[CE]  <identifier>  expected	137	None	replace
171	[BUG]  [BUGGY]  Printer  out  =  new  Printer(strValue);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Printer  out  =  new  Printer(strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Printer  out  =  new  Printer(strValue);	  Printer    out    =    null.print(strValue);    	non-compiled	[CE]  <identifier>  expected	137	None	replace
172	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  value);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  value);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  strValue,  value);	  System.arraycopy(strValue,    0,    this.strValue,    value);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
173	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(value,  strValue));  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(value,  strValue));  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(value,  strValue));	  System.arraycopy(strValue,    0,    this.strValue,    value);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
174	[BUG]  [BUGGY]  if(strValue!=  null  ||  strValue!=  null)  {  out.print(nullString);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null  ||  strValue!=  null)  {  out.print(nullString);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null  ||  strValue!=  null)  {  out.print(nullString);  }	  if(strValue    ==    null    ||    strValue!=    null)    {    out.print(nullString);    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
175	[BUG]  [BUGGY]  System.arraycopy(this.print(strValue,  0,  this.print(strValue,  0,  strValue.length()));  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.print(strValue,  0,  this.print(strValue,  0,  strValue.length()));  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.print(strValue,  0,  this.print(strValue,  0,  strValue.length()));	  System.arraycopy(strValue,    0,    this.print(strValue,    0,    strValue.length()    -    1));    	non-compiled	[CE]  <identifier>  expected	16	None	replace
176	[BUG]  [BUGGY]  System.arraycopy(this.print(strValue,  0,  strValue,  0,  strValue.length()));  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.print(strValue,  0,  strValue,  0,  strValue.length()));  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.print(strValue,  0,  strValue,  0,  strValue.length()));	  System.arraycopy(strValue,    0,    this.print(strValue,    0,    strValue.length()    -    1));    	non-compiled	[CE]  <identifier>  expected	16	None	replace
177	[BUG]  [BUGGY]  ||(strValue  ==  null  &&  strValue.equals( "n ")))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(strValue  ==  null  &&  strValue.equals( "n ")))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue  ==  null  &&  strValue.equals( "n ")))  {  throw  new  IllegalArgumentException( " ");  }	  ||(strValue    ==    null    &&    strValue.equals(   "   ")))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
178	[BUG]  [BUGGY]  ||(strValue  ==  null  &&  strValue.equals( "* ")))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(strValue  ==  null  &&  strValue.equals( "* ")))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue  ==  null  &&  strValue.equals( "* ")))  {  throw  new  IllegalArgumentException( " ");  }	  ||(strValue    ==    null    &&    strValue.equals(   "   ")))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
179	[BUG]  [BUGGY]  ||(strValue  ==  null  &&  strValue.equals( "_ ")))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(strValue  ==  null  &&  strValue.equals( "_ ")))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue  ==  null  &&  strValue.equals( "_ ")))  {  throw  new  IllegalArgumentException( " ");  }	  ||(strValue    ==    null    &&    strValue.equals(   "   ")))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
180	[BUG]  [BUGGY]  if(nullString  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(nullString  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(nullString  ==  null)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	146	None	replace
181	[BUG]  [BUGGY]  if(nullString!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(nullString!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(nullString!=  null)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	146	None	replace
182	[BUG]  [BUGGY]  print(null,  strValue,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  print(null,  strValue,  0,  strValue.length()  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(null,  strValue,  0,  strValue.length()  -  1);	  print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	84	None	replace
183	[BUG]  [BUGGY]  if(strValue!=  null)  {  print(null,  strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  print(null,  strValue,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  print(null,  strValue,  0,  strValue.length());  }	  print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	84	None	replace
184	[BUG]  [BUGGY]  print(strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  print(strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(strValue,  0,  strValue.length());	  print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	84	None	replace
185	[BUG]  [BUGGY]  if(strValue!=  null)  {  print(null,  strValue,  0,  strValue.length());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  print(null,  strValue,  0,  strValue.length());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  print(null,  strValue,  0,  strValue.length());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	84	None	replace
186	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  0,  this.strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  0,  this.strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  strValue,  0,  this.strValue.length());	  System.arraycopy(strValue,    0,    this.strValue,    0,    strValue.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
187	[BUG]  [BUGGY]  ||(strValue  ==  null  &&  strValue.equals( "n ")))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(strValue  ==  null  &&  strValue.equals( "n ")))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue  ==  null  &&  strValue.equals( "n ")))  {  throw  new  IllegalStateException( " ");  }	  ||(strValue    ==    null    &&    strValue.equals(   "   ")))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
188	[BUG]  [BUGGY]  ||(strValue  ==  null  &&  strValue.equals( "* ")))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(strValue  ==  null  &&  strValue.equals( "* ")))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue  ==  null  &&  strValue.equals( "* ")))  {  throw  new  IllegalStateException( " ");  }	  ||(strValue    ==    null    &&    strValue.equals(   "   ")))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
189	[BUG]  [BUGGY]  ||(strValue  ==  null  &&  strValue.equals( "_ ")))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(strValue  ==  null  &&  strValue.equals( "_ ")))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue  ==  null  &&  strValue.equals( "_ ")))  {  throw  new  IllegalStateException( " ");  }	  ||(strValue    ==    null    &&    strValue.equals(   "   ")))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
190	[BUG]  [BUGGY]  if(strValue  ==  null)  {  out.write(strValue);  }  else  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  out.write(strValue);  }  else  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  out.write(strValue);  }  else  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }	  if(strValue!=    null)    {    out.write(strValue);    }    else    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
191	[BUG]  [BUGGY]  if(newRecord)  {  if(strValue!=  null)  {  out.write(strValue);  }  else  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(newRecord)  {  if(strValue!=  null)  {  out.write(strValue);  }  else  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(newRecord)  {  if(strValue!=  null)  {  out.write(strValue);  }  else  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }	  if(strValue!=    null)    {    out.write(strValue);    }    else    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
192	[BUG]  [BUGGY]  if(newRecord)  {  if(strValue  ==  null)  {  out.write(strValue);  }  else  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(newRecord)  {  if(strValue  ==  null)  {  out.write(strValue);  }  else  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(newRecord)  {  if(strValue  ==  null)  {  out.write(strValue);  }  else  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }	  if(strValue!=    null)    {    out.write(strValue);    }    else    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
193	[BUG]  [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  else  {  print(null,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  else  {  print(null,  nullString,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  else  {  print(null,  nullString,  0,  strValue.length());  }	  if(strValue!=    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    }    else    {    print(null,    nullString,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
194	[BUG]  [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }  else  {  print(null,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }  else  {  print(null,  nullString,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }  else  {  print(null,  nullString,  0,  strValue.length());  }	  if(strValue!=    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    }    else    {    print(null,    nullString,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
195	[BUG]  [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }  else  {  print(null,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }  else  {  print(null,  nullString,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }  else  {  print(null,  nullString,  0,  strValue.length());  }	  if(strValue!=    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    }    else    {    print(null,    nullString,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
196	[BUG]  [BUGGY]  if(newRecord)  {  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(newRecord)  {  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(newRecord)  {  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }	  if(strValue    ==    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    this.print(null,    nullString,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
197	[BUG]  [BUGGY]  if(newRecord)  {  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(newRecord)  {  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(newRecord)  {  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }	  if(strValue    ==    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    this.print(null,    nullString,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
198	[BUG]  [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  this.print(null,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  this.print(null,  nullString,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  this.print(null,  nullString,  0,  strValue.length());  }	  if(strValue    ==    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    this.print(null,    nullString,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
199	[BUG]  [BUGGY]  if(newRecord)  {  if(strValue  ==  null)  {  out.write(strValue);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(newRecord)  {  if(strValue  ==  null)  {  out.write(strValue);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(newRecord)  {  if(strValue  ==  null)  {  out.write(strValue);  }	  if(strValue!=    null)    {    out.write(strValue);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
200	[BUG]  [BUGGY]  if(newRecord)  {  if(strValue!=  null)  {  out.write(strValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(newRecord)  {  if(strValue!=  null)  {  out.write(strValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(newRecord)  {  if(strValue!=  null)  {  out.write(strValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(strValue!=    null)    {    out.write(strValue);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
201	[BUG]  [BUGGY]  if(newRecord)  {  if(strValue  ==  null)  {  out.write(strValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(newRecord)  {  if(strValue  ==  null)  {  out.write(strValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(newRecord)  {  if(strValue  ==  null)  {  out.write(strValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(strValue!=    null)    {    out.write(strValue);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
202	[BUG]  [BUGGY]  if(newRecord)  {  if(strValue!=  null)  {  out.write(nullString);  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(newRecord)  {  if(strValue!=  null)  {  out.write(nullString);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(newRecord)  {  if(strValue!=  null)  {  out.write(nullString);  }	  if(strValue!=    null)    {    out.write(strValue);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
203	[BUG]  [BUGGY]  System.arraycopy(this.print(strValue,  0,  this.length,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.print(strValue,  0,  this.length,  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.print(strValue,  0,  this.length,  strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.length,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	140	None	replace
204	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.length,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.length,  nullString,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.length,  nullString,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.length,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	140	None	replace
205	[BUG]  [BUGGY]  System.arraycopy(this.print(strValue,  0,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.print(strValue,  0,  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.print(strValue,  0,  strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.length,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	140	None	replace
206	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(value),  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(value),  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(value),  strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.length,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	140	None	replace
207	[BUG]  [BUGGY]  System.arraycopy(value,  0,  this.length,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  0,  this.length,  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  this.length,  strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.length,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	140	None	replace
208	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  null,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  null,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.strValue,  null,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.strValue,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	110	None	replace
209	[BUG]  [BUGGY]  System.arraycopy(value,  0,  this.strValue,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  0,  this.strValue,  nullString,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  this.strValue,  nullString,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.strValue,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	110	None	replace
210	[BUG]  [BUGGY]  this.print(strValue,  null,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  this.print(strValue,  null,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(strValue,  null,  0,  strValue.length());	  this.print(nullString,    null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	47	None	replace
211	[BUG]  [BUGGY]  this.print(null,  null,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  this.print(null,  null,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(null,  null,  0,  strValue.length());	  this.print(nullString,    null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	47	None	replace
212	[BUG]  [BUGGY]  this.print(nullString,  null,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  this.print(nullString,  null,  0,  strValue.length()  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(nullString,  null,  0,  strValue.length()  -  1);	  this.print(nullString,    null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	47	None	replace
213	[BUG]  [BUGGY]  this.print(nullString,  null,  0,  strValue.length()  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  this.print(nullString,  null,  0,  strValue.length()  +  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(nullString,  null,  0,  strValue.length()  +  1);	  this.print(nullString,    null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	47	None	replace
214	[BUG]  [BUGGY]  if(strValue  ==  null)  {  print(null,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  print(null,  nullString,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  print(null,  nullString,  0,  strValue.length());  }	  if(strValue!=    null)    {    print(null,    nullString,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
215	[BUG]  [BUGGY]  parse(null,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  parse(null,  nullString,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	parse(null,  nullString,  0,  strValue.length());	  if(strValue!=    null)    {    print(null,    nullString,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
216	[BUG]  [BUGGY]  if(strValue  ==  null)  {  print(null,  nullString,  0,  strValue.length()  +  1);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  print(null,  nullString,  0,  strValue.length()  +  1);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  print(null,  nullString,  0,  strValue.length()  +  1);  }	  if(strValue!=    null)    {    print(null,    nullString,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
217	[BUG]  [BUGGY]  if(strValue!=  null)  {  print(null,  nullString,  0,  strValue.length()  +  1);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  print(null,  nullString,  0,  strValue.length()  +  1);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  print(null,  nullString,  0,  strValue.length()  +  1);  }	  if(strValue!=    null)    {    print(null,    nullString,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
218	[BUG]  [BUGGY]  print(strValue,  null,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  print(strValue,  null,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(strValue,  null,  0,  strValue.length());	  print(nullString,    null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	31	None	replace
219	[BUG]  [BUGGY]  print(nullString,  null,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  print(nullString,  null,  0,  strValue.length()  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(nullString,  null,  0,  strValue.length()  -  1);	  print(nullString,    null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	31	None	replace
220	[BUG]  [BUGGY]  print(null,  null,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  print(null,  null,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(null,  null,  0,  strValue.length());	  print(nullString,    null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	31	None	replace
221	[BUG]  [BUGGY]  print(null,  null,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  print(null,  null,  0,  strValue.length()  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(null,  null,  0,  strValue.length()  -  1);	  print(nullString,    null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	31	None	replace
222	[BUG]  [BUGGY]  print(nullString,  null,  0,  strValue.length()  -  2);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  print(nullString,  null,  0,  strValue.length()  -  2);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(nullString,  null,  0,  strValue.length()  -  2);	  print(nullString,    null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	31	None	replace
223	[BUG]  [BUGGY]  print(nullString,  null,  0,  strValue.length()  +  1);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  print(nullString,  null,  0,  strValue.length()  +  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(nullString,  null,  0,  strValue.length()  +  1);	  print(nullString,    null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	31	None	replace
224	[BUG]  [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length());  this.print(nullString,  null,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length());  this.print(nullString,  null,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length());  this.print(nullString,  null,  0,  strValue.length());  }	  if(strValue!=    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    this.print(nullString,    null,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
225	[BUG]  [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length());  this.print(nullString,  null,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length());  this.print(nullString,  null,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length());  this.print(nullString,  null,  0,  strValue.length());  }	  if(strValue!=    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    this.print(nullString,    null,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
226	[BUG]  [BUGGY]  Thread.currentThread().setCurrentName(nullString);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Thread.currentThread().setCurrentName(nullString);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Thread.currentThread().setCurrentName(nullString);	  Thread.currentThread().intermediate();    	non-compiled	[CE]  <identifier>  expected	143	None	replace
227	[BUG]  [BUGGY]  Thread.currentThread().flush();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Thread.currentThread().flush();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Thread.currentThread().flush();	  Thread.currentThread().intermediate();    	non-compiled	[CE]  <identifier>  expected	143	None	replace
228	[BUG]  [BUGGY]  Thread.currentThread().setCurrentName(strValue);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Thread.currentThread().setCurrentName(strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Thread.currentThread().setCurrentName(strValue);	  Thread.currentThread().intermediate();    	non-compiled	[CE]  <identifier>  expected	143	None	replace
229	[BUG]  [BUGGY]  Thread.currentThread().setCurrentTime(strValue);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Thread.currentThread().setCurrentTime(strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Thread.currentThread().setCurrentTime(strValue);	  Thread.currentThread().intermediate();    	non-compiled	[CE]  <identifier>  expected	143	None	replace
230	[BUG]  [BUGGY]  Thread.currentThread().setCurrentToken(strValue);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Thread.currentThread().setCurrentToken(strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Thread.currentThread().setCurrentToken(strValue);	  Thread.currentThread().intermediate();    	non-compiled	[CE]  <identifier>  expected	143	None	replace
231	[BUG]  [BUGGY]  Thread.currentThread().intermediate(this);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Thread.currentThread().intermediate(this);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Thread.currentThread().intermediate(this);	  Thread.currentThread().intermediate();    	non-compiled	[CE]  <identifier>  expected	143	None	replace
232	[BUG]  [BUGGY]  this.print(null,  strValue,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  this.print(null,  strValue,  0,  strValue.length()  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(null,  strValue,  0,  strValue.length()  -  1);	  this.print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
233	[BUG]  [BUGGY]  this.print(null,  strValue,  0,  strValue.length()  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  this.print(null,  strValue,  0,  strValue.length()  +  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(null,  strValue,  0,  strValue.length()  +  1);	  this.print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
234	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  this.print(strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.strValue,  0,  this.print(strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  this.print(strValue,  0,  strValue.length());	  System.arraycopy(this.strValue,    0,    strValue,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	23	None	replace
235	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(strValue),  strValue.length());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(strValue),  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(strValue),  strValue.length());	  System.arraycopy(this.strValue,    0,    strValue,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	23	None	replace
236	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(value,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(value,  nullString,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(value,  nullString,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
237	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(null,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(null,  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(null,  strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
238	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(null,  nullString,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(null,  nullString,  0,  strValue.length()  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(null,  nullString,  0,  strValue.length()  -  1);	  System.arraycopy(strValue,    0,    this.print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
239	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(null,  nullString,  0,  strValue.length()  -  2);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(null,  nullString,  0,  strValue.length()  -  2);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(null,  nullString,  0,  strValue.length()  -  2);	  System.arraycopy(strValue,    0,    this.print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
240	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(number,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(number,  nullString,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(number,  nullString,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
241	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(name,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(name,  nullString,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(name,  nullString,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
242	[BUG]  [BUGGY]  ||(nullString  ==  null  &&  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(nullString  ==  null  &&  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(nullString  ==  null  &&  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  ||(strValue    ==    null    &&    strValue.length()    >    0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
243	[BUG]  [BUGGY]  ||(value  ==  null  &&  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(value  ==  null  &&  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(value  ==  null  &&  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  ||(strValue    ==    null    &&    strValue.length()    >    0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
244	[BUG]  [BUGGY]  ||(value  ==  null  &&  value.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(value  ==  null  &&  value.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(value  ==  null  &&  value.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  ||(strValue    ==    null    &&    strValue.length()    >    0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
245	[BUG]  [BUGGY]  ||(strValue  ==  null  &&  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(strValue  ==  null  &&  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue  ==  null  &&  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ".getMessage());  }	  ||(strValue    ==    null    &&    strValue.length()    >    0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
246	[BUG]  [BUGGY]  ||(strValue  ==  null  &&  strValue.length()  >  0))  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(strValue  ==  null  &&  strValue.length()  >  0))  throw  new  IllegalArgumentException( " ");  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue  ==  null  &&  strValue.length()  >  0))  throw  new  IllegalArgumentException( " ");	  ||(strValue    ==    null    &&    strValue.length()    >    0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
247	[BUG]  [BUGGY]  out.write(strValue,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.write(strValue,  0,  strValue.length()  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.write(strValue,  0,  strValue.length()  -  1);	  out.write(strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
248	[BUG]  [BUGGY]  out.write(strValue,  0,  strValue.length()  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.write(strValue,  0,  strValue.length()  +  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.write(strValue,  0,  strValue.length()  +  1);	  out.write(strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
249	[BUG]  [BUGGY]  out.write(strValue,  0,  strValue.length()  -  2);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.write(strValue,  0,  strValue.length()  -  2);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.write(strValue,  0,  strValue.length()  -  2);	  out.write(strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
250	[BUG]  [BUGGY]  out.write(nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.write(nullString,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.write(nullString,  0,  strValue.length());	  out.write(strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
251	[BUG]  [BUGGY]  out.write(strValue,  0,  strValue.length()  +  2);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.write(strValue,  0,  strValue.length()  +  2);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.write(strValue,  0,  strValue.length()  +  2);	  out.write(strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
252	[BUG]  [BUGGY]  out.write(strValue,  0,  strValue.length()  -  4);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.write(strValue,  0,  strValue.length()  -  4);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.write(strValue,  0,  strValue.length()  -  4);	  out.write(strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
253	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(value,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(value,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(value,  0,  strValue.length());	  System.arraycopy(value,    0,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	101	None	replace
254	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  nullString.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  nullString.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  strValue,  nullString.length());	  System.arraycopy(strValue,    0,    this.strValue,    nullString.length());    	non-compiled	[CE]  <identifier>  expected	126	None	replace
255	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  nullString,  strValue.length());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  nullString,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.strValue,  nullString,  strValue.length());	  System.arraycopy(strValue,    0,    this.strValue,    nullString.length());    	non-compiled	[CE]  <identifier>  expected	126	None	replace
256	[BUG]  [BUGGY]  System.arraycopy(nullString,  0,  this.strValue,  strValue.length());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(nullString,  0,  this.strValue,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(nullString,  0,  this.strValue,  strValue.length());	  System.arraycopy(strValue,    0,    this.strValue,    nullString.length());    	non-compiled	[CE]  <identifier>  expected	126	None	replace
257	[BUG]  [BUGGY]  MutableFormat.print(this,  nullString,  strValue,  newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(this,  nullString,  strValue,  newRecord);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(this,  nullString,  strValue,  newRecord);	  MutableFormat.print(this,    nullString,    strValue);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
258	[BUG]  [BUGGY]  MutableFormat.print(this,  nullString,  null);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(this,  nullString,  null);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(this,  nullString,  null);	  MutableFormat.print(this,    nullString,    strValue);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
259	[BUG]  [BUGGY]  MutableFormat.println(this,  nullString,  strValue);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.println(this,  nullString,  strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.println(this,  nullString,  strValue);	  MutableFormat.print(this,    nullString,    strValue);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
260	[BUG]  [BUGGY]  MutableFormat.print(this,  nullString,  this.strValue);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(this,  nullString,  this.strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(this,  nullString,  this.strValue);	  MutableFormat.print(this,    nullString,    strValue);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
261	[BUG]  [BUGGY]  MutableFormat.print(this,  nullString,  nullValue);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(this,  nullString,  nullValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(this,  nullString,  nullValue);	  MutableFormat.print(this,    nullString,    strValue);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
262	[BUG]  [BUGGY]  MutableFormat.print(this,  nullString,  strValue,  false);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(this,  nullString,  strValue,  false);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(this,  nullString,  strValue,  false);	  MutableFormat.print(this,    nullString,    strValue);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
263	[BUG]  [BUGGY]  if(strValue  ==  null)  {  out.write(strValue);  }  else  {  this.print(nullString,  strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  out.write(strValue);  }  else  {  this.print(nullString,  strValue,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  out.write(strValue);  }  else  {  this.print(nullString,  strValue,  0,  strValue.length());  }	  if(strValue!=    null)    {    out.write(strValue);    }    else    {    this.print(nullString,    strValue,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
264	[BUG]  [BUGGY]  out.print(NullString);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.print(NullString);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.print(NullString);	  if(strValue    ==    null)    {    out.print(NullString);    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
265	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.print(NullString);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.print(NullString);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.print(NullString);  }	  if(strValue    ==    null)    {    out.print(NullString);    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
266	[BUG]  [BUGGY]  if(strValue!=  null  ||  strValue.length()  ==  0)  {  out.print(NullString);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null  ||  strValue.length()  ==  0)  {  out.print(NullString);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null  ||  strValue.length()  ==  0)  {  out.print(NullString);  }	  if(strValue    ==    null)    {    out.print(NullString);    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
267	[BUG]  [BUGGY]  if(strValue  ==  null  ||  strValue.length()  ==  0)  {  out.print(NullString);  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null  ||  strValue.length()  ==  0)  {  out.print(NullString);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null  ||  strValue.length()  ==  0)  {  out.print(NullString);  }	  if(strValue    ==    null)    {    out.print(NullString);    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
268	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.buffer,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.buffer,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.buffer,  0,  strValue.length());	  System.arraycopy(strValue,    0,    buffer,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	104	None	replace
269	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  buffer,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  buffer,  0,  strValue.length()  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  buffer,  0,  strValue.length()  -  1);	  System.arraycopy(strValue,    0,    buffer,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	104	None	replace
270	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(buffer,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(buffer,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(buffer,  0,  strValue.length());	  System.arraycopy(strValue,    0,    buffer,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	104	None	replace
271	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.out,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.out,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.out,  0,  strValue.length());	  System.arraycopy(strValue,    0,    buffer,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	104	None	replace
272	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(value,  nullString,  0,  strValue.length()));  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(value,  nullString,  0,  strValue.length()));  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(value,  nullString,  0,  strValue.length()));	  System.arraycopy(strValue,    0,    this.print(value,    strValue,    0,    strValue.length()));    	non-compiled	[CE]  <identifier>  expected	134	None	replace
273	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(value,  strValue,  0,  strValue.length()  -  1));  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(value,  strValue,  0,  strValue.length()  -  1));  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(value,  strValue,  0,  strValue.length()  -  1));	  System.arraycopy(strValue,    0,    this.print(value,    strValue,    0,    strValue.length()));    	non-compiled	[CE]  <identifier>  expected	134	None	replace
274	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(nullString,  strValue,  0,  strValue.length()));  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(nullString,  strValue,  0,  strValue.length()));  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(nullString,  strValue,  0,  strValue.length()));	  System.arraycopy(strValue,    0,    this.print(value,    strValue,    0,    strValue.length()));    	non-compiled	[CE]  <identifier>  expected	134	None	replace
275	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(value,  strValue,  0,  strValue.length()  +  1));  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(value,  strValue,  0,  strValue.length()  +  1));  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(value,  strValue,  0,  strValue.length()  +  1));	  System.arraycopy(strValue,    0,    this.print(value,    strValue,    0,    strValue.length()));    	non-compiled	[CE]  <identifier>  expected	134	None	replace
276	[BUG]  [BUGGY]  print(strValue,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  print(strValue,  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(strValue,  strValue,  0,  strValue.length());	  print(strValue,    nullString,    0,    strValue.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
277	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.append('n');  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.append('n');  }	  out.append('n');    	non-compiled	[CE]  <identifier>  expected	128	None	replace
278	[BUG]  [BUGGY]  if(strValue  ==  null)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  out.append('n');  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  out.append('n');  }	  out.append('n');    	non-compiled	[CE]  <identifier>  expected	128	None	replace
279	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.append('n');  }  else  {  this.print(strValue,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.append('n');  }  else  {  this.print(strValue,  nullString,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.append('n');  }  else  {  this.print(strValue,  nullString,  0,  strValue.length());  }	  out.append('n');    	non-compiled	[CE]  <identifier>  expected	128	None	replace
280	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.append('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.append('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.append('n');  }  else  {  throw  new  IllegalArgumentException( " ");  }	  out.append('n');    	non-compiled	[CE]  <identifier>  expected	128	None	replace
281	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.append('n');  }  else  {  this.print(nullString,  strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.append('n');  }  else  {  this.print(nullString,  strValue,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.append('n');  }  else  {  this.print(nullString,  strValue,  0,  strValue.length());  }	  out.append('n');    	non-compiled	[CE]  <identifier>  expected	128	None	replace
282	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.append('n');  }  else  {  this.print(null,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.append('n');  }  else  {  this.print(null,  nullString,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.append('n');  }  else  {  this.print(null,  nullString,  0,  strValue.length());  }	  out.append('n');    	non-compiled	[CE]  <identifier>  expected	128	None	replace
283	[BUG]  [BUGGY]  if(strValue  ==  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
284	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
285	[BUG]  [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('N');  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('N');  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('N');  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
286	[BUG]  [BUGGY]  if(strValue  ==  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('N');  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('N');  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('N');  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
287	[BUG]  [BUGGY]  String  nullString  =  nullString  ==  null?  Constants.EMPTY  :  nullString;  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  String  nullString  =  nullString  ==  null?  Constants.EMPTY  :  nullString;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	String  nullString  =  nullString  ==  null?  Constants.EMPTY  :  nullString;	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
288	[BUG]  [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append( "null ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append( "null ");  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
289	[BUG]  [BUGGY]  ||  newRecord)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||  newRecord)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||  newRecord)  {  throw  new  IllegalArgumentException( " ");  }	  if(newRecord)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
290	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(strValue,  0,  this.strValue.length()));  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(strValue,  0,  this.strValue.length()));  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(strValue,  0,  this.strValue.length()));	  System.arraycopy(this.strValue,    0,    strValue,    this.strValue);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
291	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  this.print(strValue,  0,  this.strValue.length()));  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.strValue,  0,  this.print(strValue,  0,  this.strValue.length()));  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  this.print(strValue,  0,  this.strValue.length()));	  System.arraycopy(this.strValue,    0,    strValue,    this.strValue);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
292	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  this.print(strValue,  0,  this.strValue.length());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.strValue,  0,  this.print(strValue,  0,  this.strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  this.print(strValue,  0,  this.strValue.length());	  System.arraycopy(this.strValue,    0,    strValue,    this.strValue);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
293	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  this.print(strValue,  0,  strValue.length()));  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.strValue,  0,  this.print(strValue,  0,  strValue.length()));  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  this.print(strValue,  0,  strValue.length()));	  System.arraycopy(this.strValue,    0,    strValue,    this.strValue);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
294	[BUG]  [BUGGY]  System.arraycopy(this.print(strValue,  0,  this.strValue,  0,  strValue.length()));  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.print(strValue,  0,  this.strValue,  0,  strValue.length()));  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.print(strValue,  0,  this.strValue,  0,  strValue.length()));	  System.arraycopy(this.strValue,    0,    this.strValue,    strValue);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
295	[BUG]  [BUGGY]  final  String  strValue  =  null?  Constants.EMPTY  :  nullString;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  final  String  strValue  =  null?  Constants.EMPTY  :  nullString;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	final  String  strValue  =  null?  Constants.EMPTY  :  nullString;	  final    String    strValue    =    nullString;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
296	[BUG]  [BUGGY]  final  String  strValue  =  nullString  ==  null?  Constants.NON_OBJECT  :  nullString;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  final  String  strValue  =  nullString  ==  null?  Constants.NON_OBJECT  :  nullString;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	final  String  strValue  =  nullString  ==  null?  Constants.NON_OBJECT  :  nullString;	  final    String    strValue    =    nullString;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
297	[BUG]  [BUGGY]  final  String  strValue  =  nullString  ==  null?  Constants.UNKNOWN  :  nullString;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  final  String  strValue  =  nullString  ==  null?  Constants.UNKNOWN  :  nullString;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	final  String  strValue  =  nullString  ==  null?  Constants.UNKNOWN  :  nullString;	  final    String    strValue    =    nullString;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
298	[BUG]  [BUGGY]  ||(nullString  ==  null  &&  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(nullString  ==  null  &&  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(nullString  ==  null  &&  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ");  }	  ||(strValue    ==    null    &&    strValue.length()    >    0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
299	[BUG]  [BUGGY]  ||(value  ==  null  &&  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(value  ==  null  &&  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(value  ==  null  &&  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ");  }	  ||(strValue    ==    null    &&    strValue.length()    >    0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
300	[BUG]  [BUGGY]  ||(strValue  ==  null  &&  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ".getMessage());  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(strValue  ==  null  &&  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ".getMessage());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue  ==  null  &&  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ".getMessage());  }	  ||(strValue    ==    null    &&    strValue.length()    >    0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
301	[BUG]  [BUGGY]  ||(value  ==  null  &&  value.length()  >  0))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(value  ==  null  &&  value.length()  >  0))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(value  ==  null  &&  value.length()  >  0))  {  throw  new  IllegalStateException( " ");  }	  ||(strValue    ==    null    &&    strValue.length()    >    0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
302	[BUG]  [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }  else  {  this.print(null,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }  else  {  this.print(null,  nullString,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }  else  {  this.print(null,  nullString,  0,  strValue.length());  }	  if(strValue!=    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    }    else    {    this.print(null,    nullString,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
303	[BUG]  [BUGGY]  System.arraycopy(this.out,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.out,  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.out,  strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.out,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	37	None	replace
304	[BUG]  [BUGGY]  System.arraycopy(this.out,  0,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.out,  0,  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.out,  0,  strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.out,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	37	None	replace
305	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.out,  strValue,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.out,  strValue,  0,  strValue.length()  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.out,  strValue,  0,  strValue.length()  -  1);	  System.arraycopy(strValue,    0,    this.out,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	37	None	replace
306	[BUG]  [BUGGY]  System.arraycopy(value,  0,  this.out,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  0,  this.out,  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  this.out,  strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.out,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	37	None	replace
307	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  this.strValue,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.strValue,  0,  this.strValue,  strValue.length()  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  this.strValue,  strValue.length()  -  1);	  System.arraycopy(this.strValue,    0,    this.strValue,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
308	[BUG]  [BUGGY]  System.arraycopy(this.print(strValue,  0,  this.strValue,  strValue.length()));  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.print(strValue,  0,  this.strValue,  strValue.length()));  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.print(strValue,  0,  this.strValue,  strValue.length()));	  System.arraycopy(this.strValue,    0,    this.strValue,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
309	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  this.strValue,  strValue.length()  -  2);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.strValue,  0,  this.strValue,  strValue.length()  -  2);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  this.strValue,  strValue.length()  -  2);	  System.arraycopy(this.strValue,    0,    this.strValue,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
310	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  this.strValue,  strValue.length()  -  1,  strValue.length());  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.strValue,  0,  this.strValue,  strValue.length()  -  1,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  this.strValue,  strValue.length()  -  1,  strValue.length());	  System.arraycopy(this.strValue,    0,    this.strValue,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
311	[BUG]  [BUGGY]  if(nullString  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(nullString  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(nullString  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	141	None	replace
312	[BUG]  [BUGGY]  if(nullString!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(nullString!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(nullString!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	141	None	replace
313	[BUG]  [BUGGY]  if(strValue!=  null  ||  strValue.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null  ||  strValue.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null  ||  strValue.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	141	None	replace
314	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(value,  strValue,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(value,  strValue,  0,  strValue.length()  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(value,  strValue,  0,  strValue.length()  -  1);	  System.arraycopy(strValue,    0,    this.print(value,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
315	[BUG]  [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.print(value,  strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.print(value,  strValue,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.print(value,  strValue,  0,  strValue.length());  }	  System.arraycopy(strValue,    0,    this.print(value,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
316	[BUG]  [BUGGY]  out.write(nullString.toString());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.write(nullString.toString());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.write(nullString.toString());	  out.write(strValue.toString());    	non-compiled	[CE]  <identifier>  expected	123	None	replace
317	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.write(strValue.toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.write(strValue.toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.write(strValue.toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  out.write(strValue.toString());    	non-compiled	[CE]  <identifier>  expected	123	None	replace
318	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.write(strValue.toString());  }  else  {  this.print(null,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.write(strValue.toString());  }  else  {  this.print(null,  nullString,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.write(strValue.toString());  }  else  {  this.print(null,  nullString,  0,  strValue.length());  }	  out.write(strValue.toString());    	non-compiled	[CE]  <identifier>  expected	123	None	replace
319	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.write(strValue.toString());  }  else  {  System.arraycopy(strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.write(strValue.toString());  }  else  {  System.arraycopy(strValue,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.write(strValue.toString());  }  else  {  System.arraycopy(strValue,  0,  strValue.length());  }	  out.write(strValue.toString());    	non-compiled	[CE]  <identifier>  expected	123	None	replace
320	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.write(strValue.toString());  }  else  {  this.print(null,  strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.write(strValue.toString());  }  else  {  this.print(null,  strValue,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.write(strValue.toString());  }  else  {  this.print(null,  strValue,  0,  strValue.length());  }	  out.write(strValue.toString());    	non-compiled	[CE]  <identifier>  expected	123	None	replace
321	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.write(strValue.toString());  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.write(strValue.toString());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.write(strValue.toString());  }	  out.write(strValue.toString());    	non-compiled	[CE]  <identifier>  expected	123	None	replace
322	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(strValue,  1,  strValue.length()));  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(strValue,  1,  strValue.length()));  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(strValue,  1,  strValue.length()));	  System.arraycopy(strValue,    0,    this.print(strValue,    0,    strValue.length()    -    2));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
323	[BUG]  [BUGGY]  ||(strValue!=  null  &&  strValue.equals( "n ")))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(strValue!=  null  &&  strValue.equals( "n ")))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue!=  null  &&  strValue.equals( "n ")))  {  throw  new  IllegalArgumentException( " ");  }	  ||(strValue!=    null    &&    strValue.equals(   "   ")))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
324	[BUG]  [BUGGY]  ||(strValue!=  null  &&  strValue.equals( "* ")))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(strValue!=  null  &&  strValue.equals( "* ")))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue!=  null  &&  strValue.equals( "* ")))  {  throw  new  IllegalArgumentException( " ");  }	  ||(strValue!=    null    &&    strValue.equals(   "   ")))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
325	[BUG]  [BUGGY]  ||(strValue!=  null  &&  strValue.equals( "_ ")))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(strValue!=  null  &&  strValue.equals( "_ ")))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue!=  null  &&  strValue.equals( "_ ")))  {  throw  new  IllegalArgumentException( " ");  }	  ||(strValue!=    null    &&    strValue.equals(   "   ")))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
326	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print,  value,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print,  value,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print,  value,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.print,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	105	None	replace
327	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print,  nullString,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print,  nullString,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.print,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	105	None	replace
328	[BUG]  [BUGGY]  System.arraycopy(this.print,  0,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.print,  0,  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.print,  0,  strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.print,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	105	None	replace
329	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print,  null,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print,  null,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print,  null,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.print,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	105	None	replace
330	[BUG]  [BUGGY]  System.arraycopy(value,  0,  this.print,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  0,  this.print,  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  this.print,  strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.print,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	105	None	replace
331	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print,  strValue,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print,  strValue,  0,  strValue.length()  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print,  strValue,  0,  strValue.length()  -  1);	  System.arraycopy(strValue,    0,    this.print,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	105	None	replace
332	[BUG]  [BUGGY]  if(strValue  ==  null)  {  out.write(strValue);  }  else  {  this.print(null,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  out.write(strValue);  }  else  {  this.print(null,  nullString,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  out.write(strValue);  }  else  {  this.print(null,  nullString,  0,  strValue.length());  }	  if(strValue!=    null)    {    out.write(strValue);    }    else    {    this.print(null,    nullString,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
333	[BUG]  [BUGGY]  if(newRecord)  {  if(strValue!=  null)  {  out.write(strValue);  }  else  {  this.print(null,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(newRecord)  {  if(strValue!=  null)  {  out.write(strValue);  }  else  {  this.print(null,  nullString,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(newRecord)  {  if(strValue!=  null)  {  out.write(strValue);  }  else  {  this.print(null,  nullString,  0,  strValue.length());  }	  if(strValue!=    null)    {    out.write(strValue);    }    else    {    this.print(null,    nullString,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
334	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(value,  0,  strValue.length()  -  1));  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(value,  0,  strValue.length()  -  1));  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(value,  0,  strValue.length()  -  1));	  System.arraycopy(strValue,    0,    this.print(value,    0,    strValue.length()));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
335	[BUG]  [BUGGY]  out.print(nullString,  strValue);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.print(nullString,  strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.print(nullString,  strValue);	  if(strValue!=    null)    {    out.print(nullString,    strValue);    }    	non-compiled	[CE]  <identifier>  expected	138	None	replace
336	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.print(nullString,  null);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.print(nullString,  null);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.print(nullString,  null);  }	  if(strValue!=    null)    {    out.print(nullString,    strValue);    }    	non-compiled	[CE]  <identifier>  expected	138	None	replace
337	[BUG]  [BUGGY]  out.print(nullString,  null);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.print(nullString,  null);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.print(nullString,  null);	  if(strValue!=    null)    {    out.print(nullString,    strValue);    }    	non-compiled	[CE]  <identifier>  expected	138	None	replace
338	[BUG]  [BUGGY]  if(strValue  ==  null)  {  out.print(nullString,  null);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  out.print(nullString,  null);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  out.print(nullString,  null);  }	  if(strValue!=    null)    {    out.print(nullString,    strValue);    }    	non-compiled	[CE]  <identifier>  expected	138	None	replace
339	[BUG]  [BUGGY]  if(strValue  ==  null)  {  out.print(nullString,  strValue);  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  out.print(nullString,  strValue);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  out.print(nullString,  strValue);  }	  if(strValue!=    null)    {    out.print(nullString,    strValue);    }    	non-compiled	[CE]  <identifier>  expected	138	None	replace
340	[BUG]  [BUGGY]  Printer  out.print(nullString,  strValue);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Printer  out.print(nullString,  strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Printer  out.print(nullString,  strValue);	  if(strValue!=    null)    {    out.print(nullString,    strValue);    }    	non-compiled	[CE]  <identifier>  expected	138	None	replace
341	[BUG]  [BUGGY]  if(newRecord)  {  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(newRecord)  {  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(newRecord)  {  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }	  if(strValue!=    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    this.print(null,    nullString,    0,    strValue.length());    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	136	None	replace
342	[BUG]  [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(strValue!=    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    this.print(null,    nullString,    0,    strValue.length());    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	136	None	replace
343	[BUG]  [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  else  {  print(nullString,  null,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  else  {  print(nullString,  null,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  else  {  print(nullString,  null,  0,  strValue.length());  }	  if(strValue!=    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    }    else    {    print(nullString,    null,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
344	[BUG]  [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }  else  {  print(nullString,  null,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }  else  {  print(nullString,  null,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }  else  {  print(nullString,  null,  0,  strValue.length());  }	  if(strValue!=    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    }    else    {    print(nullString,    null,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
345	[BUG]  [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }  else  {  print(nullString,  null,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }  else  {  print(nullString,  null,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }  else  {  print(nullString,  null,  0,  strValue.length());  }	  if(strValue!=    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    }    else    {    print(nullString,    null,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
346	[BUG]  [BUGGY]  Printer  out  =  new  Printer(strValue,  nullString,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Printer  out  =  new  Printer(strValue,  nullString,  0,  strValue.length()  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Printer  out  =  new  Printer(strValue,  nullString,  0,  strValue.length()  -  1);	  Printer    out    =    new    Printer(strValue,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	130	None	replace
347	[BUG]  [BUGGY]  Printer  out  =  new  Printer(strValue,  nullString,  0,  strValue.length()  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Printer  out  =  new  Printer(strValue,  nullString,  0,  strValue.length()  +  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Printer  out  =  new  Printer(strValue,  nullString,  0,  strValue.length()  +  1);	  Printer    out    =    new    Printer(strValue,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	130	None	replace
348	[BUG]  [BUGGY]  Printer  out  =  new  Printer(strValue,  nullString,  0,  strValue.length()  -  2);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Printer  out  =  new  Printer(strValue,  nullString,  0,  strValue.length()  -  2);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Printer  out  =  new  Printer(strValue,  nullString,  0,  strValue.length()  -  2);	  Printer    out    =    new    Printer(strValue,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	130	None	replace
349	[BUG]  [BUGGY]  Printer  out  =  new  Printer(nullString,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Printer  out  =  new  Printer(nullString,  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Printer  out  =  new  Printer(nullString,  strValue,  0,  strValue.length());	  Printer    out    =    new    Printer(strValue,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	130	None	replace
350	[BUG]  [BUGGY]  Printer  out  =  new  Printer(null,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Printer  out  =  new  Printer(null,  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Printer  out  =  new  Printer(null,  strValue,  0,  strValue.length());	  Printer    out    =    new    Printer(strValue,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	130	None	replace
351	[BUG]  [BUGGY]  Printer  out  =  new  Printer(nullString,  null,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Printer  out  =  new  Printer(nullString,  null,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Printer  out  =  new  Printer(nullString,  null,  0,  strValue.length());	  Printer    out    =    new    Printer(strValue,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	130	None	replace
352	[BUG]  [BUGGY]  this.print(strValue,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  this.print(strValue,  0,  strValue.length()  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(strValue,  0,  strValue.length()  -  1);	  this.print(strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	119	None	replace
353	[BUG]  [BUGGY]  this.print(strValue,  0,  strValue.length()  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  this.print(strValue,  0,  strValue.length()  +  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(strValue,  0,  strValue.length()  +  1);	  this.print(strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	119	None	replace
354	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  1,  strValue.length());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  1,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  strValue,  1,  strValue.length());	  System.arraycopy(strValue,    0,    this.strValue,    1,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
355	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  this.strValue,  1,  strValue.length());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.strValue,  0,  this.strValue,  1,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  this.strValue,  1,  strValue.length());	  System.arraycopy(strValue,    0,    this.strValue,    1,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
356	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  1,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  1,  strValue.length()  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.strValue,  1,  strValue.length()  -  1);	  System.arraycopy(strValue,    0,    this.strValue,    1,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
357	[BUG]  [BUGGY]  System.arraycopy(value,  0,  this.strValue,  1,  strValue.length());  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  0,  this.strValue,  1,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  this.strValue,  1,  strValue.length());	  System.arraycopy(strValue,    0,    this.strValue,    1,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
358	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  1,  strValue.length()  +  1);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  1,  strValue.length()  +  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.strValue,  1,  strValue.length()  +  1);	  System.arraycopy(strValue,    0,    this.strValue,    1,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
359	[BUG]  [BUGGY]  ||(strValue!=  null  &&  strValue.equals( "n ")))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(strValue!=  null  &&  strValue.equals( "n ")))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue!=  null  &&  strValue.equals( "n ")))  {  throw  new  IllegalStateException( " ");  }	  ||(strValue!=    null    &&    strValue.equals(   "   ")))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
360	[BUG]  [BUGGY]  ||(strValue!=  null  &&  strValue.equals( "* ")))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(strValue!=  null  &&  strValue.equals( "* ")))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue!=  null  &&  strValue.equals( "* ")))  {  throw  new  IllegalStateException( " ");  }	  ||(strValue!=    null    &&    strValue.equals(   "   ")))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
361	[BUG]  [BUGGY]  ||(strValue!=  null  &&  strValue.equals( "_ ")))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(strValue!=  null  &&  strValue.equals( "_ ")))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue!=  null  &&  strValue.equals( "_ ")))  {  throw  new  IllegalStateException( " ");  }	  ||(strValue!=    null    &&    strValue.equals(   "   ")))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
362	[BUG]  [BUGGY]  print(strValue,  nullValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  print(strValue,  nullValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(strValue,  nullValue,  0,  strValue.length());	  print(nullString,    nullValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	34	None	replace
363	[BUG]  [BUGGY]  print(nullString,  nullValue,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  print(nullString,  nullValue,  0,  strValue.length()  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(nullString,  nullValue,  0,  strValue.length()  -  1);	  print(nullString,    nullValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	34	None	replace
364	[BUG]  [BUGGY]  print(nullString,  nullValue,  0,  strValue.length()  -  2);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  print(nullString,  nullValue,  0,  strValue.length()  -  2);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(nullString,  nullValue,  0,  strValue.length()  -  2);	  print(nullString,    nullValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	34	None	replace
365	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.print(strValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.print(strValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.print(strValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  out.print(strValue);    	non-compiled	[CE]  <identifier>  expected	118	None	replace
366	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.print(strValue);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.print(strValue);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.print(strValue);  }	  out.print(strValue);    	non-compiled	[CE]  <identifier>  expected	118	None	replace
367	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.print(strValue);  }  else  {  this.print(nullString,  strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.print(strValue);  }  else  {  this.print(nullString,  strValue,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.print(strValue);  }  else  {  this.print(nullString,  strValue,  0,  strValue.length());  }	  out.print(strValue);    	non-compiled	[CE]  <identifier>  expected	118	None	replace
368	[BUG]  [BUGGY]  if(strValue  ==  null)  {  out.print(strValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  out.print(strValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  out.print(strValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  out.print(strValue);    	non-compiled	[CE]  <identifier>  expected	118	None	replace
369	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.print(strValue);  }  else  {  this.print(null,  strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.print(strValue);  }  else  {  this.print(null,  strValue,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.print(strValue);  }  else  {  this.print(null,  strValue,  0,  strValue.length());  }	  out.print(strValue);    	non-compiled	[CE]  <identifier>  expected	118	None	replace
370	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.print(strValue);  }  else  {  this.print(nullString,  null,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.print(strValue);  }  else  {  this.print(nullString,  null,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.print(strValue);  }  else  {  this.print(nullString,  null,  0,  strValue.length());  }	  out.print(strValue);    	non-compiled	[CE]  <identifier>  expected	118	None	replace
371	[BUG]  [BUGGY]  this.print(null,  nullString,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  this.print(null,  nullString,  0,  strValue.length()  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(null,  nullString,  0,  strValue.length()  -  1);	  this.print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
372	[BUG]  [BUGGY]  this.print(null,  nullString,  0,  strValue.length()  +  1);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  this.print(null,  nullString,  0,  strValue.length()  +  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(null,  nullString,  0,  strValue.length()  +  1);	  this.print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
373	[BUG]  [BUGGY]  this.print(null,  nullString,  0,  strValue.length()  -  2);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  this.print(null,  nullString,  0,  strValue.length()  -  2);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(null,  nullString,  0,  strValue.length()  -  2);	  this.print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
374	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(nullString,  value,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(nullString,  value,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(nullString,  value,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.print(nullString,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	40	None	replace
375	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(nullString,  null,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(nullString,  null,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(nullString,  null,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.print(nullString,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	40	None	replace
376	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(nullString,  strValue,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(nullString,  strValue,  0,  strValue.length()  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(nullString,  strValue,  0,  strValue.length()  -  1);	  System.arraycopy(strValue,    0,    this.print(nullString,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	40	None	replace
377	[BUG]  [BUGGY]  final  Object  strValue  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  final  Object  strValue  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	final  Object  strValue  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  final    strValue    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
378	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(value),  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(value),  0,  strValue.length()  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(value),  0,  strValue.length()  -  1);	  System.arraycopy(strValue,    0,    this.print(value),    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	56	None	replace
379	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(value,  strValue.length()),  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(value,  strValue.length()),  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(value,  strValue.length()),  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.print(value),    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	56	None	replace
380	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(value,  strValue.length()));  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(value,  strValue.length()));  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(value,  strValue.length()));	  System.arraycopy(strValue,    0,    this.print(value),    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	56	None	replace
381	[BUG]  [BUGGY]  MutableFormat.print(format,  nullString,  strValue);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(format,  nullString,  strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(format,  nullString,  strValue);	  MutableFormat.print(null,    nullString,    strValue);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
382	[BUG]  [BUGGY]  MutableFormat.print(null,  nullString,  strValue,  newRecord);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(null,  nullString,  strValue,  newRecord);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(null,  nullString,  strValue,  newRecord);	  MutableFormat.print(null,    nullString,    strValue);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
383	[BUG]  [BUGGY]  MutableFormat.print(null,  nullString,  this.strValue);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(null,  nullString,  this.strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(null,  nullString,  this.strValue);	  MutableFormat.print(null,    nullString,    strValue);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
384	[BUG]  [BUGGY]  MutableFormat.print(this,  null,  strValue);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(this,  null,  strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(this,  null,  strValue);	  MutableFormat.print(null,    nullString,    strValue);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
385	[BUG]  [BUGGY]  MutableFormat.print(value,  nullString,  strValue);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(value,  nullString,  strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(value,  nullString,  strValue);	  MutableFormat.print(null,    nullString,    strValue);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
386	[BUG]  [BUGGY]  MutableFormat.print(strValue,  nullString,  null);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(strValue,  nullString,  null);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(strValue,  nullString,  null);	  MutableFormat.print(null,    nullString,    strValue);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
387	[BUG]  [BUGGY]  out.write('0');  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.write('0');  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.write('0');	  out.write('ufffd');    	non-compiled	[CE]  <identifier>  expected	122	None	replace
388	[BUG]  [BUGGY]  out.write('/');  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.write('/');  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.write('/');	  out.write('ufffd');    	non-compiled	[CE]  <identifier>  expected	122	None	replace
389	[BUG]  [BUGGY]  out.write('#');  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.write('#');  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.write('#');	  out.write('ufffd');    	non-compiled	[CE]  <identifier>  expected	122	None	replace
390	[BUG]  [BUGGY]  out.write('%');  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.write('%');  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.write('%');	  out.write('ufffd');    	non-compiled	[CE]  <identifier>  expected	122	None	replace
391	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(strValue,  1,  strValue.length());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(strValue,  1,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(strValue,  1,  strValue.length());	  System.arraycopy(strValue,    0,    strValue,    1,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	133	None	replace
392	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  strValue,  1,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  strValue,  1,  strValue.length()  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  strValue,  1,  strValue.length()  -  1);	  System.arraycopy(strValue,    0,    strValue,    1,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	133	None	replace
393	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(strValue),  1,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(strValue),  1,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(strValue),  1,  strValue.length());	  System.arraycopy(strValue,    0,    strValue,    1,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	133	None	replace
394	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  value.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  value.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  strValue,  value.length());	  System.arraycopy(strValue,    0,    this.strValue,    value.length());    	non-compiled	[CE]  <identifier>  expected	125	None	replace
395	[BUG]  [BUGGY]  System.arraycopy(value,  0,  strValue,  this.strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  0,  strValue,  this.strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  strValue,  this.strValue.length());	  System.arraycopy(strValue,    0,    this.strValue,    value.length());    	non-compiled	[CE]  <identifier>  expected	125	None	replace
396	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  value.length()  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  value.length()  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.strValue,  value.length()  -  1);	  System.arraycopy(strValue,    0,    this.strValue,    value.length());    	non-compiled	[CE]  <identifier>  expected	125	None	replace
397	[BUG]  [BUGGY]  print(nullString,  strValue,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  print(nullString,  strValue,  0,  strValue.length()  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(nullString,  strValue,  0,  strValue.length()  -  1);	  print(nullString,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
398	[BUG]  [BUGGY]  out.print(null,  nullString);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.print(null,  nullString);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.print(null,  nullString);	  if(strValue!=    null)    {    out.print(null,    nullString);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
399	[BUG]  [BUGGY]  if(strValue  ==  null)  {  out.print(null,  nullString);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  out.print(null,  nullString);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  out.print(null,  nullString);  }	  if(strValue!=    null)    {    out.print(null,    nullString);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
400	[BUG]  [BUGGY]  if(strValue  ==  null  ||  strValue.length()  ==  0)  {  out.print(null,  nullString);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null  ||  strValue.length()  ==  0)  {  out.print(null,  nullString);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null  ||  strValue.length()  ==  0)  {  out.print(null,  nullString);  }	  if(strValue!=    null)    {    out.print(null,    nullString);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
401	[BUG]  [BUGGY]  Printer  out.print(null,  nullString);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Printer  out.print(null,  nullString);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Printer  out.print(null,  nullString);	  if(strValue!=    null)    {    out.print(null,    nullString);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
402	[BUG]  [BUGGY]  if(strValue  ==  null)  {  out.print(null,  nullString);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  out.print(null,  nullString);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  out.print(null,  nullString);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(strValue!=    null)    {    out.print(null,    nullString);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
403	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.print(null,  nullString);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.print(null,  nullString);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.print(null,  nullString);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(strValue!=    null)    {    out.print(null,    nullString);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
404	[BUG]  [BUGGY]  out.append(strValue);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.append(strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.append(strValue);	  out.append(nullString);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
405	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.append(nullString);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.append(nullString);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.append(nullString);  }	  out.append(nullString);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
406	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.append(nullString);  }  else  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.append(nullString);  }  else  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.append(nullString);  }  else  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }	  out.append(nullString);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
407	[BUG]  [BUGGY]  if(strValue  ==  null)  {  out.append(nullString);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  out.append(nullString);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  out.append(nullString);  }	  out.append(nullString);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
408	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.append(nullString);  }  else  {  this.print(strValue,  strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.append(nullString);  }  else  {  this.print(strValue,  strValue,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.append(nullString);  }  else  {  this.print(strValue,  strValue,  0,  strValue.length());  }	  out.append(nullString);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
409	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.append(nullString);  }  else  {  this.print(strValue,  null,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.append(nullString);  }  else  {  this.print(strValue,  null,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.append(nullString);  }  else  {  this.print(strValue,  null,  0,  strValue.length());  }	  out.append(nullString);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
410	[BUG]  [BUGGY]  if(strValue  ==  null)  {  out.append(nullString);  }  else  {  this.print(strValue,  strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  out.append(nullString);  }  else  {  this.print(strValue,  strValue,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  out.append(nullString);  }  else  {  this.print(strValue,  strValue,  0,  strValue.length());  }	  out.append(nullString);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
411	[BUG]  [BUGGY]  System.arraycopy(this.print(strValue,  0,  this.strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.print(strValue,  0,  this.strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.print(strValue,  0,  this.strValue,  0,  strValue.length());	  System.arraycopy(this.strValue,    0,    this.strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	43	None	replace
412	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  this.strValue,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.strValue,  0,  this.strValue,  0,  strValue.length()  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  this.strValue,  0,  strValue.length()  -  1);	  System.arraycopy(this.strValue,    0,    this.strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	43	None	replace
413	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  this.strValue,  0,  strValue.length()  -  2);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.strValue,  0,  this.strValue,  0,  strValue.length()  -  2);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  this.strValue,  0,  strValue.length()  -  2);	  System.arraycopy(this.strValue,    0,    this.strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	43	None	replace
414	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  this.strValue,  value);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.strValue,  0,  this.strValue,  value);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  this.strValue,  value);	  System.arraycopy(value,    0,    this.strValue,    strValue);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
415	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  value,  this.strValue);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  value,  this.strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  value,  this.strValue);	  System.arraycopy(value,    0,    this.strValue,    strValue);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
416	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  value,  this.strValue);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.strValue,  0,  value,  this.strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  value,  this.strValue);	  System.arraycopy(value,    0,    this.strValue,    strValue);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
417	[BUG]  [BUGGY]  System.arraycopy(value,  0,  this.strValue,  strValue,  nullString);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  0,  this.strValue,  strValue,  nullString);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  this.strValue,  strValue,  nullString);	  System.arraycopy(value,    0,    this.strValue,    strValue);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
418	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(nullString),  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(nullString),  0,  strValue.length()  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(nullString),  0,  strValue.length()  -  1);	  System.arraycopy(strValue,    0,    this.print(nullString),    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
419	[BUG]  [BUGGY]  System.arraycopy(nullString,  0,  this.print(strValue),  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(nullString,  0,  this.print(strValue),  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(nullString,  0,  this.print(strValue),  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.print(nullString),    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
420	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()  -  1);	  System.arraycopy(strValue,    0,    this.print(strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
421	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()  -  2);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()  -  2);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()  -  2);	  System.arraycopy(strValue,    0,    this.print(strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
422	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()  +  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()  +  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()  +  1);	  System.arraycopy(strValue,    0,    this.print(strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
423	[BUG]  [BUGGY]  MutableFormat.print(null,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(null,  nullString,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(null,  nullString,  0,  strValue.length());	  MutableFormat.print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	96	None	replace
424	[BUG]  [BUGGY]  MutableFormat.print(this,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(this,  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(this,  strValue,  0,  strValue.length());	  MutableFormat.print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	96	None	replace
425	[BUG]  [BUGGY]  MutableFormat.print(this.print(strValue,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(this.print(strValue,  nullString,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(this.print(strValue,  nullString,  0,  strValue.length());	  MutableFormat.print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	96	None	replace
426	[BUG]  [BUGGY]  MutableFormat.print(this,  null,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(this,  null,  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(this,  null,  strValue,  0,  strValue.length());	  MutableFormat.print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	96	None	replace
427	[BUG]  [BUGGY]  MutableFormat.print(this.print(null,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(this.print(null,  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(this.print(null,  strValue,  0,  strValue.length());	  MutableFormat.print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	96	None	replace
428	[BUG]  [BUGGY]  MutableFormat.print(format,  null,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(format,  null,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(format,  null,  0,  strValue.length());	  MutableFormat.print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	96	None	replace
429	[BUG]  [BUGGY]  MutableFormat.print(value,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(value,  nullString,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(value,  nullString,  0,  strValue.length());	  MutableFormat.print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	96	None	replace
430	[BUG]  [BUGGY]  print(null,  null,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  print(null,  null,  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(null,  null,  strValue,  0,  strValue.length());	  print(nullString,    null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	31	None	replace
431	[BUG]  [BUGGY]  print(null,  null,  0,  strValue.length()  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  print(null,  null,  0,  strValue.length()  +  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(null,  null,  0,  strValue.length()  +  1);	  print(nullString,    null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	31	None	replace
432	[BUG]  [BUGGY]  print(null,  null,  0,  strValue.length()  -  2);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  print(null,  null,  0,  strValue.length()  -  2);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(null,  null,  0,  strValue.length()  -  2);	  print(nullString,    null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	31	None	replace
433	[BUG]  [BUGGY]  System.arraycopy(value,  0,  strValue,  1,  strValue.length());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  0,  strValue,  1,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  strValue,  1,  strValue.length());	  System.arraycopy(strValue,    0,    strValue,    1,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	133	None	replace
434	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  value,  1,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  value,  1,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  value,  1,  strValue.length());	  System.arraycopy(strValue,    0,    strValue,    1,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	133	None	replace
435	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  buffer,  1,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  buffer,  1,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  buffer,  1,  strValue.length());	  System.arraycopy(strValue,    0,    strValue,    1,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	133	None	replace
436	[BUG]  [BUGGY]  if(newRecord)  {  out.print(null,  nullString);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(newRecord)  {  out.print(null,  nullString);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(newRecord)  {  out.print(null,  nullString);  }	  if(strValue!=    null)    {    out.print(null,    nullString);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
437	[BUG]  [BUGGY]  Output.print(null,  nullString);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Output.print(null,  nullString);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Output.print(null,  nullString);	  if(strValue!=    null)    {    out.print(null,    nullString);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
438	[BUG]  [BUGGY]  if(strValue  ==  null)  {  out.print(Null,  nullString);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  out.print(Null,  nullString);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  out.print(Null,  nullString);  }	  if(strValue!=    null)    {    out.print(null,    nullString);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
439	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.print(null,  strValue);  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.print(null,  strValue);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.print(null,  strValue);  }	  if(strValue!=    null)    {    out.print(null,    nullString);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
440	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  nullString,  strValue.toString());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  nullString,  strValue.toString());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.strValue,  nullString,  strValue.toString());	  System.arraycopy(strValue,    0,    this.strValue,    strValue.toString());    	non-compiled	[CE]  <identifier>  expected	135	None	replace
441	[BUG]  [BUGGY]  OutputStream  newRecord  =  out.print(nullString);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  OutputStream  newRecord  =  out.print(nullString);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	OutputStream  newRecord  =  out.print(nullString);	  if(newRecord)    {    out.print(nullString);    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
442	[BUG]  [BUGGY]  if(newRecord)  {  out.print(nullString,  strValue);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(newRecord)  {  out.print(nullString,  strValue);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(newRecord)  {  out.print(nullString,  strValue);  }	  if(newRecord)    {    out.print(nullString);    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
443	[BUG]  [BUGGY]  Appendable  out  =(Appendable)this.newRecord.clone();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Appendable  out  =(Appendable)this.newRecord.clone();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Appendable  out  =(Appendable)this.newRecord.clone();	  if(newRecord)    {    out.print(nullString);    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
444	[BUG]  [BUGGY]  if(newRecord)  {  if(strValue!=  null)  {  out.write(strValue);  }  else  {  System.arraycopy(strValue,  0,  strValu  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(newRecord)  {  if(strValue!=  null)  {  out.write(strValue);  }  else  {  System.arraycopy(strValue,  0,  strValu  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(newRecord)  {  if(strValue!=  null)  {  out.write(strValue);  }  else  {  System.arraycopy(strValue,  0,  strValu	  if(strValue!=    null)    {    out.write(strValue);    }    else    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
445	[BUG]  [BUGGY]  System.arraycopy(value,  0,  null,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  0,  null,  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  null,  strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	107	None	replace
446	[BUG]  [BUGGY]  ||(value!=  null  &&  strValue.equals( "   ")))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(value!=  null  &&  strValue.equals( "   ")))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(value!=  null  &&  strValue.equals( "   ")))  {  throw  new  IllegalArgumentException( " ");  }	  ||(strValue!=    null    &&    strValue.equals(   "   ")))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
447	[BUG]  [BUGGY]  ||(nullString!=  null  &&  strValue.equals( "   ")))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(nullString!=  null  &&  strValue.equals( "   ")))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(nullString!=  null  &&  strValue.equals( "   ")))  {  throw  new  IllegalArgumentException( " ");  }	  ||(strValue!=    null    &&    strValue.equals(   "   ")))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
448	[BUG]  [BUGGY]  ||(strValue!=  null  &&  strValue.equals( "- ")))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(strValue!=  null  &&  strValue.equals( "- ")))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue!=  null  &&  strValue.equals( "- ")))  {  throw  new  IllegalArgumentException( " ");  }	  ||(strValue!=    null    &&    strValue.equals(   "   ")))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
449	[BUG]  [BUGGY]  System.arraycopy(StrValue,  0,  this.strValue,  strValue.length());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(StrValue,  0,  this.strValue,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(StrValue,  0,  this.strValue,  strValue.length());	  System.arraycopy(strValue,    0,    this.strValue,    strValue.length()    -    2);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
450	[BUG]  [BUGGY]  if(newRecord)  {  out.print(NullString);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(newRecord)  {  out.print(NullString);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(newRecord)  {  out.print(NullString);  }	  if(strValue    ==    null)    {    out.print(NullString);    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
451	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.append(nullString);  }  else  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()));  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.append(nullString);  }  else  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()));  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.append(nullString);  }  else  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()));  }	  out.append(nullString);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
452	[BUG]  [BUGGY]  if(strValue  ==  null)  {  out.append(nullString);  }  else  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()));  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  out.append(nullString);  }  else  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()));  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  out.append(nullString);  }  else  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()));  }	  out.append(nullString);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
453	[BUG]  [BUGGY]  if(strValue  ==  null)  {  out.append(nullString);  }  else  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  out.append(nullString);  }  else  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  out.append(nullString);  }  else  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }	  out.append(nullString);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
454	[BUG]  [BUGGY]  safeRecord()  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  safeRecord()  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	safeRecord()  {  throw  new  IllegalArgumentException( " ");  }	  if(newRecord)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
455	[BUG]  [BUGGY]  MutableFormat.print(null,  newRecord)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(null,  newRecord)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(null,  newRecord)  {  throw  new  IllegalArgumentException( " ");  }	  if(newRecord)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
456	[BUG]  [BUGGY]  MutableFormat.print(null,  nullString,  newRecord)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(null,  nullString,  newRecord)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(null,  nullString,  newRecord)  {  throw  new  IllegalArgumentException( " ");  }	  if(newRecord)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
457	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Thread.currentThread().setContextClassLoader(newRecord);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Thread.currentThread().setContextClassLoader(newRecord);	  if(newRecord)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
458	[BUG]  [BUGGY]  if(newRecord)  {  if(strValue!=  null)  {  out.write(strValue);  }  else  {  this.print(nullString,  strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(newRecord)  {  if(strValue!=  null)  {  out.write(strValue);  }  else  {  this.print(nullString,  strValue,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(newRecord)  {  if(strValue!=  null)  {  out.write(strValue);  }  else  {  this.print(nullString,  strValue,  0,  strValue.length());  }	  if(strValue!=    null)    {    out.write(strValue);    }    else    {    this.print(nullString,    strValue,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
459	[BUG]  [BUGGY]  if(newRecord)  {  print(null,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(newRecord)  {  print(null,  nullString,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(newRecord)  {  print(null,  nullString,  0,  strValue.length());  }	  if(strValue!=    null)    {    print(null,    nullString,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
460	[BUG]  [BUGGY]  TextUtilities.print(null,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  TextUtilities.print(null,  nullString,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	TextUtilities.print(null,  nullString,  0,  strValue.length());	  if(strValue!=    null)    {    print(null,    nullString,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
461	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(value,  nullString,  strValue.length()));  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(value,  nullString,  strValue.length()));  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(value,  nullString,  strValue.length()));	  System.arraycopy(strValue,    0,    this.print(value,    0,    strValue.length()));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
462	[BUG]  [BUGGY]  System.arraycopy(value,  0,  nullString,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  0,  nullString,  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  nullString,  strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    nullString,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
463	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  nullString,  this.value,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  nullString,  this.value,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  nullString,  this.value,  0,  strValue.length());	  System.arraycopy(strValue,    0,    nullString,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
464	[BUG]  [BUGGY]  Printer  out  =  new  Printer(null,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Printer  out  =  new  Printer(null,  nullString,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Printer  out  =  new  Printer(null,  nullString,  0,  strValue.length());	  print(null,    nullString,    0,    strValue.length()    +    1);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
465	[BUG]  [BUGGY]  Printer  out  =  null,  nullString,  0,  strValue.length();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Printer  out  =  null,  nullString,  0,  strValue.length();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Printer  out  =  null,  nullString,  0,  strValue.length();	  print(null,    nullString,    0,    strValue.length()    +    1);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
466	[BUG]  [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  nullString,  0,  strValue.length());  }  else  {  print(null,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  nullString,  0,  strValue.length());  }  else  {  print(null,  nullString,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  nullString,  0,  strValue.length());  }  else  {  print(null,  nullString,  0,  strValue.length());  }	  if(strValue!=    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    }    else    {    print(null,    nullString,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
467	[BUG]  [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  nullString,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  nullString,  0,  strValue.length());  }	  if(strValue!=    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    }    else    {    print(null,    nullString,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
468	[BUG]  [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  nullString,  0,  strValue.length());  }  else  {  print(null,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  nullString,  0,  strValue.length());  }  else  {  print(null,  nullString,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  System.arraycopy(strValue,  0,  nullString,  0,  strValue.length());  }  else  {  print(null,  nullString,  0,  strValue.length());  }	  if(strValue!=    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    }    else    {    print(null,    nullString,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
469	[BUG]  [BUGGY]  if(newRecord)  {  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(newRecord)  {  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  nullString,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(newRecord)  {  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  nullString,  0,  strValue.length());  }	  if(strValue!=    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    }    else    {    print(null,    nullString,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
470	[BUG]  [BUGGY]  this.print(strValue,  nullString  ==  null?  Constants.EMPTY  :  nullString);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  this.print(strValue,  nullString  ==  null?  Constants.EMPTY  :  nullString);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(strValue,  nullString  ==  null?  Constants.EMPTY  :  nullString);	  this.print(strValue,    nullString);    	non-compiled	[CE]  <identifier>  expected	139	None	replace
471	[BUG]  [BUGGY]  this.print(strValue,  nullString  {  null?  Constants.EMPTY  :  nullString);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  this.print(strValue,  nullString  {  null?  Constants.EMPTY  :  nullString);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(strValue,  nullString  {  null?  Constants.EMPTY  :  nullString);	  this.print(strValue,    nullString);    	non-compiled	[CE]  <identifier>  expected	139	None	replace
472	[BUG]  [BUGGY]  this.print(strValue,  nullString!=  null?  Constants.EMPTY  :  nullString);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  this.print(strValue,  nullString!=  null?  Constants.EMPTY  :  nullString);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(strValue,  nullString!=  null?  Constants.EMPTY  :  nullString);	  this.print(strValue,    nullString);    	non-compiled	[CE]  <identifier>  expected	139	None	replace
473	[BUG]  [BUGGY]  this.print(null,  strValue);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  this.print(null,  strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(null,  strValue);	  this.print(strValue,    nullString);    	non-compiled	[CE]  <identifier>  expected	139	None	replace
474	[BUG]  [BUGGY]  safeRecord()  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  safeRecord()  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	safeRecord()  {  throw  new  IllegalStateException( " ");  }	  if(newRecord)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
475	[BUG]  [BUGGY]  safeNonArray(strValue))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  safeNonArray(strValue))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	safeNonArray(strValue))  {  throw  new  IllegalStateException( " ");  }	  if(newRecord)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
476	[BUG]  [BUGGY]  MutableFormat.print(null,  newRecord)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(null,  newRecord)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(null,  newRecord)  {  throw  new  IllegalStateException( " ");  }	  if(newRecord)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
477	[BUG]  [BUGGY]  safeNonArray(strValue)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  safeNonArray(strValue)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	safeNonArray(strValue)  {  throw  new  IllegalStateException( " ");  }	  if(newRecord)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
478	[BUG]  [BUGGY]  MutableFormat.print(null,  nullString,  newRecord)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(null,  nullString,  newRecord)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(null,  nullString,  newRecord)  {  throw  new  IllegalStateException( " ");  }	  if(newRecord)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
479	[BUG]  [BUGGY]  System.arraycopy(value,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.print(value,    strValue,    0,    strValue.length()));    	non-compiled	[CE]  <identifier>  expected	134	None	replace
480	[BUG]  [BUGGY]  System.arraycopy(value,  0,  this.print(value,  strValue,  0,  strValue.length()));  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  0,  this.print(value,  strValue,  0,  strValue.length()));  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  this.print(value,  strValue,  0,  strValue.length()));	  System.arraycopy(strValue,    0,    this.print(value,    strValue,    0,    strValue.length()));    	non-compiled	[CE]  <identifier>  expected	134	None	replace
481	[BUG]  [BUGGY]  print(value,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  print(value,  nullString,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(value,  nullString,  0,  strValue.length());	  print(null,    nullString,    0,    strValue.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
482	[BUG]  [BUGGY]  print(null,  nullValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  print(null,  nullValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(null,  nullValue,  0,  strValue.length());	  print(nullString,    nullValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	34	None	replace
483	[BUG]  [BUGGY]  System.arraycopy(value,  0,  this.print(strValue,  strValue)+  1,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  0,  this.print(strValue,  strValue)+  1,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  this.print(strValue,  strValue)+  1,  strValue.length());	  System.arraycopy(strValue,    0,    this.print(value,    strValue),    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	91	None	replace
484	[BUG]  [BUGGY]  System.arraycopy(value,  0,  this.print(strValue,  strValue)-  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  0,  this.print(strValue,  strValue)-  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  this.print(strValue,  strValue)-  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.print(value,    strValue),    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	91	None	replace
485	[BUG]  [BUGGY]  System.arraycopy(value,  strValue,  0,  this.print(value,  strValue.length()));  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  strValue,  0,  this.print(value,  strValue.length()));  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  strValue,  0,  this.print(value,  strValue.length()));	  System.arraycopy(strValue,    0,    this.print(value,    strValue),    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	91	None	replace
486	[BUG]  [BUGGY]  System.arraycopy(nullString,  0,  this.print(strValue,  0,  strValue.length()  -  1));  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(nullString,  0,  this.print(strValue,  0,  strValue.length()  -  1));  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(nullString,  0,  this.print(strValue,  0,  strValue.length()  -  1));	  System.arraycopy(nullString,    0,    this.print(strValue,    0,    strValue.length()));    	non-compiled	[CE]  <identifier>  expected	112	None	replace
487	[BUG]  [BUGGY]  System.arraycopy(null,  0,  this.print(strValue,  0,  strValue.length()  -  1));  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(null,  0,  this.print(strValue,  0,  strValue.length()  -  1));  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(null,  0,  this.print(strValue,  0,  strValue.length()  -  1));	  System.arraycopy(nullString,    0,    this.print(strValue,    0,    strValue.length()));    	non-compiled	[CE]  <identifier>  expected	112	None	replace
488	[BUG]  [BUGGY]  Parchet.checkState(value  ==  null);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Parchet.checkState(value  ==  null);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Parchet.checkState(value  ==  null);	  Parchet.checkState(strValue    ==    null);    	non-compiled	[CE]  <identifier>  expected	145	None	replace
489	[BUG]  [BUGGY]  Parchet.checkState(null  ==  strValue);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Parchet.checkState(null  ==  strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Parchet.checkState(null  ==  strValue);	  Parchet.checkState(strValue    ==    null);    	non-compiled	[CE]  <identifier>  expected	145	None	replace
490	[BUG]  [BUGGY]  Parchet.checkState(null!=  strValue);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Parchet.checkState(null!=  strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Parchet.checkState(null!=  strValue);	  Parchet.checkState(strValue    ==    null);    	non-compiled	[CE]  <identifier>  expected	145	None	replace
491	[BUG]  [BUGGY]  Parchet.checkState(null  <  strValue);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Parchet.checkState(null  <  strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Parchet.checkState(null  <  strValue);	  Parchet.checkState(strValue    ==    null);    	non-compiled	[CE]  <identifier>  expected	145	None	replace
492	[BUG]  [BUGGY]  if(newRecord)  {  out.print(nullString,  null);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(newRecord)  {  out.print(nullString,  null);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(newRecord)  {  out.print(nullString,  null);  }	  if(strValue!=    null)    {    out.print(nullString,    strValue);    }    	non-compiled	[CE]  <identifier>  expected	138	None	replace
493	[BUG]  [BUGGY]  this.print(nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  this.print(nullString,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(nullString,  0,  strValue.length());	  this.print(strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	119	None	replace
494	[BUG]  [BUGGY]  Parchet.checkState(nullString  ==  strValue);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Parchet.checkState(nullString  ==  strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Parchet.checkState(nullString  ==  strValue);	  Parchet.checkNotNull(strValue);    	non-compiled	[CE]  <identifier>  expected	147	None	replace
495	[BUG]  [BUGGY]  Parchet.checkNotNull(strValue,  nullString);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Parchet.checkNotNull(strValue,  nullString);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Parchet.checkNotNull(strValue,  nullString);	  Parchet.checkNotNull(strValue);    	non-compiled	[CE]  <identifier>  expected	147	None	replace
496	[BUG]  [BUGGY]  if(newRecord)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(newRecord)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(newRecord)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
497	[BUG]  [BUGGY]  if(nullString!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(nullString!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(nullString!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
498	[BUG]  [BUGGY]  if(nullString  ==  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(nullString  ==  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(nullString  ==  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
499	[BUG]  [BUGGY]  if(nullString  ==  null  &&  strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(nullString  ==  null  &&  strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(nullString  ==  null  &&  strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
500	[BUG]  [BUGGY]  final  String  strValue  =  nullString  >=  null?  Constants.EMPTY  :  nullString;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  final  String  strValue  =  nullString  >=  null?  Constants.EMPTY  :  nullString;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	final  String  strValue  =  nullString  >=  null?  Constants.EMPTY  :  nullString;	  final    String    strValue    =    nullString    ==    null?    Constants.EMPTY    :    nullString;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
501	[BUG]  [BUGGY]  final  String  strValue  =  nullString  ==  null?  Constants.EMPTY  :  nullString  +  1;  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  final  String  strValue  =  nullString  ==  null?  Constants.EMPTY  :  nullString  +  1;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	final  String  strValue  =  nullString  ==  null?  Constants.EMPTY  :  nullString  +  1;	  final    String    strValue    =    nullString    ==    null?    Constants.EMPTY    :    nullString;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
502	[BUG]  [BUGGY]  if(newRecord)  {  if(strValue!=  null)  {  for(int  i  =  0,  strValue  =  strValue.length();  i  <  strValue.length();  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(newRecord)  {  if(strValue!=  null)  {  for(int  i  =  0,  strValue  =  strValue.length();  i  <  strValue.length();  ++i)  {  out.append('n');  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(newRecord)  {  if(strValue!=  null)  {  for(int  i  =  0,  strValue  =  strValue.length();  i  <  strValue.length();  ++i)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0,    strValue    =    strValue.length();    i    <    strValue.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
503	[BUG]  [BUGGY]  if(nullString  ==  null)  {  if(strValue!=  null)  {  for(int  i  =  0,  strValue  =  strValue.length();  i  <  strValue.length();  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(nullString  ==  null)  {  if(strValue!=  null)  {  for(int  i  =  0,  strValue  =  strValue.length();  i  <  strValue.length();  ++i)  {  out.append('n');  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(nullString  ==  null)  {  if(strValue!=  null)  {  for(int  i  =  0,  strValue  =  strValue.length();  i  <  strValue.length();  ++i)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0,    strValue    =    strValue.length();    i    <    strValue.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
504	[BUG]  [BUGGY]  if(nullString!=  null)  {  for(int  i  =  0,  strValue  =  strValue.length();  i  <  strValue.length();  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(nullString!=  null)  {  for(int  i  =  0,  strValue  =  strValue.length();  i  <  strValue.length();  ++i)  {  out.append('n');  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(nullString!=  null)  {  for(int  i  =  0,  strValue  =  strValue.length();  i  <  strValue.length();  ++i)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0,    strValue    =    strValue.length();    i    <    strValue.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
505	[BUG]  [BUGGY]  if(nullString  ==  null)  {  for(int  i  =  0,  strValue  =  strValue.length();  i  <  strValue.length();  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(nullString  ==  null)  {  for(int  i  =  0,  strValue  =  strValue.length();  i  <  strValue.length();  ++i)  {  out.append('n');  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(nullString  ==  null)  {  for(int  i  =  0,  strValue  =  strValue.length();  i  <  strValue.length();  ++i)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0,    strValue    =    strValue.length();    i    <    strValue.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
506	[BUG]  [BUGGY]  Output.print(null,  strValue);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Output.print(null,  strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Output.print(null,  strValue);	  Output.print(nullString);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
507	[BUG]  [BUGGY]  Output.println(strValue);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Output.println(strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Output.println(strValue);	  Output.print(nullString);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
508	[BUG]  [BUGGY]  Output.print(nullString,  strValue);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Output.print(nullString,  strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Output.print(nullString,  strValue);	  Output.print(nullString);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
509	[BUG]  [BUGGY]  Printer.print(null,  strValue);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Printer.print(null,  strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Printer.print(null,  strValue);	  Output.print(nullString);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
510	[BUG]  [BUGGY]  Printer.print(null,  nullString);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Printer.print(null,  nullString);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Printer.print(null,  nullString);	  Output.print(nullString);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
511	[BUG]  [BUGGY]  out.print(strValue.toString());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.print(strValue.toString());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.print(strValue.toString());	  out.write(strValue.toString());    	non-compiled	[CE]  <identifier>  expected	123	None	replace
512	[BUG]  [BUGGY]  out.write(value.toString());  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.write(value.toString());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.write(value.toString());	  out.write(strValue.toString());    	non-compiled	[CE]  <identifier>  expected	123	None	replace
513	[BUG]  [BUGGY]  out.write(strValue  ==  null?  nullString  :  strValue.toString());  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.write(strValue  ==  null?  nullString  :  strValue.toString());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.write(strValue  ==  null?  nullString  :  strValue.toString());	  out.write(strValue.toString());    	non-compiled	[CE]  <identifier>  expected	123	None	replace
514	[BUG]  [BUGGY]  out.write(strValue  ==  null?  null  :  strValue.toString());  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.write(strValue  ==  null?  null  :  strValue.toString());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.write(strValue  ==  null?  null  :  strValue.toString());	  out.write(strValue.toString());    	non-compiled	[CE]  <identifier>  expected	123	None	replace
515	[BUG]  [BUGGY]  out.append(strValue.toString());  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.append(strValue.toString());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.append(strValue.toString());	  out.write(strValue.toString());    	non-compiled	[CE]  <identifier>  expected	123	None	replace
516	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  2,  strValue.length());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  2,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.strValue,  2,  strValue.length());	  System.arraycopy(strValue,    0,    this.strValue,    1,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
517	[BUG]  [BUGGY]  System.arraycopy(value,  0,  this.print(null,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  0,  this.print(null,  nullString,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  this.print(null,  nullString,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
518	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(null,  value,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(null,  value,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(null,  value,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
519	[BUG]  [BUGGY]  System.arraycopy(value,  0,  this.print(nullString,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  0,  this.print(nullString,  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  this.print(nullString,  strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.print(nullString,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	40	None	replace
520	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(name,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(name,  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(name,  strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.print(nullString,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	40	None	replace
521	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  this.strValue,  value.length());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.strValue,  0,  this.strValue,  value.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  this.strValue,  value.length());	  System.arraycopy(this.strValue,    0,    this.strValue,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
522	[BUG]  [BUGGY]  MutableFormat.print(null,  nullString,  value);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(null,  nullString,  value);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(null,  nullString,  value);	  MutableFormat.print(null,    nullString,    strValue);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
523	[BUG]  [BUGGY]  MutableFormat.print(newRecord,  nullString,  strValue);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(newRecord,  nullString,  strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(newRecord,  nullString,  strValue);	  MutableFormat.print(null,    nullString,    strValue);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
524	[BUG]  [BUGGY]  System.arraycopy(value,  0,  this.strValue,  nullString,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  0,  this.strValue,  nullString,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  this.strValue,  nullString,  strValue.length());	  System.arraycopy(value,    0,    this.strValue,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	124	None	replace
525	[BUG]  [BUGGY]  System.arraycopy(value,  0,  this.strValue,  strValue,  nullString.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  0,  this.strValue,  strValue,  nullString.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  this.strValue,  strValue,  nullString.length());	  System.arraycopy(value,    0,    this.strValue,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	124	None	replace
526	[BUG]  [BUGGY]  System.arraycopy(value,  0,  this.print(nullString,  0,  strValue.length()));  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  0,  this.print(nullString,  0,  strValue.length()));  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  this.print(nullString,  0,  strValue.length()));	  System.arraycopy(strValue,    0,    this.print(nullString,    0,    strValue.length()));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
527	[BUG]  [BUGGY]  System.arraycopy(value,  0,  this.print(strValue),  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  0,  this.print(strValue),  0,  strValue.length()  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  this.print(strValue),  0,  strValue.length()  -  1);	  System.arraycopy(value,    0,    this.print(strValue),    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	90	None	replace
528	[BUG]  [BUGGY]  if(strValue!=  null  &&  strValue.length()  ==  0)  {  out.print(nullString);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null  &&  strValue.length()  ==  0)  {  out.print(nullString);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null  &&  strValue.length()  ==  0)  {  out.print(nullString);  }	  if(strValue!=    null    ||    strValue.length()    ==    0)    {    out.print(nullString);    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
529	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  nullString,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  strValue,  nullString,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.strValue,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	110	None	replace
530	[BUG]  [BUGGY]  System.arraycopy(value,  0,  this.strValue,  nullString.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  0,  this.strValue,  nullString.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  this.strValue,  nullString.length());	  System.arraycopy(strValue,    0,    this.strValue,    nullString.length());    	non-compiled	[CE]  <identifier>  expected	126	None	replace
531	[BUG]  [BUGGY]  System.arraycopy(null,  0,  strValue,  this.strValue.length());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(null,  0,  strValue,  this.strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(null,  0,  strValue,  this.strValue.length());	  System.arraycopy(strValue,    0,    this.strValue,    nullString.length());    	non-compiled	[CE]  <identifier>  expected	126	None	replace
532	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.out,  value,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.out,  value,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.out,  value,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.out,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	37	None	replace
533	[BUG]  [BUGGY]  print(null,  nullString,  1,  strValue.toString());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  print(null,  nullString,  1,  strValue.toString());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(null,  nullString,  1,  strValue.toString());	  print(null,    nullString,    0,    strValue.toString());    	non-compiled	[CE]  <identifier>  expected	131	None	replace
534	[BUG]  [BUGGY]  print(value,  nullString,  0,  strValue.toString());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  print(value,  nullString,  0,  strValue.toString());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(value,  nullString,  0,  strValue.toString());	  print(null,    nullString,    0,    strValue.toString());    	non-compiled	[CE]  <identifier>  expected	131	None	replace
535	[BUG]  [BUGGY]  if(strValue  ==  null  ||  value!=  null)  {  out.print(nullString);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null  ||  value!=  null)  {  out.print(nullString);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null  ||  value!=  null)  {  out.print(nullString);  }	  if(strValue    ==    null    ||    strValue!=    null)    {    out.print(nullString);    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
536	[BUG]  [BUGGY]  if(strValue  ==  null  ||  this.newRecord)  {  out.print(nullString);  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null  ||  this.newRecord)  {  out.print(nullString);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null  ||  this.newRecord)  {  out.print(nullString);  }	  if(strValue    ==    null    ||    strValue!=    null)    {    out.print(nullString);    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
537	[BUG]  [BUGGY]  this.print(null,  null,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  this.print(null,  null,  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(null,  null,  strValue,  0,  strValue.length());	  this.print(nullString,    null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	47	None	replace
538	[BUG]  [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }  else  {  this.print(nullString,  null,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }  else  {  this.print(nullString,  null,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }  else  {  this.print(nullString,  null,  0,  strValue.length());  }	  if(strValue!=    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    }    else    {    this.print(nullString,    null,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
539	[BUG]  [BUGGY]  if(newRecord)  {  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(newRecord)  {  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(newRecord)  {  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }	  if(strValue!=    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    }    else    {    this.print(nullString,    null,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
540	[BUG]  [BUGGY]  if(newRecord)  {  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(newRecord)  {  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(newRecord)  {  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }	  if(strValue    ==    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    }    else    {    this.print(null,    nullString,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
541	[BUG]  [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }  else  {  this.print(null,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }  else  {  this.print(null,  nullString,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }  else  {  this.print(null,  nullString,  0,  strValue.length());  }	  if(strValue    ==    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    }    else    {    this.print(null,    nullString,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
542	[BUG]  [BUGGY]  ||(value!=  null  &&  value.length()  >  0))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(value!=  null  &&  value.length()  >  0))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(value!=  null  &&  value.length()  >  0))  {  throw  new  IllegalStateException( " ");  }	  ||(strValue!=    null    &&    strValue.length()    >    0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
543	[BUG]  [BUGGY]  &&(strValue!=  null  &&  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  &&(strValue!=  null  &&  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	&&(strValue!=  null  &&  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ");  }	  ||(strValue!=    null    &&    strValue.length()    >    0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
544	[BUG]  [BUGGY]  System.arraycopy(value,  0,  strValue,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  0,  strValue,  nullString,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  strValue,  nullString,  0,  strValue.length());	  System.arraycopy(strValue,    0,    out,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	106	None	replace
545	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  out,  nullString,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  out,  nullString,  0,  strValue.length()  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  out,  nullString,  0,  strValue.length()  -  1);	  System.arraycopy(strValue,    0,    out,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	106	None	replace
546	[BUG]  [BUGGY]  out.copy(strValue);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.copy(strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.copy(strValue);	  out.write(nullString);    	non-compiled	[CE]  <identifier>  expected	120	None	replace
547	[BUG]  [BUGGY]  MutableFormat.print(newRecord,  strValue);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(newRecord,  strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(newRecord,  strValue);	  MutableFormat.print(null,    strValue);    	non-compiled	[CE]  <identifier>  expected	148	None	replace
548	[BUG]  [BUGGY]  MutableFormat.print(value,  strValue);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(value,  strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(value,  strValue);	  MutableFormat.print(null,    strValue);    	non-compiled	[CE]  <identifier>  expected	148	None	replace
549	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.print(nullString);  }  else  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()));  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.print(nullString);  }  else  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()));  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.print(nullString);  }  else  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()));  }	  out.print(nullString);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
550	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.print(nullString);  }  else  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.print(nullString);  }  else  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.print(nullString);  }  else  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }	  out.print(nullString);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
551	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.print(nullString);  }  else  {  this.print(null,  strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.print(nullString);  }  else  {  this.print(null,  strValue,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.print(nullString);  }  else  {  this.print(null,  strValue,  0,  strValue.length());  }	  out.print(nullString);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
552	[BUG]  [BUGGY]  System.arraycopy(null,  0,  this.print(strValue),  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(null,  0,  this.print(strValue),  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(null,  0,  this.print(strValue),  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.print(nullString),    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
553	[BUG]  [BUGGY]  this.print(strValue,  value,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  this.print(strValue,  value,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(strValue,  value,  0,  strValue.length());	  this.print(value,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
554	[BUG]  [BUGGY]  System.arraycopy(value,  0,  strValue,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  0,  strValue,  0,  strValue.length()  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  strValue,  0,  strValue.length()  -  1);	  System.arraycopy(value,    0,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	101	None	replace
555	[BUG]  [BUGGY]  if(strValue  ==  null)  {  out.append('n');  }  else  {  this.print(null,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  out.append('n');  }  else  {  this.print(null,  nullString,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  out.append('n');  }  else  {  this.print(null,  nullString,  0,  strValue.length());  }	  out.append('n');    	non-compiled	[CE]  <identifier>  expected	128	None	replace
556	[BUG]  [BUGGY]  if(strValue  ==  null)  {  out.append('n');  }  else  {  this.print(nullString,  null,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  out.append('n');  }  else  {  this.print(nullString,  null,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  out.append('n');  }  else  {  this.print(nullString,  null,  0,  strValue.length());  }	  out.append('n');    	non-compiled	[CE]  <identifier>  expected	128	None	replace
557	[BUG]  [BUGGY]  ||(value  ==  null  &&  strValue.equals( "   ")))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(value  ==  null  &&  strValue.equals( "   ")))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(value  ==  null  &&  strValue.equals( "   ")))  {  throw  new  IllegalStateException( " ");  }	  ||(strValue    ==    null    &&    strValue.equals(   "   ")))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
558	[BUG]  [BUGGY]  &&(strValue  ==  null  ||  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  &&(strValue  ==  null  ||  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	&&(strValue  ==  null  ||  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  ||(strValue    ==    null    &&    strValue.length()    >    0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
559	[BUG]  [BUGGY]  &&(strValue  ==  null  ||  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  &&(strValue  ==  null  ||  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	&&(strValue  ==  null  ||  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ");  }	  ||(strValue    ==    null    &&    strValue.length()    >    0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
560	[BUG]  [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  nullString,  0,  strValue.length());  }  else  {  print(nullString,  null,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  nullString,  0,  strValue.length());  }  else  {  print(nullString,  null,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  nullString,  0,  strValue.length());  }  else  {  print(nullString,  null,  0,  strValue.length());  }	  if(strValue!=    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    }    else    {    print(nullString,    null,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
561	[BUG]  [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  nullString,  0,  strValue.length());  }  else  {  print(nullString,  null,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  nullString,  0,  strValue.length());  }  else  {  print(nullString,  null,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  System.arraycopy(strValue,  0,  nullString,  0,  strValue.length());  }  else  {  print(nullString,  null,  0,  strValue.length());  }	  if(strValue!=    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    }    else    {    print(nullString,    null,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
562	[BUG]  [BUGGY]  Printer  out  =  null,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Printer  out  =  null,  nullString,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Printer  out  =  null,  nullString,  0,  strValue.length());	  print(null,    nullString,    0,    strValue.length()    -    4);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
563	[BUG]  [BUGGY]  if(newRecord)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(newRecord)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(newRecord)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }	  if(strValue!=    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    this.print(null,    nullString,    0,    strValue.length());    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	136	None	replace
564	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  strValue,  nullString);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  strValue,  nullString);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.strValue,  strValue,  nullString);	  System.arraycopy(strValue,    0,    this.strValue,    nullString);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
565	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  null);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  null);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.strValue,  null);	  System.arraycopy(strValue,    0,    this.strValue,    nullString);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
566	[BUG]  [BUGGY]  System.arraycopy(value,  0,  this.print(value,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  0,  this.print(value,  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  this.print(value,  strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.print(value,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
567	[BUG]  [BUGGY]  if(strValue  ==  null  ||  strValue.length()  ==  0)  {  out.print(new  String(nullString));  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null  ||  strValue.length()  ==  0)  {  out.print(new  String(nullString));  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null  ||  strValue.length()  ==  0)  {  out.print(new  String(nullString));  }	  if(strValue    ==    null    ||    strValue.length()    ==    0)    {    out.print(nullString);    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
568	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  currValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  currValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  currValue,  0,  strValue.length());	  System.arraycopy(null,    0,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	103	None	replace
569	[BUG]  [BUGGY]  Thread.currentThread().interrupt(null);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Thread.currentThread().interrupt(null);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Thread.currentThread().interrupt(null);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  <identifier>  expected	95	None	replace
570	[BUG]  [BUGGY]  Thread.currentThread().interrupt(throw);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Thread.currentThread().interrupt(throw);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Thread.currentThread().interrupt(throw);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  <identifier>  expected	95	None	replace
571	[BUG]  [BUGGY]  reader.print(NullString,  null,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  reader.print(NullString,  null,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	reader.print(NullString,  null,  0,  strValue.length());	  reader.print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	142	None	replace
572	[BUG]  [BUGGY]  Printer  out  =  new  Printer(strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Printer  out  =  new  Printer(strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Printer  out  =  new  Printer(strValue,  0,  strValue.length());	  print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	84	None	replace
573	[BUG]  [BUGGY]  if(strValue!=  null)  {  print(null,  strValue,  0,  strValue.length());  }  else  {  System.arraycopy(strValue,  0,  value.length());  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  print(null,  strValue,  0,  strValue.length());  }  else  {  System.arraycopy(strValue,  0,  value.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  print(null,  strValue,  0,  strValue.length());  }  else  {  System.arraycopy(strValue,  0,  value.length());  }	  print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	84	None	replace
574	[BUG]  [BUGGY]  if(strValue!=  null)  {  print(null,  strValue,  0,  strValue.length());  }  else  {  out.print('n');  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  print(null,  strValue,  0,  strValue.length());  }  else  {  out.print('n');  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  print(null,  strValue,  0,  strValue.length());  }  else  {  out.print('n');  }	  print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	84	None	replace
575	[BUG]  [BUGGY]  System.arraycopy(value,  0,  this.print(strValue,  0,  strValue.length()  +  1));  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  0,  this.print(strValue,  0,  strValue.length()  +  1));  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  this.print(strValue,  0,  strValue.length()  +  1));	  System.arraycopy(value,    0,    this.print(strValue,    0,    strValue.length()));    	non-compiled	[CE]  <identifier>  expected	20	None	replace
576	[BUG]  [BUGGY]  out.println(strValue);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.println(strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.println(strValue);	  out.print(strValue);    	non-compiled	[CE]  <identifier>  expected	118	None	replace
577	[BUG]  [BUGGY]  out.print(strValue,  nullString);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.print(strValue,  nullString);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.print(strValue,  nullString);	  out.print(strValue);    	non-compiled	[CE]  <identifier>  expected	118	None	replace
578	[BUG]  [BUGGY]  out.print(this.nullString);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.print(this.nullString);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.print(this.nullString);	  out.print(strValue);    	non-compiled	[CE]  <identifier>  expected	118	None	replace
579	[BUG]  [BUGGY]  out.append('ufffd');  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.append('ufffd');  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.append('ufffd');	  out.write('ufffd');    	non-compiled	[CE]  <identifier>  expected	122	None	replace
580	[BUG]  [BUGGY]  out.write(':');  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.write(':');  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.write(':');	  out.write('ufffd');    	non-compiled	[CE]  <identifier>  expected	122	None	replace
581	[BUG]  [BUGGY]  ||(value!=  null  &&  value.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(value!=  null  &&  value.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(value!=  null  &&  value.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  ||(strValue!=    null    &&    strValue.length()    >    0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
582	[BUG]  [BUGGY]  &&(strValue!=  null  &&  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  &&(strValue!=  null  &&  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	&&(strValue!=  null  &&  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  ||(strValue!=    null    &&    strValue.length()    >    0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
583	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.length,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.length,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.length,  0,  strValue.length());	  System.arraycopy(strValue,    0,    value,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	102	None	replace
584	[BUG]  [BUGGY]  if(newRecord)  {  if(strValue  ==  null)  {  out.write(strValue);  }  else  {  this.print(nullString,  null,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(newRecord)  {  if(strValue  ==  null)  {  out.write(strValue);  }  else  {  this.print(nullString,  null,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(newRecord)  {  if(strValue  ==  null)  {  out.write(strValue);  }  else  {  this.print(nullString,  null,  0,  strValue.length());  }	  if(strValue!=    null)    {    out.write(strValue);    }    else    {    this.print(nullString,    null,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
585	[BUG]  [BUGGY]  if(newRecord)  {  if(strValue  ==  null)  {  out.write(strValue);  }  else  {  this.print(null,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(newRecord)  {  if(strValue  ==  null)  {  out.write(strValue);  }  else  {  this.print(null,  nullString,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(newRecord)  {  if(strValue  ==  null)  {  out.write(strValue);  }  else  {  this.print(null,  nullString,  0,  strValue.length());  }	  if(strValue!=    null)    {    out.write(strValue);    }    else    {    this.print(null,    nullString,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
586	[BUG]  [BUGGY]  Thread.currentThread().intermediate(strValue);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Thread.currentThread().intermediate(strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Thread.currentThread().intermediate(strValue);	  Thread.currentThread().intermediate();    	non-compiled	[CE]  <identifier>  expected	143	None	replace
587	[BUG]  [BUGGY]  Thread.currentThread().print(null,  strValue);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Thread.currentThread().print(null,  strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Thread.currentThread().print(null,  strValue);	  Thread.currentThread().intermediate();    	non-compiled	[CE]  <identifier>  expected	143	None	replace
588	[BUG]  [BUGGY]  Thread.currentThread().intermediate(nullString);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Thread.currentThread().intermediate(nullString);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Thread.currentThread().intermediate(nullString);	  Thread.currentThread().intermediate();    	non-compiled	[CE]  <identifier>  expected	143	None	replace
589	[BUG]  [BUGGY]  Thread.currentThread().intermediateThread();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Thread.currentThread().intermediateThread();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Thread.currentThread().intermediateThread();	  Thread.currentThread().intermediate();    	non-compiled	[CE]  <identifier>  expected	143	None	replace
590	[BUG]  [BUGGY]  System.arraycopy(value,  0,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  0,  nullString,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  nullString,  0,  strValue.length());	  System.arraycopy(strValue,    0,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	64	None	replace
591	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  nullString,  0,  strValue.length()  +  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  nullString,  0,  strValue.length()  +  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  nullString,  0,  strValue.length()  +  1);	  System.arraycopy(strValue,    0,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	64	None	replace
592	[BUG]  [BUGGY]  MutableFormat.print(newRecord,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(newRecord,  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(newRecord,  strValue,  0,  strValue.length());	  MutableFormat.print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	96	None	replace
593	[BUG]  [BUGGY]  MutableFormat.print(value,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(value,  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(value,  strValue,  0,  strValue.length());	  MutableFormat.print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	96	None	replace
594	[BUG]  [BUGGY]  MutableFormat.print(out,  null,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(out,  null,  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(out,  null,  strValue,  0,  strValue.length());	  MutableFormat.print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	96	None	replace
595	[BUG]  [BUGGY]  System.arraycopy(value,  0,  out,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  0,  out,  nullString,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  out,  nullString,  0,  strValue.length());	  System.arraycopy(value,    0,    out,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	108	None	replace
596	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  nullString,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  nullString,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  nullString,  strValue.length());	  System.arraycopy(this.strValue,    0,    strValue,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	23	None	replace
597	[BUG]  [BUGGY]  System.arraycopy(value,  0,  strValue,  strValue.length());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  0,  strValue,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  strValue,  strValue.length());	  System.arraycopy(this.strValue,    0,    strValue,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	23	None	replace
598	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(strValue)+  1,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(strValue)+  1,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(strValue)+  1,  strValue.length());	  System.arraycopy(strValue,    0,    this.print(strValue),    0,    strValue.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
599	[BUG]  [BUGGY]  this.print(null,  nullString,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  this.print(null,  nullString,  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(null,  nullString,  strValue,  0,  strValue.length());	  this.print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
600	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  this.strValue,  0);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.strValue,  0,  this.strValue,  0);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  this.strValue,  0);	  System.arraycopy(this.strValue,    0,    this.strValue,    strValue);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
601	[BUG]  [BUGGY]  out.write(value,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.write(value,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.write(value,  0,  strValue.length());	  out.write(strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
602	[BUG]  [BUGGY]  out.copy(strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.copy(strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.copy(strValue,  0,  strValue.length());	  out.write(strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
603	[BUG]  [BUGGY]  out.print('n');  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.print('n');  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.print('n');	  out.write('n');    	non-compiled	[CE]  <identifier>  expected	121	None	replace
604	[BUG]  [BUGGY]  out.write('n',  strValue);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.write('n',  strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.write('n',  strValue);	  out.write('n');    	non-compiled	[CE]  <identifier>  expected	121	None	replace
605	[BUG]  [BUGGY]  ||(value  ==  null  &&  strValue.equals( "   ")))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(value  ==  null  &&  strValue.equals( "   ")))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(value  ==  null  &&  strValue.equals( "   ")))  {  throw  new  IllegalArgumentException( " ");  }	  ||(strValue    ==    null    &&    strValue.equals(   "   ")))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
606	[BUG]  [BUGGY]  if(newRecord)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(nullString,  null,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(newRecord)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(nullString,  null,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(newRecord)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(nullString,  null,  0,  strValue.length());  }	  if(strValue    ==    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    this.print(nullString,    null,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
607	[BUG]  [BUGGY]  ||(nullString!=  null  &&  strValue.equals( "   ")))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(nullString!=  null  &&  strValue.equals( "   ")))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(nullString!=  null  &&  strValue.equals( "   ")))  {  throw  new  IllegalStateException( " ");  }	  ||(strValue!=    null    &&    strValue.equals(   "   ")))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
608	[BUG]  [BUGGY]  ||(value!=  null  &&  strValue.equals( "   ")))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(value!=  null  &&  strValue.equals( "   ")))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(value!=  null  &&  strValue.equals( "   ")))  {  throw  new  IllegalStateException( " ");  }	  ||(strValue!=    null    &&    strValue.equals(   "   ")))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
609	[BUG]  [BUGGY]  final  String  strValue  =  nullString  ==  null?  Constants.NUMBER  :  nullString;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  final  String  strValue  =  nullString  ==  null?  Constants.NUMBER  :  nullString;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	final  String  strValue  =  nullString  ==  null?  Constants.NUMBER  :  nullString;	  final    String    strValue    =    nullString;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
610	[BUG]  [BUGGY]  final  String  strValue  =  nullString  ==  null?  Constants.NONE  :  nullString;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  final  String  strValue  =  nullString  ==  null?  Constants.NONE  :  nullString;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	final  String  strValue  =  nullString  ==  null?  Constants.NONE  :  nullString;	  final    String    strValue    =    nullString;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
611	[BUG]  [BUGGY]  Printer  out  =  format.print(strValue);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Printer  out  =  format.print(strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Printer  out  =  format.print(strValue);	  Printer    out    =    null.print(strValue);    	non-compiled	[CE]  <identifier>  expected	137	None	replace
612	[BUG]  [BUGGY]  Printer  out  =  this.out.print(strValue);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Printer  out  =  this.out.print(strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Printer  out  =  this.out.print(strValue);	  Printer    out    =    null.print(strValue);    	non-compiled	[CE]  <identifier>  expected	137	None	replace
613	[BUG]  [BUGGY]  Printer  out  =  this.print(strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Printer  out  =  this.print(strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Printer  out  =  this.print(strValue,  0,  strValue.length());	  Printer    out    =    null.print(strValue);    	non-compiled	[CE]  <identifier>  expected	137	None	replace
614	[BUG]  [BUGGY]  final  int  strValue  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  final  int  strValue  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	final  int  strValue  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  final    strValue    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
615	[BUG]  [BUGGY]  final  char  strValue  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  final  char  strValue  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	final  char  strValue  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  final    strValue    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
616	[BUG]  [BUGGY]  final  int  strValue  {  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  final  int  strValue  {  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	final  int  strValue  {  null)  {  throw  new  IllegalArgumentException( " ");  }	  final    strValue    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
617	[BUG]  [BUGGY]  final  int  strValue  =  nullString)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  final  int  strValue  =  nullString)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	final  int  strValue  =  nullString)  {  throw  new  IllegalArgumentException( " ");  }	  final    strValue    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
618	[BUG]  [BUGGY]  final  int  strValue  =  nullString;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  final  int  strValue  =  nullString;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	final  int  strValue  =  nullString;	  final    strValue    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
619	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  null,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  null,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  null,  0,  strValue.length());	  System.arraycopy(strValue,    0,    out,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	65	None	replace
620	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  out,  1,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  out,  1,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  out,  1,  strValue.length());	  System.arraycopy(strValue,    0,    out,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	65	None	replace
621	[BUG]  [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }	  if(strValue!=    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    this.print(null,    nullString,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
622	[BUG]  [BUGGY]  if(newRecord)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(newRecord)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(newRecord)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  }	  if(strValue!=    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
623	[BUG]  [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  nullString,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  System.arraycopy(strValue,  0,  nullString,  0,  strValue.length());  }	  if(strValue!=    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
624	[BUG]  [BUGGY]  if(strValue  ==  null)  {  throw  new  IllegalStateException( " ".getMessage());  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  throw  new  IllegalStateException( " ".getMessage());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  throw  new  IllegalStateException( " ".getMessage());  }	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	146	None	replace
625	[BUG]  [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }	  if(strValue    ==    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    this.print(null,    nullString,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
626	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.strValue,  0,  nullString,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  nullString,  0,  strValue.length());	  System.arraycopy(this.strValue,    0,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	42	None	replace
627	[BUG]  [BUGGY]  System.arraycopy(value,  0,  strValue,  this.strValue);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  0,  strValue,  this.strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  strValue,  this.strValue);	  System.arraycopy(strValue,    0,    this.strValue,    value);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
628	[BUG]  [BUGGY]  if(strValue!=  null  &&  strValue  ==  null)  {  out.print(nullString);  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null  &&  strValue  ==  null)  {  out.print(nullString);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null  &&  strValue  ==  null)  {  out.print(nullString);  }	  if(strValue!=    null    ||    strValue    ==    null)    {    out.print(nullString);    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
629	[BUG]  [BUGGY]  if(strValue  ==  null  ||  value  ==  null)  {  out.print(nullString);  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null  ||  value  ==  null)  {  out.print(nullString);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null  ||  value  ==  null)  {  out.print(nullString);  }	  if(strValue!=    null    ||    strValue    ==    null)    {    out.print(nullString);    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
630	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  nullString,  this.strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.strValue,  0,  nullString,  this.strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  nullString,  this.strValue.length());	  System.arraycopy(this.strValue,    0,    strValue,    this.strValue.length());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
631	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  this.strValue,  this.strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.strValue,  0,  this.strValue,  this.strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  this.strValue,  this.strValue.length());	  System.arraycopy(this.strValue,    0,    strValue,    this.strValue.length());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
632	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  this.strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  this.strValue.length()  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  strValue,  this.strValue.length()  -  1);	  System.arraycopy(this.strValue,    0,    strValue,    this.strValue.length());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
633	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  this.print(strValue),  this.strValue.length());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.strValue,  0,  this.print(strValue),  this.strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  this.print(strValue),  this.strValue.length());	  System.arraycopy(this.strValue,    0,    strValue,    this.strValue.length());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
634	[BUG]  [BUGGY]  this.print(null,  strValue,  0,  strValue.length()  -  2);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  this.print(null,  strValue,  0,  strValue.length()  -  2);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(null,  strValue,  0,  strValue.length()  -  2);	  this.print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
635	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.length,  value,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.length,  value,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.length,  value,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.length,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	140	None	replace
636	[BUG]  [BUGGY]  System.arraycopy(null,  0,  this.length,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(null,  0,  this.length,  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(null,  0,  this.length,  strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.length,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	140	None	replace
637	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.length,  strValue,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.length,  strValue,  0,  strValue.length()  -  1);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.length,  strValue,  0,  strValue.length()  -  1);	  System.arraycopy(strValue,    0,    this.length,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	140	None	replace
638	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  printNull,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  printNull,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  printNull,  0,  strValue.length());	  System.arraycopy(strValue,    0,    buffer,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	104	None	replace
639	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(buffer,  0,  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(buffer,  0,  strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    buffer,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	104	None	replace
640	[BUG]  [BUGGY]  final  int  strValue  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  final  int  strValue  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	final  int  strValue  ==  null)  {  throw  new  IllegalStateException( " ");  }	  final    strValue    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
641	[BUG]  [BUGGY]  final  char  strValue  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  final  char  strValue  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	final  char  strValue  ==  null)  {  throw  new  IllegalStateException( " ");  }	  final    strValue    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
642	[BUG]  [BUGGY]  final  int  strValue  {  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  final  int  strValue  {  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	final  int  strValue  {  null)  {  throw  new  IllegalStateException( " ");  }	  final    strValue    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
643	[BUG]  [BUGGY]  final  int  strValue  =  nullString)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  final  int  strValue  =  nullString)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	final  int  strValue  =  nullString)  {  throw  new  IllegalStateException( " ");  }	  final    strValue    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
644	[BUG]  [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }  else  {  this.print(nullString,  null,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }  else  {  this.print(nullString,  null,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  }  else  {  this.print(nullString,  null,  0,  strValue.length());  }	  if(strValue    ==    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    }    else    {    this.print(nullString,    null,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
645	[BUG]  [BUGGY]  MutableFormat.print(this,  nullString,  value);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(this,  nullString,  value);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(this,  nullString,  value);	  MutableFormat.print(this,    nullString,    strValue);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
646	[BUG]  [BUGGY]  MutableFormat.print(this,  nullString,  this.out,  strValue);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(this,  nullString,  this.out,  strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(this,  nullString,  this.out,  strValue);	  MutableFormat.print(this,    nullString,    strValue);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
647	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  this.strValue,  nullString);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  this.strValue,  nullString);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  strValue,  this.strValue,  nullString);	  System.arraycopy(this.strValue,    0,    strValue,    this.strValue);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
648	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  nullString,  this.strValue);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.strValue,  0,  nullString,  this.strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  nullString,  this.strValue);	  System.arraycopy(this.strValue,    0,    strValue,    this.strValue);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
649	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  this.strValue,  0);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  this.strValue,  0);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  strValue,  this.strValue,  0);	  System.arraycopy(this.strValue,    0,    strValue,    this.strValue);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
650	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  this.strValue,  newRecord);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  this.strValue,  newRecord);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  strValue,  this.strValue,  newRecord);	  System.arraycopy(this.strValue,    0,    strValue,    this.strValue);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
651	[BUG]  [BUGGY]  System.arraycopy(this.str,  0,  this.strValue,  strValue);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.str,  0,  this.strValue,  strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.str,  0,  this.strValue,  strValue);	  System.arraycopy(this.strValue,    0,    strValue,    this.strValue);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
652	[BUG]  [BUGGY]  ||(strValue  ==  null  &&  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ".);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(strValue  ==  null  &&  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ".);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue  ==  null  &&  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ".);  }	  ||(strValue    ==    null    &&    strValue.length()    >    0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
653	[BUG]  [BUGGY]  ||(value  ==  nullString  &&  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(value  ==  nullString  &&  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(value  ==  nullString  &&  strValue.length()  >  0))  {  throw  new  IllegalStateException( " ");  }	  ||(strValue    ==    null    &&    strValue.length()    >    0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
654	[BUG]  [BUGGY]  print(nullString,  null,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  print(nullString,  null,  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(nullString,  null,  strValue,  0,  strValue.length());	  print(nullString,    nullValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	34	None	replace
655	[BUG]  [BUGGY]  if(strValue  ==  null  ||  strValue  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null  ||  strValue  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null  ||  strValue  ==  null)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	146	None	replace
656	[BUG]  [BUGGY]  if(strValue  ==  null  ||  strValue!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null  ||  strValue!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null  ||  strValue!=  null)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	146	None	replace
657	[BUG]  [BUGGY]  ||(strValue  ==  null  &&  strValue.length()  >  0))  throw  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(strValue  ==  null  &&  strValue.length()  >  0))  throw  new  IllegalStateException( " ");  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue  ==  null  &&  strValue.length()  >  0))  throw  new  IllegalStateException( " ");	  ||(strValue!=    null    &&    strValue.length()    >    0))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
658	[BUG]  [BUGGY]  MutableFormat.print(this,  nullString,  this.value);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(this,  nullString,  this.value);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(this,  nullString,  this.value);	  MutableFormat.print(this,    nullString,    strValue);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
659	[BUG]  [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  this.print(nullString,  null,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  this.print(nullString,  null,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  this.print(nullString,  null,  0,  strValue.length());  }	  if(strValue!=    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    this.print(nullString,    null,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
660	[BUG]  [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  this.print(nullString,  null,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  this.print(nullString,  null,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  this.strValue,  0,  strValue.length());  this.print(nullString,  null,  0,  strValue.length());  }	  if(strValue!=    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    this.print(nullString,    null,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
661	[BUG]  [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()));  this.print(nullString,  null,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()));  this.print(nullString,  null,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()));  this.print(nullString,  null,  0,  strValue.length());  }	  if(strValue!=    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    this.print(nullString,    null,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
662	[BUG]  [BUGGY]  final  String  strValue  =  null;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  final  String  strValue  =  null;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	final  String  strValue  =  null;	  final    String    strValue    =    nullString;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
663	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  this.strValue,  this.strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  this.strValue,  this.strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  strValue,  this.strValue,  this.strValue.length());	  System.arraycopy(this.strValue,    0,    strValue,    this.strValue.length());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
664	[BUG]  [BUGGY]  System.arraycopy(this.str,  0,  this.strValue,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.str,  0,  this.strValue,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.str,  0,  this.strValue,  strValue.length());	  System.arraycopy(this.strValue,    0,    strValue,    this.strValue.length());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
665	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.print(nullString,  nullString);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.print(nullString,  nullString);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.print(nullString,  nullString);  }	  if(strValue!=    null)    {    out.print(nullString,    strValue);    }    	non-compiled	[CE]  <identifier>  expected	138	None	replace
666	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.print(nullString,  value);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.print(nullString,  value);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.print(nullString,  value);  }	  if(strValue!=    null)    {    out.print(nullString,    strValue);    }    	non-compiled	[CE]  <identifier>  expected	138	None	replace
667	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  this.strValue);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  this.strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.strValue,  this.strValue);	  System.arraycopy(this.strValue,    0,    this.strValue,    strValue);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
668	[BUG]  [BUGGY]  Printer  out  =  new  Printer(strValue,  null,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Printer  out  =  new  Printer(strValue,  null,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Printer  out  =  new  Printer(strValue,  null,  0,  strValue.length());	  print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	84	None	replace
669	[BUG]  [BUGGY]  print(value,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  print(value,  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(value,  strValue,  0,  strValue.length());	  print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	84	None	replace
670	[BUG]  [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(nullString,  null,  0,  strValue.length());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(nullString,  null,  0,  strValue.length());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(nullString,  null,  0,  strValue.length());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  System.arraycopy(strValue,    0,    nullString,    0,    strValue.length());    this.print(nullString,    null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	100	None	replace
671	[BUG]  [BUGGY]  this.print(null,  nullString,  1,  strValue.length());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  this.print(null,  nullString,  1,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(null,  nullString,  1,  strValue.length());	  this.print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
672	[BUG]  [BUGGY]  out.write(strValue.toString()  + ".js ");  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.write(strValue.toString()  + ".js ");  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.write(strValue.toString()  + ".js ");	  out.write(strValue.toString());    	non-compiled	[CE]  <identifier>  expected	123	None	replace
673	[BUG]  [BUGGY]  out.write(strValue.toString()  + "n ");  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.write(strValue.toString()  + "n ");  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.write(strValue.toString()  + "n ");	  out.write(strValue.toString());    	non-compiled	[CE]  <identifier>  expected	123	None	replace
674	[BUG]  [BUGGY]  if(strValue  ==  null)  {  Output.print(nullString);  }  else  {  this.print(strValue,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  Output.print(nullString);  }  else  {  this.print(strValue,  nullString,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  Output.print(nullString);  }  else  {  this.print(strValue,  nullString,  0,  strValue.length());  }	  Output.print(nullString);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
675	[BUG]  [BUGGY]  if(strValue  ==  null)  {  Output.print(nullString);  }  else  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()));  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  Output.print(nullString);  }  else  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()));  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  Output.print(nullString);  }  else  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()));  }	  Output.print(nullString);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
676	[BUG]  [BUGGY]  if(strValue  ==  null)  {  Output.print(nullString);  }  else  {  this.print(null,  strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  Output.print(nullString);  }  else  {  this.print(null,  strValue,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  Output.print(nullString);  }  else  {  this.print(null,  strValue,  0,  strValue.length());  }	  Output.print(nullString);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
677	[BUG]  [BUGGY]  Printer  out  =  new  Printer(strValue.toString(),  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Printer  out  =  new  Printer(strValue.toString(),  nullString,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Printer  out  =  new  Printer(strValue.toString(),  nullString,  0,  strValue.length());	  print(null,    nullString,    0,    strValue.length()    -    2);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
678	[BUG]  [BUGGY]  Printer  out  =  new  Printer(strValue.toString());  this.print(null,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Printer  out  =  new  Printer(strValue.toString());  this.print(null,  nullString,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Printer  out  =  new  Printer(strValue.toString());  this.print(null,  nullString,  0,  strValue.length());	  print(null,    nullString,    0,    strValue.length()    -    2);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
679	[BUG]  [BUGGY]  if(strValue  ==  null)  {  out.write(strValue);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  out.write(strValue);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  out.write(strValue);  }	  if(strValue!=    null)    {    out.write(strValue);    }    else    {    this.print(nullString,    null,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
680	[BUG]  [BUGGY]  safeMultiply(strValue,  newRecord)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  safeMultiply(strValue,  newRecord)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	safeMultiply(strValue,  newRecord)  {  throw  new  IllegalStateException( " ");  }	  if(newRecord)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
681	[BUG]  [BUGGY]  safeMultiply(strValue,  nullString)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  safeMultiply(strValue,  nullString)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	safeMultiply(strValue,  nullString)  {  throw  new  IllegalStateException( " ");  }	  if(newRecord)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
682	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(getClass().getClassLoader());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Thread.currentThread().setContextClassLoader(getClass().getClassLoader());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Thread.currentThread().setContextClassLoader(getClass().getClassLoader());	  if(newRecord)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
683	[BUG]  [BUGGY]  if(strValue  ==  null  ||  strValue!=  null)  {  for(int  i  =  0,  strValue  =  strValue.length();  i  <  strValue.length();  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null  ||  strValue!=  null)  {  for(int  i  =  0,  strValue  =  strValue.length();  i  <  strValue.length();  ++i)  {  out.append('n');  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null  ||  strValue!=  null)  {  for(int  i  =  0,  strValue  =  strValue.length();  i  <  strValue.length();  ++i)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0,    strValue    =    strValue.length();    i    <    strValue.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
684	[BUG]  [BUGGY]  if(strValue  ==  null)  {  for(int  i  =  0,  strValue  =  strValue.length();  i  <  strValue.length();  ++i)  {  out.append('N');  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  for(int  i  =  0,  strValue  =  strValue.length();  i  <  strValue.length();  ++i)  {  out.append('N');  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  for(int  i  =  0,  strValue  =  strValue.length();  i  <  strValue.length();  ++i)  {  out.append('N');  }	  if(strValue!=    null)    {    for(int    i    =    0,    strValue    =    strValue.length();    i    <    strValue.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
685	[BUG]  [BUGGY]  MutableFormat.println(strValue,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.println(strValue,  nullString,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.println(strValue,  nullString,  0,  strValue.length());	  MutableFormat.print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	96	None	replace
686	[BUG]  [BUGGY]  MutableFormat.print(this,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(this,  nullString,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(this,  nullString,  0,  strValue.length());	  MutableFormat.print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	96	None	replace
687	[BUG]  [BUGGY]  if(strValue  ==  null)  {  out.write(strValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  out.write(strValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  out.write(strValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(strValue!=    null)    {    out.write(strValue);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
688	[BUG]  [BUGGY]  this.print(nullString,  null,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  this.print(nullString,  null,  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(nullString,  null,  strValue,  0,  strValue.length());	  this.print(nullString,    null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	47	None	replace
689	[BUG]  [BUGGY]  Printer  out  =  new  Printer(strValue,  nullString,  1,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Printer  out  =  new  Printer(strValue,  nullString,  1,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Printer  out  =  new  Printer(strValue,  nullString,  1,  strValue.length());	  Printer    out    =    new    Printer(strValue,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	130	None	replace
690	[BUG]  [BUGGY]  if(strValue  ==  null)  {  out.append(nullString);  }  else  {  this.print(strValue,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  out.append(nullString);  }  else  {  this.print(strValue,  nullString,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  out.append(nullString);  }  else  {  this.print(strValue,  nullString,  0,  strValue.length());  }	  out.append(nullString);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
691	[BUG]  [BUGGY]  if(strValue  ==  null)  {  out.append(nullString);  }  else  {  this.print(strValue);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  out.append(nullString);  }  else  {  this.print(strValue);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  out.append(nullString);  }  else  {  this.print(strValue);  }	  out.append(nullString);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
692	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.append(nullString);  }  else  {  this.print(strValue,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.append(nullString);  }  else  {  this.print(strValue,  nullString,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.append(nullString);  }  else  {  this.print(strValue,  nullString,  0,  strValue.length());  }	  out.append(nullString);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
693	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  curValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  curValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  curValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    value,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	102	None	replace
694	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  strValue.toString());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  strValue.toString());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  strValue,  strValue.toString());	  System.arraycopy(strValue,    0,    this.strValue,    strValue.toString());    	non-compiled	[CE]  <identifier>  expected	135	None	replace
695	[BUG]  [BUGGY]  System.arraycopy(null,  0,  this.strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(null,  0,  this.strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(null,  0,  this.strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
696	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print,  0,  strValue.length());	  System.arraycopy(strValue,    0,    buffer,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	104	None	replace
697	[BUG]  [BUGGY]  System.arraycopy(this.str,  0,  this.strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.str,  0,  this.strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.str,  0,  this.strValue,  0,  strValue.length());	  System.arraycopy(this.strValue,    0,    this.strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	43	None	replace
698	[BUG]  [BUGGY]  Parchet.checkNotNull(currValue);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Parchet.checkNotNull(currValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Parchet.checkNotNull(currValue);	  Parchet.checkNotNull(strValue);    	non-compiled	[CE]  <identifier>  expected	147	None	replace
699	[BUG]  [BUGGY]  System.arraycopy(null,  0,  this.strValue,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(null,  0,  this.strValue,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(null,  0,  this.strValue,  strValue.length());	  System.arraycopy(strValue,    0,    this.strValue,    nullString.length());    	non-compiled	[CE]  <identifier>  expected	126	None	replace
700	[BUG]  [BUGGY]  System.arraycopy(null,  0,  this.print(strValue,  0,  strValue.length()));  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(null,  0,  this.print(strValue,  0,  strValue.length()));  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(null,  0,  this.print(strValue,  0,  strValue.length()));	  System.arraycopy(nullString,    0,    this.print(strValue,    0,    strValue.length()));    	non-compiled	[CE]  <identifier>  expected	112	None	replace
701	[BUG]  [BUGGY]  Printer  out  =  new  Printer(strValue,  nullString,  0,  strValue.toString());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Printer  out  =  new  Printer(strValue,  nullString,  0,  strValue.toString());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Printer  out  =  new  Printer(strValue,  nullString,  0,  strValue.toString());	  print(null,    nullString,    0,    strValue.toString());    	non-compiled	[CE]  <identifier>  expected	131	None	replace
702	[BUG]  [BUGGY]  print(null,  nullString,  0,  strValue.trim());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  print(null,  nullString,  0,  strValue.trim());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(null,  nullString,  0,  strValue.trim());	  print(null,    nullString,    0,    strValue.toString());    	non-compiled	[CE]  <identifier>  expected	131	None	replace
703	[BUG]  [BUGGY]  print(null,  nullString,  1,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  print(null,  nullString,  1,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	print(null,  nullString,  1,  strValue.length());	  print(null,    nullString,    0,    strValue.length()    +    1);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
704	[BUG]  [BUGGY]  MutableFormat.print(this,  newRecord)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  MutableFormat.print(this,  newRecord)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	MutableFormat.print(this,  newRecord)  {  throw  new  IllegalArgumentException( " ");  }	  if(newRecord)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
705	[BUG]  [BUGGY]  this.print(null,  nullString);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  this.print(null,  nullString);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(null,  nullString);	  this.print(strValue,    nullString);    	non-compiled	[CE]  <identifier>  expected	139	None	replace
706	[BUG]  [BUGGY]  this.print(number,  strValue,  nullString);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  this.print(number,  strValue,  nullString);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	this.print(number,  strValue,  nullString);	  this.print(strValue,    nullString);    	non-compiled	[CE]  <identifier>  expected	139	None	replace
707	[BUG]  [BUGGY]  Thread.currentThread().intermediateChildren();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Thread.currentThread().intermediateChildren();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Thread.currentThread().intermediateChildren();	  Thread.currentThread().intermediate();    	non-compiled	[CE]  <identifier>  expected	143	None	replace
708	[BUG]  [BUGGY]  Thread.currentThread().setCurrentName(strValue.toString());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Thread.currentThread().setCurrentName(strValue.toString());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Thread.currentThread().setCurrentName(strValue.toString());	  Thread.currentThread().intermediate();    	non-compiled	[CE]  <identifier>  expected	143	None	replace
709	[BUG]  [BUGGY]  Thread.currentThread().setCurrentName(strValue.getClass().getName());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Thread.currentThread().setCurrentName(strValue.getClass().getName());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Thread.currentThread().setCurrentName(strValue.getClass().getName());	  Thread.currentThread().intermediate();    	non-compiled	[CE]  <identifier>  expected	143	None	replace
710	[BUG]  [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  1,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  1,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  1,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }	  if(strValue    ==    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    this.print(null,    nullString,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
711	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  nullString,  this.nullValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  nullString,  this.nullValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  nullString,  this.nullValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    nullString,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
712	[BUG]  [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  strValue,  1,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  System.arraycopy(strValue,  0,  strValue,  1,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  System.arraycopy(strValue,  0,  strValue,  1,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }	  if(strValue!=    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    this.print(null,    nullString,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
713	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length));  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length));  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length));	  System.arraycopy(strValue,    0,    this.print(strValue,    0,    strValue.length()    +    1));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
714	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(value,  strValue)+  1,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(value,  strValue)+  1,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(value,  strValue)+  1,  strValue.length());	  System.arraycopy(strValue,    0,    this.print(value),    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	56	None	replace
715	[BUG]  [BUGGY]  ||(strValue  ==  null  &&  strValue!=  null))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(strValue  ==  null  &&  strValue!=  null))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue  ==  null  &&  strValue!=  null))  {  throw  new  IllegalStateException( " ");  }	  if(strValue!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
716	[BUG]  [BUGGY]  ||(strValue  ==  null  &&  strValue.isEmpty()))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(strValue  ==  null  &&  strValue.isEmpty()))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue  ==  null  &&  strValue.isEmpty()))  {  throw  new  IllegalStateException( " ");  }	  if(strValue!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
717	[BUG]  [BUGGY]  ||(strValue!=  null  &&  strValue.isEmpty()))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(strValue!=  null  &&  strValue.isEmpty()))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue!=  null  &&  strValue.isEmpty()))  {  throw  new  IllegalStateException( " ");  }	  if(strValue!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
718	[BUG]  [BUGGY]  System.arraycopy(value,  0,  this.print(strValue,  0,  strValue.length()),  nullString);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(value,  0,  this.print(strValue,  0,  strValue.length()),  nullString);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(value,  0,  this.print(strValue,  0,  strValue.length()),  nullString);	  System.arraycopy(value,    0,    this.print(strValue,    0,    strValue.length()));    	non-compiled	[CE]  <identifier>  expected	20	None	replace
719	[BUG]  [BUGGY]  if(strValue  ==  null  ||  strValue.length()  ==  0)  {  this.print(nullString);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null  ||  strValue.length()  ==  0)  {  this.print(nullString);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null  ||  strValue.length()  ==  0)  {  this.print(nullString);  }	  if(strValue    ==    null    ||    strValue.length()    ==    0)    {    out.print(nullString);    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
720	[BUG]  [BUGGY]  final  String  strValue  =  format  ==  null?  Constants.EMPTY  :  nullString;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  final  String  strValue  =  format  ==  null?  Constants.EMPTY  :  nullString;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	final  String  strValue  =  format  ==  null?  Constants.EMPTY  :  nullString;	  final    String    strValue    =    nullString    ==    null?    Constants.EMPTY    :    nullString;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
721	[BUG]  [BUGGY]  ||(value  ==  nullString  &&  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(value  ==  nullString  &&  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(value  ==  nullString  &&  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  ||(strValue    ==    null    &&    strValue.length()    >    0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
722	[BUG]  [BUGGY]  ||(strValue  ==  null  &&  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(strValue  ==  null  &&  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue  ==  null  &&  strValue.length()  >  0))  {  throw  new  IllegalArgumentException( " ".);  }	  ||(strValue    ==    null    &&    strValue.length()    >    0))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
723	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()),  nullString);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()),  nullString);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()),  nullString);	  System.arraycopy(strValue,    0,    this.print(strValue,    0,    strValue.length()    -    2));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
724	[BUG]  [BUGGY]  if(strValue  ==  null)  {  out.print(nullString);  }  else  {  this.print(strValue,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  out.print(nullString);  }  else  {  this.print(strValue,  nullString,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  out.print(nullString);  }  else  {  this.print(strValue,  nullString,  0,  strValue.length());  }	  out.print(nullString);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
725	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.print(nullString);  }  else  {  this.print(strValue,  nullString,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  out.print(nullString);  }  else  {  this.print(strValue,  nullString,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  out.print(nullString);  }  else  {  this.print(strValue,  nullString,  0,  strValue.length());  }	  out.print(nullString);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
726	[BUG]  [BUGGY]  if(strValue  ==  null)  {  out.print(nullString);  }  else  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  this.print(strValue,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  out.print(nullString);  }  else  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  this.print(strValue,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  out.print(nullString);  }  else  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  this.print(strValue,  0,  strValue.length());  }	  out.print(nullString);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
727	[BUG]  [BUGGY]  reader.print(value,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  reader.print(value,  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	reader.print(value,  strValue,  0,  strValue.length());	  reader.print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	142	None	replace
728	[BUG]  [BUGGY]  reader.print(value,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  reader.print(value,  nullString,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	reader.print(value,  nullString,  0,  strValue.length());	  reader.print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	142	None	replace
729	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  1,  strValue.toString());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  1,  strValue.toString());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.strValue,  1,  strValue.toString());	  System.arraycopy(strValue,    0,    this.strValue,    1,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
730	[BUG]  [BUGGY]  System.arraycopy(null,  0,  this.print(value,  strValue,  0,  strValue.length()));  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(null,  0,  this.print(value,  strValue,  0,  strValue.length()));  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(null,  0,  this.print(value,  strValue,  0,  strValue.length()));	  System.arraycopy(strValue,    0,    this.print(value,    strValue,    0,    strValue.length()));    	non-compiled	[CE]  <identifier>  expected	134	None	replace
731	[BUG]  [BUGGY]  Printer  out  =  null.print(strValue,  nullString);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Printer  out  =  null.print(strValue,  nullString);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Printer  out  =  null.print(strValue,  nullString);	  if(strValue!=    null)    {    out.print(null,    nullString);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
732	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  0);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.strValue,  0);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.strValue,  0);	  System.arraycopy(strValue,    0,    this.strValue,    nullString);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
733	[BUG]  [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }  else  {  throw  new  IllegalArgumentException( "  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }  else  {  throw  new  IllegalArgumentException( "  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  0,  strValue.length());  this.print(null,  nullString,  0,  strValue.length());  }  else  {  throw  new  IllegalArgumentException( "	  if(strValue!=    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    this.print(null,    nullString,    0,    strValue.length());    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	136	None	replace
734	[BUG]  [BUGGY]  ||(strValue  ==  null  &&  strValue!=  null))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(strValue  ==  null  &&  strValue!=  null))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue  ==  null  &&  strValue!=  null))  {  throw  new  IllegalArgumentException( " ");  }	  if(strValue!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
735	[BUG]  [BUGGY]  ||(strValue  ==  null  &&  strValue.isEmpty()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(strValue  ==  null  &&  strValue.isEmpty()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue  ==  null  &&  strValue.isEmpty()))  {  throw  new  IllegalArgumentException( " ");  }	  if(strValue!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
736	[BUG]  [BUGGY]  final  int  strValue  =  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  final  int  strValue  =  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	final  int  strValue  =  null)  {  throw  new  IllegalArgumentException( " ");  }	  final    strValue    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
737	[BUG]  [BUGGY]  final  String  nullString  =  strValue  ==  null?  Constants.EMPTY  :  nullString;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  final  String  nullString  =  strValue  ==  null?  Constants.EMPTY  :  nullString;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	final  String  nullString  =  strValue  ==  null?  Constants.EMPTY  :  nullString;	  final    strValue    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
738	[BUG]  [BUGGY]  final  String  nullString  =  format.getNullString();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  final  String  nullString  =  format.getNullString();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	final  String  nullString  =  format.getNullString();	  final    strValue    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
739	[BUG]  [BUGGY]  final  String  nullString  =  strValue.toString();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  final  String  nullString  =  strValue.toString();  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	final  String  nullString  =  strValue.toString();	  final    strValue    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
740	[BUG]  [BUGGY]  Parchet.checkState(strValue  ==  null? " "  :  strValue);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Parchet.checkState(strValue  ==  null? " "  :  strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Parchet.checkState(strValue  ==  null? " "  :  strValue);	  Parchet.checkState(strValue    ==    null);    	non-compiled	[CE]  <identifier>  expected	145	None	replace
741	[BUG]  [BUGGY]  Parchet.checkState(strValue  ==  null? "null "  :  strValue);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Parchet.checkState(strValue  ==  null? "null "  :  strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Parchet.checkState(strValue  ==  null? "null "  :  strValue);	  Parchet.checkState(strValue    ==    null);    	non-compiled	[CE]  <identifier>  expected	145	None	replace
742	[BUG]  [BUGGY]  Parchet.checkState(this.strValue  ==  null);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Parchet.checkState(this.strValue  ==  null);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Parchet.checkState(this.strValue  ==  null);	  Parchet.checkState(strValue    ==    null);    	non-compiled	[CE]  <identifier>  expected	145	None	replace
743	[BUG]  [BUGGY]  out.append('/');  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.append('/');  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.append('/');	  out.write('ufffd');    	non-compiled	[CE]  <identifier>  expected	122	None	replace
744	[BUG]  [BUGGY]  out.append(',');  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.append(',');  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.append(',');	  out.write('ufffd');    	non-compiled	[CE]  <identifier>  expected	122	None	replace
745	[BUG]  [BUGGY]  out.write('  ');  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.write('  ');  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.write('  ');	  out.write('ufffd');    	non-compiled	[CE]  <identifier>  expected	122	None	replace
746	[BUG]  [BUGGY]  out.write(',');  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.write(',');  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.write(',');	  out.write('ufffd');    	non-compiled	[CE]  <identifier>  expected	122	None	replace
747	[BUG]  [BUGGY]  out.append('#');  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.append('#');  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.append('#');	  out.append('n');    	non-compiled	[CE]  <identifier>  expected	128	None	replace
748	[BUG]  [BUGGY]  out.append( ", ");  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.append( ", ");  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.append( ", ");	  out.append('n');    	non-compiled	[CE]  <identifier>  expected	128	None	replace
749	[BUG]  [BUGGY]  out.append('N');  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.append('N');  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.append('N');	  out.append('n');    	non-compiled	[CE]  <identifier>  expected	128	None	replace
750	[BUG]  [BUGGY]  out.append('n',  strValue);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.append('n',  strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.append('n',  strValue);	  out.append('n');    	non-compiled	[CE]  <identifier>  expected	128	None	replace
751	[BUG]  [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append( ", ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append( ", ");  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
752	[BUG]  [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append( "n ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append( "n ");  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
753	[BUG]  [BUGGY]  System.arraycopy(null,  0,  this.print(value,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(null,  0,  this.print(value,  strValue,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(null,  0,  this.print(value,  strValue,  0,  strValue.length());	  System.arraycopy(strValue,    0,    this.print(value,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
754	[BUG]  [BUGGY]  ||(strValue!=  null  &&  strValue.equals( "- ")))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  ||(strValue!=  null  &&  strValue.equals( "- ")))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	||(strValue!=  null  &&  strValue.equals( "- ")))  {  throw  new  IllegalStateException( " ");  }	  ||(strValue!=    null    &&    strValue.equals(   "   ")))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
755	[BUG]  [BUGGY]  out.write(nullString,  strValue);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  out.write(nullString,  strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	out.write(nullString,  strValue);	  out.write(nullString);    	non-compiled	[CE]  <identifier>  expected	120	None	replace
756	[BUG]  [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  1,  strValue.length());  this.print(nullString,  null,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  1,  strValue.length());  this.print(nullString,  null,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  strValue,  1,  strValue.length());  this.print(nullString,  null,  0,  strValue.length());  }	  if(strValue    ==    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    this.print(nullString,    null,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
757	[BUG]  [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()));  this.print(nullString,  null,  0,  strValue.length());  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()));  this.print(nullString,  null,  0,  strValue.length());  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null)  {  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()));  this.print(nullString,  null,  0,  strValue.length());  }	  if(strValue    ==    null)    {    System.arraycopy(strValue,    0,    strValue,    0,    strValue.length());    this.print(nullString,    null,    0,    strValue.length());    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
758	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  strValue,  1,  strValue.toString());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  strValue,  1,  strValue.toString());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  strValue,  1,  strValue.toString());	  System.arraycopy(strValue,    0,    strValue,    1,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	133	None	replace
759	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  strValue,  2,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  strValue,  2,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  strValue,  2,  strValue.length());	  System.arraycopy(strValue,    0,    strValue,    1,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	133	None	replace
760	[BUG]  [BUGGY]  PrintUtils.print(strValue,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  PrintUtils.print(strValue,  nullString,  0,  strValue.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	PrintUtils.print(strValue,  nullString,  0,  strValue.length());	  print(strValue,    nullString,    0,    strValue.length()    +    1);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
761	[BUG]  [BUGGY]  if(strValue  ==  null  ||  strValue  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null  ||  strValue  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null  ||  strValue  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	141	None	replace
762	[BUG]  [BUGGY]  Printer  out  =  new  Printer(nullString);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Printer  out  =  new  Printer(nullString);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Printer  out  =  new  Printer(nullString);	  if(newRecord)    {    out.print(nullString);    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
763	[BUG]  [BUGGY]  Printer  out  =  this.nullFormat.print(strValue);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  Printer  out  =  this.nullFormat.print(strValue);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	Printer  out  =  this.nullFormat.print(strValue);	  Printer    out    =    null.print(strValue);    	non-compiled	[CE]  <identifier>  expected	137	None	replace
764	[BUG]  [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  this.nullString.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(this.strValue,  0,  strValue,  this.nullString.length());  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(this.strValue,  0,  strValue,  this.nullString.length());	  System.arraycopy(this.strValue,    0,    strValue,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	23	None	replace
765	[BUG]  [BUGGY]  final  int  strValue  =  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  final  int  strValue  =  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	final  int  strValue  =  null)  {  throw  new  IllegalStateException( " ");  }	  final    strValue    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
766	[BUG]  [BUGGY]  final  int  strValue  =  null;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  final  int  strValue  =  null;  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	final  int  strValue  =  null;	  final    strValue    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
767	[BUG]  [BUGGY]  if(strValue  ==  null  ||  newRecord)  {  out.print(nullString);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  if(strValue  ==  null  ||  newRecord)  {  out.print(nullString);  }  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	if(strValue  ==  null  ||  newRecord)  {  out.print(nullString);  }	  if(strValue    ==    null    ||    strValue!=    null)    {    out.print(nullString);    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
768	[BUG]  [BUGGY]  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()),  0);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }  this.print(value,  strValue,  0,  strValue.length());      [BUGGY]  System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()),  0);  [BUGGY]        [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	107	107	1	replace	System.arraycopy(strValue,  0,  this.print(strValue,  0,  strValue.length()),  0);	  System.arraycopy(strValue,    0,    this.print(strValue,    0,    strValue.length()    -    1));    	non-compiled	[CE]  <identifier>  expected	16	None	replace
