bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Assertions.notEmpty(this.format,  format);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  Assertions.notEmpty(this.format,  format);  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(this.format,  format);	  Assertions.notEmpty(this.format,       "format   ");    	non-compiled	[CE]  <identifier>  expected	3	None	replace
2	[BUG]  [BUGGY]  Assertions.notNull(out,  format);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  Assertions.notNull(out,  format);  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notNull(out,  format);	  Assertions.notEmpty(this.format,       "format   ");    	non-compiled	[CE]  <identifier>  expected	3	None	replace
3	[BUG]  [BUGGY]  Assertions.notNull(out);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  Assertions.notNull(out);  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notNull(out);	  Assertions.notEmpty(this.format,       "format   ");    	non-compiled	[CE]  <identifier>  expected	3	None	replace
4	[BUG]  [BUGGY]  Assertions.notEmpty(this.format,   "out ");  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  Assertions.notEmpty(this.format,   "out ");  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(this.format,   "out ");	  Assertions.notEmpty(this.format,       "format   ");    	non-compiled	[CE]  <identifier>  expected	3	None	replace
5	[BUG]  [BUGGY]  Assertions.notEmpty(out,  format);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  Assertions.notEmpty(out,  format);  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  format);	  Assertions.notEmpty(out,       "format   ");    	non-compiled	[CE]  <identifier>  expected	7	None	replace
6	[BUG]  [BUGGY]  Assertions.notEmpty(out);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  Assertions.notEmpty(out);  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out);	  Assertions.notEmpty(format);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
7	[BUG]  [BUGGY]  Assertions.notEmpty(format,  newRecord);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  Assertions.notEmpty(format,  newRecord);  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(format,  newRecord);	  Assertions.notEmpty(format);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
8	[BUG]  [BUGGY]  Assertions.notNull(out,   "out ");  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  Assertions.notNull(out,   "out ");  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notNull(out,   "out ");	  Assertions.notEmpty(format);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
9	[BUG]  [BUGGY]  Assertions.notNull(format);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  Assertions.notNull(format);  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notNull(format);	  Assertions.notEmpty(format);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
10	[BUG]  [BUGGY]  Assertions.notNull(out,  format,   "format ");  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  Assertions.notNull(out,  format,   "format ");  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notNull(out,  format,   "format ");	  Assertions.notEmpty(out,    format,   "format   ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
11	[BUG]  [BUGGY]  Assertions.notEmpty(out,  format,  this.format);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  Assertions.notEmpty(out,  format,  this.format);  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  format,  this.format);	  Assertions.notEmpty(out,    format,   "format   ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
12	[BUG]  [BUGGY]  Assertions.notEmpty(this.format,  format,   "format ");  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  Assertions.notEmpty(this.format,  format,   "format ");  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(this.format,  format,   "format ");	  Assertions.notEmpty(out,    format,   "format   ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
13	[BUG]  [BUGGY]  Assertions.notEmpty(out,  this.format,   "format ");  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  Assertions.notEmpty(out,  this.format,   "format ");  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  this.format,   "format ");	  Assertions.notEmpty(out,    format,   "format   ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
14	[BUG]  [BUGGY]  Assertions.notNull(out,   "set  format ");  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  Assertions.notNull(out,   "set  format ");  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notNull(out,   "set  format ");	  Assertions.notEmpty(format,   "set    format   ");    	non-compiled	[CE]  <identifier>  expected	4	None	replace
15	[BUG]  [BUGGY]  Assertions.notNull(format,   "set  format ");  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  Assertions.notNull(format,   "set  format ");  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notNull(format,   "set  format ");	  Assertions.notEmpty(format,   "set    format   ");    	non-compiled	[CE]  <identifier>  expected	4	None	replace
16	[BUG]  [BUGGY]  Assertions.notEmpty(format,   "set  format: ");  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  Assertions.notEmpty(format,   "set  format: ");  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(format,   "set  format: ");	  Assertions.notEmpty(format,   "set    format   ");    	non-compiled	[CE]  <identifier>  expected	4	None	replace
17	[BUG]  [BUGGY]  Assertions.notEmpty(format,   "set  format ",  newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  Assertions.notEmpty(format,   "set  format ",  newRecord);  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(format,   "set  format ",  newRecord);	  Assertions.notEmpty(format,   "set    format   ");    	non-compiled	[CE]  <identifier>  expected	4	None	replace
18	[BUG]  [BUGGY]  Assertions.notEmpty( "format ");  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  Assertions.notEmpty( "format ");  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty( "format ");	  Assertions.notNull(out,       "format   ");    	non-compiled	[CE]  <identifier>  expected	2	None	replace
19	[BUG]  [BUGGY]  Assertions.notEmpty(this.format);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  Assertions.notEmpty(this.format);  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(this.format);	  Assertions.notNull(out,       "format   ");    	non-compiled	[CE]  <identifier>  expected	2	None	replace
20	[BUG]  [BUGGY]  Assertions.notEmpty(out,  newRecord);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  Assertions.notEmpty(out,  newRecord);  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  newRecord);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
21	[BUG]  [BUGGY]  Assertions.notEmpty(out,   "out ");  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  Assertions.notEmpty(out,   "out ");  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,   "out ");	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
22	[BUG]  [BUGGY]  if(newRecord)  {  for(final  Appendable  out  :  getRecords())  {  this.record  =  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  if(newRecord)  {  for(final  Appendable  out  :  getRecords())  {  this.record  =  true;  }  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	if(newRecord)  {  for(final  Appendable  out  :  getRecords())  {  this.record  =  true;  }	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
23	[BUG]  [BUGGY]  Assertions.notEmpty(out,  format, "null ");  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  Assertions.notEmpty(out,  format, "null ");  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  format, "null ");	  Assertions.notEmpty(out,    format,   "format   ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
24	[BUG]  [BUGGY]  Assertions.notEmpty(out,  format,  null);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  Assertions.notEmpty(out,  format,  null);  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  format,  null);	  Assertions.notEmpty(out,    format,   "format   ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
25	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  out,  newRecord);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  NodeTraversal.traverse(compiler,  out,  newRecord);  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	NodeTraversal.traverse(compiler,  out,  newRecord);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
26	[BUG]  [BUGGY]  if(newRecord)  {  out.append('n');  }  else  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  if(newRecord)  {  out.append('n');  }  else  {  out.append('n');  }  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	if(newRecord)  {  out.append('n');  }  else  {  out.append('n');  }	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
27	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>();  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>();  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	this.newRecord  =  new  Record  <  CSVFormat>();	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
28	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  out,  newRecord);  this.format  =  format;  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  NodeTraversal.traverse(compiler,  out,  newRecord);  this.format  =  format;  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	NodeTraversal.traverse(compiler,  out,  newRecord);  this.format  =  format;	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
29	[BUG]  [BUGGY]  Assertions.notEmpty(out,   "set  format ");  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  Assertions.notEmpty(out,   "set  format ");  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,   "set  format ");	  Assertions.notEmpty(format,   "set    format   ");    	non-compiled	[CE]  <identifier>  expected	4	None	replace
30	[BUG]  [BUGGY]  Assertions.notEmpty(format,   "set  format ",  out);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  Assertions.notEmpty(format,   "set  format ",  out);  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(format,   "set  format ",  out);	  Assertions.notEmpty(format,   "set    format   ");    	non-compiled	[CE]  <identifier>  expected	4	None	replace
31	[BUG]  [BUGGY]  Assertions.notNull(format,   "out ");  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  Assertions.notNull(format,   "out ");  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notNull(format,   "out ");	  Assertions.notEmpty(format);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
32	[BUG]  [BUGGY]  Assertions.notEmpty(out,  format,  newRecord);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  Assertions.notEmpty(out,  format,  newRecord);  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  format,  newRecord);	  Assertions.notEmpty(out,    format,   "format   ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
33	[BUG]  [BUGGY]  Assertions.notEmpty(out,  format, ",  newRecord ");  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  Assertions.notEmpty(out,  format, ",  newRecord ");  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  format, ",  newRecord ");	  Assertions.notEmpty(out,    format,   "format   ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
34	[BUG]  [BUGGY]  if(newRecord)  {  out.append('n');  }  else  {  out.append(format);  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  if(newRecord)  {  out.append('n');  }  else  {  out.append(format);  }  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	if(newRecord)  {  out.append('n');  }  else  {  out.append(format);  }	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
35	[BUG]  [BUGGY]  Assertions.checkNotNull(out,  format);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  Assertions.checkNotNull(out,  format);  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.checkNotNull(out,  format);	  Assertions.notNull(out,       "format   ");    	non-compiled	[CE]  <identifier>  expected	2	None	replace
36	[BUG]  [BUGGY]  Assertions.notEmpty(out,  this.format);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  Assertions.notEmpty(out,  this.format);  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(out,  this.format);	  Assertions.notEmpty(out,       "format   ");    	non-compiled	[CE]  <identifier>  expected	7	None	replace
37	[BUG]  [BUGGY]  Assertions.notNull(out,  format, "Format ");  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  Assertions.notNull(out,  format, "Format ");  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notNull(out,  format, "Format ");	  Assertions.notEmpty(out,       "format   ");    	non-compiled	[CE]  <identifier>  expected	7	None	replace
38	[BUG]  [BUGGY]  Assertions.notEmpty(format,   "set  format:  {  0  }   ");  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  Assertions.notEmpty(format,   "set  format:  {  0  }   ");  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(format,   "set  format:  {  0  }   ");	  Assertions.notEmpty(format,   "set    format   ");    	non-compiled	[CE]  <identifier>  expected	4	None	replace
39	[BUG]  [BUGGY]  Assertions.notEmpty(format,   "out ");  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  Assertions.notEmpty(format,   "out ");  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(format,   "out ");	  Assertions.notEmpty(format,   "format   ");    	non-compiled	[CE]  <identifier>  expected	1	None	replace
40	[BUG]  [BUGGY]  Assertions.notEmpty(format,  this.format);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");    [BUGGY]  Assertions.notEmpty(format,  this.format);  [BUGGY]      this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	60	60	1	replace	Assertions.notEmpty(format,  this.format);	  Assertions.notEmpty(format,   "format   ");    	non-compiled	[CE]  <identifier>  expected	1	None	replace
