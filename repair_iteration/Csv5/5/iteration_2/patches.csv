bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Ansertions.notEmpty(newRecord,  out);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Ansertions.notEmpty(newRecord,  out);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Ansertions.notEmpty(newRecord,  out);	  Assertions.notNull(newRecord,    out);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
2	[BUG]  [BUGGY]  super(out,  format,  newRecord);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  super(out,  format,  newRecord);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	super(out,  format,  newRecord);	  super(out,    format);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
3	[BUG]  [BUGGY]  super(out,  format,  false);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  super(out,  format,  false);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	super(out,  format,  false);	  super(out,    format);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
4	[BUG]  [BUGGY]  super(out,  format,  true);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  super(out,  format,  true);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	super(out,  format,  true);	  super(out,    format);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
5	[BUG]  [BUGGY]  super(out,  format,  null);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  super(out,  format,  null);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	super(out,  format,  null);	  super(out,    format);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
6	[BUG]  [BUGGY]  super(out,  format,  this.newRecord);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  super(out,  format,  this.newRecord);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	super(out,  format,  this.newRecord);	  super(out,    format);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
7	[BUG]  [BUGGY]  super(out,  format,  this.record);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  super(out,  format,  this.record);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	super(out,  format,  this.record);	  super(out,    format);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
8	[BUG]  [BUGGY]  super(out,  format.toString());  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  super(out,  format.toString());  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	super(out,  format.toString());	  super(out,    format);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
9	[BUG]  [BUGGY]  Assertions.notEmpty(format,  out,   "out ");  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notEmpty(format,  out,   "out ");  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notEmpty(format,  out,   "out ");	  Assertions.notNull(out,    format,   "out   ");    	non-compiled	[CE]  <identifier>  expected	32	None	replace
10	[BUG]  [BUGGY]  Assertions.notNull(out,  format,  newRecord);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notNull(out,  format,  newRecord);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notNull(out,  format,  newRecord);	  Assertions.notEmpty(out,    format,    newRecord);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
11	[BUG]  [BUGGY]  Assertions.notEmpty(out,  format,  this.newRecord);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notEmpty(out,  format,  this.newRecord);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notEmpty(out,  format,  this.newRecord);	  Assertions.notEmpty(out,    format,    newRecord);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
12	[BUG]  [BUGGY]  Assertions.notEmpty(out,  format,  newRecord,  this.record);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notEmpty(out,  format,  newRecord,  this.record);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notEmpty(out,  format,  newRecord,  this.record);	  Assertions.notEmpty(out,    format,    newRecord);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
13	[BUG]  [BUGGY]  Assertions.notEmpty(out,  format,  newRecord,  null);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notEmpty(out,  format,  newRecord,  null);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notEmpty(out,  format,  newRecord,  null);	  Assertions.notEmpty(out,    format,    newRecord);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
14	[BUG]  [BUGGY]  Ansertions.notNull(out,  format);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Ansertions.notNull(out,  format);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Ansertions.notNull(out,  format);	  Ansertions.notEmpty(out,    format);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
15	[BUG]  [BUGGY]  Ansertions.notEmpty(format,  out);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Ansertions.notEmpty(format,  out);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Ansertions.notEmpty(format,  out);	  Ansertions.notEmpty(out,    format);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
16	[BUG]  [BUGGY]  Ansertions.notEmpty(format);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Ansertions.notEmpty(format);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Ansertions.notEmpty(format);	  Ansertions.notEmpty(out,    format);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
17	[BUG]  [BUGGY]  Ansertions.notEmpty(out,  format,  newRecord);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Ansertions.notEmpty(out,  format,  newRecord);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Ansertions.notEmpty(out,  format,  newRecord);	  Ansertions.notEmpty(out,    format);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
18	[BUG]  [BUGGY]  Ansertions.notEmpty(out,  this.format);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Ansertions.notEmpty(out,  this.format);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Ansertions.notEmpty(out,  this.format);	  Ansertions.notEmpty(out,    format);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
19	[BUG]  [BUGGY]  Ansertions.notNull(format,  out);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Ansertions.notNull(format,  out);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Ansertions.notNull(format,  out);	  Ansertions.notEmpty(out,    format);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
20	[BUG]  [BUGGY]  this(out,  format.toString(),  true);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this(out,  format.toString(),  true);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this(out,  format.toString(),  true);	  this(out,    format.toString());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
21	[BUG]  [BUGGY]  this(out,  format.toString(),  false);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this(out,  format.toString(),  false);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this(out,  format.toString(),  false);	  this(out,    format.toString());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
22	[BUG]  [BUGGY]  this(out,  format.toString(),  null);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this(out,  format.toString(),  null);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this(out,  format.toString(),  null);	  this(out,    format.toString());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
23	[BUG]  [BUGGY]  this(out,  format.toString(),  newRecord);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this(out,  format.toString(),  newRecord);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this(out,  format.toString(),  newRecord);	  this(out,    format.toString());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
24	[BUG]  [BUGGY]  this(out,  format.toUpperCase());  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this(out,  format.toUpperCase());  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this(out,  format.toUpperCase());	  this(out,    format.toString());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
25	[BUG]  [BUGGY]  this(out,  format.toExternalFormat());  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this(out,  format.toExternalFormat());  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this(out,  format.toExternalFormat());	  this(out,    format.toString());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
26	[BUG]  [BUGGY]  Assertions.notEmpty(newRecord,  this.format);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notEmpty(newRecord,  this.format);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notEmpty(newRecord,  this.format);	  Assertions.notEmpty(newRecord,    format);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
27	[BUG]  [BUGGY]  Assertions.notNull(newRecord,  format);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notNull(newRecord,  format);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notNull(newRecord,  format);	  Assertions.notEmpty(newRecord,    format);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
28	[BUG]  [BUGGY]  this.newRecord  =  new  LinkedHashMap  <  String,Object>();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this.newRecord  =  new  LinkedHashMap  <  String,Object>();  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this.newRecord  =  new  LinkedHashMap  <  String,Object>();	  this.newRecord    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
29	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  String,Object>(format);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this.newRecord  =  new  HashMap  <  String,Object>(format);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this.newRecord  =  new  HashMap  <  String,Object>(format);	  this.newRecord    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
30	[BUG]  [BUGGY]  this.newRecord  =  new  TreeMap  <  String,Object>();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this.newRecord  =  new  TreeMap  <  String,Object>();  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this.newRecord  =  new  TreeMap  <  String,Object>();	  this.newRecord    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
31	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  String,Object>(out);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this.newRecord  =  new  HashMap  <  String,Object>(out);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this.newRecord  =  new  HashMap  <  String,Object>(out);	  this.newRecord    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
32	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  Object,Object>();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this.newRecord  =  new  HashMap  <  Object,Object>();  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this.newRecord  =  new  HashMap  <  Object,Object>();	  this.newRecord    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
33	[BUG]  [BUGGY]  Ansertions.notEmpty(out);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Ansertions.notEmpty(out);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Ansertions.notEmpty(out);	  Assertions.notNull(out);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
34	[BUG]  [BUGGY]  this(out,  format.getName(),  true);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this(out,  format.getName(),  true);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this(out,  format.getName(),  true);	  this(out,    format.getName());    	non-compiled	[CE]  <identifier>  expected	18	None	replace
35	[BUG]  [BUGGY]  this(out,  format.getName(),  false);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this(out,  format.getName(),  false);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this(out,  format.getName(),  false);	  this(out,    format.getName());    	non-compiled	[CE]  <identifier>  expected	18	None	replace
36	[BUG]  [BUGGY]  this(out,  format.getName(),  newRecord);  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this(out,  format.getName(),  newRecord);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this(out,  format.getName(),  newRecord);	  this(out,    format.getName());    	non-compiled	[CE]  <identifier>  expected	18	None	replace
37	[BUG]  [BUGGY]  this(out,  format.getName(),  null);  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this(out,  format.getName(),  null);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this(out,  format.getName(),  null);	  this(out,    format.getName());    	non-compiled	[CE]  <identifier>  expected	18	None	replace
38	[BUG]  [BUGGY]  this(out,  format.getName(),  DEFAULT_NAME);  [CE]  <identifier>  expected  [FE]                                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this(out,  format.getName(),  DEFAULT_NAME);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this(out,  format.getName(),  DEFAULT_NAME);	  this(out,    format.getName());    	non-compiled	[CE]  <identifier>  expected	18	None	replace
39	[BUG]  [BUGGY]  this(out,  format.getRecord());  [CE]  <identifier>  expected  [FE]                                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this(out,  format.getRecord());  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this(out,  format.getRecord());	  this(out,    format.getName());    	non-compiled	[CE]  <identifier>  expected	18	None	replace
40	[BUG]  [BUGGY]  this.newRecord  =  new  LinkedHashSet  <  CSVFormat>();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this.newRecord  =  new  LinkedHashSet  <  CSVFormat>();  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this.newRecord  =  new  LinkedHashSet  <  CSVFormat>();	  this.newRecord    =    new    HashSet    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
41	[BUG]  [BUGGY]  this.newRecord  =  new  TreeSet  <  CSVFormat>();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this.newRecord  =  new  TreeSet  <  CSVFormat>();  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this.newRecord  =  new  TreeSet  <  CSVFormat>();	  this.newRecord    =    new    HashSet    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
42	[BUG]  [BUGGY]  this.newRecord  =  new  ArrayList  <  CSVFormat>();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this.newRecord  =  new  ArrayList  <  CSVFormat>();  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this.newRecord  =  new  ArrayList  <  CSVFormat>();	  this.newRecord    =    new    HashSet    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
43	[BUG]  [BUGGY]  this.newRecord  =  new  HashSet  <  CSVFormat>(out);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this.newRecord  =  new  HashSet  <  CSVFormat>(out);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this.newRecord  =  new  HashSet  <  CSVFormat>(out);	  this.newRecord    =    new    HashSet    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
44	[BUG]  [BUGGY]  this.newRecord  =  new  HashSet  <  CSVFormat>(1);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this.newRecord  =  new  HashSet  <  CSVFormat>(1);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this.newRecord  =  new  HashSet  <  CSVFormat>(1);	  this.newRecord    =    new    HashSet    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
45	[BUG]  [BUGGY]  this.newRecord  =  new  HashSet  <  CSVFormat>(format);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this.newRecord  =  new  HashSet  <  CSVFormat>(format);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this.newRecord  =  new  HashSet  <  CSVFormat>(format);	  this.newRecord    =    new    HashSet    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
46	[BUG]  [BUGGY]  Assertions.notEmpty(out,  null);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notEmpty(out,  null);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notEmpty(out,  null);	  Assertions.notEmpty(format,    null);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
47	[BUG]  [BUGGY]  Assertions.notNull(format,  null);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notNull(format,  null);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notNull(format,  null);	  Assertions.notEmpty(format,    null);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
48	[BUG]  [BUGGY]  Assertions.notNull(out,  null);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notNull(out,  null);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notNull(out,  null);	  Assertions.notEmpty(format,    null);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
49	[BUG]  [BUGGY]  Assertions.notEmpty(format,   "null ");  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notEmpty(format,   "null ");  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notEmpty(format,   "null ");	  Assertions.notEmpty(format,    null);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
50	[BUG]  [BUGGY]  this.newRecord  =  new  LinkedHashMap  <  String,  CSVFormat>();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this.newRecord  =  new  LinkedHashMap  <  String,  CSVFormat>();  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this.newRecord  =  new  LinkedHashMap  <  String,  CSVFormat>();	  this.newRecord    =    new    HashMap    <    String,    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
51	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  String,  CSVFormat>(format);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this.newRecord  =  new  HashMap  <  String,  CSVFormat>(format);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this.newRecord  =  new  HashMap  <  String,  CSVFormat>(format);	  this.newRecord    =    new    HashMap    <    String,    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
52	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  String,  CSVFormat>(out);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this.newRecord  =  new  HashMap  <  String,  CSVFormat>(out);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this.newRecord  =  new  HashMap  <  String,  CSVFormat>(out);	  this.newRecord    =    new    HashMap    <    String,    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
53	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>();  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this.newRecord  =  new  HashMap  <  CSVFormat>();	  this.newRecord    =    new    HashMap    <    String,    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
54	[BUG]  [BUGGY]  this.newRecord  =  new  TreeMap  <  String,  CSVFormat>();  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this.newRecord  =  new  TreeMap  <  String,  CSVFormat>();  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this.newRecord  =  new  TreeMap  <  String,  CSVFormat>();	  this.newRecord    =    new    HashMap    <    String,    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
55	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  String,  CSVFormat>(1);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this.newRecord  =  new  HashMap  <  String,  CSVFormat>(1);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this.newRecord  =  new  HashMap  <  String,  CSVFormat>(1);	  this.newRecord    =    new    HashMap    <    String,    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
56	[BUG]  [BUGGY]  Assertions.notEmpty(this.format,  out);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notEmpty(this.format,  out);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notEmpty(this.format,  out);	  Assertions.notNull(out,    this.format);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
57	[BUG]  [BUGGY]  Assertions.notNull(this.format,  out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notNull(this.format,  out);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notNull(this.format,  out);	  Assertions.notNull(out,    this.format);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
58	[BUG]  [BUGGY]  Assertions.notNull(format,   "newRecord ");  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notNull(format,   "newRecord ");  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notNull(format,   "newRecord ");	  Assertions.notNull(format,    newRecord);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
59	[BUG]  [BUGGY]  Assertions.notEmpty(newRecord,  out,  format);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notEmpty(newRecord,  out,  format);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notEmpty(newRecord,  out,  format);	  Assertions.notEmpty(newRecord,    out);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
60	[BUG]  [BUGGY]  this(out,  format.toArray(),  true);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this(out,  format.toArray(),  true);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this(out,  format.toArray(),  true);	  this(out,    format.toArray());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
61	[BUG]  [BUGGY]  this(out,  format.toArray(),  false);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this(out,  format.toArray(),  false);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this(out,  format.toArray(),  false);	  this(out,    format.toArray());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
62	[BUG]  [BUGGY]  this(out,  format.toArray(),  newRecord);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this(out,  format.toArray(),  newRecord);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this(out,  format.toArray(),  newRecord);	  this(out,    format.toArray());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
63	[BUG]  [BUGGY]  this(out,  format.toArray(),  null);  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this(out,  format.toArray(),  null);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this(out,  format.toArray(),  null);	  this(out,    format.toArray());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
64	[BUG]  [BUGGY]  this(out,  format.toArray(new  Record  <  CSVFormat>()));  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this(out,  format.toArray(new  Record  <  CSVFormat>()));  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this(out,  format.toArray(new  Record  <  CSVFormat>()));	  this(out,    format.toArray());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
65	[BUG]  [BUGGY]  Preconditions.checkState(out!=  null);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Preconditions.checkState(out!=  null);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Preconditions.checkState(out!=  null);	  Preconditions.checkNotNull(out);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
66	[BUG]  [BUGGY]  Preconditions.checkNotNull(out,  newRecord);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Preconditions.checkNotNull(out,  newRecord);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Preconditions.checkNotNull(out,  newRecord);	  Preconditions.checkNotNull(out);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
67	[BUG]  [BUGGY]  Preconditions.checkState(out  ==  null);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Preconditions.checkState(out  ==  null);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Preconditions.checkState(out  ==  null);	  Preconditions.checkNotNull(out);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
68	[BUG]  [BUGGY]  Preconditions.checkNotNull(out,  format);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Preconditions.checkNotNull(out,  format);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Preconditions.checkNotNull(out,  format);	  Preconditions.checkNotNull(out);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
69	[BUG]  [BUGGY]  Preconditions.checkArgument(out!=  null);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Preconditions.checkArgument(out!=  null);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Preconditions.checkArgument(out!=  null);	  Preconditions.checkNotNull(out);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
70	[BUG]  [BUGGY]  Preconditions.checkNotNull(out,  this.format);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Preconditions.checkNotNull(out,  this.format);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Preconditions.checkNotNull(out,  this.format);	  Preconditions.checkNotNull(out);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
71	[BUG]  [BUGGY]  Assertions.notNull(newRecord);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notNull(newRecord);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notNull(newRecord);	  Assertions.notEmpty(newRecord);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
72	[BUG]  [BUGGY]  this.newRecord  =  true;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this.newRecord  =  true;  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this.newRecord  =  true;	  super(out);    this.newRecord    =    true;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
73	[BUG]  [BUGGY]  super(out);  this.newRecord  =  false;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  super(out);  this.newRecord  =  false;  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	super(out);  this.newRecord  =  false;	  super(out);    this.newRecord    =    true;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
74	[BUG]  [BUGGY]  if(out!=  null)  {  super(out);  this.newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  if(out!=  null)  {  super(out);  this.newRecord  =  true;  }  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	if(out!=  null)  {  super(out);  this.newRecord  =  true;  }	  super(out);    this.newRecord    =    true;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
75	[BUG]  [BUGGY]  if(out!=  null)  {  super(out);  }  else  {  this.newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  if(out!=  null)  {  super(out);  }  else  {  this.newRecord  =  true;  }  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	if(out!=  null)  {  super(out);  }  else  {  this.newRecord  =  true;  }	  super(out);    this.newRecord    =    true;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
76	[BUG]  [BUGGY]  this.newRecord  =  false;  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this.newRecord  =  false;  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this.newRecord  =  false;	  super(out);    this.newRecord    =    true;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
77	[BUG]  [BUGGY]  super(out,  format);  this.newRecord  =  false;  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  super(out,  format);  this.newRecord  =  false;  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	super(out,  format);  this.newRecord  =  false;	  super(out);    this.newRecord    =    true;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
78	[BUG]  [BUGGY]  ((  CSVFormat)out).setRecord(newRecord);  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  ((  CSVFormat)out).setRecord(newRecord);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	((  CSVFormat)out).setRecord(newRecord);	  super(out);    this.newRecord    =    true;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
79	[BUG]  [BUGGY]  this.out  =  out;  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this.out  =  out;  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this.out  =  out;	  super();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
80	[BUG]  [BUGGY]  this.format  =  format;  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this.format  =  format;  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this.format  =  format;	  super();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
81	[BUG]  [BUGGY]  setRecord(true);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  setRecord(true);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	setRecord(true);	  super();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
82	[BUG]  [BUGGY]  this.newRecord  =  format;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this.newRecord  =  format;  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this.newRecord  =  format;	  super(out);    this.newRecord    =    format;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
83	[BUG]  [BUGGY]  this.newRecord  =  newRecord;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this.newRecord  =  newRecord;  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this.newRecord  =  newRecord;	  super(out);    this.newRecord    =    format;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
84	[BUG]  [BUGGY]  super(out);  this.newRecord  =  newRecord;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  super(out);  this.newRecord  =  newRecord;  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	super(out);  this.newRecord  =  newRecord;	  super(out);    this.newRecord    =    format;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
85	[BUG]  [BUGGY]  super(out);  this.newRecord  =  new  CSVFormat();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  super(out);  this.newRecord  =  new  CSVFormat();  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	super(out);  this.newRecord  =  new  CSVFormat();	  super(out);    this.newRecord    =    format;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
86	[BUG]  [BUGGY]  super(out);  this.newRecord  =  new  Record();  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  super(out);  this.newRecord  =  new  Record();  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	super(out);  this.newRecord  =  new  Record();	  super(out);    this.newRecord    =    format;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
87	[BUG]  [BUGGY]  Assertions.notEmpty(format,  this.format);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notEmpty(format,  this.format);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notEmpty(format,  this.format);	  Assertions.notEmpty(out,    this.format);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
88	[BUG]  [BUGGY]  this(out,  format,  newRecord);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this(out,  format,  newRecord);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this(out,  format,  newRecord);	  this(out,    format);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
89	[BUG]  [BUGGY]  this(out,  format,  false);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this(out,  format,  false);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this(out,  format,  false);	  this(out,    format);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
90	[BUG]  [BUGGY]  this(out,  format,  null);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this(out,  format,  null);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this(out,  format,  null);	  this(out,    format);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
91	[BUG]  [BUGGY]  this(out,  format,  true);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this(out,  format,  true);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this(out,  format,  true);	  this(out,    format);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
92	[BUG]  [BUGGY]  this(out,  newRecord);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this(out,  newRecord);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this(out,  newRecord);	  this(out,    format);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
93	[BUG]  [BUGGY]  this(out,  CSVFormat.DEFAULT_TYPE);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this(out,  CSVFormat.DEFAULT_TYPE);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this(out,  CSVFormat.DEFAULT_TYPE);	  this(out,    format);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
94	[BUG]  [BUGGY]  this(out,  CSVFormat.DEFAULT);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this(out,  CSVFormat.DEFAULT);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this(out,  CSVFormat.DEFAULT);	  this(out,    format);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
95	[BUG]  [BUGGY]  Assertions.notNull(format,  out,   "out ");  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notNull(format,  out,   "out ");  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notNull(format,  out,   "out ");	  Assertions.notEmpty(out,    format,   "out   ");    	non-compiled	[CE]  <identifier>  expected	25	None	replace
96	[BUG]  [BUGGY]  Assertions.notEmpty(out,  format,  null);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notEmpty(out,  format,  null);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notEmpty(out,  format,  null);	  Assertions.notEmpty(out,    format,   "out   ");    	non-compiled	[CE]  <identifier>  expected	25	None	replace
97	[BUG]  [BUGGY]  Assertions.notEmpty(out,  format,   "format ");  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notEmpty(out,  format,   "format ");  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notEmpty(out,  format,   "format ");	  Assertions.notEmpty(out,    format,   "out   ");    	non-compiled	[CE]  <identifier>  expected	25	None	replace
98	[BUG]  [BUGGY]  Assertions.notEmpty(format,   "newRecord ");  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notEmpty(format,   "newRecord ");  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notEmpty(format,   "newRecord ");	  Assertions.notEmpty(format,    newRecord);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
99	[BUG]  [BUGGY]  Assertions.notNull(out,  this.newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notNull(out,  this.newRecord);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notNull(out,  this.newRecord);	  Assertions.notEmpty(out,    this.newRecord);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
100	[BUG]  [BUGGY]  Assertions.notEmpty(this.newRecord,  out);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notEmpty(this.newRecord,  out);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notEmpty(this.newRecord,  out);	  Assertions.notEmpty(out,    this.newRecord);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
101	[BUG]  [BUGGY]  Assertions.notEmpty(out,  this.newRecord  }  );  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notEmpty(out,  this.newRecord  }  );  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notEmpty(out,  this.newRecord  }  );	  Assertions.notEmpty(out,    this.newRecord);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
102	[BUG]  [BUGGY]  Assertions.notEmpty(out,  this.newRecord,  format);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notEmpty(out,  this.newRecord,  format);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notEmpty(out,  this.newRecord,  format);	  Assertions.notEmpty(out,    this.newRecord);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
103	[BUG]  [BUGGY]  Assertions.notEmpty(this.format,  newRecord);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notEmpty(this.format,  newRecord);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notEmpty(this.format,  newRecord);	  Assertions.notEmpty(this.format);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
104	[BUG]  [BUGGY]  Assertions.notEmpty(this.format,  this.out);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notEmpty(this.format,  this.out);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notEmpty(this.format,  this.out);	  Assertions.notEmpty(this.format);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
105	[BUG]  [BUGGY]  Ansertions.notEmpty(out,  newRecord);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Ansertions.notEmpty(out,  newRecord);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Ansertions.notEmpty(out,  newRecord);	  Assertions.notNull(out,    newRecord);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
106	[BUG]  [BUGGY]  Assertions.notNull(out,  newRecord,  format);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notNull(out,  newRecord,  format);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notNull(out,  newRecord,  format);	  Assertions.notEmpty(out,    newRecord,    format);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
107	[BUG]  [BUGGY]  Assertions.notEmpty(out,  newRecord,  this.format);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notEmpty(out,  newRecord,  this.format);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notEmpty(out,  newRecord,  this.format);	  Assertions.notEmpty(out,    newRecord,    format);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
108	[BUG]  [BUGGY]  Assertions.notEmpty(out,  newRecord,  format,  null);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notEmpty(out,  newRecord,  format,  null);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notEmpty(out,  newRecord,  format,  null);	  Assertions.notEmpty(out,    newRecord,    format);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
109	[BUG]  [BUGGY]  Assertions.notEmpty(out,  newRecord,  format,  false);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notEmpty(out,  newRecord,  format,  false);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notEmpty(out,  newRecord,  format,  false);	  Assertions.notEmpty(out,    newRecord,    format);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
110	[BUG]  [BUGGY]  super(format);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  super(format);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	super(format);	  super(out);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
111	[BUG]  [BUGGY]  super(newRecord);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  super(newRecord);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	super(newRecord);	  super(out);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
112	[BUG]  [BUGGY]  super(out,  Format);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  super(out,  Format);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	super(out,  Format);	  super(out);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
113	[BUG]  [BUGGY]  Assertions.notNull(format,  this.format);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notNull(format,  this.format);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notNull(format,  this.format);	  Assertions.notEmpty(this.format,    format);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
114	[BUG]  [BUGGY]  Assertions.notEmpty(this.out,  format);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notEmpty(this.out,  format);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notEmpty(this.out,  format);	  Assertions.notEmpty(this.format,    format);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
115	[BUG]  [BUGGY]  Assertions.notEmpty(out,  format, ",out ");  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notEmpty(out,  format, ",out ");  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notEmpty(out,  format, ",out ");	  Assertions.notNull(out,    format,   "out   ");    	non-compiled	[CE]  <identifier>  expected	32	None	replace
116	[BUG]  [BUGGY]  Assertions.notEmpty(out,  format,   "out. ");  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notEmpty(out,  format,   "out. ");  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notEmpty(out,  format,   "out. ");	  Assertions.notNull(out,    format,   "out   ");    	non-compiled	[CE]  <identifier>  expected	32	None	replace
117	[BUG]  [BUGGY]  super(out,  format.toArray(new  String[out.size()  ]));  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  super(out,  format.toArray(new  String[out.size()  ]));  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	super(out,  format.toArray(new  String[out.size()  ]));	  super(out);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
118	[BUG]  [BUGGY]  super(out,  format.toArray(new  Rectangle2D.Double()));  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  super(out,  format.toArray(new  Rectangle2D.Double()));  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	super(out,  format.toArray(new  Rectangle2D.Double()));	  super(out);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
119	[BUG]  [BUGGY]  super(out,  format.toArray(new  String[out.length()  ]));  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  super(out,  format.toArray(new  String[out.length()  ]));  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	super(out,  format.toArray(new  String[out.length()  ]));	  super(out);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
120	[BUG]  [BUGGY]  super(out,  format.toArray(new  Rectangle2D.Double));  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  super(out,  format.toArray(new  Rectangle2D.Double));  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	super(out,  format.toArray(new  Rectangle2D.Double));	  super(out);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
121	[BUG]  [BUGGY]  super(out,  format.toExternalFormat());  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  super(out,  format.toExternalFormat());  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	super(out,  format.toExternalFormat());	  super(out);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
122	[BUG]  [BUGGY]  this.newRecord  =  new  ArrayList  <  String,  CSVFormat>();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this.newRecord  =  new  ArrayList  <  String,  CSVFormat>();  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this.newRecord  =  new  ArrayList  <  String,  CSVFormat>();	  this.newRecord    =    new    HashMap    <    String,    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
123	[BUG]  [BUGGY]  if(out  ==  null)  {  super(out);  this.newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  if(out  ==  null)  {  super(out);  this.newRecord  =  true;  }  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	if(out  ==  null)  {  super(out);  this.newRecord  =  true;  }	  super(out);    this.newRecord    =    true;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
124	[BUG]  [BUGGY]  super(out,  format);  this.newRecord  =  true;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  super(out,  format);  this.newRecord  =  true;  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	super(out,  format);  this.newRecord  =  true;	  super(out);    this.newRecord    =    true;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
125	[BUG]  [BUGGY]  if(out!=  null)  {  super(out);  this.newRecord  =  true;  }  else  {  out  =  new  CSVFormat();  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  if(out!=  null)  {  super(out);  this.newRecord  =  true;  }  else  {  out  =  new  CSVFormat();  }  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	if(out!=  null)  {  super(out);  this.newRecord  =  true;  }  else  {  out  =  new  CSVFormat();  }	  super(out);    this.newRecord    =    true;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
126	[BUG]  [BUGGY]  if(out!=  null)  {  super(out);  this.newRecord  =  true;  }  else  {  for(int  i  =  0;  i  <  out.length;  i++)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  if(out!=  null)  {  super(out);  this.newRecord  =  true;  }  else  {  for(int  i  =  0;  i  <  out.length;  i++)  {  out.append('n');  }  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	if(out!=  null)  {  super(out);  this.newRecord  =  true;  }  else  {  for(int  i  =  0;  i  <  out.length;  i++)  {  out.append('n');  }	  super(out);    this.newRecord    =    true;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
127	[BUG]  [BUGGY]  this(out,  format,  DEFAULT_NAME);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this(out,  format,  DEFAULT_NAME);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this(out,  format,  DEFAULT_NAME);	  this(out,    format);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
128	[BUG]  [BUGGY]  this(out,  format,  DEFAULT_TYPE);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this(out,  format,  DEFAULT_TYPE);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this(out,  format,  DEFAULT_TYPE);	  this(out,    format);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
129	[BUG]  [BUGGY]  if(out!=  null)  {  super(out);  this.newRecord  =  format;  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  if(out!=  null)  {  super(out);  this.newRecord  =  format;  }  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	if(out!=  null)  {  super(out);  this.newRecord  =  format;  }	  super(out);    this.newRecord    =    format;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
130	[BUG]  [BUGGY]  super(out,  format);  this.newRecord  =  format;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  super(out,  format);  this.newRecord  =  format;  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	super(out,  format);  this.newRecord  =  format;	  super(out);    this.newRecord    =    format;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
131	[BUG]  [BUGGY]  if(out!=  null)  {  super(out);  this.newRecord  =  format;  }  else  {  out  =  new  CSVFormat();  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  if(out!=  null)  {  super(out);  this.newRecord  =  format;  }  else  {  out  =  new  CSVFormat();  }  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	if(out!=  null)  {  super(out);  this.newRecord  =  format;  }  else  {  out  =  new  CSVFormat();  }	  super(out);    this.newRecord    =    format;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
132	[BUG]  [BUGGY]  if(out!=  null)  {  super(out);  this.newRecord  =  format;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  if(out!=  null)  {  super(out);  this.newRecord  =  format;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	if(out!=  null)  {  super(out);  this.newRecord  =  format;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  super(out);    this.newRecord    =    format;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
133	[BUG]  [BUGGY]  Assertions.notNull(out,   "format ");  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notNull(out,   "format ");  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notNull(out,   "format ");	  Assertions.notNull(out,    this.format);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
134	[BUG]  [BUGGY]  if(out!=  null)  {  super();  }  else  {  for(int  i  =  0;  i  <  out.size();  i++)  {  CSVFormat  format  =  out.get(i);  if(format.equals(format))  {  this.format  =  format;  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  if(out!=  null)  {  super();  }  else  {  for(int  i  =  0;  i  <  out.size();  i++)  {  CSVFormat  format  =  out.get(i);  if(format.equals(format))  {  this.format  =  format;  }  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	if(out!=  null)  {  super();  }  else  {  for(int  i  =  0;  i  <  out.size();  i++)  {  CSVFormat  format  =  out.get(i);  if(format.equals(format))  {  this.format  =  format;  }	  super();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
135	[BUG]  [BUGGY]  if(out!=  null)  {  super();  }  else  {  for(int  i  =  0;  i  <  out.size();  ++i)  {  CSVFormat  format  =  out.get(i);  if(format.equals(format))  {  this.format  =  format;  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  if(out!=  null)  {  super();  }  else  {  for(int  i  =  0;  i  <  out.size();  ++i)  {  CSVFormat  format  =  out.get(i);  if(format.equals(format))  {  this.format  =  format;  }  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	if(out!=  null)  {  super();  }  else  {  for(int  i  =  0;  i  <  out.size();  ++i)  {  CSVFormat  format  =  out.get(i);  if(format.equals(format))  {  this.format  =  format;  }	  super();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
136	[BUG]  [BUGGY]  if(out!=  null)  {  super();  }  else  {  for(int  i  =  0;  i  <  out.size();  i++)  {  CSVFormat  format  =  out.getValue();  this.format  =  format.validate();  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  if(out!=  null)  {  super();  }  else  {  for(int  i  =  0;  i  <  out.size();  i++)  {  CSVFormat  format  =  out.getValue();  this.format  =  format.validate();  }  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	if(out!=  null)  {  super();  }  else  {  for(int  i  =  0;  i  <  out.size();  i++)  {  CSVFormat  format  =  out.getValue();  this.format  =  format.validate();  }	  super();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
137	[BUG]  [BUGGY]  if(out!=  null)  {  super();  }  else  {  for(int  i  =  0;  i  <  out.size();  i++)  {  CSVFormat  format  =  out.get(i);  if(format.equals(this.format))  {  this.format  =  format;  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  if(out!=  null)  {  super();  }  else  {  for(int  i  =  0;  i  <  out.size();  i++)  {  CSVFormat  format  =  out.get(i);  if(format.equals(this.format))  {  this.format  =  format;  }  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	if(out!=  null)  {  super();  }  else  {  for(int  i  =  0;  i  <  out.size();  i++)  {  CSVFormat  format  =  out.get(i);  if(format.equals(this.format))  {  this.format  =  format;  }	  super();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
138	[BUG]  [BUGGY]  if(out!=  null)  {  super();  }  else  {  for(int  i  =  0;  i  <  out.size();  i++)  {  CSVFormat  format  =  out.get(i);  if(format.equals(format))  {  return  this;  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  if(out!=  null)  {  super();  }  else  {  for(int  i  =  0;  i  <  out.size();  i++)  {  CSVFormat  format  =  out.get(i);  if(format.equals(format))  {  return  this;  }  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	if(out!=  null)  {  super();  }  else  {  for(int  i  =  0;  i  <  out.size();  i++)  {  CSVFormat  format  =  out.get(i);  if(format.equals(format))  {  return  this;  }	  super();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
139	[BUG]  [BUGGY]  this(out,  format.toPath());  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this(out,  format.toPath());  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this(out,  format.toPath());	  this(out,    format.toString());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
140	[BUG]  [BUGGY]  this.newRecord  =  new  LinkedList  <  CSVFormat>();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this.newRecord  =  new  LinkedList  <  CSVFormat>();  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this.newRecord  =  new  LinkedList  <  CSVFormat>();	  this.newRecord    =    new    HashSet    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
141	[BUG]  [BUGGY]  this.newRecord  =  new  HashSet  <  CSVFormat>(8);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this.newRecord  =  new  HashSet  <  CSVFormat>(8);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this.newRecord  =  new  HashSet  <  CSVFormat>(8);	  this.newRecord    =    new    HashSet    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
142	[BUG]  [BUGGY]  Assertions.notEmpty(out,  this.newRecord!=  null);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notEmpty(out,  this.newRecord!=  null);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notEmpty(out,  this.newRecord!=  null);	  Assertions.notEmpty(out,    this.newRecord);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
143	[BUG]  [BUGGY]  Assertions.notEmpty(out,  this.newRecord  <  null>);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notEmpty(out,  this.newRecord  <  null>);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notEmpty(out,  this.newRecord  <  null>);	  Assertions.notEmpty(out,    this.newRecord);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
144	[BUG]  [BUGGY]  Ansertions.notEmpty(out,  format),  newRecord);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Ansertions.notEmpty(out,  format),  newRecord);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Ansertions.notEmpty(out,  format),  newRecord);	  Ansertions.notEmpty(out,    format);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
145	[BUG]  [BUGGY]  this(out,  format.getName(),  out);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this(out,  format.getName(),  out);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this(out,  format.getName(),  out);	  this(out,    format.getName());    	non-compiled	[CE]  <identifier>  expected	18	None	replace
146	[BUG]  [BUGGY]  this.newRecord  =  new  ArrayList  <  String,Object>();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this.newRecord  =  new  ArrayList  <  String,Object>();  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this.newRecord  =  new  ArrayList  <  String,Object>();	  this.newRecord    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
147	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  String,Object>(8);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this.newRecord  =  new  HashMap  <  String,Object>(8);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this.newRecord  =  new  HashMap  <  String,Object>(8);	  this.newRecord    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
148	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  String,Object>(1);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this.newRecord  =  new  HashMap  <  String,Object>(1);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this.newRecord  =  new  HashMap  <  String,Object>(1);	  this.newRecord    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
149	[BUG]  [BUGGY]  this(out,  format.toArray(),  DEFAULT_NAME);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this(out,  format.toArray(),  DEFAULT_NAME);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this(out,  format.toArray(),  DEFAULT_NAME);	  this(out,    format.toArray());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
150	[BUG]  [BUGGY]  setRecord(false);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  setRecord(false);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	setRecord(false);	  super();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
151	[BUG]  [BUGGY]  super(out);  this.newRecord  =  format  ==  null?  Collections.EMPTY_LIST  :  new  CSVFormat();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  super(out);  this.newRecord  =  format  ==  null?  Collections.EMPTY_LIST  :  new  CSVFormat();  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	super(out);  this.newRecord  =  format  ==  null?  Collections.EMPTY_LIST  :  new  CSVFormat();	  super(out);    this.newRecord    =    format;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
152	[BUG]  [BUGGY]  this.newRecord  =  new  Record();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this.newRecord  =  new  Record();  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this.newRecord  =  new  Record();	  super(out);    this.newRecord    =    format;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
153	[BUG]  [BUGGY]  super(out);  this.newRecord  =  format  ==  null?  Collections.EMPTY_STRING  :  new  CSVFormat();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  super(out);  this.newRecord  =  format  ==  null?  Collections.EMPTY_STRING  :  new  CSVFormat();  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	super(out);  this.newRecord  =  format  ==  null?  Collections.EMPTY_STRING  :  new  CSVFormat();	  super(out);    this.newRecord    =    format;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
154	[BUG]  [BUGGY]  Assertions.checkNotNull(out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.checkNotNull(out);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.checkNotNull(out);	  Assertions.notNull(format);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
155	[BUG]  [BUGGY]  Assertions.notEmpty(format,  this.newRecord);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notEmpty(format,  this.newRecord);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notEmpty(format,  this.newRecord);	  Assertions.notEmpty(format,    newRecord);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
156	[BUG]  [BUGGY]  if(out!=  null)  {  super(out);  this.newRecord  =  true;  }  else  {  for(int  i  =  0;  i  <  out.size();  i++)  {  this.format  =  format.get(i);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  if(out!=  null)  {  super(out);  this.newRecord  =  true;  }  else  {  for(int  i  =  0;  i  <  out.size();  i++)  {  this.format  =  format.get(i);  }  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	if(out!=  null)  {  super(out);  this.newRecord  =  true;  }  else  {  for(int  i  =  0;  i  <  out.size();  i++)  {  this.format  =  format.get(i);  }	  super(out);    this.newRecord    =    true;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
157	[BUG]  [BUGGY]  if(out!=  null)  {  super(out);  this.newRecord  =  true;  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  if(out!=  null)  {  super(out);  this.newRecord  =  true;  }  else  {  out.println();  }  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	if(out!=  null)  {  super(out);  this.newRecord  =  true;  }  else  {  out.println();  }	  super(out);    this.newRecord    =    true;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
158	[BUG]  [BUGGY]  if(out!=  null)  {  super(out);  this.newRecord  =  true;  }  else  {  for(int  i  =  0;  i  <  out.size();  ++i)  {  this.format  =  format.get(i);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  if(out!=  null)  {  super(out);  this.newRecord  =  true;  }  else  {  for(int  i  =  0;  i  <  out.size();  ++i)  {  this.format  =  format.get(i);  }  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	if(out!=  null)  {  super(out);  this.newRecord  =  true;  }  else  {  for(int  i  =  0;  i  <  out.size();  ++i)  {  this.format  =  format.get(i);  }	  super(out);    this.newRecord    =    true;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
159	[BUG]  [BUGGY]  Assertions.notNull(this.format);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notNull(this.format);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notNull(this.format);	  Assertions.notEmpty(this.format);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
160	[BUG]  [BUGGY]  Assertions.notNull(this.format,  format);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notNull(this.format,  format);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notNull(this.format,  format);	  Assertions.notEmpty(this.format);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
161	[BUG]  [BUGGY]  super(out,  format.toArray(new  CSVFormat[out.size()  ]));  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  super(out,  format.toArray(new  CSVFormat[out.size()  ]));  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	super(out,  format.toArray(new  CSVFormat[out.size()  ]));	  super(out,    format);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
162	[BUG]  [BUGGY]  this(out,  format.cloneTree());  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this(out,  format.cloneTree());  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this(out,  format.cloneTree());	  this(out,    format.getName());    	non-compiled	[CE]  <identifier>  expected	18	None	replace
163	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  String,Object>(4);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this.newRecord  =  new  HashMap  <  String,Object>(4);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this.newRecord  =  new  HashMap  <  String,Object>(4);	  this.newRecord    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
164	[BUG]  [BUGGY]  Ansertions.notNull(format);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Ansertions.notNull(format);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Ansertions.notNull(format);	  Ansertions.notEmpty(out,    format);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
165	[BUG]  [BUGGY]  Ansertions.notNull(format,  format);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Ansertions.notNull(format,  format);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Ansertions.notNull(format,  format);	  Ansertions.notEmpty(out,    format);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
166	[BUG]  [BUGGY]  Assertions.notNull(format,   "format ");  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notNull(format,   "format ");  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notNull(format,   "format ");	  Assertions.notEmpty(format,    out);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
167	[BUG]  [BUGGY]  this.newRecord  =  new  HashSet  <  CSVFormat>(4);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this.newRecord  =  new  HashSet  <  CSVFormat>(4);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this.newRecord  =  new  HashSet  <  CSVFormat>(4);	  this.newRecord    =    new    HashSet    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
168	[BUG]  [BUGGY]  Preconditions.checkArgument(out.length  ==  0);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Preconditions.checkArgument(out.length  ==  0);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Preconditions.checkArgument(out.length  ==  0);	  Preconditions.checkNotNull(out);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
169	[BUG]  [BUGGY]  Preconditions.checkNotNull(out,  this);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Preconditions.checkNotNull(out,  this);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Preconditions.checkNotNull(out,  this);	  Preconditions.checkNotNull(out);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
170	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  String,  CSVFormat>(4);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  this.newRecord  =  new  HashMap  <  String,  CSVFormat>(4);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	this.newRecord  =  new  HashMap  <  String,  CSVFormat>(4);	  this.newRecord    =    new    HashMap    <    String,    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
171	[BUG]  [BUGGY]  Assertions.notEmpty(format,  this);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notEmpty(format,  this);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notEmpty(format,  this);	  Assertions.notEmpty(format,    null);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
172	[BUG]  [BUGGY]  Assertions.notEmpty(format,  format);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  Assertions.notEmpty(format,  format);  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	Assertions.notEmpty(format,  format);	  Assertions.notNull(format,    out);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
173	[BUG]  [BUGGY]  super(out,  format.getName());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  super(out,  format.getName());  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	super(out,  format.getName());	  super(out);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
174	[BUG]  [BUGGY]  super(new  Record());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {      [BUGGY]  super(new  Record());  [BUGGY]      Assertions.notNull(format,       "format     ");  this.out  =  out;  this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	59	59	1	replace	super(new  Record());	  super(out);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
