bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(newRecord)  {  out.append(object,  offset,  len);  }  else  {  out.append(value,  offset  +  len);  }  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [BUGGY]  if(newRecord)  {  out.append(object,  offset,  len);  }  else  {  out.append(value,  offset  +  len);  }  [BUGGY]    [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	123	123	1	replace	if(newRecord)  {  out.append(object,  offset,  len);  }  else  {  out.append(value,  offset  +  len);  }	}  	non-compiled	[CE]  <identifier>  expected	37	None	replace
2	[BUG]  [BUGGY]  if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  else  {  out.append(value,  offset  +  len);  }  [CE]  <identifier>  expected  [FE]      AssertionError  [CONTEXT]  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [BUGGY]  if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  else  {  out.append(value,  offset  +  len);  }  [BUGGY]    [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	123	123	1	replace	if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  else  {  out.append(value,  offset  +  len);  }	}  	non-compiled	[CE]  <identifier>  expected	37	None	replace
3	[BUG]  [BUGGY]  newRecord  =  true;  [CE]  <identifier>  expected  [FE]        AssertionError  [CONTEXT]  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [BUGGY]  newRecord  =  true;  [BUGGY]    [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	123	123	1	replace	newRecord  =  true;	}  	non-compiled	[CE]  <identifier>  expected	37	None	replace
4	[BUG]  [BUGGY]  if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  [CE]  <identifier>  expected  [FE]          AssertionError  [CONTEXT]  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [BUGGY]  if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  [BUGGY]    [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	123	123	1	replace	if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }	}  	non-compiled	[CE]  <identifier>  expected	37	None	replace
5	[BUG]  [BUGGY]  if(newRecord)  {  out.append(object,  offset,  len);  }  [CE]  <identifier>  expected  [FE]            AssertionError  [CONTEXT]  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [BUGGY]  if(newRecord)  {  out.append(object,  offset,  len);  }  [BUGGY]    [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	123	123	1	replace	if(newRecord)  {  out.append(object,  offset,  len);  }	}  	non-compiled	[CE]  <identifier>  expected	37	None	replace
6	[BUG]  [BUGGY]  if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  else  {  out.append('/');  }  [CE]  <identifier>  expected  [FE]              AssertionError  [CONTEXT]  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [BUGGY]  if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  else  {  out.append('/');  }  [BUGGY]    [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	123	123	1	replace	if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  else  {  out.append('/');  }	}  	non-compiled	[CE]  <identifier>  expected	37	None	replace
7	[BUG]  [BUGGY]  if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  else  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                AssertionError  [CONTEXT]  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [BUGGY]  if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  else  {  out.append('n');  }  [BUGGY]    [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	123	123	1	replace	if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  else  {  out.append('n');  }	}  	non-compiled	[CE]  <identifier>  expected	37	None	replace
8	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]                  AssertionError  [CONTEXT]  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [BUGGY]    [BUGGY]    [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	123	123	1	replace	  	}  	non-compiled	[CE]  <identifier>  expected	37	None	replace
9	[BUG]  [BUGGY]  if(newRecord)  {  out.append(object,  offset,  len);  }  else  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [BUGGY]  if(newRecord)  {  out.append(object,  offset,  len);  }  else  {  out.append('n');  }  [BUGGY]    [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	123	123	1	replace	if(newRecord)  {  out.append(object,  offset,  len);  }  else  {  out.append('n');  }	}  	non-compiled	[CE]  <identifier>  expected	37	None	replace
10	[BUG]  [BUGGY]  System.arraycopy(object,  0,  out,  offset  +  len,  value.length);  [CE]  <identifier>  expected  [FE]      AssertionError  [CONTEXT]  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [BUGGY]  System.arraycopy(object,  0,  out,  offset  +  len,  value.length);  [BUGGY]    [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	123	123	1	replace	System.arraycopy(object,  0,  out,  offset  +  len,  value.length);	}  	non-compiled	[CE]  <identifier>  expected	37	None	replace
11	[BUG]  [BUGGY]  if(newRecord)  {  out.append(object,  offset,  len);  }  else  {  out.append('ufffd');  }  [CE]  <identifier>  expected  [FE]        AssertionError  [CONTEXT]  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [BUGGY]  if(newRecord)  {  out.append(object,  offset,  len);  }  else  {  out.append('ufffd');  }  [BUGGY]    [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	123	123	1	replace	if(newRecord)  {  out.append(object,  offset,  len);  }  else  {  out.append('ufffd');  }	}  	non-compiled	[CE]  <identifier>  expected	37	None	replace
12	[BUG]  [BUGGY]  if(newRecord)  {  out.append(object,  offset,  len);  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]          AssertionError  [CONTEXT]  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [BUGGY]  if(newRecord)  {  out.append(object,  offset,  len);  }  else  {  out.append( "n ");  }  [BUGGY]    [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	123	123	1	replace	if(newRecord)  {  out.append(object,  offset,  len);  }  else  {  out.append( "n ");  }	}  	non-compiled	[CE]  <identifier>  expected	37	None	replace
13	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append(object,  offset,  len);  }  else  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]            AssertionError  [CONTEXT]  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [BUGGY]  if(newRecord!=  null)  {  out.append(object,  offset,  len);  }  else  {  out.append('n');  }  [BUGGY]    [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	123	123	1	replace	if(newRecord!=  null)  {  out.append(object,  offset,  len);  }  else  {  out.append('n');  }	}  	non-compiled	[CE]  <identifier>  expected	37	None	replace
14	[BUG]  [BUGGY]  System.arraycopy(value,  0,  out,  offset  +  len,  value.length);  [CE]  <identifier>  expected  [FE]              AssertionError  [CONTEXT]  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [BUGGY]  System.arraycopy(value,  0,  out,  offset  +  len,  value.length);  [BUGGY]    [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	123	123	1	replace	System.arraycopy(value,  0,  out,  offset  +  len,  value.length);	}  	non-compiled	[CE]  <identifier>  expected	37	None	replace
15	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append(object,  offset,  offset  +  len);  }  else  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [BUGGY]  if(newRecord  ==  null)  {  out.append(object,  offset,  offset  +  len);  }  else  {  out.append('n');  }  [BUGGY]    [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	123	123	1	replace	if(newRecord  ==  null)  {  out.append(object,  offset,  offset  +  len);  }  else  {  out.append('n');  }	}  	non-compiled	[CE]  <identifier>  expected	37	None	replace
16	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append(object,  offset,  offset  +  len);  }  else  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]      AssertionError  [CONTEXT]  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [BUGGY]  if(newRecord!=  null)  {  out.append(object,  offset,  offset  +  len);  }  else  {  out.append('n');  }  [BUGGY]    [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	123	123	1	replace	if(newRecord!=  null)  {  out.append(object,  offset,  offset  +  len);  }  else  {  out.append('n');  }	}  	non-compiled	[CE]  <identifier>  expected	37	None	replace
17	[BUG]  [BUGGY]  out.append(object,  offset,  offset  +  len);  [CE]  <identifier>  expected  [FE]        AssertionError  [CONTEXT]  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [BUGGY]  out.append(object,  offset,  offset  +  len);  [BUGGY]    [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	123	123	1	replace	out.append(object,  offset,  offset  +  len);	}  	non-compiled	[CE]  <identifier>  expected	37	None	replace
18	[BUG]  [BUGGY]  System.arraycopy(object,  offset,  value,  offset,  len);  [CE]  <identifier>  expected  [FE]          AssertionError  [CONTEXT]  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [BUGGY]  System.arraycopy(object,  offset,  value,  offset,  len);  [BUGGY]    [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	123	123	1	replace	System.arraycopy(object,  offset,  value,  offset,  len);	}  	non-compiled	[CE]  <identifier>  expected	37	None	replace
19	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append(object,  offset,  offset  +  len);  }  [CE]  <identifier>  expected  [FE]            AssertionError  [CONTEXT]  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [BUGGY]  if(newRecord  ==  null)  {  out.append(object,  offset,  offset  +  len);  }  [BUGGY]    [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	123	123	1	replace	if(newRecord  ==  null)  {  out.append(object,  offset,  offset  +  len);  }	}  	non-compiled	[CE]  <identifier>  expected	37	None	replace
20	[BUG]  [BUGGY]  System.arraycopy(object,  0,  out,  offset,  value.length);  [CE]  <identifier>  expected  [FE]              AssertionError  [CONTEXT]  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [BUGGY]  System.arraycopy(object,  0,  out,  offset,  value.length);  [BUGGY]    [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	123	123	1	replace	System.arraycopy(object,  0,  out,  offset,  value.length);	}  	non-compiled	[CE]  <identifier>  expected	37	None	replace
21	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append(object,  offset,  offset  +  len);  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                AssertionError  [CONTEXT]  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [BUGGY]  if(newRecord  ==  null)  {  out.append(object,  offset,  offset  +  len);  newRecord  =  true;  }  [BUGGY]    [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	123	123	1	replace	if(newRecord  ==  null)  {  out.append(object,  offset,  offset  +  len);  newRecord  =  true;  }	}  	non-compiled	[CE]  <identifier>  expected	37	None	replace
