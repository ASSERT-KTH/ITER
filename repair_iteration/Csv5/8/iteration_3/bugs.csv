bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.format  =  format!=  null?  newRecord()  :  FormatUtils.EMPTY_STRING;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  newRecord()  :  FormatUtils.EMPTY_STRING;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  newRecord()  :  FormatUtils.EMPTY_STRING;	  this.format    =    format    ==    null?    newRecord()    :    FormatUtils.EMPTY_STRING;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
2	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord  :  FormatUtils.EMPTY_STRING;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord  :  FormatUtils.EMPTY_STRING;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord  :  FormatUtils.EMPTY_STRING;	  this.format    =    format    ==    null?    newRecord()    :    FormatUtils.EMPTY_STRING;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
3	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecordType()  :  FormatUtils.EMPTY_STRING;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecordType()  :  FormatUtils.EMPTY_STRING;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecordType()  :  FormatUtils.EMPTY_STRING;	  this.format    =    format    ==    null?    newRecord()    :    FormatUtils.EMPTY_STRING;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
4	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.format);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(this.format);	  this.newRecord    =    new    Record    <    CSVFormat>(format);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
5	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(format,  true);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(format,  true);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(format,  true);	  this.newRecord    =    new    Record    <    CSVFormat>(format);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
6	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(format,  false);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(format,  false);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(format,  false);	  this.newRecord    =    new    Record    <    CSVFormat>(format);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
7	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.record);  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(this.record);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(this.record);	  this.newRecord    =    new    Record    <    CSVFormat>(format);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
8	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(format,  0);  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(format,  0);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(format,  0);	  this.newRecord    =    new    Record    <    CSVFormat>(format);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
9	[BUG]  [BUGGY]  this.format  =  format!=  null?  Format.newInstance(this.record):  Format.newInstance();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  Format.newInstance(this.record):  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  Format.newInstance(this.record):  Format.newInstance();	  this.format    =    format    ==    null?    Format.newInstance(this.record):    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
10	[BUG]  [BUGGY]  this.format  =  Format.newInstance(this.record):  Format.newInstance();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.newInstance(this.record):  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.newInstance(this.record):  Format.newInstance();	  this.format    =    format    ==    null?    Format.newInstance(this.record):    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
11	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.newInstance(this.record,  newRecord):  Format.newInstance();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.newInstance(this.record,  newRecord):  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.newInstance(this.record,  newRecord):  Format.newInstance();	  this.format    =    format    ==    null?    Format.newInstance(this.record):    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
12	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.newInstance(this.record):  Format.newInstance(0);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.newInstance(this.record):  Format.newInstance(0);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.newInstance(this.record):  Format.newInstance(0);	  this.format    =    format    ==    null?    Format.newInstance(this.record):    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
13	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.NONE  :  Format.DEFAULT;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.NONE  :  Format.DEFAULT;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.NONE  :  Format.DEFAULT;	  this.format    =    format    ==    null?    CSVFormat.NONE    :    Format.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	114	None	replace
14	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.NONE  :  Format.DEFAULT;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.NONE  :  Format.DEFAULT;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.NONE  :  Format.DEFAULT;	  this.format    =    format    ==    null?    CSVFormat.NONE    :    Format.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	114	None	replace
15	[BUG]  [BUGGY]  this.format  =  Format.NONE  ==  null?  CSVFormat.NONE  :  Format.DEFAULT;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.NONE  ==  null?  CSVFormat.NONE  :  Format.DEFAULT;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.NONE  ==  null?  CSVFormat.NONE  :  Format.DEFAULT;	  this.format    =    format    ==    null?    CSVFormat.NONE    :    Format.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	114	None	replace
16	[BUG]  [BUGGY]  this.format  =  format!=  null?  Format.NONE  :  Format.DEFAULT;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  Format.NONE  :  Format.DEFAULT;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  Format.NONE  :  Format.DEFAULT;	  this.format    =    format    ==    null?    CSVFormat.NONE    :    Format.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	114	None	replace
17	[BUG]  [BUGGY]  this.format  =  format  ==  null?  NONE  :  Format.DEFAULT;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  NONE  :  Format.DEFAULT;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  NONE  :  Format.DEFAULT;	  this.format    =    format    ==    null?    CSVFormat.NONE    :    Format.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	114	None	replace
18	[BUG]  [BUGGY]  this.format  =  format!=  null?  newRecord()  :  Collections.EMPTY_STRING;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  newRecord()  :  Collections.EMPTY_STRING;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  newRecord()  :  Collections.EMPTY_STRING;	  this.format    =    format    ==    null?    newRecord()    :    Collections.EMPTY_STRING;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
19	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecordType()  :  Collections.EMPTY_STRING;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecordType()  :  Collections.EMPTY_STRING;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecordType()  :  Collections.EMPTY_STRING;	  this.format    =    format    ==    null?    newRecord()    :    Collections.EMPTY_STRING;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
20	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord(false):  Collections.EMPTY_STRING;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord(false):  Collections.EMPTY_STRING;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord(false):  Collections.EMPTY_STRING;	  this.format    =    format    ==    null?    newRecord()    :    Collections.EMPTY_STRING;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
21	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Collections.EMPTY_STRING  :  newRecord();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Collections.EMPTY_STRING  :  newRecord();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Collections.EMPTY_STRING  :  newRecord();	  this.format    =    format    ==    null?    newRecord()    :    Collections.EMPTY_STRING;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
22	[BUG]  [BUGGY]  this.format  =  format  ==  null?  FormatUtils.EMPTY  :  FormatUtils.EMPTY;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  FormatUtils.EMPTY  :  FormatUtils.EMPTY;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  FormatUtils.EMPTY  :  FormatUtils.EMPTY;	  this.format    =    format    ==    null?    newRecord    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	96	None	replace
23	[BUG]  [BUGGY]  this.format  =  newRecord  ==  null?  format  :  FormatUtils.EMPTY;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  newRecord  ==  null?  format  :  FormatUtils.EMPTY;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  newRecord  ==  null?  format  :  FormatUtils.EMPTY;	  this.format    =    format    ==    null?    newRecord    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	96	None	replace
24	[BUG]  [BUGGY]  this.format  =  format  ==  null?  null  :  FormatUtils.EMPTY;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  null  :  FormatUtils.EMPTY;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  null  :  FormatUtils.EMPTY;	  this.format    =    format    ==    null?    newRecord    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	96	None	replace
25	[BUG]  [BUGGY]  This.format  =  newRecord;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  This.format  =  newRecord;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	This.format  =  newRecord;	  if(newRecord!=    null)    {    this.format    =    newRecord;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
26	[BUG]  [BUGGY]  this.format  =  FormatUtilities.newFormat(newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtilities.newFormat(newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtilities.newFormat(newRecord);	  if(newRecord!=    null)    {    this.format    =    newRecord;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
27	[BUG]  [BUGGY]  this.format  =  format  >=  null?  CSVFormat.DEFAULT_VERSION  :  format;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  >=  null?  CSVFormat.DEFAULT_VERSION  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  >=  null?  CSVFormat.DEFAULT_VERSION  :  format;	  this.format    =    format!=    null?    CSVFormat.DEFAULT_VERSION    :    format;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
28	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VERSION  :  Format.newInstance();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VERSION  :  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_VERSION  :  Format.newInstance();	  this.format    =    format!=    null?    CSVFormat.DEFAULT_VERSION    :    format;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
29	[BUG]  [BUGGY]  this.format  =  Format.createInstance(newRecord);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.createInstance(newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.createInstance(newRecord);	  this.format    =    Format.createInstance();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
30	[BUG]  [BUGGY]  this.format  =  Format.createRecord();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.createRecord();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.createRecord();	  this.format    =    Format.createInstance();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
31	[BUG]  [BUGGY]  this.format  =  Format.createFormat();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.createFormat();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.createFormat();	  this.format    =    Format.createInstance();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
32	[BUG]  [BUGGY]  this.format  =  Format.createRecordInstance();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.createRecordInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.createRecordInstance();	  this.format    =    Format.createInstance();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
33	[BUG]  [BUGGY]  this.format  =  Format.createInstance(this.record);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.createInstance(this.record);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.createInstance(this.record);	  this.format    =    Format.createInstance();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
34	[BUG]  [BUGGY]  this.format  =  format!=  null?  Format.UNKNOWN  :  format,  newRecord);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  Format.UNKNOWN  :  format,  newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  Format.UNKNOWN  :  format,  newRecord);	  this.format    =    format    ==    null?    Format.UNKNOWN    :    format,    newRecord);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
35	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format,  out);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format,  out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.UNKNOWN  :  format,  out);	  this.format    =    format    ==    null?    Format.UNKNOWN    :    format,    newRecord);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
36	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format,  false);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format,  false);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.UNKNOWN  :  format,  false);	  this.format    =    format    ==    null?    Format.UNKNOWN    :    format,    newRecord);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
37	[BUG]  [BUGGY]  this.format  =  newRecord  ==  null?  Format.UNKNOWN  :  format,  out);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  newRecord  ==  null?  Format.UNKNOWN  :  format,  out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  newRecord  ==  null?  Format.UNKNOWN  :  format,  out);	  this.format    =    format    ==    null?    Format.UNKNOWN    :    format,    newRecord);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
38	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format,  record);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format,  record);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.UNKNOWN  :  format,  record);	  this.format    =    format    ==    null?    Format.UNKNOWN    :    format,    newRecord);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
39	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format.toString());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format.toString());  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.UNKNOWN  :  format.toString());	  this.format    =    format    ==    null?    Format.UNKNOWN    :    format);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
40	[BUG]  [BUGGY]  this.format  =  format!=  null?  Format.UNKNOWN  :  format);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  Format.UNKNOWN  :  format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  Format.UNKNOWN  :  format);	  this.format    =    format    ==    null?    Format.UNKNOWN    :    format);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
41	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format.getName());  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format.getName());  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.UNKNOWN  :  format.getName());	  this.format    =    format    ==    null?    Format.UNKNOWN    :    format);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
42	[BUG]  [BUGGY]  this.format  =  FormatUtils.newInstance();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.newInstance();	  this.format    =    FormatUtils.newRecord();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
43	[BUG]  [BUGGY]  this.format  =  FormatUtils.newRecord(out);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.newRecord(out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.newRecord(out);	  this.format    =    FormatUtils.newRecord();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
44	[BUG]  [BUGGY]  this.format  =  FormatUtils.newRecord(this);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.newRecord(this);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.newRecord(this);	  this.format    =    FormatUtils.newRecord();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
45	[BUG]  [BUGGY]  this.format  =  FormatUtils.newRecord(this.record);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.newRecord(this.record);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.newRecord(this.record);	  this.format    =    FormatUtils.newRecord();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
46	[BUG]  [BUGGY]  this.format  =  FormatUtils.newFormat();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.newFormat();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.newFormat();	  this.format    =    FormatUtils.newRecord();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
47	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.toString()  + "n ";  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.toString()  + "n ";  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.toString()  + "n ";	  this.format    =    format    ==    null?    CSVFormat.UNKNOWN    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
48	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.EMPTY  :  Format.newInstance();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.EMPTY  :  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.EMPTY  :  Format.newInstance();	  this.format    =    format!=    null?    CSVFormat.EMPTY    :    format;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
49	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNDEFINED  :  Format.UNDEFINED;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNDEFINED  :  Format.UNDEFINED;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.UNDEFINED  :  Format.UNDEFINED;	  this.format    =    format!=    null?    CSVFormat.UNDEFINED    :    format;    	non-compiled	[CE]  <identifier>  expected	79	None	replace
50	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.UNDEFINED  :  Format.UNDEFINED;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.UNDEFINED  :  Format.UNDEFINED;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.UNDEFINED  :  Format.UNDEFINED;	  this.format    =    format!=    null?    CSVFormat.UNDEFINED    :    format;    	non-compiled	[CE]  <identifier>  expected	79	None	replace
51	[BUG]  [BUGGY]  this.format  =  format  >=  null?  CSVFormat.UNDEFINED  :  format;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  >=  null?  CSVFormat.UNDEFINED  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  >=  null?  CSVFormat.UNDEFINED  :  format;	  this.format    =    format!=    null?    CSVFormat.UNDEFINED    :    format;    	non-compiled	[CE]  <identifier>  expected	79	None	replace
52	[BUG]  [BUGGY]  this.format  =  format  ==  null?  FormatUtils.NONE  :  FormatUtils.EMPTY;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  FormatUtils.NONE  :  FormatUtils.EMPTY;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  FormatUtils.NONE  :  FormatUtils.EMPTY;	  this.format    =    format!=    null?    CSVFormat.NONE    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
53	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  FormatUtils.EMPTY_STRING;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  FormatUtils.EMPTY_STRING;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.NONE  :  FormatUtils.EMPTY_STRING;	  this.format    =    format!=    null?    CSVFormat.NONE    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
54	[BUG]  [BUGGY]  this.format  =  format!=  null?  FormatUtils.EMPTY  :  FormatUtils.EMPTY;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  FormatUtils.EMPTY  :  FormatUtils.EMPTY;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  FormatUtils.EMPTY  :  FormatUtils.EMPTY;	  this.format    =    format!=    null?    CSVFormat.NONE    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
55	[BUG]  [BUGGY]  this.format  =  format!=  null?  FormatUtils.NONE  :  FormatUtils.EMPTY;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  FormatUtils.NONE  :  FormatUtils.EMPTY;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  FormatUtils.NONE  :  FormatUtils.EMPTY;	  this.format    =    format!=    null?    CSVFormat.NONE    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
56	[BUG]  [BUGGY]  this.format  =  Format.newRecord(record);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.newRecord(record);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.newRecord(record);	  this.format    =    Format.newRecord();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
57	[BUG]  [BUGGY]  this.format  =  Format.newRecord(out);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.newRecord(out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.newRecord(out);	  this.format    =    Format.newRecord();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
58	[BUG]  [BUGGY]  this.format  =  Format.newRecord(false);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.newRecord(false);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.newRecord(false);	  this.format    =    Format.newRecord();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
59	[BUG]  [BUGGY]  this.format  =  Format.newRecord(0);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.newRecord(0);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.newRecord(0);	  this.format    =    Format.newRecord();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
60	[BUG]  [BUGGY]  this.format  =  Format.newRecord(this.record);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.newRecord(this.record);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.newRecord(this.record);	  this.format    =    Format.newRecord();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
61	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord  :  Format.newInstance();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord  :  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord  :  Format.newInstance();	  this.format    =    format!=    null?    newRecord    :    format;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
62	[BUG]  [BUGGY]  this.format  =  format!=  null?  newRecord  :  Format.newInstance();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  newRecord  :  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  newRecord  :  Format.newInstance();	  this.format    =    format!=    null?    newRecord    :    format;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
63	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord  :  Format.toString();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord  :  Format.toString();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord  :  Format.toString();	  this.format    =    format!=    null?    newRecord    :    format;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
64	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT  :  format,  newRecord);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT  :  format,  newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT  :  format,  newRecord);	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    format,    newRecord);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
65	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format,  out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format,  out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format,  out);	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    format,    newRecord);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
66	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format,  false);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format,  false);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format,  false);	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    format,    newRecord);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
67	[BUG]  [BUGGY]  this.format  =  newRecord  ==  null?  CSVFormat.DEFAULT  :  format,  newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  newRecord  ==  null?  CSVFormat.DEFAULT  :  format,  newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  newRecord  ==  null?  CSVFormat.DEFAULT  :  format,  newRecord);	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    format,    newRecord);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
68	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  newRecord,  format);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  newRecord,  format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  newRecord,  format);	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    format,    newRecord);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
69	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.UNKNOWN  :  format.getName();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.UNKNOWN  :  format.getName();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.UNKNOWN  :  format.getName();	  this.format    =    format    ==    null?    CSVFormat.UNKNOWN    :    format.getName();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
70	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.getRecord();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.getRecord();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.getRecord();	  this.format    =    format    ==    null?    CSVFormat.UNKNOWN    :    format.getName();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
71	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.getLocalName();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.getLocalName();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.getLocalName();	  this.format    =    format    ==    null?    CSVFormat.UNKNOWN    :    format.getName();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
72	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.getSimpleName();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.getSimpleName();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.getSimpleName();	  this.format    =    format    ==    null?    CSVFormat.UNKNOWN    :    format.getName();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
73	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_VERTICAL  :  format;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_VERTICAL  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT_VERTICAL  :  format;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_VERTICAL    :    format;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
74	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_DECEMBER  :  format;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_DECEMBER  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_DECEMBER  :  format;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_VERTICAL    :    format;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
75	[BUG]  [BUGGY]  System.err.println( "Missing  CSV  for  format: "  +  format);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  System.err.println( "Missing  CSV  for  format: "  +  format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	System.err.println( "Missing  CSV  for  format: "  +  format);	  if(newRecord)    {    System.err.println(   "Missing    CSV    for    format:   "    +    format);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
76	[BUG]  [BUGGY]  ||  newRecord)  {  System.err.println( "Missing  CSV  for  format: "  +  format);  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  ||  newRecord)  {  System.err.println( "Missing  CSV  for  format: "  +  format);  }  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	||  newRecord)  {  System.err.println( "Missing  CSV  for  format: "  +  format);  }	  if(newRecord)    {    System.err.println(   "Missing    CSV    for    format:   "    +    format);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
77	[BUG]  [BUGGY]  Error( "Missing  CSV  for  format: "  +  format);  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  Error( "Missing  CSV  for  format: "  +  format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	Error( "Missing  CSV  for  format: "  +  format);	  if(newRecord)    {    System.err.println(   "Missing    CSV    for    format:   "    +    format);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
78	[BUG]  [BUGGY]  safeMultiply(newRecord)  {  System.err.println( "Missing  CSV  for  format: "  +  format);  }  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  safeMultiply(newRecord)  {  System.err.println( "Missing  CSV  for  format: "  +  format);  }  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	safeMultiply(newRecord)  {  System.err.println( "Missing  CSV  for  format: "  +  format);  }	  if(newRecord)    {    System.err.println(   "Missing    CSV    for    format:   "    +    format);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
79	[BUG]  [BUGGY]  Context.err.println( "Missing  CSV  for  format: "  +  format);  [CE]  <identifier>  expected  [FE]                                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  Context.err.println( "Missing  CSV  for  format: "  +  format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	Context.err.println( "Missing  CSV  for  format: "  +  format);	  if(newRecord)    {    System.err.println(   "Missing    CSV    for    format:   "    +    format);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
80	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format.toString()  +  1;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format.toString()  +  1;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.UNKNOWN  :  format.toString()  +  1;	  this.format    =    format    ==    null?    Format.UNKNOWN    :    format    +    1;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
81	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format.getName()  +  1;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format.getName()  +  1;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.UNKNOWN  :  format.getName()  +  1;	  this.format    =    format    ==    null?    Format.UNKNOWN    :    format    +    1;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
82	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format  +  2;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format  +  2;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.UNKNOWN  :  format  +  2;	  this.format    =    format    ==    null?    Format.UNKNOWN    :    format    +    1;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
83	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format.toFormat()  +  1;  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format.toFormat()  +  1;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.UNKNOWN  :  format.toFormat()  +  1;	  this.format    =    format    ==    null?    Format.UNKNOWN    :    format    +    1;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
84	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format.toFormatter()  +  1;  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format.toFormatter()  +  1;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.UNKNOWN  :  format.toFormatter()  +  1;	  this.format    =    format    ==    null?    Format.UNKNOWN    :    format    +    1;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
85	[BUG]  [BUGGY]  this.format  =  format  ==  null?  FormatUtils.DEFAULT  :  FormatUtils.EMPTY;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  FormatUtils.DEFAULT  :  FormatUtils.EMPTY;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  FormatUtils.DEFAULT  :  FormatUtils.EMPTY;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
86	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT  :  FormatUtils.EMPTY;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT  :  FormatUtils.EMPTY;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT  :  FormatUtils.EMPTY;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
87	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  FormatUtils.EMPTY_STRING;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  FormatUtils.EMPTY_STRING;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  FormatUtils.EMPTY_STRING;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
88	[BUG]  [BUGGY]  this.format  =  format  ==  null?  FormatUtils.EMPTY  :  CSVFormat.DEFAULT;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  FormatUtils.EMPTY  :  CSVFormat.DEFAULT;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  FormatUtils.EMPTY  :  CSVFormat.DEFAULT;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
89	[BUG]  [BUGGY]  this.format  =  format  ==  null?  FormatUtils.EMPTY  :  FormatUtils.DEFAULT;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  FormatUtils.EMPTY  :  FormatUtils.DEFAULT;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  FormatUtils.EMPTY  :  FormatUtils.DEFAULT;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
90	[BUG]  [BUGGY]  this.format  =  format!=  null?  newRecord  :  Collections.EMPTY_STRING;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  newRecord  :  Collections.EMPTY_STRING;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  newRecord  :  Collections.EMPTY_STRING;	  this.format    =    format    ==    null?    newRecord    :    Collections.EMPTY_STRING;    	non-compiled	[CE]  <identifier>  expected	100	None	replace
91	[BUG]  [BUGGY]  this.format  =  format  ==  null?  null  :  Collections.EMPTY_STRING;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  null  :  Collections.EMPTY_STRING;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  null  :  Collections.EMPTY_STRING;	  this.format    =    format    ==    null?    newRecord    :    Collections.EMPTY_STRING;    	non-compiled	[CE]  <identifier>  expected	100	None	replace
92	[BUG]  [BUGGY]  this.format  =  newRecord  ==  null?  format  :  Collections.EMPTY_STRING;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  newRecord  ==  null?  format  :  Collections.EMPTY_STRING;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  newRecord  ==  null?  format  :  Collections.EMPTY_STRING;	  this.format    =    format    ==    null?    newRecord    :    Collections.EMPTY_STRING;    	non-compiled	[CE]  <identifier>  expected	100	None	replace
93	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord  :  Collections.EMPTY_STRING  +  1;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord  :  Collections.EMPTY_STRING  +  1;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord  :  Collections.EMPTY_STRING  +  1;	  this.format    =    format    ==    null?    newRecord    :    Collections.EMPTY_STRING;    	non-compiled	[CE]  <identifier>  expected	100	None	replace
94	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_VARIABLE  :  format;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_VARIABLE  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT_VARIABLE  :  format;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_VARIABLE    :    format;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
95	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VARIABLE  :  format.toString();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VARIABLE  :  format.toString();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_VARIABLE  :  format.toString();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_VARIABLE    :    format;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
96	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VARIABLE  :  Format.newInstance();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VARIABLE  :  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_VARIABLE  :  Format.newInstance();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_VARIABLE    :    format;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
97	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord(false):  FormatUtils.EMPTY;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord(false):  FormatUtils.EMPTY;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord(false):  FormatUtils.EMPTY;	  this.format    =    format    ==    null?    newRecord()    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
98	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	if(newRecord  ==  false)  {  this.newRecord  =  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.newRecord    =    true;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
99	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  true;  }  else  {  for(int  i  =  0;  i  <  out.size();  i++)  {  if(!this.newRecord.equals(format.get(i)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  true;  }  else  {  for(int  i  =  0;  i  <  out.size();  i++)  {  if(!this.newRecord.equals(format.get(i)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	if(newRecord  ==  false)  {  this.newRecord  =  true;  }  else  {  for(int  i  =  0;  i  <  out.size();  i++)  {  if(!this.newRecord.equals(format.get(i)))  {  throw  new  IllegalArgumentException( " ");  }	  this.newRecord    =    true;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
100	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  true;  }  else  {  for(int  i  =  0;  i  <  out.size();  i++)  {  if(!this.newRecord.equals(format))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  true;  }  else  {  for(int  i  =  0;  i  <  out.size();  i++)  {  if(!this.newRecord.equals(format))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	if(newRecord  ==  false)  {  this.newRecord  =  true;  }  else  {  for(int  i  =  0;  i  <  out.size();  i++)  {  if(!this.newRecord.equals(format))  {  throw  new  IllegalArgumentException( " ");  }	  this.newRecord    =    true;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
101	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  true;  }  else  {  for(int  i  =  0;  i  <  out.size();  i++)  {  if(!this.newRecord.equals(format.get(i)))  {  this.newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  true;  }  else  {  for(int  i  =  0;  i  <  out.size();  i++)  {  if(!this.newRecord.equals(format.get(i)))  {  this.newRecord  =  false;  }  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	if(newRecord  ==  false)  {  this.newRecord  =  true;  }  else  {  for(int  i  =  0;  i  <  out.size();  i++)  {  if(!this.newRecord.equals(format.get(i)))  {  this.newRecord  =  false;  }	  this.newRecord    =    true;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
102	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  true;  }  else  {  for(int  i  =  0;  i  <  out.size();  i++)  {  if(!this.newRecord.equals(format.get(i)))  {  throw  new  IllegalArgumentException( " "));  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  true;  }  else  {  for(int  i  =  0;  i  <  out.size();  i++)  {  if(!this.newRecord.equals(format.get(i)))  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	if(newRecord  ==  false)  {  this.newRecord  =  true;  }  else  {  for(int  i  =  0;  i  <  out.size();  i++)  {  if(!this.newRecord.equals(format.get(i)))  {  throw  new  IllegalArgumentException( " "));  }	  this.newRecord    =    true;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
103	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  true;  }  else  {  for(int  i  =  0;  i  <  out.size();  i++)  {  if(!this.newRecord.equals(format))  {  this.newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  if(newRecord  ==  false)  {  this.newRecord  =  true;  }  else  {  for(int  i  =  0;  i  <  out.size();  i++)  {  if(!this.newRecord.equals(format))  {  this.newRecord  =  false;  }  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	if(newRecord  ==  false)  {  this.newRecord  =  true;  }  else  {  for(int  i  =  0;  i  <  out.size();  i++)  {  if(!this.newRecord.equals(format))  {  this.newRecord  =  false;  }	  this.newRecord    =    true;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
104	[BUG]  [BUGGY]  this.format  =  format!=  null?  Format.UNKNOWN  :  format.toFormat();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  Format.UNKNOWN  :  format.toFormat();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  Format.UNKNOWN  :  format.toFormat();	  this.format    =    format    ==    null?    Format.UNKNOWN    :    format.toFormat();    	non-compiled	[CE]  <identifier>  expected	53	None	replace
105	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.NONE  :  format.toFormat();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.NONE  :  format.toFormat();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.NONE  :  format.toFormat();	  this.format    =    format    ==    null?    Format.UNKNOWN    :    format.toFormat();    	non-compiled	[CE]  <identifier>  expected	53	None	replace
106	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format.toString()  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format.toString()  +  1;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.NONE  :  format.toString()  +  1;	  this.format    =    format    ==    null?    CSVFormat.NONE    :    format    +    1;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
107	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format  +  2;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format  +  2;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.NONE  :  format  +  2;	  this.format    =    format    ==    null?    CSVFormat.NONE    :    format    +    1;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
108	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.NONE  :  format  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.NONE  :  format  +  1;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.NONE  :  format  +  1;	  this.format    =    format    ==    null?    CSVFormat.NONE    :    format    +    1;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
109	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format  +  3;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format  +  3;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.NONE  :  format  +  3;	  this.format    =    format    ==    null?    CSVFormat.NONE    :    format    +    1;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
110	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format.getName()  +  1;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format.getName()  +  1;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.NONE  :  format.getName()  +  1;	  this.format    =    format    ==    null?    CSVFormat.NONE    :    format    +    1;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
111	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.toString()  +  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.toString()  +  1;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.toString()  +  1;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    format    +    1;    	non-compiled	[CE]  <identifier>  expected	111	None	replace
112	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format  +  2;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format  +  2;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format  +  2;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    format    +    1;    	non-compiled	[CE]  <identifier>  expected	111	None	replace
113	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT  :  format  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT  :  format  +  1;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT  :  format  +  1;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    format    +    1;    	non-compiled	[CE]  <identifier>  expected	111	None	replace
114	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format  +  3;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format  +  3;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format  +  3;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    format    +    1;    	non-compiled	[CE]  <identifier>  expected	111	None	replace
115	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format  +  4;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format  +  4;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format  +  4;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    format    +    1;    	non-compiled	[CE]  <identifier>  expected	111	None	replace
116	[BUG]  [BUGGY]  this.format  =  FormatUtils.getFormat(newRecord,  format);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.getFormat(newRecord,  format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.getFormat(newRecord,  format);	  this.format    =    FormatUtils.getFormat(newRecord);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
117	[BUG]  [BUGGY]  this.format  =  FormatUtils.getFormat(this.newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.getFormat(this.newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.getFormat(this.newRecord);	  this.format    =    FormatUtils.getFormat(newRecord);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
118	[BUG]  [BUGGY]  this.format  =  FormatUtils.getFormat(newRecord,  out);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.getFormat(newRecord,  out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.getFormat(newRecord,  out);	  this.format    =    FormatUtils.getFormat(newRecord);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
119	[BUG]  [BUGGY]  this.format  =  FormatUtils.getFormat(newRecord,  newRecord);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.getFormat(newRecord,  newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.getFormat(newRecord,  newRecord);	  this.format    =    FormatUtils.getFormat(newRecord);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
120	[BUG]  [BUGGY]  this.format  =  FormatUtils.getFormat(out);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.getFormat(out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.getFormat(out);	  this.format    =    FormatUtils.getFormat(newRecord);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
121	[BUG]  [BUGGY]  this.format  =  FormatUtils.getFormat(newRecord,  false);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.getFormat(newRecord,  false);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.getFormat(newRecord,  false);	  this.format    =    FormatUtils.getFormat(newRecord);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
122	[BUG]  [BUGGY]  this.format  =  format!=  null?  Format.UNKNOWN  :  format.toFormatter();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  Format.UNKNOWN  :  format.toFormatter();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  Format.UNKNOWN  :  format.toFormatter();	  this.format    =    format    ==    null?    Format.UNKNOWN    :    format.toFormatter();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
123	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_NAME  :  format.toString();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_NAME  :  format.toString();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT_NAME  :  format.toString();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_NAME    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
124	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.substring(0,  format.length()  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.substring(0,  format.length()  -  1);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.substring(0,  format.length()  -  1);	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_NAME    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
125	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.toString()  + "n ";  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.toString()  + "n ";  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.toString()  + "n ";	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_NAME    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
126	[BUG]  [BUGGY]  this.name  =  format.toString();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.name  =  format.toString();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.name  =  format.toString();	  this.name    =    format.getName();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
127	[BUG]  [BUGGY]  this.name  =  format.getName()  + "n ";  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.name  =  format.getName()  + "n ";  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.name  =  format.getName()  + "n ";	  this.name    =    format.getName();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
128	[BUG]  [BUGGY]  this.name  =  format.getQualifiedName();  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.name  =  format.getQualifiedName();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.name  =  format.getQualifiedName();	  this.name    =    format.getName();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
129	[BUG]  [BUGGY]  this.name  =  format.getName()  + ";n ";  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.name  =  format.getName()  + ";n ";  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.name  =  format.getName()  + ";n ";	  this.name    =    format.getName();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
130	[BUG]  [BUGGY]  this.name  =  format.getRecordName();  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.name  =  format.getRecordName();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.name  =  format.getRecordName();	  this.name    =    format.getName();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
131	[BUG]  [BUGGY]  this.name  =  format.getName()  + ": ";  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.name  =  format.getName()  + ": ";  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.name  =  format.getName()  + ": ";	  this.name    =    format.getName();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
132	[BUG]  [BUGGY]  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  format);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	System.err.println( "Unable  to  instantiate  CSVFormat: "  +  format);	  if(newRecord)    {    System.err.println(   "Unable    to    instantiate    CSVFormat:   "    +    format);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
133	[BUG]  [BUGGY]  ||  newRecord)  {  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  format);  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  ||  newRecord)  {  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  format);  }  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	||  newRecord)  {  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  format);  }	  if(newRecord)    {    System.err.println(   "Unable    to    instantiate    CSVFormat:   "    +    format);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
134	[BUG]  [BUGGY]  safeMultiply(newRecord)  {  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  format);  }  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  safeMultiply(newRecord)  {  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  format);  }  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	safeMultiply(newRecord)  {  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  format);  }	  if(newRecord)    {    System.err.println(   "Unable    to    instantiate    CSVFormat:   "    +    format);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
135	[BUG]  [BUGGY]  Error( "Unable  to  instantiate  CSVFormat: "  +  format);  [CE]  <identifier>  expected  [FE]                                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  Error( "Unable  to  instantiate  CSVFormat: "  +  format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	Error( "Unable  to  instantiate  CSVFormat: "  +  format);	  if(newRecord)    {    System.err.println(   "Unable    to    instantiate    CSVFormat:   "    +    format);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
136	[BUG]  [BUGGY]  Context.err.println( "Unable  to  instantiate  CSVFormat: "  +  format);  [CE]  <identifier>  expected  [FE]                                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  Context.err.println( "Unable  to  instantiate  CSVFormat: "  +  format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	Context.err.println( "Unable  to  instantiate  CSVFormat: "  +  format);	  if(newRecord)    {    System.err.println(   "Unable    to    instantiate    CSVFormat:   "    +    format);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
137	[BUG]  [BUGGY]  this.format  =  FormatUtils.newRecord(this.format);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.newRecord(this.format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.newRecord(this.format);	  this.format    =    FormatUtils.newRecord(format);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
138	[BUG]  [BUGGY]  this.format  =  FormatUtils.newRecord(this.cSVFormat);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.newRecord(this.cSVFormat);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.newRecord(this.cSVFormat);	  this.format    =    FormatUtils.newRecord(format);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
139	[BUG]  [BUGGY]  this.format  =  FormatUtils.newRecord(cSVFormat);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.newRecord(cSVFormat);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.newRecord(cSVFormat);	  this.format    =    FormatUtils.newRecord(format);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
140	[BUG]  [BUGGY]  this.format  =  FormatUtils.newRecord(this.former);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.newRecord(this.former);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.newRecord(this.former);	  this.format    =    FormatUtils.newRecord(format);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
141	[BUG]  [BUGGY]  this.format  =  FormatUtils.newRecord(record);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.newRecord(record);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.newRecord(record);	  this.format    =    FormatUtils.newRecord(format);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
142	[BUG]  [BUGGY]  this.format  =  FormatUtils.newRecord(out,  format);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.newRecord(out,  format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.newRecord(out,  format);	  this.format    =    FormatUtils.newRecord(format);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
143	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT  :  Format.newInstance();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT  :  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT  :  Format.newInstance();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
144	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.DEFAULT  :  Format.newInstance();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.DEFAULT  :  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.DEFAULT  :  Format.newInstance();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
145	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  Format.newInstance(System.err);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  Format.newInstance(System.err);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  Format.newInstance(System.err);	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
146	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  Format.newInstance(record);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  Format.newInstance(record);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  Format.newInstance(record);	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
147	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  Format.newRecord();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  Format.newRecord();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  Format.newRecord();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
148	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.NULL  :  format;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.NULL  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.NULL  :  format;	  this.format    =    format    ==    null?    CSVFormat.NULL    :    format;    	non-compiled	[CE]  <identifier>  expected	71	None	replace
149	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NUMBER  :  format;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NUMBER  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.NUMBER  :  format;	  this.format    =    format    ==    null?    CSVFormat.NULL    :    format;    	non-compiled	[CE]  <identifier>  expected	71	None	replace
150	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NULL  :  format.toString();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NULL  :  format.toString();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.NULL  :  format.toString();	  this.format    =    format    ==    null?    CSVFormat.NULL    :    format;    	non-compiled	[CE]  <identifier>  expected	71	None	replace
151	[BUG]  [BUGGY]  this.format  =  format  ==  null?  FormatUtils.EMPTY  :  CSVFormat.NONE;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  FormatUtils.EMPTY  :  CSVFormat.NONE;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  FormatUtils.EMPTY  :  CSVFormat.NONE;	  this.format    =    format    ==    null?    CSVFormat.NONE    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
152	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_VAR  :  format;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_VAR  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT_VAR  :  format;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_VAR    :    format;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
153	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VAR  :  format.toString();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VAR  :  format.toString();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_VAR  :  format.toString();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_VAR    :    format;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
154	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_ARRAY  :  format;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_ARRAY  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_ARRAY  :  format;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_VAR    :    format;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
155	[BUG]  [BUGGY]  this.format  =  Format.newInstance(out,  format);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.newInstance(out,  format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.newInstance(out,  format);	  this.format    =    Format.newInstance(out);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
156	[BUG]  [BUGGY]  this.format  =  Format.newInstance(out,  newRecord);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.newInstance(out,  newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.newInstance(out,  newRecord);	  this.format    =    Format.newInstance(out);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
157	[BUG]  [BUGGY]  this.format  =  Format.newInstance(this.cSVFormat);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.newInstance(this.cSVFormat);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.newInstance(this.cSVFormat);	  this.format    =    Format.newInstance(out);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
158	[BUG]  [BUGGY]  this.format  =  Format.newInstance(this.format);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.newInstance(this.format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.newInstance(this.format);	  this.format    =    Format.newInstance(out);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
159	[BUG]  [BUGGY]  this.format  =  format!=  null?  newRecord  :  Collections.EMPTY_LIST;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  newRecord  :  Collections.EMPTY_LIST;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  newRecord  :  Collections.EMPTY_LIST;	  this.format    =    format    ==    null?    newRecord    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  <identifier>  expected	101	None	replace
160	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord  :  Collections.EMPTY_LIST  +  1;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord  :  Collections.EMPTY_LIST  +  1;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord  :  Collections.EMPTY_LIST  +  1;	  this.format    =    format    ==    null?    newRecord    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  <identifier>  expected	101	None	replace
161	[BUG]  [BUGGY]  this.format  =  format  ==  null?  null  :  Collections.EMPTY_LIST;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  null  :  Collections.EMPTY_LIST;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  null  :  Collections.EMPTY_LIST;	  this.format    =    format    ==    null?    newRecord    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  <identifier>  expected	101	None	replace
162	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord  :  Sets.EMPTY_LIST;  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord  :  Sets.EMPTY_LIST;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord  :  Sets.EMPTY_LIST;	  this.format    =    format    ==    null?    newRecord    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  <identifier>  expected	101	None	replace
163	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord  :  FormatUtils.EMPTY_LIST;  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord  :  FormatUtils.EMPTY_LIST;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord  :  FormatUtils.EMPTY_LIST;	  this.format    =    format    ==    null?    newRecord    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  <identifier>  expected	101	None	replace
164	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.newInstance(System.ERROR):  Format.newInstance();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.newInstance(System.ERROR):  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.newInstance(System.ERROR):  Format.newInstance();	  this.format    =    format    ==    null?    Format.newInstance(System.err):    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	64	None	replace
165	[BUG]  [BUGGY]  this.format  =  Format.newInstance(System.err):  Format.newInstance();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.newInstance(System.err):  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.newInstance(System.err):  Format.newInstance();	  this.format    =    format    ==    null?    Format.newInstance(System.err):    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	64	None	replace
166	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.newInstance(this.System.err):  Format.newInstance();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.newInstance(this.System.err):  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.newInstance(this.System.err):  Format.newInstance();	  this.format    =    format    ==    null?    Format.newInstance(System.err):    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	64	None	replace
167	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.newInstance(System.out):  Format.newInstance();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.newInstance(System.out):  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.newInstance(System.out):  Format.newInstance();	  this.format    =    format    ==    null?    Format.newInstance(System.err):    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	64	None	replace
168	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.TYPE_DEFAULT  :  format;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.TYPE_DEFAULT  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.TYPE_DEFAULT  :  format;	  this.format    =    format    ==    null?    CSVFormat.TYPE_DEFAULT    :    format;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
169	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.TYPE_DEFAULT  :  format.toString();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.TYPE_DEFAULT  :  format.toString();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.TYPE_DEFAULT  :  format.toString();	  this.format    =    format    ==    null?    CSVFormat.TYPE_DEFAULT    :    format;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
170	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.TYPE_FLOAT  :  format;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.TYPE_FLOAT  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.TYPE_FLOAT  :  format;	  this.format    =    format    ==    null?    CSVFormat.TYPE_DEFAULT    :    format;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
171	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.TYPE_STRING  :  format;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.TYPE_STRING  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.TYPE_STRING  :  format;	  this.format    =    format    ==    null?    CSVFormat.TYPE_DEFAULT    :    format;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
172	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.TYPE_NULL  :  format;  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.TYPE_NULL  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.TYPE_NULL  :  format;	  this.format    =    format    ==    null?    CSVFormat.TYPE_DEFAULT    :    format;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
173	[BUG]  [BUGGY]  this.format  =  format!=  null?  newRecord()  :  Format.newInstance();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  newRecord()  :  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  newRecord()  :  Format.newInstance();	  this.format    =    format!=    null?    newRecord()    :    format;    	non-compiled	[CE]  <identifier>  expected	104	None	replace
174	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord()  :  Format.newInstance();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord()  :  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord()  :  Format.newInstance();	  this.format    =    format!=    null?    newRecord()    :    format;    	non-compiled	[CE]  <identifier>  expected	104	None	replace
175	[BUG]  [BUGGY]  this.format  =  format!=  null?  newRecord()  :  Format.toString();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  newRecord()  :  Format.toString();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  newRecord()  :  Format.toString();	  this.format    =    format!=    null?    newRecord()    :    format;    	non-compiled	[CE]  <identifier>  expected	104	None	replace
176	[BUG]  [BUGGY]  this.format  =  format  >=  null?  CSVFormat.DEFAULT_NAME  :  format;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  >=  null?  CSVFormat.DEFAULT_NAME  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  >=  null?  CSVFormat.DEFAULT_NAME  :  format;	  this.format    =    format!=    null?    CSVFormat.DEFAULT_NAME    :    format;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
177	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  Format.newInstance();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  Format.newInstance();	  this.format    =    format!=    null?    CSVFormat.DEFAULT_NAME    :    format;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
178	[BUG]  [BUGGY]  this.format  =  format!=  null?  newRecord()  :  Collections.EMPTY_LIST;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  newRecord()  :  Collections.EMPTY_LIST;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  newRecord()  :  Collections.EMPTY_LIST;	  this.format    =    format    ==    null?    newRecord()    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
179	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecordType()  :  Collections.EMPTY_LIST;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecordType()  :  Collections.EMPTY_LIST;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecordType()  :  Collections.EMPTY_LIST;	  this.format    =    format    ==    null?    newRecord()    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
180	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord()  :  Sets.EMPTY_LIST;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord()  :  Sets.EMPTY_LIST;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord()  :  Sets.EMPTY_LIST;	  this.format    =    format    ==    null?    newRecord()    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
181	[BUG]  [BUGGY]  this.format  =  Format  >=  null?  CSVFormat.NONE  :  format;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format  >=  null?  CSVFormat.NONE  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format  >=  null?  CSVFormat.NONE  :  format;	  this.format    =    Format    ==    null?    CSVFormat.NONE    :    format;    	non-compiled	[CE]  <identifier>  expected	112	None	replace
182	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.newInstance()  :  Format.newConstant();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.newInstance()  :  Format.newConstant();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.newInstance()  :  Format.newConstant();	  this.format    =    format!=    null?    Format.newInstance()    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
183	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.newInstance()  :  Format.newNumberFormat();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.newInstance()  :  Format.newNumberFormat();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.newInstance()  :  Format.newNumberFormat();	  this.format    =    format!=    null?    Format.newInstance()    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
184	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.newInstance()  :  Format.newInstance(System.err);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.newInstance()  :  Format.newInstance(System.err);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.newInstance()  :  Format.newInstance(System.err);	  this.format    =    format!=    null?    Format.newInstance()    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
185	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.NONE  :  format.toString();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.NONE  :  format.toString();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.NONE  :  format.toString();	  this.format    =    format    ==    null?    Format.NONE    :    format;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
186	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.NONE  :  format.getName();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.NONE  :  format.getName();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.NONE  :  format.getName();	  this.format    =    format    ==    null?    Format.NONE    :    format;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
187	[BUG]  [BUGGY]  this.format  =  Format.NONE  ==  null?  Format.NONE  :  format;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.NONE  ==  null?  Format.NONE  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.NONE  ==  null?  Format.NONE  :  format;	  this.format    =    format    ==    null?    Format.NONE    :    format;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
188	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_NAME  :  format.toCharArray();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_NAME  :  format.toCharArray();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT_NAME  :  format.toCharArray();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_NAME    :    format.toCharArray();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
189	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT  :  format.toString();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT  :  format.toString();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT  :  format.toString();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
190	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.getName();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.getName();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.getName();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
191	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.substring(0,  format.length()  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.substring(0,  format.length()  -  1);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.substring(0,  format.length()  -  1);	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
192	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.toString()  + "n ";  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.toString()  + "n ";  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.toString()  + "n ";	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
193	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_VERSION  :  format.toString();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_VERSION  :  format.toString();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT_VERSION  :  format.toString();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_VERSION    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
194	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VERSION  :  format.getName();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VERSION  :  format.getName();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_VERSION  :  format.getName();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_VERSION    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
195	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VERSION  :  format.toString()  + "n ";  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VERSION  :  format.toString()  + "n ";  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_VERSION  :  format.toString()  + "n ";	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_VERSION    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
196	[BUG]  [BUGGY]  this.newRecord  =  new  LinkedHashMap  <  CSVFormat>();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  LinkedHashMap  <  CSVFormat>();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  LinkedHashMap  <  CSVFormat>();	  this.newRecord    =    new    HashMap    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	90	None	replace
197	[BUG]  [BUGGY]  this.newRecord  =  new  TreeMap  <  CSVFormat>();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  TreeMap  <  CSVFormat>();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  TreeMap  <  CSVFormat>();	  this.newRecord    =    new    HashMap    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	90	None	replace
198	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(format);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  HashMap  <  CSVFormat>(format);	  this.newRecord    =    new    HashMap    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	90	None	replace
199	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(this.format);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(this.format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  HashMap  <  CSVFormat>(this.format);	  this.newRecord    =    new    HashMap    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	90	None	replace
200	[BUG]  [BUGGY]  this.newRecord  =  new  ArrayList  <  CSVFormat>();  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  ArrayList  <  CSVFormat>();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  ArrayList  <  CSVFormat>();	  this.newRecord    =    new    HashMap    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	90	None	replace
201	[BUG]  [BUGGY]  Iterator  <  Appendable>  it  =  this.formats.values().iterator();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  Iterator  <  Appendable>  it  =  this.formats.values().iterator();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	Iterator  <  Appendable>  it  =  this.formats.values().iterator();	  Iterator    <    Appendable>    it    =    this.formats.iterator();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
202	[BUG]  [BUGGY]  Ilerator  <  Appendable>  it  =  this.formats.iterator();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  Ilerator  <  Appendable>  it  =  this.formats.iterator();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	Ilerator  <  Appendable>  it  =  this.formats.iterator();	  Iterator    <    Appendable>    it    =    this.formats.iterator();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
203	[BUG]  [BUGGY]  Iterator  <  Appendable>  it  =  this.formats.keySet().iterator();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  Iterator  <  Appendable>  it  =  this.formats.keySet().iterator();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	Iterator  <  Appendable>  it  =  this.formats.keySet().iterator();	  Iterator    <    Appendable>    it    =    this.formats.iterator();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
204	[BUG]  [BUGGY]  final  Iterator  <  Appendable>  it  =  this.formats.iterator();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  final  Iterator  <  Appendable>  it  =  this.formats.iterator();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	final  Iterator  <  Appendable>  it  =  this.formats.iterator();	  Iterator    <    Appendable>    it    =    this.formats.iterator();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
205	[BUG]  [BUGGY]  Iterator  <  Appendable>  it  =  _formats.iterator();  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  Iterator  <  Appendable>  it  =  _formats.iterator();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	Iterator  <  Appendable>  it  =  _formats.iterator();	  Iterator    <    Appendable>    it    =    this.formats.iterator();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
206	[BUG]  [BUGGY]  Iterator  <  Appendable>  it  =  out.iterator();  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  Iterator  <  Appendable>  it  =  out.iterator();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	Iterator  <  Appendable>  it  =  out.iterator();	  Iterator    <    Appendable>    it    =    this.formats.iterator();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
207	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.NAME  :  format;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.NAME  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.NAME  :  format;	  this.format    =    format    ==    null?    CSVFormat.NAME    :    format;    	non-compiled	[CE]  <identifier>  expected	88	None	replace
208	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NAME  :  format.toString();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NAME  :  format.toString();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.NAME  :  format.toString();	  this.format    =    format    ==    null?    CSVFormat.NAME    :    format;    	non-compiled	[CE]  <identifier>  expected	88	None	replace
209	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NAME  :  format.getName();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NAME  :  format.getName();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.NAME  :  format.getName();	  this.format    =    format    ==    null?    CSVFormat.NAME    :    format;    	non-compiled	[CE]  <identifier>  expected	88	None	replace
210	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NAME  :  format.toCharArray();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NAME  :  format.toCharArray();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.NAME  :  format.toCharArray();	  this.format    =    format    ==    null?    CSVFormat.NAME    :    format;    	non-compiled	[CE]  <identifier>  expected	88	None	replace
211	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_TYPE  :  format.toString();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_TYPE  :  format.toString();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT_TYPE  :  format.toString();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_TYPE    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
212	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.getName();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.getName();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.getName();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_TYPE    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
213	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.toString()  + "n ";  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.toString()  + "n ";  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.toString()  + "n ";	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_TYPE    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
214	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_PREFIX  :  format;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_PREFIX  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT_PREFIX  :  format;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_PREFIX    :    format;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
215	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_PREFIX  :  format.toString();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_PREFIX  :  format.toString();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_PREFIX  :  format.toString();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_PREFIX    :    format;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
216	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_PREFIX  :  DEFAULT_PREFIX;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_PREFIX  :  DEFAULT_PREFIX;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_PREFIX  :  DEFAULT_PREFIX;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_PREFIX    :    format;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
217	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_PREFIX  :  Format.newInstance();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_PREFIX  :  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_PREFIX  :  Format.newInstance();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_PREFIX    :    format;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
218	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_PREFIX  :  format);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_PREFIX  :  format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_PREFIX  :  format);	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_PREFIX    :    format;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
219	[BUG]  [BUGGY]  this.format  =  format  ==  null?  FormatUtils.DEFAULT_NAME  :  FormatUtils.EMPTY;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  FormatUtils.DEFAULT_NAME  :  FormatUtils.EMPTY;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  FormatUtils.DEFAULT_NAME  :  FormatUtils.EMPTY;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_NAME    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
220	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_NAME  :  FormatUtils.EMPTY;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_NAME  :  FormatUtils.EMPTY;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT_NAME  :  FormatUtils.EMPTY;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_NAME    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
221	[BUG]  [BUGGY]  this.format  =  format!=  null?  FormatUtils.DEFAULT_NAME  :  FormatUtils.EMPTY;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  FormatUtils.DEFAULT_NAME  :  FormatUtils.EMPTY;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  FormatUtils.DEFAULT_NAME  :  FormatUtils.EMPTY;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_NAME    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
222	[BUG]  [BUGGY]  this.format  =  format  ==  null?  FormatUtils.EMPTY  :  CSVFormat.DEFAULT_NAME;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  FormatUtils.EMPTY  :  CSVFormat.DEFAULT_NAME;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  FormatUtils.EMPTY  :  CSVFormat.DEFAULT_NAME;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_NAME    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
223	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  FormatUtils.newInstance();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  FormatUtils.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  FormatUtils.newInstance();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_NAME    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
224	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_TYPE  :  Format.newInstance();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_TYPE  :  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT_TYPE  :  Format.newInstance();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_TYPE    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
225	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.DEFAULT_TYPE  :  Format.newInstance();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.DEFAULT_TYPE  :  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.DEFAULT_TYPE  :  Format.newInstance();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_TYPE    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
226	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  Format.newInstance(System.err);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  Format.newInstance(System.err);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  Format.newInstance(System.err);	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_TYPE    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
227	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  Format.newInstance(record);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  Format.newInstance(record);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  Format.newInstance(record);	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_TYPE    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
228	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  Format.newRecord();  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  Format.newRecord();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  Format.newRecord();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_TYPE    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
229	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.newInstance()  :  Format.newFormat();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.newInstance()  :  Format.newFormat();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.newInstance()  :  Format.newFormat();	  this.format    =    format    ==    null?    Format.newInstance()    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
230	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.newInstance()  :  Format.newRecord();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.newInstance()  :  Format.newRecord();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.newInstance()  :  Format.newRecord();	  this.format    =    format    ==    null?    Format.newInstance()    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
231	[BUG]  [BUGGY]  this.format  =  format!=  null?  Format.newInstance(System.ERROR):  Format.newInstance();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  Format.newInstance(System.ERROR):  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  Format.newInstance(System.ERROR):  Format.newInstance();	  this.format    =    format!=    null?    Format.newInstance(System.err):    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
232	[BUG]  [BUGGY]  this.format  =  format!=  null?  Format.newInstance(this.record):  format;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  Format.newInstance(this.record):  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  Format.newInstance(this.record):  format;	  this.format    =    format!=    null?    Format.newInstance()    :    format;    	non-compiled	[CE]  <identifier>  expected	106	None	replace
233	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.newInstance(this.record):  format;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.newInstance(this.record):  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.newInstance(this.record):  format;	  this.format    =    format!=    null?    Format.newInstance()    :    format;    	non-compiled	[CE]  <identifier>  expected	106	None	replace
234	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format.getRecord();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format.getRecord();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.UNKNOWN  :  format.getRecord();	  this.format    =    format!=    null?    Format.UNKNOWN    :    format.getName();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
235	[BUG]  [BUGGY]  this.format  =  format!=  null?  Format.UNKNOWN  :  format.getRecord();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  Format.UNKNOWN  :  format.getRecord();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  Format.UNKNOWN  :  format.getRecord();	  this.format    =    format!=    null?    Format.UNKNOWN    :    format.getName();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
236	[BUG]  [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  out.length);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  out.length);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	System.arraycopy(out,  0,  this.format,  0,  out.length);	  if(newRecord!=    null)    {    this.format    =    newRecord;    }    else    {    System.arraycopy(out,    0,    this.format,    0,    out.length);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
237	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  this.format  =  newRecord;  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  if(newRecord  ==  null)  {  this.format  =  newRecord;  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	if(newRecord  ==  null)  {  this.format  =  newRecord;  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }	  if(newRecord!=    null)    {    this.format    =    newRecord;    }    else    {    System.arraycopy(out,    0,    this.format,    0,    out.length);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
238	[BUG]  [BUGGY]  ||  newRecord!=  null)  {  this.format  =  newRecord;  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  ||  newRecord!=  null)  {  this.format  =  newRecord;  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	||  newRecord!=  null)  {  this.format  =  newRecord;  }  else  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }	  if(newRecord!=    null)    {    this.format    =    newRecord;    }    else    {    System.arraycopy(out,    0,    this.format,    0,    out.length);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
239	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.NOT_IMPLEMENTED  :  format;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.NOT_IMPLEMENTED  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.NOT_IMPLEMENTED  :  format;	  this.format    =    format    ==    null?    CSVFormat.NOT_IMPLEMENTED    :    format;    	non-compiled	[CE]  <identifier>  expected	78	None	replace
240	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NOT_IMPLEMENTED  :  format.toString();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NOT_IMPLEMENTED  :  format.toString();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.NOT_IMPLEMENTED  :  format.toString();	  this.format    =    format    ==    null?    CSVFormat.NOT_IMPLEMENTED    :    format;    	non-compiled	[CE]  <identifier>  expected	78	None	replace
241	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NOT_IMPLEMENTED  :  Format.newInstance();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NOT_IMPLEMENTED  :  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.NOT_IMPLEMENTED  :  Format.newInstance();	  this.format    =    format    ==    null?    CSVFormat.NOT_IMPLEMENTED    :    format;    	non-compiled	[CE]  <identifier>  expected	78	None	replace
242	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.FIELD_NAME  :  format;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.FIELD_NAME  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.FIELD_NAME  :  format;	  this.format    =    format    ==    null?    CSVFormat.NOT_IMPLEMENTED    :    format;    	non-compiled	[CE]  <identifier>  expected	78	None	replace
243	[BUG]  [BUGGY]  this.newRecord  =  new  LinkedHashMap  <  String,Object>();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  LinkedHashMap  <  String,Object>();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  LinkedHashMap  <  String,Object>();	  this.newRecord    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  <identifier>  expected	91	None	replace
244	[BUG]  [BUGGY]  this.newRecord  =  new  TreeMap  <  String,Object>();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  TreeMap  <  String,Object>();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  TreeMap  <  String,Object>();	  this.newRecord    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  <identifier>  expected	91	None	replace
245	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  Object,Object>();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  HashMap  <  Object,Object>();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  HashMap  <  Object,Object>();	  this.newRecord    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  <identifier>  expected	91	None	replace
246	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  String,Object>(this.format);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  HashMap  <  String,Object>(this.format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  HashMap  <  String,Object>(this.format);	  this.newRecord    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  <identifier>  expected	91	None	replace
247	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  String,Object>(format);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  HashMap  <  String,Object>(format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  HashMap  <  String,Object>(format);	  this.newRecord    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  <identifier>  expected	91	None	replace
248	[BUG]  [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  format.length);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  System.arraycopy(out,  0,  this.format,  0,  format.length);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	System.arraycopy(out,  0,  this.format,  0,  format.length);	  if(newRecord!=    null)    {    this.format    =    newRecord;    }    else    {    System.arraycopy(out,    0,    this.format,    0,    format.length);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
249	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  this.format  =  newRecord;  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  if(newRecord  ==  null)  {  this.format  =  newRecord;  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	if(newRecord  ==  null)  {  this.format  =  newRecord;  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }	  if(newRecord!=    null)    {    this.format    =    newRecord;    }    else    {    System.arraycopy(out,    0,    this.format,    0,    format.length);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
250	[BUG]  [BUGGY]  ||  newRecord!=  null)  {  this.format  =  newRecord;  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  ||  newRecord!=  null)  {  this.format  =  newRecord;  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	||  newRecord!=  null)  {  this.format  =  newRecord;  }  else  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }	  if(newRecord!=    null)    {    this.format    =    newRecord;    }    else    {    System.arraycopy(out,    0,    this.format,    0,    format.length);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
251	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DECEMBER  :  format;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DECEMBER  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.DECEMBER  :  format;	  this.format    =    format    ==    null?    CSVFormat.DECEMBER    :    format;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
252	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DECEMBER  :  format.toString();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DECEMBER  :  format.toString();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DECEMBER  :  format.toString();	  this.format    =    format    ==    null?    CSVFormat.DECEMBER    :    format;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
253	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DECEMBER  :  Format.DEFAULT;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DECEMBER  :  Format.DEFAULT;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DECEMBER  :  Format.DEFAULT;	  this.format    =    format    ==    null?    CSVFormat.DECEMBER    :    format;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
254	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DECEMBER  :  format.record();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DECEMBER  :  format.record();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DECEMBER  :  format.record();	  this.format    =    format    ==    null?    CSVFormat.DECEMBER    :    format;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
255	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.UNKNOWN  :  Format.unKNOWN;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.UNKNOWN  :  Format.unKNOWN;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.UNKNOWN  :  Format.unKNOWN;	  this.format    =    format    ==    null?    CSVFormat.UNKNOWN    :    Format.unKNOWN;    	non-compiled	[CE]  <identifier>  expected	93	None	replace
256	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  Format.unKNOWN  +  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  Format.unKNOWN  +  1;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  Format.unKNOWN  +  1;	  this.format    =    format    ==    null?    CSVFormat.UNKNOWN    :    Format.unKNOWN;    	non-compiled	[CE]  <identifier>  expected	93	None	replace
257	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.UNKNOWN  :  Format.UNKNOWN;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.UNKNOWN  :  Format.UNKNOWN;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.UNKNOWN  :  Format.UNKNOWN;	  this.format    =    format    ==    null?    CSVFormat.UNKNOWN    :    Format.unKNOWN;    	non-compiled	[CE]  <identifier>  expected	93	None	replace
258	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  Format.UNKNOWN;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  Format.UNKNOWN;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.UNKNOWN  :  Format.UNKNOWN;	  this.format    =    format    ==    null?    CSVFormat.UNKNOWN    :    Format.unKNOWN;    	non-compiled	[CE]  <identifier>  expected	93	None	replace
259	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  Format.UnKNOWN;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  Format.UnKNOWN;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  Format.UnKNOWN;	  this.format    =    format    ==    null?    CSVFormat.UNKNOWN    :    Format.unKNOWN;    	non-compiled	[CE]  <identifier>  expected	93	None	replace
260	[BUG]  [BUGGY]  this.format  =  Format.NONE!=  null?  Format.NONE  :  format;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.NONE!=  null?  Format.NONE  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.NONE!=  null?  Format.NONE  :  format;	  this.format    =    format!=    null?    Format.NONE    :    format;    	non-compiled	[CE]  <identifier>  expected	62	None	replace
261	[BUG]  [BUGGY]  this.format  =  format!=  null?  Format.NONE  :  format.toString();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  Format.NONE  :  format.toString();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  Format.NONE  :  format.toString();	  this.format    =    format!=    null?    Format.NONE    :    format;    	non-compiled	[CE]  <identifier>  expected	62	None	replace
262	[BUG]  [BUGGY]  this.format  =  format  >=  null?  Format.NONE  :  format;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  >=  null?  Format.NONE  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  >=  null?  Format.NONE  :  format;	  this.format    =    format!=    null?    Format.NONE    :    format;    	non-compiled	[CE]  <identifier>  expected	62	None	replace
263	[BUG]  [BUGGY]  this.format  =  format  >=  null?  CSVFormat.DEFAULT  :  format;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  >=  null?  CSVFormat.DEFAULT  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  >=  null?  CSVFormat.DEFAULT  :  format;	  this.format    =    format!=    null?    CSVFormat.DEFAULT    :    format;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
264	[BUG]  [BUGGY]  this.format  =  format  >=  null?  CSVFormat.UNKNOWN  :  format.toString();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  >=  null?  CSVFormat.UNKNOWN  :  format.toString();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  >=  null?  CSVFormat.UNKNOWN  :  format.toString();	  this.format    =    format!=    null?    CSVFormat.UNKNOWN    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	94	None	replace
265	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  FormatUtils.toString(format);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  FormatUtils.toString(format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  FormatUtils.toString(format);	  this.format    =    format!=    null?    CSVFormat.UNKNOWN    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	94	None	replace
266	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord  :  format.toString();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord  :  format.toString();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord  :  format.toString();	  this.format    =    format    ==    null?    newRecord    :    format;    	non-compiled	[CE]  <identifier>  expected	97	None	replace
267	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord  :  format.newRecord;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord  :  format.newRecord;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord  :  format.newRecord;	  this.format    =    format    ==    null?    newRecord    :    format;    	non-compiled	[CE]  <identifier>  expected	97	None	replace
268	[BUG]  [BUGGY]  this.format  =  FormatUtilities.createFormat(this.newRecord,  format);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtilities.createFormat(this.newRecord,  format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtilities.createFormat(this.newRecord,  format);	  this.format    =    FormatUtilities.createFormat(newRecord,    format);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
269	[BUG]  [BUGGY]  this.format  =  FormatUtilities.createFormat(newRecord,  this.format);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtilities.createFormat(newRecord,  this.format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtilities.createFormat(newRecord,  this.format);	  this.format    =    FormatUtilities.createFormat(newRecord,    format);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
270	[BUG]  [BUGGY]  this.format  =  FormatUtilities.createFormat(out,  format);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtilities.createFormat(out,  format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtilities.createFormat(out,  format);	  this.format    =    FormatUtilities.createFormat(newRecord,    format);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
271	[BUG]  [BUGGY]  this.format  =  FormatUtilities.createFormat(newRecord,  out);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtilities.createFormat(newRecord,  out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtilities.createFormat(newRecord,  out);	  this.format    =    FormatUtilities.createFormat(newRecord,    format);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
272	[BUG]  [BUGGY]  this.format  =  FormatUtilities.createFormat(newRecord,  format,  newRecord);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtilities.createFormat(newRecord,  format,  newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtilities.createFormat(newRecord,  format,  newRecord);	  this.format    =    FormatUtilities.createFormat(newRecord,    format);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
273	[BUG]  [BUGGY]  this.format  =  FormatUtilities.createFormat(newRecord,  format,  out);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtilities.createFormat(newRecord,  format,  out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtilities.createFormat(newRecord,  format,  out);	  this.format    =    FormatUtilities.createFormat(newRecord,    format);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
274	[BUG]  [BUGGY]  this.format  =  FormatUtilities.createFormat(newRecord,  format,  false);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtilities.createFormat(newRecord,  format,  false);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtilities.createFormat(newRecord,  format,  false);	  this.format    =    FormatUtilities.createFormat(newRecord,    format);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
275	[BUG]  [BUGGY]  this.format  =  format  ==  null?  FormatUtils.DEFAULT_VERSION  :  FormatUtils.EMPTY;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  FormatUtils.DEFAULT_VERSION  :  FormatUtils.EMPTY;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  FormatUtils.DEFAULT_VERSION  :  FormatUtils.EMPTY;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_VERSION    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
276	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_VERSION  :  FormatUtils.EMPTY;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_VERSION  :  FormatUtils.EMPTY;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT_VERSION  :  FormatUtils.EMPTY;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_VERSION    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
277	[BUG]  [BUGGY]  this.format  =  FormatUtils.DEFAULT_VERSION  ==  null?  CSVFormat.DEFAULT_VERSION  :  FormatUtils.EMPTY;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.DEFAULT_VERSION  ==  null?  CSVFormat.DEFAULT_VERSION  :  FormatUtils.EMPTY;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.DEFAULT_VERSION  ==  null?  CSVFormat.DEFAULT_VERSION  :  FormatUtils.EMPTY;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_VERSION    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
278	[BUG]  [BUGGY]  this.format  =  format!=  null?  FormatUtils.DEFAULT_VERSION  :  FormatUtils.EMPTY;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  FormatUtils.DEFAULT_VERSION  :  FormatUtils.EMPTY;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  FormatUtils.DEFAULT_VERSION  :  FormatUtils.EMPTY;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_VERSION    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
279	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VERSION  :  FormatUtils.newInstance();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VERSION  :  FormatUtils.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_VERSION  :  FormatUtils.newInstance();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_VERSION    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
280	[BUG]  [BUGGY]  this.format  =  Format.newInstance(this.record,  newRecord);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.newInstance(this.record,  newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.newInstance(this.record,  newRecord);	  this.format    =    Format.newInstance(this.record);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
281	[BUG]  [BUGGY]  this.format  =  Format.newInstance(this.record,  format);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.newInstance(this.record,  format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.newInstance(this.record,  format);	  this.format    =    Format.newInstance(this.record);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
282	[BUG]  [BUGGY]  this.format  =  Format.newInstance(this.record,  out);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.newInstance(this.record,  out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.newInstance(this.record,  out);	  this.format    =    Format.newInstance(this.record);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
283	[BUG]  [BUGGY]  this.format  =  Format.newInstance(this.record,  false);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.newInstance(this.record,  false);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.newInstance(this.record,  false);	  this.format    =    Format.newInstance(this.record);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
284	[BUG]  [BUGGY]  this.format  =  Format.newInstance(this.in);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.newInstance(this.in);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.newInstance(this.in);	  this.format    =    Format.newInstance(this.record);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
285	[BUG]  [BUGGY]  this.newRecord  =  null;  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  null;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  null;	  this.newRecord    =    false;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
286	[BUG]  [BUGGY]  This.newRecord  =  true;  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  This.newRecord  =  true;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	This.newRecord  =  true;	  this.newRecord    =    false;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
287	[BUG]  [BUGGY]  this.newRecord  = " ";  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  = " ";  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  = " ";	  this.newRecord    =    false;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
288	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.NONE  :  Format.newInstance();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.NONE  :  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.NONE  :  Format.newInstance();	  this.format    =    format    ==    null?    CSVFormat.NONE    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
289	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.NONE  :  Format.newInstance();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.NONE  :  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.NONE  :  Format.newInstance();	  this.format    =    format    ==    null?    CSVFormat.NONE    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
290	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  Format.newInstance(System.err);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  Format.newInstance(System.err);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.NONE  :  Format.newInstance(System.err);	  this.format    =    format    ==    null?    CSVFormat.NONE    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
291	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  Format.newInstance(this.record);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  Format.newInstance(this.record);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.NONE  :  Format.newInstance(this.record);	  this.format    =    format    ==    null?    CSVFormat.NONE    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
292	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  Format.newInstance(record);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  Format.newInstance(record);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.NONE  :  Format.newInstance(record);	  this.format    =    format    ==    null?    CSVFormat.NONE    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
293	[BUG]  [BUGGY]  this.format  =  FormatUtils.createFormat(newRecord,  format);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.createFormat(newRecord,  format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.createFormat(newRecord,  format);	  this.format    =    FormatUtils.createFormat(newRecord);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
294	[BUG]  [BUGGY]  this.format  =  FormatUtils.createFormat(this.newRecord);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.createFormat(this.newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.createFormat(this.newRecord);	  this.format    =    FormatUtils.createFormat(newRecord);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
295	[BUG]  [BUGGY]  this.format  =  FormatUtils.createFormat(newRecord,  out);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.createFormat(newRecord,  out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.createFormat(newRecord,  out);	  this.format    =    FormatUtils.createFormat(newRecord);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
296	[BUG]  [BUGGY]  this.format  =  FormatUtils.createFormat(newRecord,  newRecord);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.createFormat(newRecord,  newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.createFormat(newRecord,  newRecord);	  this.format    =    FormatUtils.createFormat(newRecord);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
297	[BUG]  [BUGGY]  this.format  =  FormatUtils.createFormat(out);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.createFormat(out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.createFormat(out);	  this.format    =    FormatUtils.createFormat(newRecord);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
298	[BUG]  [BUGGY]  this.format  =  FormatUtils.createFormat(out,  newRecord);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.createFormat(out,  newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.createFormat(out,  newRecord);	  this.format    =    FormatUtils.createFormat(newRecord);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
299	[BUG]  [BUGGY]  this.format  =  FormatUtils.newRecord(newRecord);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.newRecord(newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.newRecord(newRecord);	  if(newRecord    ==    null)    {    this.format    =    newRecord;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
300	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format  +  2;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format  +  2;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format  +  2;	  this.format    =    format    ==    null?    CSVFormat.EMPTY    :    format    +    1;    	non-compiled	[CE]  <identifier>  expected	89	None	replace
301	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format.toString()  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format.toString()  +  1;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format.toString()  +  1;	  this.format    =    format    ==    null?    CSVFormat.EMPTY    :    format    +    1;    	non-compiled	[CE]  <identifier>  expected	89	None	replace
302	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.EMPTY  :  format  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.EMPTY  :  format  +  1;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.EMPTY  :  format  +  1;	  this.format    =    format    ==    null?    CSVFormat.EMPTY    :    format    +    1;    	non-compiled	[CE]  <identifier>  expected	89	None	replace
303	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format  +  3;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format  +  3;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format  +  3;	  this.format    =    format    ==    null?    CSVFormat.EMPTY    :    format    +    1;    	non-compiled	[CE]  <identifier>  expected	89	None	replace
304	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format  +  4;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format  +  4;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format  +  4;	  this.format    =    format    ==    null?    CSVFormat.EMPTY    :    format    +    1;    	non-compiled	[CE]  <identifier>  expected	89	None	replace
305	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(out,  format);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(out,  format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(out,  format);	  this.newRecord    =    new    Record    <    CSVFormat>(out);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
306	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(cSVFormat);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(cSVFormat);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(cSVFormat);	  this.newRecord    =    new    Record    <    CSVFormat>(out);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
307	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(1);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(1);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(1);	  this.newRecord    =    new    Record    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
308	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(0);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(0);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(0);	  this.newRecord    =    new    Record    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
309	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(2);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(2);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(2);	  this.newRecord    =    new    Record    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
310	[BUG]  [BUGGY]  this.format  =  format  >=  null?  CSVFormat.DEFAULT_TYPE  :  format;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  >=  null?  CSVFormat.DEFAULT_TYPE  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  >=  null?  CSVFormat.DEFAULT_TYPE  :  format;	  this.format    =    format!=    null?    CSVFormat.DEFAULT_TYPE    :    format;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
311	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(this.format);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(this.format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  Record  <  CSV>(this.format);	  this.newRecord    =    new    Record    <    CSV>();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
312	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(format);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  Record  <  CSV>(format);	  this.newRecord    =    new    Record    <    CSV>();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
313	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(out);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  Record  <  CSV>(out);	  this.newRecord    =    new    Record    <    CSV>();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
314	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(false);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(false);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  Record  <  CSV>(false);	  this.newRecord    =    new    Record    <    CSV>();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
315	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(1);  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(1);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  Record  <  CSV>(1);	  this.newRecord    =    new    Record    <    CSV>();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
316	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  Format.UNKNOWN  +  1;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  Format.UNKNOWN  +  1;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  Format.UNKNOWN  +  1;	  this.format    =    format    ==    null?    CSVFormat.UNKNOWN    :    Format.UNKNOWN;    	non-compiled	[CE]  <identifier>  expected	92	None	replace
317	[BUG]  [BUGGY]  this.format  =  Format.UNKNOWN  ==  null?  CSVFormat.UNKNOWN  :  Format.UNKNOWN;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.UNKNOWN  ==  null?  CSVFormat.UNKNOWN  :  Format.UNKNOWN;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.UNKNOWN  ==  null?  CSVFormat.UNKNOWN  :  Format.UNKNOWN;	  this.format    =    format    ==    null?    CSVFormat.UNKNOWN    :    Format.UNKNOWN;    	non-compiled	[CE]  <identifier>  expected	92	None	replace
318	[BUG]  [BUGGY]  this.format  =  Format.newInstance(format,  newRecord);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.newInstance(format,  newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.newInstance(format,  newRecord);	  this.format    =    Format.newInstance(format);    	non-compiled	[CE]  <identifier>  expected	105	None	replace
319	[BUG]  [BUGGY]  this.format  =  Format.newInstance(cSVFormat);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.newInstance(cSVFormat);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.newInstance(cSVFormat);	  this.format    =    Format.newInstance(format);    	non-compiled	[CE]  <identifier>  expected	105	None	replace
320	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.EMPTY  :  Format.newInstance();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.EMPTY  :  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.EMPTY  :  Format.newInstance();	  this.format    =    format    ==    null?    CSVFormat.EMPTY    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
321	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  Format.newInstance(System.err);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  Format.newInstance(System.err);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.EMPTY  :  Format.newInstance(System.err);	  this.format    =    format    ==    null?    CSVFormat.EMPTY    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
322	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  Format.newInstance();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  Format.newInstance();	  this.format    =    format    ==    null?    CSVFormat.EMPTY    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
323	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  Format.newInstance(record);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  Format.newInstance(record);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.EMPTY  :  Format.newInstance(record);	  this.format    =    format    ==    null?    CSVFormat.EMPTY    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
324	[BUG]  [BUGGY]  this.format  =  format  ==  null?  FormatUtils.DEFAULT_TYPE  :  FormatUtils.EMPTY;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  FormatUtils.DEFAULT_TYPE  :  FormatUtils.EMPTY;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  FormatUtils.DEFAULT_TYPE  :  FormatUtils.EMPTY;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_TYPE    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	87	None	replace
325	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_TYPE  :  FormatUtils.EMPTY;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_TYPE  :  FormatUtils.EMPTY;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT_TYPE  :  FormatUtils.EMPTY;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_TYPE    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	87	None	replace
326	[BUG]  [BUGGY]  this.format  =  format!=  null?  FormatUtils.DEFAULT_TYPE  :  FormatUtils.EMPTY;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  FormatUtils.DEFAULT_TYPE  :  FormatUtils.EMPTY;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  FormatUtils.DEFAULT_TYPE  :  FormatUtils.EMPTY;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_TYPE    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	87	None	replace
327	[BUG]  [BUGGY]  this.format  =  format  ==  null?  FormatUtils.EMPTY  :  CSVFormat.DEFAULT_TYPE;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  FormatUtils.EMPTY  :  CSVFormat.DEFAULT_TYPE;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  FormatUtils.EMPTY  :  CSVFormat.DEFAULT_TYPE;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_TYPE    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	87	None	replace
328	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  FormatUtils.newInstance();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  FormatUtils.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  FormatUtils.newInstance();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_TYPE    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	87	None	replace
329	[BUG]  [BUGGY]  this.format  =  FormatUtils.getRecordFormat(newRecord,  format);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.getRecordFormat(newRecord,  format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.getRecordFormat(newRecord,  format);	  this.format    =    FormatUtils.getRecordFormat(newRecord);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
330	[BUG]  [BUGGY]  this.format  =  FormatUtils.getRecordFormat(this.newRecord);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.getRecordFormat(this.newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.getRecordFormat(this.newRecord);	  this.format    =    FormatUtils.getRecordFormat(newRecord);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
331	[BUG]  [BUGGY]  this.format  =  FormatUtils.getRecordFormat(newRecord,  out);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.getRecordFormat(newRecord,  out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.getRecordFormat(newRecord,  out);	  this.format    =    FormatUtils.getRecordFormat(newRecord);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
332	[BUG]  [BUGGY]  this.format  =  FormatUtils.getRecordFormat(newRecord,  newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.getRecordFormat(newRecord,  newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.getRecordFormat(newRecord,  newRecord);	  this.format    =    FormatUtils.getRecordFormat(newRecord);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
333	[BUG]  [BUGGY]  this.format  =  FormatUtils.getRecordFormat(out);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.getRecordFormat(out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.getRecordFormat(out);	  this.format    =    FormatUtils.getRecordFormat(newRecord);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
334	[BUG]  [BUGGY]  this.format  =  FormatUtils.getRecordFormat(record);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.getRecordFormat(record);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.getRecordFormat(record);	  this.format    =    FormatUtils.getRecordFormat(newRecord);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
335	[BUG]  [BUGGY]  this.format  =  format  >=  null?  Format.UNKNOWN  :  format.toString();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  >=  null?  Format.UNKNOWN  :  format.toString();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  >=  null?  Format.UNKNOWN  :  format.toString();	  this.format    =    format!=    null?    Format.UNKNOWN    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
336	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.newInstance(this.format):  format;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.newInstance(this.format):  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.newInstance(this.format):  format;	  this.format    =    format    ==    null?    Format.newInstance()    :    format;    	non-compiled	[CE]  <identifier>  expected	107	None	replace
337	[BUG]  [BUGGY]  this.format  =  format!=  null?  Format.UNKNOWN  :  format.toString()  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  Format.UNKNOWN  :  format.toString()  +  1;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  Format.UNKNOWN  :  format.toString()  +  1;	  this.format    =    format!=    null?    Format.UNKNOWN    :    format    +    1;    	non-compiled	[CE]  <identifier>  expected	95	None	replace
338	[BUG]  [BUGGY]  this.format  =  format!=  null?  Format.UNKNOWN  :  format.getName()  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  Format.UNKNOWN  :  format.getName()  +  1;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  Format.UNKNOWN  :  format.getName()  +  1;	  this.format    =    format!=    null?    Format.UNKNOWN    :    format    +    1;    	non-compiled	[CE]  <identifier>  expected	95	None	replace
339	[BUG]  [BUGGY]  Iterator  <  Appendable>  it  =  this.format.values().iterator();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  Iterator  <  Appendable>  it  =  this.format.values().iterator();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	Iterator  <  Appendable>  it  =  this.format.values().iterator();	  Iterator    <    Appendable>    it    =    this.format.iterator();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
340	[BUG]  [BUGGY]  Iterator  <  Appendable>  it  =  this.format.entrySet().iterator();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  Iterator  <  Appendable>  it  =  this.format.entrySet().iterator();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	Iterator  <  Appendable>  it  =  this.format.entrySet().iterator();	  Iterator    <    Appendable>    it    =    this.format.iterator();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
341	[BUG]  [BUGGY]  Ilerator  <  Appendable>  it  =  this.format.iterator();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  Ilerator  <  Appendable>  it  =  this.format.iterator();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	Ilerator  <  Appendable>  it  =  this.format.iterator();	  Iterator    <    Appendable>    it    =    this.format.iterator();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
342	[BUG]  [BUGGY]  Iterator  <  Appendable>  it  =  format.iterator();  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  Iterator  <  Appendable>  it  =  format.iterator();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	Iterator  <  Appendable>  it  =  format.iterator();	  Iterator    <    Appendable>    it    =    this.format.iterator();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
343	[BUG]  [BUGGY]  Iterator  <  Appendable>  it  =  this.format.values();  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  Iterator  <  Appendable>  it  =  this.format.values();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	Iterator  <  Appendable>  it  =  this.format.values();	  Iterator    <    Appendable>    it    =    this.format.iterator();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
344	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord()  :  Format.toString();  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord()  :  Format.toString();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord()  :  Format.toString();	  this.format    =    format    ==    null?    newRecord()    :    format;    	non-compiled	[CE]  <identifier>  expected	103	None	replace
345	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord(out):  format;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord(out):  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord(out):  format;	  this.format    =    format    ==    null?    newRecord()    :    format;    	non-compiled	[CE]  <identifier>  expected	103	None	replace
346	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord()  :  Format.asString();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord()  :  Format.asString();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord()  :  Format.asString();	  this.format    =    format    ==    null?    newRecord()    :    format;    	non-compiled	[CE]  <identifier>  expected	103	None	replace
347	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNDEFINED  :  format.toString();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNDEFINED  :  format.toString();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.UNDEFINED  :  format.toString();	  this.format    =    format    ==    null?    CSVFormat.UNDEFINED    :    format;    	non-compiled	[CE]  <identifier>  expected	77	None	replace
348	[BUG]  [BUGGY]  this.format  =  format!=  null?  newRecord  :  FormatUtils.EMPTY_STRING;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  newRecord  :  FormatUtils.EMPTY_STRING;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  newRecord  :  FormatUtils.EMPTY_STRING;	  this.format    =    format!=    null?    newRecord    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	99	None	replace
349	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format.getSimpleName();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format.getSimpleName();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.UNKNOWN  :  format.getSimpleName();	  this.format    =    format    ==    null?    Format.UNKNOWN    :    format.getName();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
350	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format.getLocalName();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format.getLocalName();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.UNKNOWN  :  format.getLocalName();	  this.format    =    format    ==    null?    Format.UNKNOWN    :    format.getName();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
351	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord()  :  Collections.EMPTY_SET;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord()  :  Collections.EMPTY_SET;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord()  :  Collections.EMPTY_SET;	  this.format    =    format    ==    null?    newRecord()    :    Collections.emptySet();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
352	[BUG]  [BUGGY]  this.format  =  format!=  null?  newRecord()  :  Collections.emptySet();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  newRecord()  :  Collections.emptySet();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  newRecord()  :  Collections.emptySet();	  this.format    =    format    ==    null?    newRecord()    :    Collections.emptySet();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
353	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord()  :  Collections.emptyList();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord()  :  Collections.emptyList();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord()  :  Collections.emptyList();	  this.format    =    format    ==    null?    newRecord()    :    Collections.emptySet();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
354	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord()  :  Collections.newHashSet();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord()  :  Collections.newHashSet();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord()  :  Collections.newHashSet();	  this.format    =    format    ==    null?    newRecord()    :    Collections.emptySet();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
355	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_TYPE  :  format);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_TYPE  :  format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT_TYPE  :  format);	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_TYPE    :    format);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
356	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format,  newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format,  newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format,  newRecord);	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_TYPE    :    format);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
357	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.toString());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.toString());  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.toString());	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_TYPE    :    format);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
358	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format,  false);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format,  false);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format,  false);	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_TYPE    :    format);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
359	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_FORMAT  :  format;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_FORMAT  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT_FORMAT  :  format;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_FORMAT    :    format;    	non-compiled	[CE]  <identifier>  expected	108	None	replace
360	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_FORMAT  :  DEFAULT_FORMAT;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_FORMAT  :  DEFAULT_FORMAT;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_FORMAT  :  DEFAULT_FORMAT;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_FORMAT    :    format;    	non-compiled	[CE]  <identifier>  expected	108	None	replace
361	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_FORMAT  :  format.toString();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_FORMAT  :  format.toString();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_FORMAT  :  format.toString();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_FORMAT    :    format;    	non-compiled	[CE]  <identifier>  expected	108	None	replace
362	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_FORMAT  :  Format.newInstance();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_FORMAT  :  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_FORMAT  :  Format.newInstance();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_FORMAT    :    format;    	non-compiled	[CE]  <identifier>  expected	108	None	replace
363	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_FORMAT  :  Format.decode(out,   "UTF-8 ");  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_FORMAT  :  Format.decode(out,   "UTF-8 ");  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_FORMAT  :  Format.decode(out,   "UTF-8 ");	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_FORMAT    :    format;    	non-compiled	[CE]  <identifier>  expected	108	None	replace
364	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.NONE  :  format.toString();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.NONE  :  format.toString();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.NONE  :  format.toString();	  this.format    =    format    ==    null?    CSVFormat.NONE    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
365	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format.getName();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format.getName();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.NONE  :  format.getName();	  this.format    =    format    ==    null?    CSVFormat.NONE    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
366	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format.toString()  + "n ";  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format.toString()  + "n ";  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.NONE  :  format.toString()  + "n ";	  this.format    =    format    ==    null?    CSVFormat.NONE    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
367	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_NAME  :  format.getName();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT_NAME  :  format.getName();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT_NAME  :  format.getName();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_NAME    :    format.getName();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
368	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.getLocalName();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.getLocalName();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.getLocalName();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_NAME    :    format.getName();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
369	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.getRecord();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.getRecord();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.getRecord();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_NAME    :    format.getName();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
370	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.getRecordName();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.getRecordName();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.getRecordName();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_NAME    :    format.getName();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
371	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT  :  format);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT  :  format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT  :  format);	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    format);    	non-compiled	[CE]  <identifier>  expected	109	None	replace
372	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.toString());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.toString());  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.toString());	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    format);    	non-compiled	[CE]  <identifier>  expected	109	None	replace
373	[BUG]  [BUGGY]  this.format  =  FormatUtilities.createFormat(this.newRecord);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtilities.createFormat(this.newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtilities.createFormat(this.newRecord);	  this.format    =    FormatUtilities.createFormat(newRecord);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
374	[BUG]  [BUGGY]  this.format  =  FormatUtilities.createFormat(newRecord,  newRecord);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtilities.createFormat(newRecord,  newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtilities.createFormat(newRecord,  newRecord);	  this.format    =    FormatUtilities.createFormat(newRecord);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
375	[BUG]  [BUGGY]  this.format  =  FormatUtilities.createFormat(out);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtilities.createFormat(out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtilities.createFormat(out);	  this.format    =    FormatUtilities.createFormat(newRecord);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
376	[BUG]  [BUGGY]  this.format  =  FormatUtilities.createFormat(out,  newRecord);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtilities.createFormat(out,  newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtilities.createFormat(out,  newRecord);	  this.format    =    FormatUtilities.createFormat(newRecord);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
377	[BUG]  [BUGGY]  this.format  =  FormatUtilities.createFormat(this.record);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtilities.createFormat(this.record);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtilities.createFormat(this.record);	  this.format    =    FormatUtilities.createFormat(newRecord);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
378	[BUG]  [BUGGY]  this.format  =  FormatUtilities.newInstance();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtilities.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtilities.newInstance();	  this.format    =    FormatUtilities.newRecord();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
379	[BUG]  [BUGGY]  this.format  =  FormatUtilities.newRecord(format);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtilities.newRecord(format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtilities.newRecord(format);	  this.format    =    FormatUtilities.newRecord();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
380	[BUG]  [BUGGY]  this.format  =  FormatUtilities.newRecord(out);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtilities.newRecord(out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtilities.newRecord(out);	  this.format    =    FormatUtilities.newRecord();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
381	[BUG]  [BUGGY]  this.format  =  FormatUtilities.newFormat();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtilities.newFormat();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtilities.newFormat();	  this.format    =    FormatUtilities.newRecord();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
382	[BUG]  [BUGGY]  this.format  =  FormatUtilities.newRecord(this);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtilities.newRecord(this);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtilities.newRecord(this);	  this.format    =    FormatUtilities.newRecord();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
383	[BUG]  [BUGGY]  this.format  =  FormatUtilities.newRecord(this.out);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtilities.newRecord(this.out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtilities.newRecord(this.out);	  this.format    =    FormatUtilities.newRecord();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
384	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord  :  CSVFormat.DEFAULT;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord  :  CSVFormat.DEFAULT;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord  :  CSVFormat.DEFAULT;	  this.format    =    format    ==    null?    newRecord    :    format;    	non-compiled	[CE]  <identifier>  expected	97	None	replace
385	[BUG]  [BUGGY]  this.format  =  format  ==  null?  FormatUtils.EMPTY_STRING  :  FormatUtils.EMPTY_STRING;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  FormatUtils.EMPTY_STRING  :  FormatUtils.EMPTY_STRING;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  FormatUtils.EMPTY_STRING  :  FormatUtils.EMPTY_STRING;	  this.format    =    format    ==    null?    newRecord()    :    FormatUtils.EMPTY_STRING;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
386	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord()  :  FormatUtils.EMPTY_STRING  + "n ";  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord()  :  FormatUtils.EMPTY_STRING  + "n ";  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord()  :  FormatUtils.EMPTY_STRING  + "n ";	  this.format    =    format    ==    null?    newRecord()    :    FormatUtils.EMPTY_STRING;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
387	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.NONE  :  format.toFormatter();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.NONE  :  format.toFormatter();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.NONE  :  format.toFormatter();	  this.format    =    format    ==    null?    Format.UNKNOWN    :    format.toFormatter();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
388	[BUG]  [BUGGY]  this.format  =  Format.newInstance(out,  false);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.newInstance(out,  false);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.newInstance(out,  false);	  this.format    =    Format.newInstance(out);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
389	[BUG]  [BUGGY]  this.format  =  Format.newInstance(out,  null);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.newInstance(out,  null);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.newInstance(out,  null);	  this.format    =    Format.newInstance(out);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
390	[BUG]  [BUGGY]  this.format  =  Format.newInstance(out,  true);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.newInstance(out,  true);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.newInstance(out,  true);	  this.format    =    Format.newInstance(out);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
391	[BUG]  [BUGGY]  this.name  =  format.getName()  +  1;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.name  =  format.getName()  +  1;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.name  =  format.getName()  +  1;	  this.name    =    format.getName();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
392	[BUG]  [BUGGY]  this.name  =  format!=  null?  format.getName()  : "null ";  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.name  =  format!=  null?  format.getName()  : "null ";  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.name  =  format!=  null?  format.getName()  : "null ";	  this.name    =    format.getName();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
393	[BUG]  [BUGGY]  this.name  =  format!=  null?  format.getName()  :  DEFAULT_NAME;  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.name  =  format!=  null?  format.getName()  :  DEFAULT_NAME;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.name  =  format!=  null?  format.getName()  :  DEFAULT_NAME;	  this.name    =    format.getName();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
394	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.FULL  :  format;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.FULL  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.FULL  :  format;	  this.format    =    format    ==    null?    CSVFormat.NULL    :    format;    	non-compiled	[CE]  <identifier>  expected	71	None	replace
395	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format  +  3;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format  +  3;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.UNKNOWN  :  format  +  3;	  this.format    =    format    ==    null?    Format.UNKNOWN    :    format    +    1;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
396	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format  +  4;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format  +  4;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.UNKNOWN  :  format  +  4;	  this.format    =    format    ==    null?    Format.UNKNOWN    :    format    +    1;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
397	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  FormatUtils.toString(out);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  FormatUtils.toString(out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.NONE  :  FormatUtils.toString(out);	  this.format    =    format    ==    null?    CSVFormat.NONE    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
398	[BUG]  [BUGGY]  this.format  =  format  ==  null?  FormatUtils.EMPTY  :  FormatUtils.DEFAULT_NAME;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  FormatUtils.EMPTY  :  FormatUtils.DEFAULT_NAME;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  FormatUtils.EMPTY  :  FormatUtils.DEFAULT_NAME;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_NAME    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
399	[BUG]  [BUGGY]  this.format  =  Format.newInstance(out,  this.record);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.newInstance(out,  this.record);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.newInstance(out,  this.record);	  this.format    =    Format.newInstance(this.record);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
400	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.NONE  :  format  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.NONE  :  format  +  1;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.NONE  :  format  +  1;	  this.format    =    format    ==    null?    Format.NONE    :    format;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
401	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.TYPE_NAME  :  format;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.TYPE_NAME  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.TYPE_NAME  :  format;	  this.format    =    format    ==    null?    CSVFormat.TYPE_DEFAULT    :    format;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
402	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.TYPE_INT  :  format;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.TYPE_INT  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.TYPE_INT  :  format;	  this.format    =    format    ==    null?    CSVFormat.TYPE_DEFAULT    :    format;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
403	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT  :  format,  out);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.DEFAULT  :  format,  out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.DEFAULT  :  format,  out);	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    format,    newRecord);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
404	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format,  record);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format,  record);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format,  record);	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    format,    newRecord);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
405	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  Format.newInstance(out);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  Format.newInstance(out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  Format.newInstance(out);	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_TYPE    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
406	[BUG]  [BUGGY]  this.format  =  format!=  null?  Format.DEFAULT_TYPE  :  Format.newInstance();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  Format.DEFAULT_TYPE  :  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  Format.DEFAULT_TYPE  :  Format.newInstance();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_TYPE    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
407	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.newInstance()  :  Format.newInstance(out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.newInstance()  :  Format.newInstance(out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.newInstance()  :  Format.newInstance(out);	  this.format    =    format    ==    null?    Format.newInstance()    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
408	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.toPath();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.toPath();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.toPath();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_NAME    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
409	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  FormatUtils.EMPTY;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  FormatUtils.EMPTY;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.EMPTY  :  FormatUtils.EMPTY;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_TYPE    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	87	None	replace
410	[BUG]  [BUGGY]  this.format  =  format!=  null?  FormatUtils.DEFAULT  :  FormatUtils.EMPTY;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  FormatUtils.DEFAULT  :  FormatUtils.EMPTY;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  FormatUtils.DEFAULT  :  FormatUtils.EMPTY;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
411	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format  +  4;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format  +  4;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.NONE  :  format  +  4;	  this.format    =    format    ==    null?    CSVFormat.NONE    :    format    +    1;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
412	[BUG]  [BUGGY]  this.format  =  format!=  null?  Format.UNKNOWN  :  format.getRecordName();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  Format.UNKNOWN  :  format.getRecordName();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  Format.UNKNOWN  :  format.getRecordName();	  this.format    =    format!=    null?    Format.UNKNOWN    :    format.getName();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
413	[BUG]  [BUGGY]  this.format  =  format!=  null?  Format.UNKNOWN  :  format.getLabel();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  Format.UNKNOWN  :  format.getLabel();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  Format.UNKNOWN  :  format.getLabel();	  this.format    =    format!=    null?    Format.UNKNOWN    :    format.getName();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
414	[BUG]  [BUGGY]  Iterator  <  Appendable>  it  =  this.format.keySet().iterator();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  Iterator  <  Appendable>  it  =  this.format.keySet().iterator();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	Iterator  <  Appendable>  it  =  this.format.keySet().iterator();	  Iterator    <    Appendable>    it    =    this.format.iterator();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
415	[BUG]  [BUGGY]  Iterator  <  Appendable>  it  =  this.format.iteratorIfNull(out);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  Iterator  <  Appendable>  it  =  this.format.iteratorIfNull(out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	Iterator  <  Appendable>  it  =  this.format.iteratorIfNull(out);	  Iterator    <    Appendable>    it    =    this.format.iterator();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
416	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.newInstance(this.data):  Format.newInstance();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.newInstance(this.data):  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.newInstance(this.data):  Format.newInstance();	  this.format    =    format    ==    null?    Format.newInstance(this.record):    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
417	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.newInstance(this.out):  Format.newInstance();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.newInstance(this.out):  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.newInstance(this.out):  Format.newInstance();	  this.format    =    format    ==    null?    Format.newInstance(this.record):    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
418	[BUG]  [BUGGY]  this.format  =  format!=  null?  Format.UNKNOWN  :  format  +  2;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  Format.UNKNOWN  :  format  +  2;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  Format.UNKNOWN  :  format  +  2;	  this.format    =    format!=    null?    Format.UNKNOWN    :    format    +    1;    	non-compiled	[CE]  <identifier>  expected	95	None	replace
419	[BUG]  [BUGGY]  this.format  =  format!=  null?  Format.UNKNOWN  :  format  +  3;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  Format.UNKNOWN  :  format  +  3;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  Format.UNKNOWN  :  format  +  3;	  this.format    =    format!=    null?    Format.UNKNOWN    :    format    +    1;    	non-compiled	[CE]  <identifier>  expected	95	None	replace
420	[BUG]  [BUGGY]  if(newRecord!=  null)  {  this.format  =  format;  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  if(newRecord!=  null)  {  this.format  =  format;  }  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	if(newRecord!=  null)  {  this.format  =  format;  }	  if(newRecord!=    null)    {    this.format    =    newRecord;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
421	[BUG]  [BUGGY]  this.format  =  format  ==  null?  FormatUtils.EMPTY  :  FormatUtils.DEFAULT_VERSION;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  FormatUtils.EMPTY  :  FormatUtils.DEFAULT_VERSION;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  FormatUtils.EMPTY  :  FormatUtils.DEFAULT_VERSION;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_VERSION    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
422	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.toCharArray();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.toCharArray();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.toCharArray();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_TYPE    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
423	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.toPlainString();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.toPlainString();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.toPlainString();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_TYPE    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
424	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord()  :  Collections.EMPTY_LIST  +  1;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord()  :  Collections.EMPTY_LIST  +  1;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord()  :  Collections.EMPTY_LIST  +  1;	  this.format    =    format    ==    null?    newRecord()    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
425	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord()  :  Collections.  <  String>emptyList();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord()  :  Collections.  <  String>emptyList();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord()  :  Collections.  <  String>emptyList();	  this.format    =    format    ==    null?    newRecord()    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
426	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NAME  :  format  +  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NAME  :  format  +  1;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.NAME  :  format  +  1;	  this.format    =    format    ==    null?    CSVFormat.NAME    :    format;    	non-compiled	[CE]  <identifier>  expected	88	None	replace
427	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NAME  :  FormatUtils.EMPTY;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NAME  :  FormatUtils.EMPTY;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.NAME  :  FormatUtils.EMPTY;	  this.format    =    format    ==    null?    CSVFormat.NAME    :    format;    	non-compiled	[CE]  <identifier>  expected	88	None	replace
428	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.toPath();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.toPath();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.toPath();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
429	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_PREFIX  :  FormatUtils.EMPTY;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_PREFIX  :  FormatUtils.EMPTY;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_PREFIX  :  FormatUtils.EMPTY;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_PREFIX    :    format;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
430	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  String,Object>(out);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  HashMap  <  String,Object>(out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  HashMap  <  String,Object>(out);	  this.newRecord    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  <identifier>  expected	91	None	replace
431	[BUG]  [BUGGY]  this.newRecord  =  new  ArrayList  <  String,Object>();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  ArrayList  <  String,Object>();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  ArrayList  <  String,Object>();	  this.newRecord    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  <identifier>  expected	91	None	replace
432	[BUG]  [BUGGY]  this.newRecord  =  new  ConcurrentHashMap  <  String,Object>();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  ConcurrentHashMap  <  String,Object>();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  ConcurrentHashMap  <  String,Object>();	  this.newRecord    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  <identifier>  expected	91	None	replace
433	[BUG]  [BUGGY]  this.format  =  format  >=  null?  newRecord()  :  FormatUtils.EMPTY;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  >=  null?  newRecord()  :  FormatUtils.EMPTY;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  >=  null?  newRecord()  :  FormatUtils.EMPTY;	  this.format    =    format!=    null?    newRecord()    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
434	[BUG]  [BUGGY]  this.format  =  Format.createInstance(out);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.createInstance(out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.createInstance(out);	  this.format    =    Format.createInstance();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
435	[BUG]  [BUGGY]  this.format  =  Format.getInstance();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.getInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.getInstance();	  this.format    =    Format.createInstance();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
436	[BUG]  [BUGGY]  this.format  =  Format.createInstance(new  Record());  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.createInstance(new  Record());  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.createInstance(new  Record());	  this.format    =    Format.createInstance();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
437	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_FORMAT  :  FormatUtils.EMPTY;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_FORMAT  :  FormatUtils.EMPTY;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_FORMAT  :  FormatUtils.EMPTY;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_FORMAT    :    format;    	non-compiled	[CE]  <identifier>  expected	108	None	replace
438	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_FORMAT  :  FORMAT;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_FORMAT  :  FORMAT;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_FORMAT  :  FORMAT;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_FORMAT    :    format;    	non-compiled	[CE]  <identifier>  expected	108	None	replace
439	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_FORMAT  :  DEFAULT_NAME;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_FORMAT  :  DEFAULT_NAME;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_FORMAT  :  DEFAULT_NAME;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_FORMAT    :    format;    	non-compiled	[CE]  <identifier>  expected	108	None	replace
440	[BUG]  [BUGGY]  this.format  =  FormatUtils.getRecordFormat(this.record);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.getRecordFormat(this.record);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.getRecordFormat(this.record);	  this.format    =    FormatUtils.getRecordFormat(newRecord);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
441	[BUG]  [BUGGY]  this.format  =  format!=  null?  Format.NONE  :  format  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  Format.NONE  :  format  +  1;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  Format.NONE  :  format  +  1;	  this.format    =    format!=    null?    Format.NONE    :    format;    	non-compiled	[CE]  <identifier>  expected	62	None	replace
442	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY_STRING  :  Collections.EMPTY_STRING;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY_STRING  :  Collections.EMPTY_STRING;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.EMPTY_STRING  :  Collections.EMPTY_STRING;	  this.format    =    format    ==    null?    newRecord    :    Collections.EMPTY_STRING;    	non-compiled	[CE]  <identifier>  expected	100	None	replace
443	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Collections.EMPTY_STRING  :  format;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Collections.EMPTY_STRING  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Collections.EMPTY_STRING  :  format;	  this.format    =    format    ==    null?    newRecord    :    Collections.EMPTY_STRING;    	non-compiled	[CE]  <identifier>  expected	100	None	replace
444	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Collections.EMPTY_STRING  :  FormatUtils.EMPTY_STRING;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Collections.EMPTY_STRING  :  FormatUtils.EMPTY_STRING;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Collections.EMPTY_STRING  :  FormatUtils.EMPTY_STRING;	  this.format    =    format    ==    null?    newRecord    :    Collections.EMPTY_STRING;    	non-compiled	[CE]  <identifier>  expected	100	None	replace
445	[BUG]  [BUGGY]  this.format  =  format  >=  null?  CSVFormat.EMPTY  :  format;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  >=  null?  CSVFormat.EMPTY  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  >=  null?  CSVFormat.EMPTY  :  format;	  this.format    =    format!=    null?    CSVFormat.EMPTY    :    format;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
446	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  Format.DEFAULT;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  Format.DEFAULT;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.EMPTY  :  Format.DEFAULT;	  this.format    =    format!=    null?    CSVFormat.EMPTY    :    format;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
447	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Collections.EMPTY_LIST  :  Collections.EMPTY_LIST;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Collections.EMPTY_LIST  :  Collections.EMPTY_LIST;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Collections.EMPTY_LIST  :  Collections.EMPTY_LIST;	  this.format    =    format    ==    null?    newRecord    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  <identifier>  expected	101	None	replace
448	[BUG]  [BUGGY]  this.format  =  format!=  null?  newRecord  :  Collections.EMPTY_LIST  +  1;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  newRecord  :  Collections.EMPTY_LIST  +  1;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  newRecord  :  Collections.EMPTY_LIST  +  1;	  this.format    =    format    ==    null?    newRecord    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  <identifier>  expected	101	None	replace
449	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VERTICAL  :  format.toString();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VERTICAL  :  format.toString();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_VERTICAL  :  format.toString();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_VERSION    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
450	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VERSION  :  format.toPath();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VERSION  :  format.toPath();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_VERSION  :  format.toPath();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_VERSION    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
451	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VERSION  :  format.toCharArray();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VERSION  :  format.toCharArray();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_VERSION  :  format.toCharArray();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_VERSION    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
452	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(2);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(2);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  Record  <  CSV>(2);	  this.newRecord    =    new    Record    <    CSV>();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
453	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  Format.newInstance(out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  Format.newInstance(out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  Format.newInstance(out);	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
454	[BUG]  [BUGGY]  this.format  =  format!=  null?  Format.DEFAULT  :  Format.newInstance();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  Format.DEFAULT  :  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  Format.DEFAULT  :  Format.newInstance();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
455	[BUG]  [BUGGY]  if(newRecord!=  null)  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  if(newRecord!=  null)  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	if(newRecord!=  null)  {  System.arraycopy(out,  0,  this.format,  0,  format.length);  }	  if(newRecord!=    null)    {    this.format    =    newRecord;    }    else    {    System.arraycopy(out,    0,    this.format,    0,    format.length);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
456	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  this.format  =  newRecord;  }  else  {  System.arraycopy(out,  0,  this.format,  1,  format.length);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  if(newRecord  ==  null)  {  this.format  =  newRecord;  }  else  {  System.arraycopy(out,  0,  this.format,  1,  format.length);  }  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	if(newRecord  ==  null)  {  this.format  =  newRecord;  }  else  {  System.arraycopy(out,  0,  this.format,  1,  format.length);  }	  if(newRecord!=    null)    {    this.format    =    newRecord;    }    else    {    System.arraycopy(out,    0,    this.format,    0,    format.length);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
457	[BUG]  [BUGGY]  this.format  =  FormatUtilities.newRecord(out,  format);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtilities.newRecord(out,  format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtilities.newRecord(out,  format);	  this.format    =    FormatUtilities.newRecord();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
458	[BUG]  [BUGGY]  this.format  =  FormatUtilities.newRecord(this.format);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtilities.newRecord(this.format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtilities.newRecord(this.format);	  this.format    =    FormatUtilities.newRecord();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
459	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VOAR  :  format;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VOAR  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_VOAR  :  format;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_VAR    :    format;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
460	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VAR  :  FormatUtils.EMPTY;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VAR  :  FormatUtils.EMPTY;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_VAR  :  FormatUtils.EMPTY;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_VAR    :    format;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
461	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  Format.DEFAULT;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  Format.DEFAULT;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  Format.DEFAULT;	  this.format    =    format!=    null?    CSVFormat.DEFAULT_TYPE    :    format;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
462	[BUG]  [BUGGY]  this.format  =  format!=  null?  Format.newInstance(this.format):  format;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  Format.newInstance(this.format):  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  Format.newInstance(this.format):  format;	  this.format    =    format!=    null?    Format.newInstance()    :    format;    	non-compiled	[CE]  <identifier>  expected	106	None	replace
463	[BUG]  [BUGGY]  this.format  =  format  >=  null?  Format.newInstance()  :  format;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  >=  null?  Format.newInstance()  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  >=  null?  Format.newInstance()  :  format;	  this.format    =    format!=    null?    Format.newInstance()    :    format;    	non-compiled	[CE]  <identifier>  expected	106	None	replace
464	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format.getLabel();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format.getLabel();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.UNKNOWN  :  format.getLabel();	  this.format    =    format    ==    null?    Format.UNKNOWN    :    format.getName();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
465	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format.getRecordName();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format.getRecordName();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.UNKNOWN  :  format.getRecordName();	  this.format    =    format    ==    null?    Format.UNKNOWN    :    format.getName();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
466	[BUG]  [BUGGY]  if(newRecord!=  null)  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  if(newRecord!=  null)  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	if(newRecord!=  null)  {  System.arraycopy(out,  0,  this.format,  0,  out.length);  }	  if(newRecord!=    null)    {    this.format    =    newRecord;    }    else    {    System.arraycopy(out,    0,    this.format,    0,    out.length);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
467	[BUG]  [BUGGY]  if(newRecord!=  null)  {  this.format  =  newRecord;  }  else  {  System.arraycopy(out,  0,  this.format,  out.length);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  if(newRecord!=  null)  {  this.format  =  newRecord;  }  else  {  System.arraycopy(out,  0,  this.format,  out.length);  }  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	if(newRecord!=  null)  {  this.format  =  newRecord;  }  else  {  System.arraycopy(out,  0,  this.format,  out.length);  }	  if(newRecord!=    null)    {    this.format    =    newRecord;    }    else    {    System.arraycopy(out,    0,    this.format,    0,    out.length);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
468	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  FormatUtils.toCharArray(out);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  FormatUtils.toCharArray(out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  FormatUtils.toCharArray(out);	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_NAME    :    format.toCharArray();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
469	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.UNKNOWN  :  Format.UNKNOWN  +  1;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.UNKNOWN  :  Format.UNKNOWN  +  1;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.UNKNOWN  :  Format.UNKNOWN  +  1;	  this.format    =    format    ==    null?    CSVFormat.UNKNOWN    :    Format.UNKNOWN;    	non-compiled	[CE]  <identifier>  expected	92	None	replace
470	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  Format.DEFAULT  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  Format.DEFAULT  +  1;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.NONE  :  Format.DEFAULT  +  1;	  this.format    =    format    ==    null?    CSVFormat.NONE    :    Format.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	114	None	replace
471	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.DEFAULT  :  CSVFormat.NONE;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.DEFAULT  :  CSVFormat.NONE;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.DEFAULT  :  CSVFormat.NONE;	  this.format    =    format    ==    null?    CSVFormat.NONE    :    Format.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	114	None	replace
472	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  Format.DEFAULT;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  Format.DEFAULT;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  Format.DEFAULT;	  this.format    =    format!=    null?    CSVFormat.DEFAULT    :    format;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
473	[BUG]  [BUGGY]  This.newRecord  =  false;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  This.newRecord  =  false;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	This.newRecord  =  false;	  this.newRecord    =    true;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
474	[BUG]  [BUGGY]  this.newRecord  |=  false;  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  |=  false;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  |=  false;	  this.newRecord    =    true;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
475	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VOID  :  format;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VOID  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_VOID  :  format;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_VARIABLE    :    format;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
476	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VARIABLE  :  FormatUtils.EMPTY;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VARIABLE  :  FormatUtils.EMPTY;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_VARIABLE  :  FormatUtils.EMPTY;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_VARIABLE    :    format;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
477	[BUG]  [BUGGY]  this.format  =  FormatUtils.createFormat(this.record);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.createFormat(this.record);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.createFormat(this.record);	  this.format    =    FormatUtils.createFormat(newRecord);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
478	[BUG]  [BUGGY]  Iterator  <  Appendable>  it  =  this.formats.entrySet().iterator();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  Iterator  <  Appendable>  it  =  this.formats.entrySet().iterator();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	Iterator  <  Appendable>  it  =  this.formats.entrySet().iterator();	  Iterator    <    Appendable>    it    =    this.formats.iterator();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
479	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.toPath();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.toPath();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.toPath();	  this.format    =    format    ==    null?    CSVFormat.UNKNOWN    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
480	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(format,  out);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(format,  out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(format,  out);	  this.newRecord    =    new    Record    <    CSVFormat>(format);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
481	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(format,  newRecord);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(format,  newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(format,  newRecord);	  this.newRecord    =    new    Record    <    CSVFormat>(format);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
482	[BUG]  [BUGGY]  this.format  =  Format.newRecord(out,  newRecord);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.newRecord(out,  newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.newRecord(out,  newRecord);	  this.format    =    Format.newRecord();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
483	[BUG]  [BUGGY]  this.format  =  Format.newRecord(out,  format);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.newRecord(out,  format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.newRecord(out,  format);	  this.format    =    Format.newRecord();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
484	[BUG]  [BUGGY]  this.format  =  Format.createRecord(out);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.createRecord(out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.createRecord(out);	  this.format    =    Format.newRecord();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
485	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(out);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  HashMap  <  CSVFormat>(out);	  this.newRecord    =    new    HashMap    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	90	None	replace
486	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(8);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(8);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  HashMap  <  CSVFormat>(8);	  this.newRecord    =    new    HashMap    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	90	None	replace
487	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DELETE  :  format;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DELETE  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DELETE  :  format;	  this.format    =    format    ==    null?    CSVFormat.DECEMBER    :    format;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
488	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DECEMBER  :  format  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DECEMBER  :  format  +  1;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DECEMBER  :  format  +  1;	  this.format    =    format    ==    null?    CSVFormat.DECEMBER    :    format;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
489	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  System.err.println( "Missing  CSV  for  format: "  +  format);  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  safeMultiply(out,  newRecord)  {  System.err.println( "Missing  CSV  for  format: "  +  format);  }  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	safeMultiply(out,  newRecord)  {  System.err.println( "Missing  CSV  for  format: "  +  format);  }	  if(newRecord)    {    System.err.println(   "Missing    CSV    for    format:   "    +    format);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
490	[BUG]  [BUGGY]  Error.println( "Missing  CSV  for  format: "  +  format);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  Error.println( "Missing  CSV  for  format: "  +  format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	Error.println( "Missing  CSV  for  format: "  +  format);	  if(newRecord)    {    System.err.println(   "Missing    CSV    for    format:   "    +    format);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
491	[BUG]  [BUGGY]  MutableFormat.println( "Missing  CSV  for  format: "  +  format);  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  MutableFormat.println( "Missing  CSV  for  format: "  +  format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	MutableFormat.println( "Missing  CSV  for  format: "  +  format);	  if(newRecord)    {    System.err.println(   "Missing    CSV    for    format:   "    +    format);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
492	[BUG]  [BUGGY]  this.format  =  format!=  null?  Format.UNKNOWN  :  format,  out);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  Format.UNKNOWN  :  format,  out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  Format.UNKNOWN  :  format,  out);	  this.format    =    format    ==    null?    Format.UNKNOWN    :    format,    newRecord);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
493	[BUG]  [BUGGY]  if(newRecord!=  null)  {  this.format  =  format;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  if(newRecord!=  null)  {  this.format  =  format;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	if(newRecord!=  null)  {  this.format  =  format;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(newRecord!=    null)    {    this.format    =    newRecord;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
494	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord()  :  Collections.  <  String>emptySet();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord()  :  Collections.  <  String>emptySet();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord()  :  Collections.  <  String>emptySet();	  this.format    =    format    ==    null?    newRecord()    :    Collections.emptySet();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
495	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NOT_IMPLEMENTED  :  format  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NOT_IMPLEMENTED  :  format  +  1;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.NOT_IMPLEMENTED  :  format  +  1;	  this.format    =    format    ==    null?    CSVFormat.NOT_IMPLEMENTED    :    format;    	non-compiled	[CE]  <identifier>  expected	78	None	replace
496	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  Format.newInstance(out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  Format.newInstance(out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.NONE  :  Format.newInstance(out);	  this.format    =    format    ==    null?    CSVFormat.NONE    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
497	[BUG]  [BUGGY]  this.format  =  FormatUtils.getFormat(this.record);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.getFormat(this.record);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.getFormat(this.record);	  this.format    =    FormatUtils.getFormat(newRecord);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
498	[BUG]  [BUGGY]  this.format  =  FormatUtils.getFormat(newRecord  +  format);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.getFormat(newRecord  +  format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.getFormat(newRecord  +  format);	  this.format    =    FormatUtils.getFormat(newRecord);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
499	[BUG]  [BUGGY]  this.format  =  format!=  null?  Format.newInstance()  :  Format.newInstance(out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  Format.newInstance()  :  Format.newInstance(out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  Format.newInstance()  :  Format.newInstance(out);	  this.format    =    format!=    null?    Format.newInstance()    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
500	[BUG]  [BUGGY]  this.format  =  FormatUtils.newRecord(this.out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.newRecord(this.out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.newRecord(this.out);	  this.format    =    FormatUtils.newRecord();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
501	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VERSION  :  Format.DEFAULT_VERSION;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VERSION  :  Format.DEFAULT_VERSION;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_VERSION  :  Format.DEFAULT_VERSION;	  this.format    =    format!=    null?    CSVFormat.DEFAULT_VERSION    :    format;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
502	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VERSION  :  Format.DEFAULT;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VERSION  :  Format.DEFAULT;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_VERSION  :  Format.DEFAULT;	  this.format    =    format!=    null?    CSVFormat.DEFAULT_VERSION    :    format;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
503	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  Format.newInstance(out);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  Format.newInstance(out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.EMPTY  :  Format.newInstance(out);	  this.format    =    format    ==    null?    CSVFormat.EMPTY    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
504	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  format);  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  safeMultiply(out,  newRecord)  {  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  format);  }  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	safeMultiply(out,  newRecord)  {  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  format);  }	  if(newRecord)    {    System.err.println(   "Unable    to    instantiate    CSVFormat:   "    +    format);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
505	[BUG]  [BUGGY]  safeRecord()  {  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  format);  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  safeRecord()  {  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  format);  }  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	safeRecord()  {  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  format);  }	  if(newRecord)    {    System.err.println(   "Unable    to    instantiate    CSVFormat:   "    +    format);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
506	[BUG]  [BUGGY]  safeMultiply(out)  {  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  format);  }  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  safeMultiply(out)  {  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  format);  }  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	safeMultiply(out)  {  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  format);  }	  if(newRecord)    {    System.err.println(   "Unable    to    instantiate    CSVFormat:   "    +    format);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
507	[BUG]  [BUGGY]  MutableFormat.println( "Unable  to  instantiate  CSVFormat: "  +  format);  [CE]  <identifier>  expected  [FE]                                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  MutableFormat.println( "Unable  to  instantiate  CSVFormat: "  +  format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	MutableFormat.println( "Unable  to  instantiate  CSVFormat: "  +  format);	  if(newRecord)    {    System.err.println(   "Unable    to    instantiate    CSVFormat:   "    +    format);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
508	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NULL  :  format;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NULL  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_NULL  :  format;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_VERTICAL    :    format;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
509	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NUMBER  :  format;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NUMBER  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_NUMBER  :  format;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_VERTICAL    :    format;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
510	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord  :  Format.UNKNOWN;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord  :  Format.UNKNOWN;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord  :  Format.UNKNOWN;	  this.format    =    format!=    null?    newRecord    :    format;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
511	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord  :  Format.DEFAULT;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord  :  Format.DEFAULT;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord  :  Format.DEFAULT;	  this.format    =    format!=    null?    newRecord    :    format;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
512	[BUG]  [BUGGY]  this.format  =  format  [Delete]  null?  Format.UNKNOWN  :  format;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  [Delete]  null?  Format.UNKNOWN  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  [Delete]  null?  Format.UNKNOWN  :  format;	  this.format    =    format    >=    null?    Format.UNKNOWN    :    format;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
513	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format,  out);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format,  out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format,  out);	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_TYPE    :    format);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
514	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord()  :  Collections.EMPTY_STRING  +  1;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord()  :  Collections.EMPTY_STRING  +  1;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord()  :  Collections.EMPTY_STRING  +  1;	  this.format    =    format    ==    null?    newRecord()    :    Collections.EMPTY_STRING;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
515	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord()  :  Collections.  <  String>emptyString();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord()  :  Collections.  <  String>emptyString();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord()  :  Collections.  <  String>emptyString();	  this.format    =    format    ==    null?    newRecord()    :    Collections.EMPTY_STRING;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
516	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format.getName()  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format.getName()  +  1;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.EMPTY  :  format.getName()  +  1;	  this.format    =    format    ==    null?    CSVFormat.EMPTY    :    format    +    1;    	non-compiled	[CE]  <identifier>  expected	89	None	replace
517	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord  :  FormatUtils.UNSUPPORTED;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord  :  FormatUtils.UNSUPPORTED;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord  :  FormatUtils.UNSUPPORTED;	  this.format    =    format    ==    null?    newRecord    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	96	None	replace
518	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format.substring(0,  format.length()  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format.substring(0,  format.length()  -  1);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.UNKNOWN  :  format.substring(0,  format.length()  -  1);	  this.format    =    format    ==    null?    Format.UNKNOWN    :    format    +    1;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
519	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord()  :  format,  out);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord()  :  format,  out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord()  :  format,  out);	  this.format    =    format    ==    null?    newRecord()    :    format;    	non-compiled	[CE]  <identifier>  expected	103	None	replace
520	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord()  :  format);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord()  :  format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord()  :  format);	  this.format    =    format    ==    null?    newRecord()    :    format;    	non-compiled	[CE]  <identifier>  expected	103	None	replace
521	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord  :  format.toFormat();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord  :  format.toFormat();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord  :  format.toFormat();	  this.format    =    format    ==    null?    newRecord    :    format;    	non-compiled	[CE]  <identifier>  expected	97	None	replace
522	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord  :  format.getName();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord  :  format.getName();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord  :  format.getName();	  this.format    =    format    ==    null?    newRecord    :    format;    	non-compiled	[CE]  <identifier>  expected	97	None	replace
523	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord  :  format,  out);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord  :  format,  out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord  :  format,  out);	  this.format    =    format    ==    null?    newRecord    :    format;    	non-compiled	[CE]  <identifier>  expected	97	None	replace
524	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.getLabel();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.getLabel();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.getLabel();	  this.format    =    format    ==    null?    CSVFormat.UNKNOWN    :    format.getName();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
525	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.toExternalFormat();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.toExternalFormat();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.toExternalFormat();	  this.format    =    format    ==    null?    CSVFormat.UNKNOWN    :    format.getName();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
526	[BUG]  [BUGGY]  this.format  =  FormatUtilities.newInstance(format);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtilities.newInstance(format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtilities.newInstance(format);	  this.format    =    FormatUtilities.newRecord();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
527	[BUG]  [BUGGY]  this.format  =  Format  ==  null?  format  :  CSVFormat.NONE;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format  ==  null?  format  :  CSVFormat.NONE;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format  ==  null?  format  :  CSVFormat.NONE;	  this.format    =    Format    ==    null?    CSVFormat.NONE    :    format;    	non-compiled	[CE]  <identifier>  expected	112	None	replace
528	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VARIABLE  :  format);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VARIABLE  :  format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_VARIABLE  :  format);	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_VARIABLE    :    format;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
529	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VARIABLE  :  format,  newRecord);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VARIABLE  :  format,  newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_VARIABLE  :  format,  newRecord);	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_VARIABLE    :    format;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
530	[BUG]  [BUGGY]  This.format  =  format  ==  null?  Format.newInstance()  :  Format.newInstance();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  This.format  =  format  ==  null?  Format.newInstance()  :  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	This.format  =  format  ==  null?  Format.newInstance()  :  Format.newInstance();	  this.format    =    format!=    null?    Format.newInstance()    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
531	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSV>(4);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  Record  <  CSV>(4);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  Record  <  CSV>(4);	  this.newRecord    =    new    Record    <    CSV>();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
532	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(form);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(form);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(form);	  this.newRecord    =    new    Record    <    CSVFormat>(out);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
533	[BUG]  [BUGGY]  ||  newRecord  ==  null)  {  this.format  =  newRecord;  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  ||  newRecord  ==  null)  {  this.format  =  newRecord;  }  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	||  newRecord  ==  null)  {  this.format  =  newRecord;  }	  if(newRecord    ==    null)    {    this.format    =    newRecord;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
534	[BUG]  [BUGGY]  ||  newRecord  ==  null)  {  this.format  =  format;  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  ||  newRecord  ==  null)  {  this.format  =  format;  }  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	||  newRecord  ==  null)  {  this.format  =  format;  }	  if(newRecord    ==    null)    {    this.format    =    newRecord;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
535	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format.toFormat(Locale.ENGLISH);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format.toFormat(Locale.ENGLISH);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.UNKNOWN  :  format.toFormat(Locale.ENGLISH);	  this.format    =    format    ==    null?    Format.UNKNOWN    :    format.toFormat();    	non-compiled	[CE]  <identifier>  expected	53	None	replace
536	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(format,  this.type);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(format,  this.type);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(format,  this.type);	  this.newRecord    =    new    Record    <    CSVFormat>(format);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
537	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.newInstance(out):  Format.newInstance(out);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.newInstance(out):  Format.newInstance(out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.newInstance(out):  Format.newInstance(out);	  this.format    =    Format.newInstance(out);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
538	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.newInstance(out):  Format.newInstance();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.newInstance(out):  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.newInstance(out):  Format.newInstance();	  this.format    =    Format.newInstance(out);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
539	[BUG]  [BUGGY]  this.format  =  Format.newInstance(format,  out);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.newInstance(format,  out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.newInstance(format,  out);	  this.format    =    Format.newInstance(out);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
540	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.TYPE_DECLARATION  :  format;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.TYPE_DECLARATION  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.TYPE_DECLARATION  :  format;	  this.format    =    format    ==    null?    CSVFormat.TYPE_DEFAULT    :    format;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
541	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.TYPE_ADD  :  format;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.TYPE_ADD  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.TYPE_ADD  :  format;	  this.format    =    format    ==    null?    CSVFormat.TYPE_DEFAULT    :    format;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
542	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format,  this.newRecord);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format,  this.newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format,  this.newRecord);	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    format,    newRecord);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
543	[BUG]  [BUGGY]  this.format  =  newRecord  ==  null?  CSVFormat.DEFAULT  :  format,  out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  newRecord  ==  null?  CSVFormat.DEFAULT  :  format,  out);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  newRecord  ==  null?  CSVFormat.DEFAULT  :  format,  out);	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    format,    newRecord);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
544	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DECEMBER  :  format,  newRecord);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DECEMBER  :  format,  newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DECEMBER  :  format,  newRecord);	  this.format    =    format    ==    null?    CSVFormat.DECEMBER    :    format;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
545	[BUG]  [BUGGY]  this.name  =  format  ==  null?  getName()  :  format.getName();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.name  =  format  ==  null?  getName()  :  format.getName();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.name  =  format  ==  null?  getName()  :  format.getName();	  this.name    =    format.getName();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
546	[BUG]  [BUGGY]  this.name  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.getName();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.name  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.getName();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.name  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.getName();	  this.name    =    format.getName();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
547	[BUG]  [BUGGY]  this.name  =  format!=  null?  format.getName()  : " ";  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.name  =  format!=  null?  format.getName()  : " ";  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.name  =  format!=  null?  format.getName()  : " ";	  this.name    =    format.getName();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
548	[BUG]  [BUGGY]  this.name  =  format!=  null?  format.getName()  : "[null] ";  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.name  =  format!=  null?  format.getName()  : "[null] ";  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.name  =  format!=  null?  format.getName()  : "[null] ";	  this.name    =    format.getName();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
549	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.newInstance(System.err):  Format.newInstance(0);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.newInstance(System.err):  Format.newInstance(0);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.newInstance(System.err):  Format.newInstance(0);	  this.format    =    format    ==    null?    Format.newInstance(System.err):    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	64	None	replace
550	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.newInstance(System.identityHashCode()):  Format.newInstance();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.newInstance(System.identityHashCode()):  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.newInstance(System.identityHashCode()):  Format.newInstance();	  this.format    =    format    ==    null?    Format.newInstance(System.err):    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	64	None	replace
551	[BUG]  [BUGGY]  this.format  =  FormatUtils.toFormat(newRecord);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.toFormat(newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.toFormat(newRecord);	  this.format    =    FormatUtils.getFormat(newRecord);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
552	[BUG]  [BUGGY]  this.format  =  FormatUtils.getFormat(format);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.getFormat(format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.getFormat(format);	  this.format    =    FormatUtils.getFormat(newRecord);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
553	[BUG]  [BUGGY]  this.format  =  FormatUtils.removeFormat(newRecord);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.removeFormat(newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.removeFormat(newRecord);	  this.format    =    FormatUtils.getFormat(newRecord);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
554	[BUG]  [BUGGY]  Iterator  <  Appendable>  it  =  this.cSVFormats.iterator();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  Iterator  <  Appendable>  it  =  this.cSVFormats.iterator();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	Iterator  <  Appendable>  it  =  this.cSVFormats.iterator();	  Iterator    <    Appendable>    it    =    this.formats.iterator();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
555	[BUG]  [BUGGY]  Iterator  <  Appendable>  it  =  this.files.iterator();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  Iterator  <  Appendable>  it  =  this.files.iterator();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	Iterator  <  Appendable>  it  =  this.files.iterator();	  Iterator    <    Appendable>    it    =    this.formats.iterator();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
556	[BUG]  [BUGGY]  Iterator  <  Appendable>  it  =  this.contents.iterator();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  Iterator  <  Appendable>  it  =  this.contents.iterator();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	Iterator  <  Appendable>  it  =  this.contents.iterator();	  Iterator    <    Appendable>    it    =    this.formats.iterator();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
557	[BUG]  [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(4);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  Record  <  CSVFormat>(4);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  Record  <  CSVFormat>(4);	  this.newRecord    =    new    Record    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
558	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  Format.EMPTY;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.EMPTY  :  Format.EMPTY;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.EMPTY  :  Format.EMPTY;	  this.format    =    format!=    null?    CSVFormat.EMPTY    :    format;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
559	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord  :  Collections.  <  String>emptyString();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord  :  Collections.  <  String>emptyString();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord  :  Collections.  <  String>emptyString();	  this.format    =    format    ==    null?    newRecord    :    Collections.EMPTY_STRING;    	non-compiled	[CE]  <identifier>  expected	100	None	replace
560	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord  :  Collections.  <  String>emptyString;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord  :  Collections.  <  String>emptyString;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord  :  Collections.  <  String>emptyString;	  this.format    =    format    ==    null?    newRecord    :    Collections.EMPTY_STRING;    	non-compiled	[CE]  <identifier>  expected	100	None	replace
561	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NAME  :  format,  newRecord);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NAME  :  format,  newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.NAME  :  format,  newRecord);	  this.format    =    format    ==    null?    CSVFormat.NAME    :    format;    	non-compiled	[CE]  <identifier>  expected	88	None	replace
562	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NAME  :  format);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NAME  :  format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.NAME  :  format);	  this.format    =    format    ==    null?    CSVFormat.NAME    :    format;    	non-compiled	[CE]  <identifier>  expected	88	None	replace
563	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  FormatUtils.UNKNOWN;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  FormatUtils.UNKNOWN;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  FormatUtils.UNKNOWN;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_NAME    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
564	[BUG]  [BUGGY]  this.format  =  format  ==  null?  FormatUtils.DEFAULT_NAME  :  FormatUtils.DEFAULT;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  FormatUtils.DEFAULT_NAME  :  FormatUtils.DEFAULT;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  FormatUtils.DEFAULT_NAME  :  FormatUtils.DEFAULT;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_NAME    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
565	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format,  this.newRecord);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format,  this.newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.UNKNOWN  :  format,  this.newRecord);	  this.format    =    format    ==    null?    Format.UNKNOWN    :    format,    newRecord);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
566	[BUG]  [BUGGY]  this.format  =  format!=  null?  newRecord  :  format.toString();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  newRecord  :  format.toString();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  newRecord  :  format.toString();	  this.format    =    format!=    null?    newRecord    :    format;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
567	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord  :  Format;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord  :  Format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord  :  Format;	  this.format    =    format!=    null?    newRecord    :    format;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
568	[BUG]  [BUGGY]  this.format  =  format!=  null?  newRecord  :  format.toExternalFormat();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  newRecord  :  format.toExternalFormat();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  newRecord  :  format.toExternalFormat();	  this.format    =    format!=    null?    newRecord    :    format;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
569	[BUG]  [BUGGY]  this.format  =  format!=  null?  newRecord  :  format.toFormat();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  newRecord  :  format.toFormat();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  newRecord  :  format.toFormat();	  this.format    =    format!=    null?    newRecord    :    format;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
570	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format.trim()  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format.trim()  +  1;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.NONE  :  format.trim()  +  1;	  this.format    =    format    ==    null?    CSVFormat.NONE    :    format    +    1;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
571	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VERSION  :  FormatUtils.UNKNOWN;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VERSION  :  FormatUtils.UNKNOWN;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_VERSION  :  FormatUtils.UNKNOWN;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_VERSION    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
572	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VERSION  :  FormatUtils.UNSUPPORTED;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VERSION  :  FormatUtils.UNSUPPORTED;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_VERSION  :  FormatUtils.UNSUPPORTED;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_VERSION    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
573	[BUG]  [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(4);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.newRecord  =  new  HashMap  <  CSVFormat>(4);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.newRecord  =  new  HashMap  <  CSVFormat>(4);	  this.newRecord    =    new    HashMap    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	90	None	replace
574	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.toPlainString();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.toPlainString();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.toPlainString();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
575	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.toExternalFormat();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.toExternalFormat();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.toExternalFormat();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
576	[BUG]  [BUGGY]  this.format  =  FormatUtils.getRecordFormat(format);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.getRecordFormat(format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.getRecordFormat(format);	  this.format    =    FormatUtils.getRecordFormat(newRecord);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
577	[BUG]  [BUGGY]  this.format  =  FormatUtils.getRecordFormat(newRecord),  format);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.getRecordFormat(newRecord),  format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.getRecordFormat(newRecord),  format);	  this.format    =    FormatUtils.getRecordFormat(newRecord);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
578	[BUG]  [BUGGY]  safeMultiply(format)  {  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  newRecord);  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  safeMultiply(format)  {  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  newRecord);  }  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	safeMultiply(format)  {  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  newRecord);  }	  if(newRecord)    {    System.err.println(   "Unable    to    instantiate    CSVFormat:   "    +    format);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
579	[BUG]  [BUGGY]  safeMultiply(format)  {  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  format);  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  safeMultiply(format)  {  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  format);  }  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	safeMultiply(format)  {  System.err.println( "Unable  to  instantiate  CSVFormat: "  +  format);  }	  if(newRecord)    {    System.err.println(   "Unable    to    instantiate    CSVFormat:   "    +    format);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
580	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VERSION  :  format.toExternalFormat();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_VERSION  :  format.toExternalFormat();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_VERSION  :  format.toExternalFormat();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_VERSION    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
581	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.toPath();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.toPath();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  format.toPath();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_TYPE    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
582	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NOT_IMPLEMENTED  :  format,  newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NOT_IMPLEMENTED  :  format,  newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.NOT_IMPLEMENTED  :  format,  newRecord);	  this.format    =    format    ==    null?    CSVFormat.NOT_IMPLEMENTED    :    format;    	non-compiled	[CE]  <identifier>  expected	78	None	replace
583	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NOT_IMPLEMENTED  :  format);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NOT_IMPLEMENTED  :  format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.NOT_IMPLEMENTED  :  format);	  this.format    =    format    ==    null?    CSVFormat.NOT_IMPLEMENTED    :    format;    	non-compiled	[CE]  <identifier>  expected	78	None	replace
584	[BUG]  [BUGGY]  this.format  =  format!=  null?  Format.UNKNOWN  :  format.toExternalFormat();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  Format.UNKNOWN  :  format.toExternalFormat();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  Format.UNKNOWN  :  format.toExternalFormat();	  this.format    =    format!=    null?    Format.UNKNOWN    :    format.getName();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
585	[BUG]  [BUGGY]  this.format  =  format!=  null?  newRecord(out):  format;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  newRecord(out):  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  newRecord(out):  format;	  this.format    =    format!=    null?    newRecord()    :    format;    	non-compiled	[CE]  <identifier>  expected	104	None	replace
586	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord()  :  Format;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord()  :  Format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord()  :  Format;	  this.format    =    format!=    null?    newRecord()    :    format;    	non-compiled	[CE]  <identifier>  expected	104	None	replace
587	[BUG]  [BUGGY]  this.format  =  format!=  null?  FormatUtils.EMPTY  :  FormatUtils.DEFAULT;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  FormatUtils.EMPTY  :  FormatUtils.DEFAULT;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  FormatUtils.EMPTY  :  FormatUtils.DEFAULT;	  this.format    =    format!=    null?    CSVFormat.NONE    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
588	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format.getFormat();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format.getFormat();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.UNKNOWN  :  format.getFormat();	  this.format    =    format    ==    null?    Format.UNKNOWN    :    format.toFormatter();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
589	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord  :  Collections.  <  String>emptyList();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord  :  Collections.  <  String>emptyList();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord  :  Collections.  <  String>emptyList();	  this.format    =    format    ==    null?    newRecord    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  <identifier>  expected	101	None	replace
590	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord  :  Collections.  <  String>emptySet();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord  :  Collections.  <  String>emptySet();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord  :  Collections.  <  String>emptySet();	  this.format    =    format    ==    null?    newRecord    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  <identifier>  expected	101	None	replace
591	[BUG]  [BUGGY]  this.format  =  FormatUtils.newInstance(format);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.newInstance(format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.newInstance(format);	  this.format    =    FormatUtils.newRecord();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
592	[BUG]  [BUGGY]  this.format  =  newRecord!=  null?  format  :  FormatUtils.EMPTY;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  newRecord!=  null?  format  :  FormatUtils.EMPTY;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  newRecord!=  null?  format  :  FormatUtils.EMPTY;	  this.format    =    format!=    null?    newRecord    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	99	None	replace
593	[BUG]  [BUGGY]  this.format  =  format!=  null?  format  :  FormatUtils.EMPTY;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  format  :  FormatUtils.EMPTY;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  format  :  FormatUtils.EMPTY;	  this.format    =    format!=    null?    newRecord    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	99	None	replace
594	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  Format.UNDEFINED;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  Format.UNDEFINED;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  Format.UNDEFINED;	  this.format    =    format    ==    null?    CSVFormat.UNKNOWN    :    Format.unKNOWN;    	non-compiled	[CE]  <identifier>  expected	93	None	replace
595	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  FormatUtils.UNKNOWN;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  FormatUtils.UNKNOWN;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  FormatUtils.UNKNOWN;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_TYPE    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	87	None	replace
596	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  FormatUtils.UNSUPPORTED;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  FormatUtils.UNSUPPORTED;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  FormatUtils.UNSUPPORTED;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_TYPE    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	87	None	replace
597	[BUG]  [BUGGY]  this.format  =  format  ==  null?  newRecord()  :  Collections.  <  E>emptyList();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  newRecord()  :  Collections.  <  E>emptyList();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  newRecord()  :  Collections.  <  E>emptyList();	  this.format    =    format    ==    null?    newRecord()    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
598	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNDEFINED  :  Format;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNDEFINED  :  Format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.UNDEFINED  :  Format;	  this.format    =    format!=    null?    CSVFormat.UNDEFINED    :    format;    	non-compiled	[CE]  <identifier>  expected	79	None	replace
599	[BUG]  [BUGGY]  this.format  =  FormatUtils.createFormat(format);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtils.createFormat(format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtils.createFormat(format);	  this.format    =    FormatUtils.createFormat(newRecord);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
600	[BUG]  [BUGGY]  ||  newRecord!=  null)  {  this.format  =  newRecord;  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  ||  newRecord!=  null)  {  this.format  =  newRecord;  }  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	||  newRecord!=  null)  {  this.format  =  newRecord;  }	  if(newRecord!=    null)    {    this.format    =    newRecord;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
601	[BUG]  [BUGGY]  ||  newRecord!=  null)  {  this.format  =  format;  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  ||  newRecord!=  null)  {  this.format  =  format;  }  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	||  newRecord!=  null)  {  this.format  =  format;  }	  if(newRecord!=    null)    {    this.format    =    newRecord;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
602	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.newInstance()  :  format,  newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.newInstance()  :  format,  newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.newInstance()  :  format,  newRecord);	  this.format    =    format    ==    null?    Format.newInstance()    :    format;    	non-compiled	[CE]  <identifier>  expected	107	None	replace
603	[BUG]  [BUGGY]  this.format  =  format!=  null?  Format.UNKNOWN  :  format.toPath();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  Format.UNKNOWN  :  format.toPath();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  Format.UNKNOWN  :  format.toPath();	  this.format    =    format!=    null?    Format.UNKNOWN    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
604	[BUG]  [BUGGY]  if(newRecord  ==  null  ||  newRecord.length  <  =  0)  {  this.format  =  newRecord;  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  if(newRecord  ==  null  ||  newRecord.length  <  =  0)  {  this.format  =  newRecord;  }  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	if(newRecord  ==  null  ||  newRecord.length  <  =  0)  {  this.format  =  newRecord;  }	  if(newRecord    ==    null)    {    this.format    =    newRecord;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
605	[BUG]  [BUGGY]  this.format  =  Format!=  null?  format  :  CSVFormat.NONE;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format!=  null?  format  :  CSVFormat.NONE;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format!=  null?  format  :  CSVFormat.NONE;	  this.format    =    Format!=    null?    CSVFormat.NONE    :    format;    	non-compiled	[CE]  <identifier>  expected	113	None	replace
606	[BUG]  [BUGGY]  Iterator  <  Appendable>  it  =  this.cSVFormat.iterator();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  Iterator  <  Appendable>  it  =  this.cSVFormat.iterator();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	Iterator  <  Appendable>  it  =  this.cSVFormat.iterator();	  Iterator    <    Appendable>    it    =    this.format.iterator();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
607	[BUG]  [BUGGY]  Iterator  <  Appendable>  it  =  this.out.iterator();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  Iterator  <  Appendable>  it  =  this.out.iterator();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	Iterator  <  Appendable>  it  =  this.out.iterator();	  Iterator    <    Appendable>    it    =    this.format.iterator();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
608	[BUG]  [BUGGY]  Iterator  <  Appendable>  it  =  this.format.contents().iterator();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  Iterator  <  Appendable>  it  =  this.format.contents().iterator();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	Iterator  <  Appendable>  it  =  this.format.contents().iterator();	  Iterator    <    Appendable>    it    =    this.format.iterator();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
609	[BUG]  [BUGGY]  this.format  =  FormatUtilities.createFormat(this.format,  format);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtilities.createFormat(this.format,  format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtilities.createFormat(this.format,  format);	  this.format    =    FormatUtilities.createFormat(newRecord,    format);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
610	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  Format.newInstance(out,  newRecord);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  Format.newInstance(out,  newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  Format.newInstance(out,  newRecord);	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
611	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.toExternalFormat();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.toExternalFormat();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.toExternalFormat();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_NAME    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
612	[BUG]  [BUGGY]  this.format  =  format!=  null?  Format.newInstance(System.out):  Format.newInstance();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  Format.newInstance(System.out):  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  Format.newInstance(System.out):  Format.newInstance();	  this.format    =    format!=    null?    Format.newInstance(System.err):    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
613	[BUG]  [BUGGY]  This.format  =  format  ==  null?  Format.newInstance(System.err):  Format.newInstance();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  This.format  =  format  ==  null?  Format.newInstance(System.err):  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	This.format  =  format  ==  null?  Format.newInstance(System.err):  Format.newInstance();	  this.format    =    format!=    null?    Format.newInstance(System.err):    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
614	[BUG]  [BUGGY]  this.format  =  Format  ==  null?  CSVFormat.DEFAULT  :  format;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format  ==  null?  CSVFormat.DEFAULT  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format  ==  null?  CSVFormat.DEFAULT  :  format;	  this.format    =    format!=    null?    CSVFormat.DEFAULT    :    format;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
615	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.UNKNOWN  :  format.toExternalFormat();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.UNKNOWN  :  format.toExternalFormat();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.UNKNOWN  :  format.toExternalFormat();	  this.format    =    format!=    null?    CSVFormat.UNKNOWN    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	94	None	replace
616	[BUG]  [BUGGY]  this.format  =  format!=  null?  CSVFormat.UNKNOWN  :  format.toPath();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  CSVFormat.UNKNOWN  :  format.toPath();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  CSVFormat.UNKNOWN  :  format.toPath();	  this.format    =    format!=    null?    CSVFormat.UNKNOWN    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	94	None	replace
617	[BUG]  [BUGGY]  Appendable  newRecord  =  System.err.println( "Missing  CSV  for  format: "  +  format);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  Appendable  newRecord  =  System.err.println( "Missing  CSV  for  format: "  +  format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	Appendable  newRecord  =  System.err.println( "Missing  CSV  for  format: "  +  format);	  if(newRecord)    {    System.err.println(   "Missing    CSV    for    format:   "    +    format);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
618	[BUG]  [BUGGY]  attern( "Missing  CSV  for  format: "  +  format);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  attern( "Missing  CSV  for  format: "  +  format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	attern( "Missing  CSV  for  format: "  +  format);	  if(newRecord)    {    System.err.println(   "Missing    CSV    for    format:   "    +    format);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
619	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  Format.newInstance(out,  newRecord);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  Format.newInstance(out,  newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.NONE  :  Format.newInstance(out,  newRecord);	  this.format    =    format    ==    null?    CSVFormat.NONE    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
620	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format.toPath();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format.toPath();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.UNKNOWN  :  format.toPath();	  this.format    =    format    ==    null?    Format.UNKNOWN    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
621	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format.trim();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  format.trim();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.NONE  :  format.trim();	  this.format    =    format    ==    null?    CSVFormat.NONE    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
622	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.toExternalFormat()  +  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.toExternalFormat()  +  1;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  format.toExternalFormat()  +  1;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    format    +    1;    	non-compiled	[CE]  <identifier>  expected	111	None	replace
623	[BUG]  [BUGGY]  this.format  =  Format.DEFAULT_TYPE!=  null?  CSVFormat.DEFAULT_TYPE  :  format;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.DEFAULT_TYPE!=  null?  CSVFormat.DEFAULT_TYPE  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.DEFAULT_TYPE!=  null?  CSVFormat.DEFAULT_TYPE  :  format;	  this.format    =    format!=    null?    CSVFormat.DEFAULT_TYPE    :    format;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
624	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  Format.DEFAULT_TYPE;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  Format.DEFAULT_TYPE;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  Format.DEFAULT_TYPE;	  this.format    =    format!=    null?    CSVFormat.DEFAULT_TYPE    :    format;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
625	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.NONE  :  format,  newRecord);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.NONE  :  format,  newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.NONE  :  format,  newRecord);	  this.format    =    format    ==    null?    Format.NONE    :    format;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
626	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.NONE  :  format);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.NONE  :  format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.NONE  :  format);	  this.format    =    format    ==    null?    Format.NONE    :    format;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
627	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  FormatUtils.DEFAULT;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.NONE  :  FormatUtils.DEFAULT;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.NONE  :  FormatUtils.DEFAULT;	  this.format    =    format    ==    null?    CSVFormat.NONE    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
628	[BUG]  [BUGGY]  this.format  =  format!=  null?  newRecord()  :  FormatUtils.UNKNOWN;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  newRecord()  :  FormatUtils.UNKNOWN;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  newRecord()  :  FormatUtils.UNKNOWN;	  this.format    =    format!=    null?    newRecord()    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
629	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  Format.NONE;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  Format.NONE;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  Format.NONE;	  this.format    =    format    ==    null?    CSVFormat.NONE    :    Format.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	114	None	replace
630	[BUG]  [BUGGY]  this.format  =  format!=  null?  Format.UNKNOWN  :  format.substring(0,  format.length()  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  Format.UNKNOWN  :  format.substring(0,  format.length()  -  1);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  Format.UNKNOWN  :  format.substring(0,  format.length()  -  1);	  this.format    =    format!=    null?    Format.UNKNOWN    :    format    +    1;    	non-compiled	[CE]  <identifier>  expected	95	None	replace
631	[BUG]  [BUGGY]  this.format  =  format!=  null?  Format.UNKNOWN  :  format.toExternalFormat()  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  Format.UNKNOWN  :  format.toExternalFormat()  +  1;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  Format.UNKNOWN  :  format.toExternalFormat()  +  1;	  this.format    =    format!=    null?    Format.UNKNOWN    :    format    +    1;    	non-compiled	[CE]  <identifier>  expected	95	None	replace
632	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.UnKNOWN  :  format;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.UnKNOWN  :  format;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.UnKNOWN  :  format;	  this.format    =    format    >=    null?    Format.UNKNOWN    :    format;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
633	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.newInstance(System.identityHashCode(this))  :  Format.newInstance();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.newInstance(System.identityHashCode(this))  :  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.newInstance(System.identityHashCode(this))  :  Format.newInstance();	  this.format    =    format    ==    null?    Format.newInstance()    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
634	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.newInstance(System.identityHashCode(this):  Format.newInstance();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.newInstance(System.identityHashCode(this):  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.newInstance(System.identityHashCode(this):  Format.newInstance();	  this.format    =    format    ==    null?    Format.newInstance()    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
635	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format.toExternalFormat();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format.toExternalFormat();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.UNKNOWN  :  format.toExternalFormat();	  this.format    =    format    ==    null?    Format.UNKNOWN    :    format.getName();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
636	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format.getFullName();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.UNKNOWN  :  format.getFullName();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.UNKNOWN  :  format.getFullName();	  this.format    =    format    ==    null?    Format.UNKNOWN    :    format.getName();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
637	[BUG]  [BUGGY]  this.format  =  Format.createInstance(format);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.createInstance(format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.createInstance(format);	  this.format    =    Format.createInstance();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
638	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  Format.DEFAULT_NAME;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  Format.DEFAULT_NAME;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  Format.DEFAULT_NAME;	  this.format    =    format!=    null?    CSVFormat.DEFAULT_NAME    :    format;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
639	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.getReferenceName();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.getReferenceName();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.getReferenceName();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_NAME    :    format.getName();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
640	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.toExtern();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.toExtern();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_NAME  :  format.toExtern();	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_NAME    :    format.getName();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
641	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_FORMAT  :  format);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_FORMAT  :  format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_FORMAT  :  format);	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_FORMAT    :    format;    	non-compiled	[CE]  <identifier>  expected	108	None	replace
642	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_FORMAT  :  format,  newRecord);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_FORMAT  :  format,  newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_FORMAT  :  format,  newRecord);	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_FORMAT    :    format;    	non-compiled	[CE]  <identifier>  expected	108	None	replace
643	[BUG]  [BUGGY]  this.format  =  FormatUtilities.createFormat(format);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  FormatUtilities.createFormat(format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  FormatUtilities.createFormat(format);	  this.format    =    FormatUtilities.createFormat(newRecord);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
644	[BUG]  [BUGGY]  this.format  =  Format.newRecord(format);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  Format.newRecord(format);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  Format.newRecord(format);	  this.format    =    Format.newRecord();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
645	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.newRecord()  :  Format.newInstance();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.newRecord()  :  Format.newInstance();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.newRecord()  :  Format.newInstance();	  this.format    =    Format.newRecord();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
646	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.newRecord()  :  Collections.EMPTY_LIST;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.newRecord()  :  Collections.EMPTY_LIST;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.newRecord()  :  Collections.EMPTY_LIST;	  this.format    =    Format.newRecord();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
647	[BUG]  [BUGGY]  this.format  =  format  ==  null?  Format.newRecord()  :  Collections.EMPTY_STRING;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  Format.newRecord()  :  Collections.EMPTY_STRING;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  Format.newRecord()  :  Collections.EMPTY_STRING;	  this.format    =    Format.newRecord();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
648	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.toPlainString();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.toPlainString();  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.UNKNOWN  :  format.toPlainString();	  this.format    =    format    ==    null?    CSVFormat.UNKNOWN    :    format.toString();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
649	[BUG]  [BUGGY]  this.format  =  format  ==  null?  FormatUtils.DEFAULT  :  FormatUtils.DEFAULT;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  FormatUtils.DEFAULT  :  FormatUtils.DEFAULT;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  FormatUtils.DEFAULT  :  FormatUtils.DEFAULT;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
650	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  FormatUtils.UNKNOWN;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  FormatUtils.UNKNOWN;  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT  :  FormatUtils.UNKNOWN;	  this.format    =    format    ==    null?    CSVFormat.DEFAULT    :    FormatUtils.EMPTY;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
651	[BUG]  [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  Format.newInstance(out,  newRecord);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  Format.newInstance(out,  newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format  ==  null?  CSVFormat.DEFAULT_TYPE  :  Format.newInstance(out,  newRecord);	  this.format    =    format    ==    null?    CSVFormat.DEFAULT_TYPE    :    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
652	[BUG]  [BUGGY]  this.format  =  format!=  null?  Format.newInstance()  :  format,  newRecord);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");  this.out  =  out;      [BUGGY]  this.format  =  format!=  null?  Format.newInstance()  :  format,  newRecord);  [BUGGY]      this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	63	63	1	replace	this.format  =  format!=  null?  Format.newInstance()  :  format,  newRecord);	  this.format    =    format!=    null?    Format.newInstance()    :    format;    	non-compiled	[CE]  <identifier>  expected	106	None	replace
