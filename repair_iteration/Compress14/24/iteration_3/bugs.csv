bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(currentByte);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(currentByte);	  return    result!=    3?    JsonStringEncoder.getInstance().encodeAsByte(currentByte):    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	121	None	replace
2	[BUG]  [BUGGY]  return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);	  return    result!=    3?    JsonStringEncoder.getInstance().encodeAsByte(currentByte):    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	121	None	replace
3	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCII(currentByte));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCII(currentByte));  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCII(currentByte));	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCII(result));    	non-compiled	[CE]  <identifier>  expected	104	None	replace
4	[BUG]  [BUGGY]  return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCI  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCI  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCI	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCII(result));    	non-compiled	[CE]  <identifier>  expected	104	None	replace
5	[BUG]  [BUGGY]  return  result  <  <  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
6	[BUG]  [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCI  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCI  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCI	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
7	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
8	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsString(currentByte);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsString(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsString(currentByte);	  result    =    JsonStringEncoder.getInstance().quoteAsString(result);    	non-compiled	[CE]  <identifier>  expected	161	None	replace
9	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsByte(currentByte);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsByte(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsByte(currentByte);	  result    =    JsonStringEncoder.getInstance().quoteAsString(result);    	non-compiled	[CE]  <identifier>  expected	161	None	replace
10	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsLong(currentByte);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsLong(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsLong(currentByte);	  result    =    JsonStringEncoder.getInstance().quoteAsString(result);    	non-compiled	[CE]  <identifier>  expected	161	None	replace
11	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsCharacter(currentByte);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsCharacter(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsCharacter(currentByte);	  result    =    JsonStringEncoder.getInstance().quoteAsString(result);    	non-compiled	[CE]  <identifier>  expected	161	None	replace
12	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsShort(currentByte);  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsShort(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsShort(currentByte);	  result    =    JsonStringEncoder.getInstance().quoteAsString(result);    	non-compiled	[CE]  <identifier>  expected	161	None	replace
13	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsISOControl(currentByte);  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsISOControl(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsISOControl(currentByte);	  result    =    JsonStringEncoder.getInstance().quoteAsString(result);    	non-compiled	[CE]  <identifier>  expected	161	None	replace
14	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encode  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encode  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encode	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCI    	non-compiled	[CE]  <identifier>  expected	31	None	replace
15	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte);	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
16	[BUG]  [BUGGY]  return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result);	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
17	[BUG]  [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result);	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
18	[BUG]  [BUGGY]  return  result  %  2;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  %  2;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  %  2;	  return    result    <    <    2;    	non-compiled	[CE]  <identifier>  expected	178	None	replace
19	[BUG]  [BUGGY]  return  result  <  <  4;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  4;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  4;	  return    result    <    <    2;    	non-compiled	[CE]  <identifier>  expected	178	None	replace
20	[BUG]  [BUGGY]  result  =  result  -(currentByte  <  <  1)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(currentByte  <  <  1)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(currentByte  <  <  1)+(currentByte  -  '0');	  result    =    result    -(currentByte    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	2	None	replace
21	[BUG]  [BUGGY]  result  =  result  -(currentByte  <  <  3)+(currentByte  >  '0'?  currentByte  :  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(currentByte  <  <  3)+(currentByte  >  '0'?  currentByte  :  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(currentByte  <  <  3)+(currentByte  >  '0'?  currentByte  :  '0');	  result    =    result    -(currentByte    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	2	None	replace
22	[BUG]  [BUGGY]  result  =  result  -(currentByte  <  <  7)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(currentByte  <  <  7)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(currentByte  <  <  7)+(currentByte  -  '0');	  result    =    result    -(currentByte    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	2	None	replace
23	[BUG]  [BUGGY]  result  =  result  -(currentByte  <  <  2)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(currentByte  <  <  2)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(currentByte  <  <  2)+(currentByte  -  '0');	  result    =    result    -(currentByte    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	2	None	replace
24	[BUG]  [BUGGY]  result  =  result  -(currentByte  +  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(currentByte  +  3)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(currentByte  +  3)+(currentByte  -  '0');	  result    =    result    -(currentByte    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	2	None	replace
25	[BUG]  [BUGGY]  result  =  result  *(currentByte  <  <  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  *(currentByte  <  <  3)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  *(currentByte  <  <  3)+(currentByte  -  '0');	  result    =    result    -(currentByte    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	2	None	replace
26	[BUG]  [BUGGY]  return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance());  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance());  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance());	  return    result!=    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance());    	non-compiled	[CE]  <identifier>  expected	167	None	replace
27	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAs  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAs  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAs	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAs    	non-compiled	[CE]  <identifier>  expected	148	None	replace
28	[BUG]  [BUGGY]  return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAs  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAs  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAs	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAs    	non-compiled	[CE]  <identifier>  expected	148	None	replace
29	[BUG]  [BUGGY]  return  result  -(currentByte  +  1)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(currentByte  +  1)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(currentByte  +  1)+(currentByte  -  '0');	  return    result    -(currentByte    <    <    1)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	1	None	replace
30	[BUG]  [BUGGY]  return  result  -(currentByte  <  <  1)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(currentByte  <  <  1)+(length  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(currentByte  <  <  1)+(length  -  '0');	  return    result    -(currentByte    <    <    1)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	1	None	replace
31	[BUG]  [BUGGY]  return  result  -(currentByte  -  1)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(currentByte  -  1)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(currentByte  -  1)+(currentByte  -  '0');	  return    result    -(currentByte    <    <    1)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	1	None	replace
32	[BUG]  [BUGGY]  return  result  +(length  -  '0')/(length  -  '7',  currentByte);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')/(length  -  '7',  currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')/(length  -  '7',  currentByte);	  return    result    +(length    -    '0')+(length    -    '7',    currentByte);    	non-compiled	[CE]  <identifier>  expected	173	None	replace
33	[BUG]  [BUGGY]  return  result  +(length  -  '0')+(currentByte  -  '7',  length);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')+(currentByte  -  '7',  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')+(currentByte  -  '7',  length);	  return    result    +(length    -    '0')+(length    -    '7',    currentByte);    	non-compiled	[CE]  <identifier>  expected	173	None	replace
34	[BUG]  [BUGGY]  return  result  +(length  -  '0')/(currentByte  -  '7',  length);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')/(currentByte  -  '7',  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')/(currentByte  -  '7',  length);	  return    result    +(length    -    '0')+(length    -    '7',    currentByte);    	non-compiled	[CE]  <identifier>  expected	173	None	replace
35	[BUG]  [BUGGY]  return  result  +(result  -  '0')+(currentByte  -  '7',  length);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(result  -  '0')+(currentByte  -  '7',  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(result  -  '0')+(currentByte  -  '7',  length);	  return    result    +(length    -    '0')+(length    -    '7',    currentByte);    	non-compiled	[CE]  <identifier>  expected	173	None	replace
36	[BUG]  [BUGGY]  return  result  +(currentByte  -  '0')+(length  -  '7',  length);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(currentByte  -  '0')+(length  -  '7',  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(currentByte  -  '0')+(length  -  '7',  length);	  return    result    +(length    -    '0')+(length    -    '7',    currentByte);    	non-compiled	[CE]  <identifier>  expected	173	None	replace
37	[BUG]  [BUGGY]  return  result  +(length  -  '0')+(end  -  '7',  currentByte);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')+(end  -  '7',  currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')+(end  -  '7',  currentByte);	  return    result    +(length    -    '0')+(length    -    '7',    currentByte);    	non-compiled	[CE]  <identifier>  expected	173	None	replace
38	[BUG]  [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  3);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  3);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  3);	  return    result    ==    1?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	145	None	replace
39	[BUG]  [BUGGY]  return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");	  return    result    ==    1?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	145	None	replace
40	[BUG]  [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  2);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  2);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  2);	  return    result    ==    1?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	145	None	replace
41	[BUG]  [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  4);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  4);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  4);	  return    result    ==    1?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	145	None	replace
42	[BUG]  [BUGGY]  result  =  result  -(result  <  <  1)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(result  <  <  1)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(result  <  <  1)+(currentByte  -  '0');	  result    =    result    -(result    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	42	None	replace
43	[BUG]  [BUGGY]  result  =  result  -(currentByte  <  <  3)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(currentByte  <  <  3)+(length  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(currentByte  <  <  3)+(length  -  '0');	  result    =    result    -(result    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	42	None	replace
44	[BUG]  [BUGGY]  result  =  result  -(result  <  <  2)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(result  <  <  2)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(result  <  <  2)+(currentByte  -  '0');	  result    =    result    -(result    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	42	None	replace
45	[BUG]  [BUGGY]  result  =  result  /(result  <  <  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  /(result  <  <  3)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  /(result  <  <  3)+(currentByte  -  '0');	  result    =    result    -(result    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	42	None	replace
46	[BUG]  [BUGGY]  result  =  result  -(result  <  <  3)+(currentByte  +  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(result  <  <  3)+(currentByte  +  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(result  <  <  3)+(currentByte  +  '0');	  result    =    result    -(result    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	42	None	replace
47	[BUG]  [BUGGY]  return  result  -(currentByte  *  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(currentByte  *  3)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(currentByte  *  3)+(currentByte  -  '0');	  return    result    -(currentByte    +    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	5	None	replace
48	[BUG]  [BUGGY]  return  result  -(currentByte  +  1)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(currentByte  +  1)+(result  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(currentByte  +  1)+(result  -  '0');	  return    result    -(currentByte    +    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	5	None	replace
49	[BUG]  [BUGGY]  return  result  -(currentByte  +  2)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(currentByte  +  2)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(currentByte  +  2)+(currentByte  -  '0');	  return    result    -(currentByte    +    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	5	None	replace
50	[BUG]  [BUGGY]  return  result  /(currentByte  +  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /(currentByte  +  3)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /(currentByte  +  3)+(currentByte  -  '0');	  return    result    -(currentByte    +    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	5	None	replace
51	[BUG]  [BUGGY]  return  result  ==  0?  result  :  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  0?  result  :  BYTE_MASK  +  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  0?  result  :  BYTE_MASK  +  1;	  return    result    ==    0?    result    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	83	None	replace
52	[BUG]  [BUGGY]  return  result  ==  0?  result  :  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  0?  result  :  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  0?  result  :  1;	  return    result    ==    0?    result    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	83	None	replace
53	[BUG]  [BUGGY]  return  result  ==  0?  BYTE_MASK  :  result;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  0?  BYTE_MASK  :  result;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  0?  BYTE_MASK  :  result;	  return    result    ==    0?    result    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	83	None	replace
54	[BUG]  [BUGGY]  return  result  ==  0?  result  :  4;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  0?  result  :  4;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  0?  result  :  4;	  return    result    ==    0?    result    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	83	None	replace
55	[BUG]  [BUGGY]  return  result  ==  0?  result  :  BYTE_SIZE;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  0?  result  :  BYTE_SIZE;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  0?  result  :  BYTE_SIZE;	  return    result    ==    0?    result    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	83	None	replace
56	[BUG]  [BUGGY]  return  result  -  '0'  +(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -  '0'  +(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -  '0'  +(currentByte  -  '0');	  return    result    +    '0'    +(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	109	None	replace
57	[BUG]  [BUGGY]  return  result  +  '0'  +(result  -  '0');  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +  '0'  +(result  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +  '0'  +(result  -  '0');	  return    result    +    '0'    +(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	109	None	replace
58	[BUG]  [BUGGY]  return  result  /  '0'  +(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /  '0'  +(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /  '0'  +(currentByte  -  '0');	  return    result    +    '0'    +(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	109	None	replace
59	[BUG]  [BUGGY]  return  result  +  '0'  +(currentByte  <  <  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +  '0'  +(currentByte  <  <  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +  '0'  +(currentByte  <  <  '0');	  return    result    +    '0'    +(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	109	None	replace
60	[BUG]  [BUGGY]  return  result  +  '0'  +(currentByte  *  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +  '0'  +(currentByte  *  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +  '0'  +(currentByte  *  '0');	  return    result    +    '0'    +(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	109	None	replace
61	[BUG]  [BUGGY]  return  result  +(length  -  '0')/(end  -  '7');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')/(end  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')/(end  -  '7');	  return    result    +(length    -    '0')+(end    -    '7');    	non-compiled	[CE]  <identifier>  expected	91	None	replace
62	[BUG]  [BUGGY]  return  result  +(end  -  '0')+(length  -  '7');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(end  -  '0')+(length  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(end  -  '0')+(length  -  '7');	  return    result    +(length    -    '0')+(end    -    '7');    	non-compiled	[CE]  <identifier>  expected	91	None	replace
63	[BUG]  [BUGGY]  return  result  +(result  -  '0')+(end  -  '7');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(result  -  '0')+(end  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(result  -  '0')+(end  -  '7');	  return    result    +(length    -    '0')+(end    -    '7');    	non-compiled	[CE]  <identifier>  expected	91	None	replace
64	[BUG]  [BUGGY]  return  result  /(length  -  '0')+(end  -  '7');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /(length  -  '0')+(end  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /(length  -  '0')+(end  -  '7');	  return    result    +(length    -    '0')+(end    -    '7');    	non-compiled	[CE]  <identifier>  expected	91	None	replace
65	[BUG]  [BUGGY]  return  result  +(length  -  '0')+(buffer[start  -  '7']);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')+(buffer[start  -  '7']);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')+(buffer[start  -  '7']);	  return    result    +(length    -    '0')+(end    -    '7');    	non-compiled	[CE]  <identifier>  expected	91	None	replace
66	[BUG]  [BUGGY]  return  result  +(length  -  '0')+(end  -  '9');  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')+(end  -  '9');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')+(end  -  '9');	  return    result    +(length    -    '0')+(end    -    '7');    	non-compiled	[CE]  <identifier>  expected	91	None	replace
67	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  JsonStringEncoder.  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  JsonStringEncoder.  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  JsonStringEncoder.	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(buffer,    JsonStringEncoder.getIn    	non-compiled	[CE]  <identifier>  expected	107	None	replace
68	[BUG]  [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  JsonStringEncoder.  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  JsonStringEncoder.  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  JsonStringEncoder.	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(buffer,    JsonStringEncoder.getIn    	non-compiled	[CE]  <identifier>  expected	107	None	replace
69	[BUG]  [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  JsonStringEncoder.  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  JsonStringEncoder.  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  JsonStringEncoder.	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(buffer,    JsonStringEncoder.getIn    	non-compiled	[CE]  <identifier>  expected	107	None	replace
70	[BUG]  [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  JsonStringEncoder.  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  JsonStringEncoder.  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  JsonStringEncoder.	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(buffer,    JsonStringEncoder.getIn    	non-compiled	[CE]  <identifier>  expected	107	None	replace
71	[BUG]  [BUGGY]  return  result  >>  0?  result  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >>  0?  result  :  BYTE_MASK;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >>  0?  result  :  BYTE_MASK;	  return    result!=    0?    result    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
72	[BUG]  [BUGGY]  return  result!=  0?  result  :  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result!=  0?  result  :  BYTE_MASK  +  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result!=  0?  result  :  BYTE_MASK  +  1;	  return    result!=    0?    result    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
73	[BUG]  [BUGGY]  return  result  +(length  -  '0')/  2  +  1;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')/  2  +  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')/  2  +  1;	  return    result    +(length    -    '0')/    2;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
74	[BUG]  [BUGGY]  return  result  /(length  -  '0')/  2;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /(length  -  '0')/  2;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /(length  -  '0')/  2;	  return    result    +(length    -    '0')/    2;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
75	[BUG]  [BUGGY]  return  result  +(result  -  '0')/  2;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(result  -  '0')/  2;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(result  -  '0')/  2;	  return    result    +(length    -    '0')/    2;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
76	[BUG]  [BUGGY]  return  result  +(length  -  '0')/  2  +  3;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')/  2  +  3;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')/  2  +  3;	  return    result    +(length    -    '0')/    2;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
77	[BUG]  [BUGGY]  return  result  -(result  -  2)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  2)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  2)+(currentByte  -  '0');	  return    result    -(currentByte    <    <    2)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	4	None	replace
78	[BUG]  [BUGGY]  return  result  -(currentByte  <  <  2)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(currentByte  <  <  2)+(result  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(currentByte  <  <  2)+(result  -  '0');	  return    result    -(currentByte    <    <    2)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	4	None	replace
79	[BUG]  [BUGGY]  return  result  <  <  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCI  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCI  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCI	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCI    	non-compiled	[CE]  <identifier>  expected	33	None	replace
80	[BUG]  [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCI    	non-compiled	[CE]  <identifier>  expected	33	None	replace
81	[BUG]  [BUGGY]  return  result  <  <  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCI  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCI  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCI	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCI    	non-compiled	[CE]  <identifier>  expected	33	None	replace
82	[BUG]  [BUGGY]  return  result  -(result  -  '0')+(length  -  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  '0')+(length  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  '0')+(length  -  '0');	  return    result    -(currentByte    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	19	None	replace
83	[BUG]  [BUGGY]  return  result  -(result  -  3)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  3)+(length  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  3)+(length  -  '0');	  return    result    -(currentByte    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	19	None	replace
84	[BUG]  [BUGGY]  return  result  -(currentByte  -  '0')+(length  -  '0');  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(currentByte  -  '0')+(length  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(currentByte  -  '0')+(length  -  '0');	  return    result    -(currentByte    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	19	None	replace
85	[BUG]  [BUGGY]  return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance())  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance())  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance())	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance())    	non-compiled	[CE]  <identifier>  expected	177	None	replace
86	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(currentByte,    JsonStringEncoder.getInstance    	non-compiled	[CE]  <identifier>  expected	53	None	replace
87	[BUG]  [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(currentByte,    JsonStringEncoder.getInstance    	non-compiled	[CE]  <identifier>  expected	53	None	replace
88	[BUG]  [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(currentByte,    JsonStringEncoder.getInstance    	non-compiled	[CE]  <identifier>  expected	53	None	replace
89	[BUG]  [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(currentByte,    JsonStringEncoder.getInstance    	non-compiled	[CE]  <identifier>  expected	53	None	replace
90	[BUG]  [BUGGY]  return  result  +(result  -  '0')+  '0';  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(result  -  '0')+  '0';  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(result  -  '0')+  '0';	  return    result    +(length    -    '0')+    '0';    	non-compiled	[CE]  <identifier>  expected	111	None	replace
91	[BUG]  [BUGGY]  return  result  +(result  -  '0')/  '0';  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(result  -  '0')/  '0';  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(result  -  '0')/  '0';	  return    result    +(length    -    '0')+    '0';    	non-compiled	[CE]  <identifier>  expected	111	None	replace
92	[BUG]  [BUGGY]  return  result  +(length  -  '0')+  '9';  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')+  '9';  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')+  '9';	  return    result    +(length    -    '0')+    '0';    	non-compiled	[CE]  <identifier>  expected	111	None	replace
93	[BUG]  [BUGGY]  return  result  +(length  -  '0')+  '7';  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')+  '7';  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')+  '7';	  return    result    +(length    -    '0')+    '0';    	non-compiled	[CE]  <identifier>  expected	111	None	replace
94	[BUG]  [BUGGY]  return  result  /(length  -  '0')+  '0';  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /(length  -  '0')+  '0';  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /(length  -  '0')+  '0';	  return    result    +(length    -    '0')+    '0';    	non-compiled	[CE]  <identifier>  expected	111	None	replace
95	[BUG]  [BUGGY]  return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));	  return    result!=    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()));    	non-compiled	[CE]  <identifier>  expected	174	None	replace
96	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  currentByte);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  currentByte);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(currentByte,    result);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
97	[BUG]  [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  result);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  result);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(currentByte,    result);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
98	[BUG]  [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  result);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  result);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(currentByte,    result);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
99	[BUG]  [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  result);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  result);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(currentByte,    result);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
100	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  buffer[result]);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  buffer[result]);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  buffer[result]);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(currentByte,    result);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
101	[BUG]  [BUGGY]  return  result  /(length  -  '0')+(currentByte  -  '7');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /(length  -  '0')+(currentByte  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /(length  -  '0')+(currentByte  -  '7');	  return    result    /(length    -    '0')+(length    -    '7');    	non-compiled	[CE]  <identifier>  expected	172	None	replace
102	[BUG]  [BUGGY]  return  result  /(length  -  '0')+(result  -  '7');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /(length  -  '0')+(result  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /(length  -  '0')+(result  -  '7');	  return    result    /(length    -    '0')+(length    -    '7');    	non-compiled	[CE]  <identifier>  expected	172	None	replace
103	[BUG]  [BUGGY]  return  result  *(length  -  '0')+(length  -  '7');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  *(length  -  '0')+(length  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  *(length  -  '0')+(length  -  '7');	  return    result    /(length    -    '0')+(length    -    '7');    	non-compiled	[CE]  <identifier>  expected	172	None	replace
104	[BUG]  [BUGGY]  return  result  /(length  -  '0')+(length  -  '7',  currentByte);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /(length  -  '0')+(length  -  '7',  currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /(length  -  '0')+(length  -  '7',  currentByte);	  return    result    /(length    -    '0')+(length    -    '7');    	non-compiled	[CE]  <identifier>  expected	172	None	replace
105	[BUG]  [BUGGY]  return  result  /(length  -  '0')+(length  -  '7'  +  1);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /(length  -  '0')+(length  -  '7'  +  1);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /(length  -  '0')+(length  -  '7'  +  1);	  return    result    /(length    -    '0')+(length    -    '7');    	non-compiled	[CE]  <identifier>  expected	172	None	replace
106	[BUG]  [BUGGY]  return  result  -(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(currentByte  -  '0');	  return    result    -(result    -    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	44	None	replace
107	[BUG]  [BUGGY]  result  =  result  -(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(currentByte  -  '0');	  return    result    -(result    -    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	44	None	replace
108	[BUG]  [BUGGY]  result  =  result  -(result  -  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(result  -  3)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(result  -  3)+(currentByte  -  '0');	  return    result    -(result    -    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	44	None	replace
109	[BUG]  [BUGGY]  return  result  -(length  -  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(length  -  3)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(length  -  3)+(currentByte  -  '0');	  return    result    -(result    -    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	44	None	replace
110	[BUG]  [BUGGY]  result  =(result  -  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  -  3)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  -  3)+(currentByte  -  '0');	  return    result    -(result    -    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	44	None	replace
111	[BUG]  [BUGGY]  return  result  -(currentByte  -  '0')+(result  -  '7');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(currentByte  -  '0')+(result  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(currentByte  -  '0')+(result  -  '7');	  return    result    -(result    -    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	44	None	replace
112	[BUG]  [BUGGY]  return  result  <  0?  result  :  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  0?  result  :  BYTE_MASK  +  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  0?  result  :  BYTE_MASK  +  1;	  return    result    <    0?    result    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
113	[BUG]  [BUGGY]  return  result  <  =  0?  result  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  =  0?  result  :  BYTE_MASK;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  =  0?  result  :  BYTE_MASK;	  return    result    <    0?    result    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
114	[BUG]  [BUGGY]  return  result  +(length  -  '0')/(currentByte  -  '7');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')/(currentByte  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')/(currentByte  -  '7');	  return    result    +(length    -    '0')+(currentByte    -    '7');    	non-compiled	[CE]  <identifier>  expected	89	None	replace
115	[BUG]  [BUGGY]  return  result  +(result  -  '0')+(currentByte  -  '7');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(result  -  '0')+(currentByte  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(result  -  '0')+(currentByte  -  '7');	  return    result    +(length    -    '0')+(currentByte    -    '7');    	non-compiled	[CE]  <identifier>  expected	89	None	replace
116	[BUG]  [BUGGY]  return  result  +(currentByte  -  '0')+(length  -  '7');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(currentByte  -  '0')+(length  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(currentByte  -  '0')+(length  -  '7');	  return    result    +(length    -    '0')+(currentByte    -    '7');    	non-compiled	[CE]  <identifier>  expected	89	None	replace
117	[BUG]  [BUGGY]  result  =  result  +(length  -  '0')+(currentByte  -  '7');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  +(length  -  '0')+(currentByte  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  +(length  -  '0')+(currentByte  -  '7');	  return    result    +(length    -    '0')+(currentByte    -    '7');    	non-compiled	[CE]  <identifier>  expected	89	None	replace
118	[BUG]  [BUGGY]  return  result  +(result  -  '0')/(currentByte  -  '7');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(result  -  '0')/(currentByte  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(result  -  '0')/(currentByte  -  '7');	  return    result    +(length    -    '0')+(currentByte    -    '7');    	non-compiled	[CE]  <identifier>  expected	89	None	replace
119	[BUG]  [BUGGY]  return  result  +(length  -  '0')+(currentByte  <  <  '7');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')+(currentByte  <  <  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')+(currentByte  <  <  '7');	  return    result    +(length    -    '0')+(currentByte    -    '7');    	non-compiled	[CE]  <identifier>  expected	89	None	replace
120	[BUG]  [BUGGY]  result  =  result  -(result  <  <  3)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(result  <  <  3)+(length  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(result  <  <  3)+(length  -  '0');	  return    result    -(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	135	None	replace
121	[BUG]  [BUGGY]  return  result  -(result  <  <  1)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  <  <  1)+(length  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  <  <  1)+(length  -  '0');	  return    result    -(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	135	None	replace
122	[BUG]  [BUGGY]  return  result  -(result  -  offset)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  offset)+(length  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  offset)+(length  -  '0');	  return    result    -(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	135	None	replace
123	[BUG]  [BUGGY]  return  result  -(result  <  <  1)+(long  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  <  <  1)+(long  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  <  <  1)+(long  -  '0');	  return    result    -(result    <    <    3)+(long    -    '0');    	non-compiled	[CE]  <identifier>  expected	136	None	replace
124	[BUG]  [BUGGY]  return  result  -(currentByte  <  <  3)+(long  -  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(currentByte  <  <  3)+(long  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(currentByte  <  <  3)+(long  -  '0');	  return    result    -(result    <    <    3)+(long    -    '0');    	non-compiled	[CE]  <identifier>  expected	136	None	replace
125	[BUG]  [BUGGY]  return  result  -(result  -  '0')+(long  -  '0');  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  '0')+(long  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  '0')+(long  -  '0');	  return    result    -(result    <    <    3)+(long    -    '0');    	non-compiled	[CE]  <identifier>  expected	136	None	replace
126	[BUG]  [BUGGY]  result  =  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(    	non-compiled	[CE]  <identifier>  expected	155	None	replace
127	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(    	non-compiled	[CE]  <identifier>  expected	155	None	replace
128	[BUG]  [BUGGY]  result  =  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCI  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCI  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCI	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(    	non-compiled	[CE]  <identifier>  expected	155	None	replace
129	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  2);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  2);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  2);	  return    result    >=    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	143	None	replace
130	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  1);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  1);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  1);	  return    result    >=    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	143	None	replace
131	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  4);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  4);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  4);	  return    result    >=    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	143	None	replace
132	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  0,  1);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  0,  1);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  0,  1);	  return    result    >=    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	143	None	replace
133	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCII(currentByte));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
134	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCII(currentByte));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
135	[BUG]  [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCII(currentByte));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCII(currentByte));  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCII(currentByte));	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCII(currentByte));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
136	[BUG]  [BUGGY]  return  result  -  4;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -  4;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -  4;	  return    result    -    3;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
137	[BUG]  [BUGGY]  return  result  -  6;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -  6;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -  6;	  return    result    -    3;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
138	[BUG]  [BUGGY]  result  =  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");	  result    =    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	55	None	replace
139	[BUG]  [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,   "UTF-8 ");  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,   "UTF-8 ");  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,   "UTF-8 ");	  result    =    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	55	None	replace
140	[BUG]  [BUGGY]  result  =  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");	  result    =    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	55	None	replace
141	[BUG]  [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  1);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  1);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  1);	  result    =    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	55	None	replace
142	[BUG]  [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  2);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  2);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  2);	  result    =    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	55	None	replace
143	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getIn  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getIn  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getIn	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(currentByte,    JsonStringEncoder.getIn    	non-compiled	[CE]  <identifier>  expected	9	None	replace
144	[BUG]  [BUGGY]  return  result  <  <  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(currentByte,    JsonStringEncoder.getIn    	non-compiled	[CE]  <identifier>  expected	9	None	replace
145	[BUG]  [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn	  return    result    <    <    4?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCI    	non-compiled	[CE]  <identifier>  expected	35	None	replace
146	[BUG]  [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn	  return    result    ==    1?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance());    	non-compiled	[CE]  <identifier>  expected	168	None	replace
147	[BUG]  [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance	  return    result    ==    1?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance());    	non-compiled	[CE]  <identifier>  expected	168	None	replace
148	[BUG]  [BUGGY]  return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn	  return    result    ==    1?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance());    	non-compiled	[CE]  <identifier>  expected	168	None	replace
149	[BUG]  [BUGGY]  result  =  result  <  <  1;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  <  <  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  <  <  1;	  return    result    <    <    1;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
150	[BUG]  [BUGGY]  return  result  &  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  &  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  &  1;	  return    result    <    <    1;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
151	[BUG]  [BUGGY]  return  result  -(length  -  '0')/(length  -  '7');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(length  -  '0')/(length  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(length  -  '0')/(length  -  '7');	  return    result    -(length    -    '0')+(length    -    '7');    	non-compiled	[CE]  <identifier>  expected	94	None	replace
152	[BUG]  [BUGGY]  return  result  -(length  -  '0')+(currentByte  -  '7');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(length  -  '0')+(currentByte  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(length  -  '0')+(currentByte  -  '7');	  return    result    -(length    -    '0')+(length    -    '7');    	non-compiled	[CE]  <identifier>  expected	94	None	replace
153	[BUG]  [BUGGY]  return  result  -(result  -  '0')+(length  -  '7');  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  '0')+(length  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  '0')+(length  -  '7');	  return    result    -(length    -    '0')+(length    -    '7');    	non-compiled	[CE]  <identifier>  expected	94	None	replace
154	[BUG]  [BUGGY]  return  result  -(length  -  '0')+(result  -  '7');  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(length  -  '0')+(result  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(length  -  '0')+(result  -  '7');	  return    result    -(length    -    '0')+(length    -    '7');    	non-compiled	[CE]  <identifier>  expected	94	None	replace
155	[BUG]  [BUGGY]  return  result  -(length  -  '0')+(length  -  '7'  +  1);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(length  -  '0')+(length  -  '7'  +  1);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(length  -  '0')+(length  -  '7'  +  1);	  return    result    -(length    -    '0')+(length    -    '7');    	non-compiled	[CE]  <identifier>  expected	94	None	replace
156	[BUG]  [BUGGY]  return  result  -(length  -  '0')+(length  -  '7',  currentByte);  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(length  -  '0')+(length  -  '7',  currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(length  -  '0')+(length  -  '7',  currentByte);	  return    result    -(length    -    '0')+(length    -    '7');    	non-compiled	[CE]  <identifier>  expected	94	None	replace
157	[BUG]  [BUGGY]  result  =  result  /  '0';  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  /  '0';  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  /  '0';	  result    =    result    +    '0';    	non-compiled	[CE]  <identifier>  expected	27	None	replace
158	[BUG]  [BUGGY]  result  =  result  +(length  -  '0')/  '7';  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  +(length  -  '0')/  '7';  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  +(length  -  '0')/  '7';	  result    =    result    +    '0';    	non-compiled	[CE]  <identifier>  expected	27	None	replace
159	[BUG]  [BUGGY]  result  =  result  -  '0';  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -  '0';  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -  '0';	  result    =    result    +    '0';    	non-compiled	[CE]  <identifier>  expected	27	None	replace
160	[BUG]  [BUGGY]  result  =  result  +(length  -  '0')+  '7';  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  +(length  -  '0')+  '7';  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  +(length  -  '0')+  '7';	  result    =    result    +    '0';    	non-compiled	[CE]  <identifier>  expected	27	None	replace
161	[BUG]  [BUGGY]  return  result  -(result  *  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  *  3)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  *  3)+(currentByte  -  '0');	  return    result    -(result    +    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	152	None	replace
162	[BUG]  [BUGGY]  return  result  -(result  +  1)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  +  1)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  +  1)+(currentByte  -  '0');	  return    result    -(result    +    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	152	None	replace
163	[BUG]  [BUGGY]  result  =  result  -(result  +  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(result  +  3)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(result  +  3)+(currentByte  -  '0');	  return    result    -(result    +    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	152	None	replace
164	[BUG]  [BUGGY]  result  =  result  -(currentByte  +  3)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(currentByte  +  3)+(result  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(currentByte  +  3)+(result  -  '0');	  return    result    -(result    +    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	152	None	replace
165	[BUG]  [BUGGY]  result  =  result  -(currentByte  <  <  7)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(currentByte  <  <  7)+(result  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(currentByte  <  <  7)+(result  -  '0');	  result    =    result    -(currentByte    <    <    3)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	16	None	replace
166	[BUG]  [BUGGY]  result  =  result  -(currentByte  <  <  1)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(currentByte  <  <  1)+(result  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(currentByte  <  <  1)+(result  -  '0');	  result    =    result    -(currentByte    <    <    3)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	16	None	replace
167	[BUG]  [BUGGY]  return  result  /  1L;  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /  1L;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /  1L;	  return    result    +    1L;    	non-compiled	[CE]  <identifier>  expected	113	None	replace
168	[BUG]  [BUGGY]  return  result  +  length;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +  length;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +  length;	  return    result    +    1L;    	non-compiled	[CE]  <identifier>  expected	113	None	replace
169	[BUG]  [BUGGY]  return  result  +  7;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +  7;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +  7;	  return    result    +    1L;    	non-compiled	[CE]  <identifier>  expected	113	None	replace
170	[BUG]  [BUGGY]  return  result  <  <  1?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  1?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  1?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsByte(currentByte):    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
171	[BUG]  [BUGGY]  return  result  >=  2?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  2?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  2?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsByte(currentByte):    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
172	[BUG]  [BUGGY]  return  result  -(currentByte  -  1)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(currentByte  -  1)+(result  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(currentByte  -  1)+(result  -  '0');	  return    result    -(currentByte    <    <    1)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	17	None	replace
173	[BUG]  [BUGGY]  return  result  -(currentByte  +  1)/  2;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(currentByte  +  1)/  2;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(currentByte  +  1)/  2;	  return    result    -(currentByte    +    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	99	None	replace
174	[BUG]  [BUGGY]  return  result  -(currentByte  +  1)/  4;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(currentByte  +  1)/  4;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(currentByte  +  1)/  4;	  return    result    -(currentByte    +    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	99	None	replace
175	[BUG]  [BUGGY]  return  result  /(currentByte  +  1)/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /(currentByte  +  1)/  BYTE_MASK;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /(currentByte  +  1)/  BYTE_MASK;	  return    result    -(currentByte    +    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	99	None	replace
176	[BUG]  [BUGGY]  return  result  -(currentByte  +  1)/  3;  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(currentByte  +  1)/  3;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(currentByte  +  1)/  3;	  return    result    -(currentByte    +    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	99	None	replace
177	[BUG]  [BUGGY]  return  result  *(currentByte  +  1)/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  *(currentByte  +  1)/  BYTE_MASK;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  *(currentByte  +  1)/  BYTE_MASK;	  return    result    -(currentByte    +    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	99	None	replace
178	[BUG]  [BUGGY]  return  result  -(currentByte  +  1)/  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(currentByte  +  1)/  BYTE_MASK  +  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(currentByte  +  1)/  BYTE_MASK  +  1;	  return    result    -(currentByte    +    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	99	None	replace
179	[BUG]  [BUGGY]  return  result  *  4;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  *  4;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  *  4;	  return    result    *    1;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
180	[BUG]  [BUGGY]  return  result  -(length  *  BYTE_MASK  +  1)/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(length  *  BYTE_MASK  +  1)/  BYTE_MASK;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(length  *  BYTE_MASK  +  1)/  BYTE_MASK;	  return    result    -(result    *    BYTE_MASK    +    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
181	[BUG]  [BUGGY]  return  result  -(result  *  BYTE_MASK  +  1)/  2;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  *  BYTE_MASK  +  1)/  2;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  *  BYTE_MASK  +  1)/  2;	  return    result    -(result    *    BYTE_MASK    +    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
182	[BUG]  [BUGGY]  return  result  -(result  *  BYTE_MASK  +  1)/  4;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  *  BYTE_MASK  +  1)/  4;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  *  BYTE_MASK  +  1)/  4;	  return    result    -(result    *    BYTE_MASK    +    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
183	[BUG]  [BUGGY]  return  result  -(currentByte  *  BYTE_MASK  +  1)/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(currentByte  *  BYTE_MASK  +  1)/  BYTE_MASK;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(currentByte  *  BYTE_MASK  +  1)/  BYTE_MASK;	  return    result    -(result    *    BYTE_MASK    +    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
184	[BUG]  [BUGGY]  return  result  -(result  *  2  +  1)/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  *  2  +  1)/  BYTE_MASK;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  *  2  +  1)/  BYTE_MASK;	  return    result    -(result    *    BYTE_MASK    +    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
185	[BUG]  [BUGGY]  return  result  -(result  *  BYTE_MASK  +  1)/  1;  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  *  BYTE_MASK  +  1)/  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  *  BYTE_MASK  +  1)/  1;	  return    result    -(result    *    BYTE_MASK    +    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
186	[BUG]  [BUGGY]  return  result  -(result  *  BYTE_MASK  +  1)/  3;  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  *  BYTE_MASK  +  1)/  3;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  *  BYTE_MASK  +  1)/  3;	  return    result    -(result    *    BYTE_MASK    +    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
187	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  result,  length);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  result,  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  result,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	139	None	replace
188	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	139	None	replace
189	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	139	None	replace
190	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	139	None	replace
191	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length,  currentByte);  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length,  currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length,  currentByte);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	139	None	replace
192	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length,  result);  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length,  result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length,  result);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	139	None	replace
193	[BUG]  [BUGGY]  return  result  -(result  +  1)/  2  +  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  +  1)/  2  +  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  +  1)/  2  +  1;	  return    result    -(result    +    1)/    2;    	non-compiled	[CE]  <identifier>  expected	95	None	replace
194	[BUG]  [BUGGY]  result  =  result  -(result  +  1)/  2;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(result  +  1)/  2;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(result  +  1)/  2;	  return    result    -(result    +    1)/    2;    	non-compiled	[CE]  <identifier>  expected	95	None	replace
195	[BUG]  [BUGGY]  return  result  -(result  *  2)/  2;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  *  2)/  2;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  *  2)/  2;	  return    result    -(result    +    1)/    2;    	non-compiled	[CE]  <identifier>  expected	95	None	replace
196	[BUG]  [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(currentByte);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(currentByte);	  result    =    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsByte(currentByte):    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
197	[BUG]  [BUGGY]  result  =  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);	  result    =    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsByte(currentByte):    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
198	[BUG]  [BUGGY]  result  =  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);	  result    =    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsByte(currentByte):    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
199	[BUG]  [BUGGY]  result  =  result  <  <  3)?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  <  <  3)?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  <  <  3)?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);	  result    =    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsByte(currentByte):    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
200	[BUG]  [BUGGY]  return  result  <  <  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result);	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
201	[BUG]  [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result);	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
202	[BUG]  [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte);	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
203	[BUG]  [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  currentByte);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  currentByte);	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
204	[BUG]  [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance()).encodeAsCI  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance()).encodeAsCI  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance()).encodeAsCI	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(currentByte,    JsonStringEncoder.getInstance()).encodeAsCI    	non-compiled	[CE]  <identifier>  expected	72	None	replace
205	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance()).encode  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance()).encode  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance()).encode	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(currentByte,    JsonStringEncoder.getInstance()).encodeAsCI    	non-compiled	[CE]  <identifier>  expected	72	None	replace
206	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance()).encodeAsCI  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance()).encodeAsCI  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance()).encodeAsCI	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(currentByte,    JsonStringEncoder.getInstance()).encodeAsCI    	non-compiled	[CE]  <identifier>  expected	72	None	replace
207	[BUG]  [BUGGY]  return  result  -  '0'  +(currentByte  -  '7');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -  '0'  +(currentByte  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -  '0'  +(currentByte  -  '7');	  return    result    +    '0'    +(currentByte    -    '7');    	non-compiled	[CE]  <identifier>  expected	28	None	replace
208	[BUG]  [BUGGY]  return  result  /  '0'  +(currentByte  -  '7');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /  '0'  +(currentByte  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /  '0'  +(currentByte  -  '7');	  return    result    +    '0'    +(currentByte    -    '7');    	non-compiled	[CE]  <identifier>  expected	28	None	replace
209	[BUG]  [BUGGY]  return  result  +(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(currentByte  -  '0');	  return    result    +    '0'    +(currentByte    -    '7');    	non-compiled	[CE]  <identifier>  expected	28	None	replace
210	[BUG]  [BUGGY]  return  result  +  '0'  +(currentByte  *  '7');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +  '0'  +(currentByte  *  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +  '0'  +(currentByte  *  '7');	  return    result    +    '0'    +(currentByte    -    '7');    	non-compiled	[CE]  <identifier>  expected	28	None	replace
211	[BUG]  [BUGGY]  return  result  +  '0'  +(currentByte  <  <  '7');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +  '0'  +(currentByte  <  <  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +  '0'  +(currentByte  <  <  '7');	  return    result    +    '0'    +(currentByte    -    '7');    	non-compiled	[CE]  <identifier>  expected	28	None	replace
212	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  currentByte);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  currentByte);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    currentByte);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
213	[BUG]  [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  currentByte);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  currentByte);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    currentByte);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
214	[BUG]  [BUGGY]  return  result  +(length  -  '0')/(currentByte  *  '7');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')/(currentByte  *  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')/(currentByte  *  '7');	  return    result    +(length    -    '0')+(currentByte    *    '7');    	non-compiled	[CE]  <identifier>  expected	93	None	replace
215	[BUG]  [BUGGY]  return  result  +(result  -  '0')+(currentByte  *  '7');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(result  -  '0')+(currentByte  *  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(result  -  '0')+(currentByte  *  '7');	  return    result    +(length    -    '0')+(currentByte    *    '7');    	non-compiled	[CE]  <identifier>  expected	93	None	replace
216	[BUG]  [BUGGY]  return  result  +(currentByte  -  '0')+(length  *  '7');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(currentByte  -  '0')+(length  *  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(currentByte  -  '0')+(length  *  '7');	  return    result    +(length    -    '0')+(currentByte    *    '7');    	non-compiled	[CE]  <identifier>  expected	93	None	replace
217	[BUG]  [BUGGY]  return  result  +(length  -  '0')+(currentByte  *  '9');  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')+(currentByte  *  '9');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')+(currentByte  *  '9');	  return    result    +(length    -    '0')+(currentByte    *    '7');    	non-compiled	[CE]  <identifier>  expected	93	None	replace
218	[BUG]  [BUGGY]  return  result  +(result  -  '0')+(currentByte  *  '9');  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(result  -  '0')+(currentByte  *  '9');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(result  -  '0')+(currentByte  *  '9');	  return    result    +(length    -    '0')+(currentByte    *    '7');    	non-compiled	[CE]  <identifier>  expected	93	None	replace
219	[BUG]  [BUGGY]  return  result  +(length  -  '0')+(currentByte  *  2);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')+(currentByte  *  2);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')+(currentByte  *  2);	  return    result    +(length    -    '0')+(currentByte    *    '7');    	non-compiled	[CE]  <identifier>  expected	93	None	replace
220	[BUG]  [BUGGY]  return  result  +(result  -  '0')/(currentByte  *  '7');  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(result  -  '0')/(currentByte  *  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(result  -  '0')/(currentByte  *  '7');	  return    result    +(length    -    '0')+(currentByte    *    '7');    	non-compiled	[CE]  <identifier>  expected	93	None	replace
221	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getInstance()).encodeAsCI  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getInstance()).encodeAsCI  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getInstance()).encodeAsCI	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(buffer,    result,    JsonStringEncoder.getInstance()).encodeAsCII(    	non-compiled	[CE]  <identifier>  expected	156	None	replace
222	[BUG]  [BUGGY]  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getInstance()).encodeAsCI  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getInstance()).encodeAsCI  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getInstance()).encodeAsCI	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(buffer,    result,    JsonStringEncoder.getInstance()).encodeAsCII(    	non-compiled	[CE]  <identifier>  expected	156	None	replace
223	[BUG]  [BUGGY]  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getIn  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getIn  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getIn	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(buffer,    result,    JsonStringEncoder.getInstance()).encodeAsCII(    	non-compiled	[CE]  <identifier>  expected	156	None	replace
224	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getIn  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getIn  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getIn	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(buffer,    result,    JsonStringEncoder.getInstance()).encodeAsCII(    	non-compiled	[CE]  <identifier>  expected	156	None	replace
225	[BUG]  [BUGGY]  return  result  -  '0'  +  1;  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -  '0'  +  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -  '0'  +  1;	  return    result    -    '0';    	non-compiled	[CE]  <identifier>  expected	25	None	replace
226	[BUG]  [BUGGY]  return  result  <  <  '0';  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  '0';  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  '0';	  return    result    -    '0';    	non-compiled	[CE]  <identifier>  expected	25	None	replace
227	[BUG]  [BUGGY]  return  result  -  '0'  +  length;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -  '0'  +  length;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -  '0'  +  length;	  return    result    -    '0';    	non-compiled	[CE]  <identifier>  expected	25	None	replace
228	[BUG]  [BUGGY]  return  result  -  '0'  +(result  -  '7');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -  '0'  +(result  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -  '0'  +(result  -  '7');	  return    result    -    '0';    	non-compiled	[CE]  <identifier>  expected	25	None	replace
229	[BUG]  [BUGGY]  result  =  result  -(result  +  1)/  4;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(result  +  1)/  4;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(result  +  1)/  4;	  return    result    -(result    +    1)/    4;    	non-compiled	[CE]  <identifier>  expected	97	None	replace
230	[BUG]  [BUGGY]  return  result  -(result  +  1)/  8;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  +  1)/  8;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  +  1)/  8;	  return    result    -(result    +    1)/    4;    	non-compiled	[CE]  <identifier>  expected	97	None	replace
231	[BUG]  [BUGGY]  return  result  -(result  *  4);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  *  4);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  *  4);	  return    result    -(result    +    1)/    4;    	non-compiled	[CE]  <identifier>  expected	97	None	replace
232	[BUG]  [BUGGY]  bucket  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  bucket  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	bucket  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(result    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	137	None	replace
233	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	aughtExceptionHandler.throwAsIOException( " ");	  if(result    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	137	None	replace
234	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  Thread.currentThread().interrupt();  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	Thread.currentThread().interrupt();	  if(result    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	137	None	replace
235	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(currentByte));  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(currentByte));  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	throw  new  IllegalArgumentException( " ".equals(currentByte));	  if(result    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	137	None	replace
236	[BUG]  [BUGGY]  aughtExceptionHandler.throwInternal();  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  aughtExceptionHandler.throwInternal();  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	aughtExceptionHandler.throwInternal();	  if(result    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	137	None	replace
237	[BUG]  [BUGGY]  aughtExceptionHandler.throwUnquotedException( " ");  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  aughtExceptionHandler.throwUnquotedException( " ");  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	aughtExceptionHandler.throwUnquotedException( " ");	  if(result    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	137	None	replace
238	[BUG]  [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(currentByte);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(currentByte);	  return    result    ==    1?    JsonStringEncoder.getInstance().encodeAsByte(currentByte):    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	153	None	replace
239	[BUG]  [BUGGY]  return  result  ==  1)?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  1)?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  1)?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);	  return    result    ==    1?    JsonStringEncoder.getInstance().encodeAsByte(currentByte):    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	153	None	replace
240	[BUG]  [BUGGY]  return  result  <  <  4)?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  4)?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  4)?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);	  return    result    <    <    4?    JsonStringEncoder.getInstance().encodeAsByte(currentByte):    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
241	[BUG]  [BUGGY]  return  result  /  '0'  +  1;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /  '0'  +  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /  '0'  +  1;	  return    result    +    '0'    +    1;    	non-compiled	[CE]  <identifier>  expected	112	None	replace
242	[BUG]  [BUGGY]  result  =  result  +  '0'  +  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  +  '0'  +  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  +  '0'  +  1;	  return    result    +    '0'    +    1;    	non-compiled	[CE]  <identifier>  expected	112	None	replace
243	[BUG]  [BUGGY]  result  +=  '0'  +  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  +=  '0'  +  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  +=  '0'  +  1;	  return    result    +    '0'    +    1;    	non-compiled	[CE]  <identifier>  expected	112	None	replace
244	[BUG]  [BUGGY]  return  result  +(length  -  '0')/  '1'  +  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')/  '1'  +  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')/  '1'  +  1;	  return    result    +    '0'    +    1;    	non-compiled	[CE]  <identifier>  expected	112	None	replace
245	[BUG]  [BUGGY]  return  result  +  '0'  *  1;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +  '0'  *  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +  '0'  *  1;	  return    result    +    '0'    +    1;    	non-compiled	[CE]  <identifier>  expected	112	None	replace
246	[BUG]  [BUGGY]  return  result  -(result  +  1)/  BYTE_MASK  +  2;  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  +  1)/  BYTE_MASK  +  2;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  +  1)/  BYTE_MASK  +  2;	  return    result    -(result    +    1)/    BYTE_MASK    +    1;    	non-compiled	[CE]  <identifier>  expected	101	None	replace
247	[BUG]  [BUGGY]  return  result  -(result  +  1)/  BYTE_MASK  +  3;  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  +  1)/  BYTE_MASK  +  3;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  +  1)/  BYTE_MASK  +  3;	  return    result    -(result    +    1)/    BYTE_MASK    +    1;    	non-compiled	[CE]  <identifier>  expected	101	None	replace
248	[BUG]  [BUGGY]  return  result  -(result  *  BYTE_MASK  +  1)/  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  *  BYTE_MASK  +  1)/  BYTE_MASK  +  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  *  BYTE_MASK  +  1)/  BYTE_MASK  +  1;	  return    result    -(result    +    1)/    BYTE_MASK    +    1;    	non-compiled	[CE]  <identifier>  expected	101	None	replace
249	[BUG]  [BUGGY]  return  result  -(length  +  1)/  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(length  +  1)/  BYTE_MASK  +  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(length  +  1)/  BYTE_MASK  +  1;	  return    result    -(result    +    1)/    BYTE_MASK    +    1;    	non-compiled	[CE]  <identifier>  expected	101	None	replace
250	[BUG]  [BUGGY]  result  =  result  -(result  +  1)/  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]                                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(result  +  1)/  BYTE_MASK  +  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(result  +  1)/  BYTE_MASK  +  1;	  return    result    -(result    +    1)/    BYTE_MASK    +    1;    	non-compiled	[CE]  <identifier>  expected	101	None	replace
251	[BUG]  [BUGGY]  return  result  >=  0?  result  :  1;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  0?  result  :  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  0?  result  :  1;	  return    result    >    0?    result    :    1;    	non-compiled	[CE]  <identifier>  expected	87	None	replace
252	[BUG]  [BUGGY]  return  result  <  0?  result  :  1;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  0?  result  :  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  0?  result  :  1;	  return    result    >    0?    result    :    1;    	non-compiled	[CE]  <identifier>  expected	87	None	replace
253	[BUG]  [BUGGY]  return  result!=  0?  result  :  1;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result!=  0?  result  :  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result!=  0?  result  :  1;	  return    result    >    0?    result    :    1;    	non-compiled	[CE]  <identifier>  expected	87	None	replace
254	[BUG]  [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(currentByte);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(currentByte);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsByte(currentByte):    JsonStringEncoder.getInstance().encodeAsByte(currentByte);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
255	[BUG]  [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(currentByte);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(currentByte);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsByte(currentByte):    JsonStringEncoder.getInstance().encodeAsByte(currentByte);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
256	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(currentByte,  currentByte);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(currentByte,  currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(currentByte,  currentByte);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsByte(currentByte):    JsonStringEncoder.getInstance().encodeAsByte(currentByte);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
257	[BUG]  [BUGGY]  return  result  <  <  3)?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(currentByte);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  3)?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  3)?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(currentByte);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsByte(currentByte):    JsonStringEncoder.getInstance().encodeAsByte(currentByte);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
258	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(currentByte);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsByte(currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	159	None	replace
259	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(currentByte,  result);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(currentByte,  result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsByte(currentByte,  result);	  result    =    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	159	None	replace
260	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(buffer,  result);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(buffer,  result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsByte(buffer,  result);	  result    =    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	159	None	replace
261	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(result,  currentByte);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(result,  currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsByte(result,  currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	159	None	replace
262	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsbyte(currentByte);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsbyte(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsbyte(currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	159	None	replace
263	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsISOControl(currentByte);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsISOControl(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsISOControl(currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	159	None	replace
264	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().decodeAsByte(currentByte);  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().decodeAsByte(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().decodeAsByte(currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	159	None	replace
265	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encode  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encode  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encode	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encode    	non-compiled	[CE]  <identifier>  expected	146	None	replace
266	[BUG]  [BUGGY]  return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encode  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encode  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encode	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encode    	non-compiled	[CE]  <identifier>  expected	146	None	replace
267	[BUG]  [BUGGY]  return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encode  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encode  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encode	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encode    	non-compiled	[CE]  <identifier>  expected	146	None	replace
268	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.	  return    result    >=    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getIn    	non-compiled	[CE]  <identifier>  expected	118	None	replace
269	[BUG]  [BUGGY]  return  result  +  '0'  +  length  -  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +  '0'  +  length  -  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +  '0'  +  length  -  1;	  return    result    +    '0'    +    length;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
270	[BUG]  [BUGGY]  return  result  +  '0'  +  length  +  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +  '0'  +  length  +  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +  '0'  +  length  +  1;	  return    result    +    '0'    +    length;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
271	[BUG]  [BUGGY]  return  result  +  '0'  +  buffer.length;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +  '0'  +  buffer.length;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +  '0'  +  buffer.length;	  return    result    +    '0'    +    length;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
272	[BUG]  [BUGGY]  return  result  /  '0'  +  length;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /  '0'  +  length;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /  '0'  +  length;	  return    result    +    '0'    +    length;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
273	[BUG]  [BUGGY]  return  result  +  '0'  +  offset;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +  '0'  +  offset;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +  '0'  +  offset;	  return    result    +    '0'    +    length;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
274	[BUG]  [BUGGY]  return  result  +  '0'  +  length  +  3;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +  '0'  +  length  +  3;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +  '0'  +  length  +  3;	  return    result    +    '0'    +    length;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
275	[BUG]  [BUGGY]  return  result  -  1L  +  1L;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -  1L  +  1L;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -  1L  +  1L;	  return    result    -    1L;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
276	[BUG]  [BUGGY]  return  result  -  1L  +  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -  1L  +  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -  1L  +  1;	  return    result    -    1L;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
277	[BUG]  [BUGGY]  return  result  -  1L  --result;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -  1L  --result;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -  1L  --result;	  return    result    -    1L;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
278	[BUG]  [BUGGY]  return  result  -  1L  +  2;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -  1L  +  2;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -  1L  +  2;	  return    result    -    1L;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
279	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance    	non-compiled	[CE]  <identifier>  expected	169	None	replace
280	[BUG]  [BUGGY]  return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance    	non-compiled	[CE]  <identifier>  expected	169	None	replace
281	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  length);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  length);	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	131	None	replace
282	[BUG]  [BUGGY]  return  result  -(offset  +  1)/  2;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(offset  +  1)/  2;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(offset  +  1)/  2;	  return    result    -(offset    +    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	129	None	replace
283	[BUG]  [BUGGY]  return  result  -(offset  +  1)/  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(offset  +  1)/  BYTE_MASK  +  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(offset  +  1)/  BYTE_MASK  +  1;	  return    result    -(offset    +    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	129	None	replace
284	[BUG]  [BUGGY]  return  result  -(offset  +  1)/  4;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(offset  +  1)/  4;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(offset  +  1)/  4;	  return    result    -(offset    +    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	129	None	replace
285	[BUG]  [BUGGY]  return  result  -(start  +  1)/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(start  +  1)/  BYTE_MASK;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(start  +  1)/  BYTE_MASK;	  return    result    -(offset    +    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	129	None	replace
286	[BUG]  [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(currentByte);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(currentByte);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(currentByte);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
287	[BUG]  [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(currentByte);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(currentByte);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(currentByte);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
288	[BUG]  [BUGGY]  return  result  -(result  +  2)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  +  2)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  +  2)+(currentByte  -  '0');	  return    result    -(result    <    <    2)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	45	None	replace
289	[BUG]  [BUGGY]  return  result  -(result  /  2)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  /  2)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  /  2)+(currentByte  -  '0');	  return    result    -(result    <    <    2)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	45	None	replace
290	[BUG]  [BUGGY]  return  result  -(result  -  1)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  1)+(result  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  1)+(result  -  '0');	  return    result    -(result    <    <    1)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	164	None	replace
291	[BUG]  [BUGGY]  result  =  result  -(result  <  <  1)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(result  <  <  1)+(result  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(result  <  <  1)+(result  -  '0');	  return    result    -(result    <    <    1)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	164	None	replace
292	[BUG]  [BUGGY]  return  result  -(result  +  1)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  +  1)+(result  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  +  1)+(result  -  '0');	  return    result    -(result    <    <    1)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	164	None	replace
293	[BUG]  [BUGGY]  return  result  -(result  <  <  2)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  <  <  2)+(result  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  <  <  2)+(result  -  '0');	  return    result    -(result    <    <    1)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	164	None	replace
294	[BUG]  [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCI  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCI  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCI	  return    result    >=    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	126	None	replace
295	[BUG]  [BUGGY]  return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);	  return    result    >=    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	126	None	replace
296	[BUG]  [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAs  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAs  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAs	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAs    	non-compiled	[CE]  <identifier>  expected	102	None	replace
297	[BUG]  [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAs  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAs  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAs	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAs    	non-compiled	[CE]  <identifier>  expected	102	None	replace
298	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsCII(currentByte);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsCII(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsCII(currentByte);	  result    =    JsonStringEncoder.getInstance().quoteAsCII(result);    	non-compiled	[CE]  <identifier>  expected	163	None	replace
299	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsCII(currentByte,  result);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsCII(currentByte,  result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsCII(currentByte,  result);	  result    =    JsonStringEncoder.getInstance().quoteAsCII(result);    	non-compiled	[CE]  <identifier>  expected	163	None	replace
300	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().parseAsCII(currentByte);  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().parseAsCII(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().parseAsCII(currentByte);	  result    =    JsonStringEncoder.getInstance().quoteAsCII(result);    	non-compiled	[CE]  <identifier>  expected	163	None	replace
301	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAscii(currentByte);  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAscii(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().quoteAscii(currentByte);	  result    =    JsonStringEncoder.getInstance().quoteAsCII(result);    	non-compiled	[CE]  <identifier>  expected	163	None	replace
302	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsCII(result,  length);  [CE]  <identifier>  expected  [FE]                                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsCII(result,  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsCII(result,  length);	  result    =    JsonStringEncoder.getInstance().quoteAsCII(result);    	non-compiled	[CE]  <identifier>  expected	163	None	replace
303	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsISO(currentByte);  [CE]  <identifier>  expected  [FE]                                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsISO(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsISO(currentByte);	  result    =    JsonStringEncoder.getInstance().quoteAsCII(result);    	non-compiled	[CE]  <identifier>  expected	163	None	replace
304	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsCII(currentByte);  [CE]  <identifier>  expected  [FE]                                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsCII(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsCII(currentByte);	  result    =    JsonStringEncoder.getInstance().quoteAsCII(result);    	non-compiled	[CE]  <identifier>  expected	163	None	replace
305	[BUG]  [BUGGY]  return  result  /  4;  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /  4;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /  4;	  return    result    /    1;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
306	[BUG]  [BUGGY]  return  result  /  2.0;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /  2.0;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /  2.0;	  return    result    /    1;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
307	[BUG]  [BUGGY]  result  =  result  -(result  <  <  4)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(result  <  <  4)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(result  <  <  4)+(currentByte  -  '0');	  return    result    -(result    <    <    4)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	123	None	replace
308	[BUG]  [BUGGY]  return  result  -(currentByte  <  <  4)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(currentByte  <  <  4)+(result  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(currentByte  <  <  4)+(result  -  '0');	  return    result    -(result    <    <    4)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	123	None	replace
309	[BUG]  [BUGGY]  return  result  -(result  -  4)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  4)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  4)+(currentByte  -  '0');	  return    result    -(result    <    <    4)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	123	None	replace
310	[BUG]  [BUGGY]  return  result  -(currentByte  *  3)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(currentByte  *  3)+(result  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(currentByte  *  3)+(result  -  '0');	  return    result    -(currentByte    +    3)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	18	None	replace
311	[BUG]  [BUGGY]  return  result  -(currentByte  +  2)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(currentByte  +  2)+(result  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(currentByte  +  2)+(result  -  '0');	  return    result    -(currentByte    +    3)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	18	None	replace
312	[BUG]  [BUGGY]  result  -=(currentByte  +  3)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  -=(currentByte  +  3)+(result  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  -=(currentByte  +  3)+(result  -  '0');	  return    result    -(currentByte    +    3)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	18	None	replace
313	[BUG]  [BUGGY]  return  result  -(result  -  1)+(currentByte  *  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  1)+(currentByte  *  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  1)+(currentByte  *  '0');	  return    result    -(result    -    1)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	151	None	replace
314	[BUG]  [BUGGY]  return  result  -(result  -  1)+(currentByte  +  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  1)+(currentByte  +  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  1)+(currentByte  +  '0');	  return    result    -(result    -    1)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	151	None	replace
315	[BUG]  [BUGGY]  return  result  -(result  -  1)+(currentByte  <  <  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  1)+(currentByte  <  <  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  1)+(currentByte  <  <  '0');	  return    result    -(result    -    1)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	151	None	replace
316	[BUG]  [BUGGY]  result  =  result  -(result  -  1)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(result  -  1)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(result  -  1)+(currentByte  -  '0');	  return    result    -(result    -    1)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	151	None	replace
317	[BUG]  [BUGGY]  return  result  -(result  -  1)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  1)+(length  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  1)+(length  -  '0');	  return    result    -(result    -    1)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	151	None	replace
318	[BUG]  [BUGGY]  return  result  *  3  +(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  *  3  +(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  *  3  +(currentByte  -  '0');	  return    result    *    3;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
319	[BUG]  [BUGGY]  return  result  *  3  +(result  <  <  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  *  3  +(result  <  <  3)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  *  3  +(result  <  <  3)+(currentByte  -  '0');	  return    result    *    3;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
320	[BUG]  [BUGGY]  return  result  *  3  +(result  /  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  *  3  +(result  /  BYTE_MASK);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  *  3  +(result  /  BYTE_MASK);	  return    result    *    3;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
321	[BUG]  [BUGGY]  return  result  *  3  +(currentByte  <  <  3)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  *  3  +(currentByte  <  <  3)+(result  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  *  3  +(currentByte  <  <  3)+(result  -  '0');	  return    result    *    3;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
322	[BUG]  [BUGGY]  return  result  *  3  +(currentByte  %  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  *  3  +(currentByte  %  BYTE_MASK);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  *  3  +(currentByte  %  BYTE_MASK);	  return    result    *    3;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
323	[BUG]  [BUGGY]  result  =(result  -  1)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  -  1)+(length  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  -  1)+(length  -  '0');	  result    =(result    <    <    1)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	77	None	replace
324	[BUG]  [BUGGY]  result  =(result  <  <  1)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  <  <  1)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  <  <  1)+(currentByte  -  '0');	  result    =(result    <    <    1)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	77	None	replace
325	[BUG]  [BUGGY]  result  =(result  <  <  1)+(length  -  1);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  <  <  1)+(length  -  1);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  <  <  1)+(length  -  1);	  result    =(result    <    <    1)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	77	None	replace
326	[BUG]  [BUGGY]  result  =(result  <  <  1)+(length  -  '0'  +  1);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  <  <  1)+(length  -  '0'  +  1);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  <  <  1)+(length  -  '0'  +  1);	  result    =(result    <    <    1)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	77	None	replace
327	[BUG]  [BUGGY]  result  =(result  <  <  1)+(length  +  '0');  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  <  <  1)+(length  +  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  <  <  1)+(length  +  '0');	  result    =(result    <    <    1)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	77	None	replace
328	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  offset,  length);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  offset,  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  offset,  length);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    length);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
329	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  offset,  length);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  offset,  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  offset,  length);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    length);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
330	[BUG]  [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  length);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  length);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    length);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
331	[BUG]  [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  length);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  length);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    length);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
332	[BUG]  [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  length);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  length);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    length);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
333	[BUG]  [BUGGY]  return  result  -(currentByte  <  <  3)+(result  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(currentByte  <  <  3)+(result  -  '0')+  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(currentByte  <  <  3)+(result  -  '0')+  1;	  return    result    -(result    <    <    3)+(currentByte    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	122	None	replace
334	[BUG]  [BUGGY]  result  =  result  -(result  <  <  3)+(currentByte  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(result  <  <  3)+(currentByte  -  '0')+  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(result  <  <  3)+(currentByte  -  '0')+  1;	  return    result    -(result    <    <    3)+(currentByte    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	122	None	replace
335	[BUG]  [BUGGY]  return  result  -(result  <  <  1)+(currentByte  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  <  <  1)+(currentByte  -  '0')+  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  <  <  1)+(currentByte  -  '0')+  1;	  return    result    -(result    <    <    3)+(currentByte    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	122	None	replace
336	[BUG]  [BUGGY]  return  result  -(result  -  '0')+(currentByte  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  '0')+(currentByte  -  '0')+  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  '0')+(currentByte  -  '0')+  1;	  return    result    -(result    <    <    3)+(currentByte    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	122	None	replace
337	[BUG]  [BUGGY]  return  result  -(result  -  '0')+(currentByte  -  '0')/  1;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  '0')+(currentByte  -  '0')/  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  '0')+(currentByte  -  '0')/  1;	  return    result    -(result    <    <    3)+(currentByte    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	122	None	replace
338	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0')+  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  <  <  3)+(currentByte  -  '0')+  1;	  return    result    -(result    <    <    3)+(currentByte    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	122	None	replace
339	[BUG]  [BUGGY]  result  =  result  -(currentByte  <  <  3)+(currentByte  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(currentByte  <  <  3)+(currentByte  -  '0')+  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(currentByte  <  <  3)+(currentByte  -  '0')+  1;	  return    result    -(result    <    <    3)+(currentByte    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	122	None	replace
340	[BUG]  [BUGGY]  return  result  ==  0?  result  :  buffer.length;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  0?  result  :  buffer.length;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  0?  result  :  buffer.length;	  return    result    >    0?    result    :    buffer.length;    	non-compiled	[CE]  <identifier>  expected	166	None	replace
341	[BUG]  [BUGGY]  return  result  >=  0?  result  :  buffer.length;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  0?  result  :  buffer.length;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  0?  result  :  buffer.length;	  return    result    >    0?    result    :    buffer.length;    	non-compiled	[CE]  <identifier>  expected	166	None	replace
342	[BUG]  [BUGGY]  return  result!=  0?  result  :  buffer.length;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result!=  0?  result  :  buffer.length;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result!=  0?  result  :  buffer.length;	  return    result    >    0?    result    :    buffer.length;    	non-compiled	[CE]  <identifier>  expected	166	None	replace
343	[BUG]  [BUGGY]  return  result  <  0?  result  :  buffer.length;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  0?  result  :  buffer.length;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  0?  result  :  buffer.length;	  return    result    >    0?    result    :    buffer.length;    	non-compiled	[CE]  <identifier>  expected	166	None	replace
344	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  result,  length  -  1);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  result,  length  -  1);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  result,  length  -  1);	  System.arraycopy(buffer,    offset,    buffer,    0,    result,    length);    	non-compiled	[CE]  <identifier>  expected	140	None	replace
345	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  currentByte,  length);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  currentByte,  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  currentByte,  length);	  System.arraycopy(buffer,    offset,    buffer,    0,    result,    length);    	non-compiled	[CE]  <identifier>  expected	140	None	replace
346	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  result,  length  +  3);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  result,  length  +  3);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  result,  length  +  3);	  System.arraycopy(buffer,    offset,    buffer,    0,    result,    length);    	non-compiled	[CE]  <identifier>  expected	140	None	replace
347	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  result,  length  +  1);  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  result,  length  +  1);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  result,  length  +  1);	  System.arraycopy(buffer,    offset,    buffer,    0,    result,    length);    	non-compiled	[CE]  <identifier>  expected	140	None	replace
348	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  result,  length  -  start);  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  result,  length  -  start);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  result,  length  -  start);	  System.arraycopy(buffer,    offset,    buffer,    0,    result,    length);    	non-compiled	[CE]  <identifier>  expected	140	None	replace
349	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  result,  3);  [CE]  <identifier>  expected  [FE]                                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  result,  3);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  result,  3);	  System.arraycopy(buffer,    offset,    buffer,    0,    result,    length);    	non-compiled	[CE]  <identifier>  expected	140	None	replace
350	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  result,  0);  [CE]  <identifier>  expected  [FE]                                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  result,  0);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  result,  0);	  System.arraycopy(buffer,    offset,    buffer,    0,    result,    length);    	non-compiled	[CE]  <identifier>  expected	140	None	replace
351	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  +  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  <  <  3)+(currentByte  +  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  <  <  3)+(currentByte  +  '0');	  result    =(result    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
352	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  *  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  <  <  3)+(currentByte  *  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  <  <  3)+(currentByte  *  '0');	  result    =(result    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
353	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  >  '0'?  currentByte  :  '0');  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  <  <  3)+(currentByte  >  '0'?  currentByte  :  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  <  <  3)+(currentByte  >  '0'?  currentByte  :  '0');	  result    =(result    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
354	[BUG]  [BUGGY]  result  =(result  <  <  2)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  <  <  2)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  <  <  2)+(currentByte  -  '0');	  result    =(result    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
355	[BUG]  [BUGGY]  return  result  +(result  -  '0')/  1;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(result  -  '0')/  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(result  -  '0')/  1;	  return    result    +(result    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	141	None	replace
356	[BUG]  [BUGGY]  result  =  result  +(result  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  +(result  -  '0')+  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  +(result  -  '0')+  1;	  return    result    +(result    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	141	None	replace
357	[BUG]  [BUGGY]  return  result  +(currentByte  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(currentByte  -  '0')+  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(currentByte  -  '0')+  1;	  return    result    +(result    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	141	None	replace
358	[BUG]  [BUGGY]  result  +=(result  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  +=(result  -  '0')+  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  +=(result  -  '0')+  1;	  return    result    +(result    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	141	None	replace
359	[BUG]  [BUGGY]  return  result  /(result  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /(result  -  '0')+  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /(result  -  '0')+  1;	  return    result    +(result    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	141	None	replace
360	[BUG]  [BUGGY]  return  result  +(result  -  '0')+  3;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(result  -  '0')+  3;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(result  -  '0')+  3;	  return    result    +(result    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	141	None	replace
361	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(result));  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(result));  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	throw  new  IllegalArgumentException( " ".equals(result));	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	79	None	replace
362	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	Throwables.throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	79	None	replace
363	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(result)?  null  : " ");  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(result)?  null  : " ");  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	throw  new  IllegalArgumentException( " ".equals(result)?  null  : " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	79	None	replace
364	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(currentByte)?  null  : " ");  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(currentByte)?  null  : " ");  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	throw  new  IllegalArgumentException( " ".equals(currentByte)?  null  : " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	79	None	replace
365	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]                                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	throw  new  IllegalStateException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	79	None	replace
366	[BUG]  [BUGGY]  return  result  +(length  -  1)/  2;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  1)/  2;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  1)/  2;	  return    result    +(length    -    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	105	None	replace
367	[BUG]  [BUGGY]  return  result  +(result  -  1)/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(result  -  1)/  BYTE_MASK;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(result  -  1)/  BYTE_MASK;	  return    result    +(length    -    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	105	None	replace
368	[BUG]  [BUGGY]  return  result  +(length  -  1)/  4;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  1)/  4;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  1)/  4;	  return    result    +(length    -    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	105	None	replace
369	[BUG]  [BUGGY]  return  result  +(length  -  1)/  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  1)/  BYTE_MASK  +  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  1)/  BYTE_MASK  +  1;	  return    result    +(length    -    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	105	None	replace
370	[BUG]  [BUGGY]  return  result  +(length  -  1)/  3;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  1)/  3;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  1)/  3;	  return    result    +(length    -    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	105	None	replace
371	[BUG]  [BUGGY]  return  result  /(length  -  1)/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /(length  -  1)/  BYTE_MASK;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /(length  -  1)/  BYTE_MASK;	  return    result    +(length    -    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	105	None	replace
372	[BUG]  [BUGGY]  return  result  /  '0'  +(result  -  '7');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /  '0'  +(result  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /  '0'  +(result  -  '7');	  return    result    +    '0'    +(result    -    '7');    	non-compiled	[CE]  <identifier>  expected	30	None	replace
373	[BUG]  [BUGGY]  result  =  result  +  '0'  +(result  -  '7');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  +  '0'  +(result  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  +  '0'  +(result  -  '7');	  return    result    +    '0'    +(result    -    '7');    	non-compiled	[CE]  <identifier>  expected	30	None	replace
374	[BUG]  [BUGGY]  return  result  +  '0'  +(length  -  '7');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +  '0'  +(length  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +  '0'  +(length  -  '7');	  return    result    +    '0'    +(result    -    '7');    	non-compiled	[CE]  <identifier>  expected	30	None	replace
375	[BUG]  [BUGGY]  return  result  +(result  -  '0')+(length  -  '7');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(result  -  '0')+(length  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(result  -  '0')+(length  -  '7');	  return    result    +    '0'    +(result    -    '7');    	non-compiled	[CE]  <identifier>  expected	30	None	replace
376	[BUG]  [BUGGY]  return  result  +(length  -  '7');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '7');	  return    result    +    '0'    +(result    -    '7');    	non-compiled	[CE]  <identifier>  expected	30	None	replace
377	[BUG]  [BUGGY]  return  result  /(length  -  '0')/  3;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /(length  -  '0')/  3;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /(length  -  '0')/  3;	  return    result    +(length    -    '0')/    3;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
378	[BUG]  [BUGGY]  result  +(length  -  '0')/  2;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  +(length  -  '0')/  2;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  +(length  -  '0')/  2;	  return    result    +(length    -    '0')/    3;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
379	[BUG]  [BUGGY]  result  =  result  +(length  -  '0')/  3;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  +(length  -  '0')/  3;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  +(length  -  '0')/  3;	  return    result    +(length    -    '0')/    3;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
380	[BUG]  [BUGGY]  result  =  result  +  3;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  +  3;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  +  3;	  result    =    result    +    1;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
381	[BUG]  [BUGGY]  result  =  result  /  1;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  /  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  /  1;	  result    =    result    +    1;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
382	[BUG]  [BUGGY]  result  =  result  +  2;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  +  2;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  +  2;	  result    =    result    +    1;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
383	[BUG]  [BUGGY]  result  =  result  +  4;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  +  4;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  +  4;	  result    =    result    +    1;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
384	[BUG]  [BUGGY]  result  =  result  +  1L;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  +  1L;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  +  1L;	  result    =    result    +    1;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
385	[BUG]  [BUGGY]  return  result  +(length  -  '0')/  4  +  1;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')/  4  +  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')/  4  +  1;	  return    result    +(length    -    '0')/    BYTE_MASK    +    1;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
386	[BUG]  [BUGGY]  return  result  +(length  -  '0')/  BYTE_MASK  +  3;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')/  BYTE_MASK  +  3;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')/  BYTE_MASK  +  3;	  return    result    +(length    -    '0')/    BYTE_MASK    +    1;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
387	[BUG]  [BUGGY]  return  result  +(length  -  '0')/  BYTE_MASK  +  2;  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')/  BYTE_MASK  +  2;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')/  BYTE_MASK  +  2;	  return    result    +(length    -    '0')/    BYTE_MASK    +    1;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
388	[BUG]  [BUGGY]  return  result  +(result  -  '0')/  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(result  -  '0')/  BYTE_MASK  +  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(result  -  '0')/  BYTE_MASK  +  1;	  return    result    +(length    -    '0')/    BYTE_MASK    +    1;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
389	[BUG]  [BUGGY]  return  result  +(length  -  '0')/  BYTE_MASK  +  4;  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')/  BYTE_MASK  +  4;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')/  BYTE_MASK  +  4;	  return    result    +(length    -    '0')/    BYTE_MASK    +    1;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
390	[BUG]  [BUGGY]  result  +=(result  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  +=(result  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  +=(result  -  '0');	  result    +=(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	41	None	replace
391	[BUG]  [BUGGY]  result  +=(length  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  +=(length  -  '0')+  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  +=(length  -  '0')+  1;	  result    +=(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	41	None	replace
392	[BUG]  [BUGGY]  result  +=(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  +=(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  +=(currentByte  -  '0');	  result    +=(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	41	None	replace
393	[BUG]  [BUGGY]  result  -=(length  -  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  -=(length  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  -=(length  -  '0');	  result    +=(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	41	None	replace
394	[BUG]  [BUGGY]  result  +=(length  -  1);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  +=(length  -  1);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  +=(length  -  1);	  result    +=(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	41	None	replace
395	[BUG]  [BUGGY]  result  +=(length  -  '0')+  2;  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  +=(length  -  '0')+  2;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  +=(length  -  '0')+  2;	  result    +=(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	41	None	replace
396	[BUG]  [BUGGY]  return  result  -(currentByte  -  '0')+(result  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(currentByte  -  '0')+(result  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(currentByte  -  '0')+(result  -  '0');	  return    result    -(result    -    '0')+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	43	None	replace
397	[BUG]  [BUGGY]  result  =  result  -(currentByte  -  '0')+(result  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(currentByte  -  '0')+(result  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(currentByte  -  '0')+(result  -  '0');	  return    result    -(result    -    '0')+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	43	None	replace
398	[BUG]  [BUGGY]  return  result  -(result  -  '0')/(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  '0')/(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  '0')/(currentByte  -  '0');	  return    result    -(result    -    '0')+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	43	None	replace
399	[BUG]  [BUGGY]  return  result  -(result  -  '0')+(currentByte  +  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  '0')+(currentByte  +  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  '0')+(currentByte  +  '0');	  return    result    -(result    -    '0')+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	43	None	replace
400	[BUG]  [BUGGY]  return  result  -(result  -  '0')+(currentByte  *  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  '0')+(currentByte  *  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  '0')+(currentByte  *  '0');	  return    result    -(result    -    '0')+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	43	None	replace
401	[BUG]  [BUGGY]  result  =(result  -  '0')+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  -  '0')+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  -  '0')+(currentByte  -  '0');	  return    result    -(result    -    '0')+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	43	None	replace
402	[BUG]  [BUGGY]  return  result  <  <  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance());  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance());  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance());	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
403	[BUG]  [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
404	[BUG]  [BUGGY]  return  result  /(result  -  '0')/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /(result  -  '0')/  BYTE_MASK;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /(result  -  '0')/  BYTE_MASK;	  return    result    /(length    -    '0')/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
405	[BUG]  [BUGGY]  return  result  /(length  -  '0')/  4;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /(length  -  '0')/  4;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /(length  -  '0')/  4;	  return    result    /(length    -    '0')/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
406	[BUG]  [BUGGY]  return  result  *(length  -  '0')/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  *(length  -  '0')/  BYTE_MASK;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  *(length  -  '0')/  BYTE_MASK;	  return    result    /(length    -    '0')/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
407	[BUG]  [BUGGY]  return  result  /(length  -  '0')/  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /(length  -  '0')/  BYTE_MASK  +  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /(length  -  '0')/  BYTE_MASK  +  1;	  return    result    /(length    -    '0')/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
408	[BUG]  [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getIn  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getIn  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getIn	  result    =    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
409	[BUG]  [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.	  result    =    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
410	[BUG]  [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn	  result    =    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
411	[BUG]  [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCI  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCI  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCI	  result    =    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
412	[BUG]  [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCI  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCI  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCI	  return    result    ==    1?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCII(result));    	non-compiled	[CE]  <identifier>  expected	147	None	replace
413	[BUG]  [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encode  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encode  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encode	  return    result    ==    1?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCII(result));    	non-compiled	[CE]  <identifier>  expected	147	None	replace
414	[BUG]  [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAs  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAs  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAs	  return    result    ==    1?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCII(result));    	non-compiled	[CE]  <identifier>  expected	147	None	replace
415	[BUG]  [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCII(currentByte));  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCII(currentByte));  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCII(currentByte));	  return    result    ==    1?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCII(result));    	non-compiled	[CE]  <identifier>  expected	147	None	replace
416	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  result);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  result);	  result    =    JsonStringEncoder.getInstance().encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	162	None	replace
417	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result);	  result    =    JsonStringEncoder.getInstance().encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	162	None	replace
418	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsCII(result,  currentByte);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsCII(result,  currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsCII(result,  currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	162	None	replace
419	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAscii(currentByte);  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAscii(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().encodeAscii(currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	162	None	replace
420	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().decodeAsCII(currentByte);  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().decodeAsCII(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().decodeAsCII(currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	162	None	replace
421	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte);  [CE]  <identifier>  expected  [FE]                                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	162	None	replace
422	[BUG]  [BUGGY]  return  result  +(result  -  '0')/  4;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(result  -  '0')/  4;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(result  -  '0')/  4;	  return    result    +(length    -    '0')/    4;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
423	[BUG]  [BUGGY]  return  result  /  2  +  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /  2  +  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /  2  +  1;	  return    result    /    2;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
424	[BUG]  [BUGGY]  return  result  /  2  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /  2  *  BYTE_MASK;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /  2  *  BYTE_MASK;	  return    result    /    2;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
425	[BUG]  [BUGGY]  return  result  /  2  +  length;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /  2  +  length;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /  2  +  length;	  return    result    /    2;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
426	[BUG]  [BUGGY]  return  result  /  2  +  3;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /  2  +  3;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /  2  +  3;	  return    result    /    2;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
427	[BUG]  [BUGGY]  return  result  /  2  *(result  +  length);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /  2  *(result  +  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /  2  *(result  +  length);	  return    result    /    2;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
428	[BUG]  [BUGGY]  result  =  result  +(length  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  +(length  -  '0')+  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  +(length  -  '0')+  1;	  result    =    result    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	40	None	replace
429	[BUG]  [BUGGY]  result  =  result  +(result  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  +(result  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  +(result  -  '0');	  result    =    result    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	40	None	replace
430	[BUG]  [BUGGY]  result  =  result  +(length  -  1);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  +(length  -  1);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  +(length  -  1);	  result    =    result    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	40	None	replace
431	[BUG]  [BUGGY]  result  =  result  +(length  -  '0')+  3;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  +(length  -  '0')+  3;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  +(length  -  '0')+  3;	  result    =    result    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	40	None	replace
432	[BUG]  [BUGGY]  result  =  result  +(length  -  '0')+  2;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  +(length  -  '0')+  2;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  +(length  -  '0')+  2;	  result    =    result    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	40	None	replace
433	[BUG]  [BUGGY]  result  =  result  /(length  -  '0');  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  /(length  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  /(length  -  '0');	  result    =    result    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	40	None	replace
434	[BUG]  [BUGGY]  result  =  result  +(result  -  '0')/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  +(result  -  '0')/  BYTE_MASK;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  +(result  -  '0')/  BYTE_MASK;	  return    result    +(result    -    '0')/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
435	[BUG]  [BUGGY]  return  result  +(currentByte  -  '0')/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(currentByte  -  '0')/  BYTE_MASK;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(currentByte  -  '0')/  BYTE_MASK;	  return    result    +(result    -    '0')/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
436	[BUG]  [BUGGY]  return  result  +(end  -  '0')/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(end  -  '0')/  BYTE_MASK;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(end  -  '0')/  BYTE_MASK;	  return    result    +(result    -    '0')/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
437	[BUG]  [BUGGY]  return  result  -(result  <  <  1)+('0'  +  currentByte);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  <  <  1)+('0'  +  currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  <  <  1)+('0'  +  currentByte);	  return    result    -(result    <    <    3)+('0'    +    currentByte);    	non-compiled	[CE]  <identifier>  expected	134	None	replace
438	[BUG]  [BUGGY]  return  result  -(currentByte  <  <  3)+('0'  +  result);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(currentByte  <  <  3)+('0'  +  result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(currentByte  <  <  3)+('0'  +  result);	  return    result    -(result    <    <    3)+('0'    +    currentByte);    	non-compiled	[CE]  <identifier>  expected	134	None	replace
439	[BUG]  [BUGGY]  result  =  result  -(result  <  <  3)+('0'  +  currentByte);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(result  <  <  3)+('0'  +  currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(result  <  <  3)+('0'  +  currentByte);	  return    result    -(result    <    <    3)+('0'    +    currentByte);    	non-compiled	[CE]  <identifier>  expected	134	None	replace
440	[BUG]  [BUGGY]  return  result  -(result  <  <  2)+('0'  +  currentByte);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  <  <  2)+('0'  +  currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  <  <  2)+('0'  +  currentByte);	  return    result    -(result    <    <    3)+('0'    +    currentByte);    	non-compiled	[CE]  <identifier>  expected	134	None	replace
441	[BUG]  [BUGGY]  result  =  result  -(currentByte  <  <  3)+('0'  +  result);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(currentByte  <  <  3)+('0'  +  result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(currentByte  <  <  3)+('0'  +  result);	  return    result    -(result    <    <    3)+('0'    +    currentByte);    	non-compiled	[CE]  <identifier>  expected	134	None	replace
442	[BUG]  [BUGGY]  return  result  -(result  +  3)+('0'  +  currentByte);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  +  3)+('0'  +  currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  +  3)+('0'  +  currentByte);	  return    result    -(result    <    <    3)+('0'    +    currentByte);    	non-compiled	[CE]  <identifier>  expected	134	None	replace
443	[BUG]  [BUGGY]  return  result  -(start  <  <  3)+('0'  +  currentByte);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(start  <  <  3)+('0'  +  currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(start  <  <  3)+('0'  +  currentByte);	  return    result    -(result    <    <    3)+('0'    +    currentByte);    	non-compiled	[CE]  <identifier>  expected	134	None	replace
444	[BUG]  [BUGGY]  return  result  <  <  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");	  return    result    <    <    4?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	57	None	replace
445	[BUG]  [BUGGY]  return  result  <  <  4)?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  4)?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  4)?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");	  return    result    <    <    4?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	57	None	replace
446	[BUG]  [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  3);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  3);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  3);	  return    result    <    <    4?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	57	None	replace
447	[BUG]  [BUGGY]  return  result  +(length  -  '0')/(result  -  '7');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')/(result  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')/(result  -  '7');	  return    result    +(length    -    '0')+(result    -    '7');    	non-compiled	[CE]  <identifier>  expected	90	None	replace
448	[BUG]  [BUGGY]  result  =  result  +(length  -  '0')+(result  -  '7');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  +(length  -  '0')+(result  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  +(length  -  '0')+(result  -  '7');	  return    result    +(length    -    '0')+(result    -    '7');    	non-compiled	[CE]  <identifier>  expected	90	None	replace
449	[BUG]  [BUGGY]  return  result  +(result  -  '0')/(result  -  '7');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(result  -  '0')/(result  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(result  -  '0')/(result  -  '7');	  return    result    +(length    -    '0')+(result    -    '7');    	non-compiled	[CE]  <identifier>  expected	90	None	replace
450	[BUG]  [BUGGY]  return  result  +(long  -  '0')+(result  -  '7');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(long  -  '0')+(result  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(long  -  '0')+(result  -  '7');	  return    result    +(length    -    '0')+(result    -    '7');    	non-compiled	[CE]  <identifier>  expected	90	None	replace
451	[BUG]  [BUGGY]  return  result  /(result  -  '0');  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /(result  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /(result  -  '0');	  return    result    +(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	36	None	replace
452	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getIn    	non-compiled	[CE]  <identifier>  expected	7	None	replace
453	[BUG]  [BUGGY]  return  result  /  3  +(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /  3  +(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /  3  +(currentByte  -  '0');	  return    result    /    3;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
454	[BUG]  [BUGGY]  return  result  /  3  +  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /  3  +  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /  3  +  1;	  return    result    /    3;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
455	[BUG]  [BUGGY]  return  result  /  3  +(currentByte  *  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /  3  +(currentByte  *  BYTE_MASK);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /  3  +(currentByte  *  BYTE_MASK);	  return    result    /    3;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
456	[BUG]  [BUGGY]  return  result  /  3  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /  3  *  BYTE_MASK;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /  3  *  BYTE_MASK;	  return    result    /    3;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
457	[BUG]  [BUGGY]  return  result  /(length  -  '0')/  7;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /(length  -  '0')/  7;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /(length  -  '0')/  7;	  return    result    +(length    -    '0')/    7;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
458	[BUG]  [BUGGY]  result  =(result  <  <  1)+(BYTE_MASK  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  <  <  1)+(BYTE_MASK  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  <  <  1)+(BYTE_MASK  -  '0');	  result    =(result    <    <    3)+(BYTE_MASK    -    '0');    	non-compiled	[CE]  <identifier>  expected	75	None	replace
459	[BUG]  [BUGGY]  result  =(result  -  3)+(BYTE_MASK  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  -  3)+(BYTE_MASK  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  -  3)+(BYTE_MASK  -  '0');	  result    =(result    <    <    3)+(BYTE_MASK    -    '0');    	non-compiled	[CE]  <identifier>  expected	75	None	replace
460	[BUG]  [BUGGY]  result  =(result  <  <  2)+(BYTE_MASK  -  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  <  <  2)+(BYTE_MASK  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  <  <  2)+(BYTE_MASK  -  '0');	  result    =(result    <    <    3)+(BYTE_MASK    -    '0');    	non-compiled	[CE]  <identifier>  expected	75	None	replace
461	[BUG]  [BUGGY]  result  =(result  <  <  4)+(BYTE_MASK  -  '0');  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  <  <  4)+(BYTE_MASK  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  <  <  4)+(BYTE_MASK  -  '0');	  result    =(result    <    <    3)+(BYTE_MASK    -    '0');    	non-compiled	[CE]  <identifier>  expected	75	None	replace
462	[BUG]  [BUGGY]  result  {  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCI  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  {  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCI  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  {  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCI	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCII(    	non-compiled	[CE]  <identifier>  expected	149	None	replace
463	[BUG]  [BUGGY]  result  =  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCII(    	non-compiled	[CE]  <identifier>  expected	149	None	replace
464	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCII(  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCII(  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCII(	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCII(    	non-compiled	[CE]  <identifier>  expected	149	None	replace
465	[BUG]  [BUGGY]  result  {  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCII(  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  {  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCII(  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  {  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCII(	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCII(    	non-compiled	[CE]  <identifier>  expected	149	None	replace
466	[BUG]  [BUGGY]  result  {  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  {  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  {  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCII(    	non-compiled	[CE]  <identifier>  expected	149	None	replace
467	[BUG]  [BUGGY]  return  result  +(result  -  1)/  '0';  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(result  -  1)/  '0';  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(result  -  1)/  '0';	  return    result    +(length    -    1)/    '0';    	non-compiled	[CE]  <identifier>  expected	165	None	replace
468	[BUG]  [BUGGY]  return  result  +(length  -  1)/  3'0';  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  1)/  3'0';  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  1)/  3'0';	  return    result    +(length    -    1)/    '0';    	non-compiled	[CE]  <identifier>  expected	165	None	replace
469	[BUG]  [BUGGY]  return  result  /(length  -  1)/  '0';  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /(length  -  1)/  '0';  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /(length  -  1)/  '0';	  return    result    +(length    -    1)/    '0';    	non-compiled	[CE]  <identifier>  expected	165	None	replace
470	[BUG]  [BUGGY]  return  result  +(length  -  1)/  2.0;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  1)/  2.0;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  1)/  2.0;	  return    result    +(length    -    1)/    '0';    	non-compiled	[CE]  <identifier>  expected	165	None	replace
471	[BUG]  [BUGGY]  return  result  -(length  *  BYTE_MASK)/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(length  *  BYTE_MASK)/  BYTE_MASK;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(length  *  BYTE_MASK)/  BYTE_MASK;	  return    result    -(result    *    BYTE_MASK)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	130	None	replace
472	[BUG]  [BUGGY]  return  result  -(result  *  2)/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  *  2)/  BYTE_MASK;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  *  2)/  BYTE_MASK;	  return    result    -(result    *    BYTE_MASK)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	130	None	replace
473	[BUG]  [BUGGY]  return  result  -(result  *  BYTE_MASK)/  2;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  *  BYTE_MASK)/  2;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  *  BYTE_MASK)/  2;	  return    result    -(result    *    BYTE_MASK)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	130	None	replace
474	[BUG]  [BUGGY]  return  result  -(currentByte  *  BYTE_MASK)/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(currentByte  *  BYTE_MASK)/  BYTE_MASK;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(currentByte  *  BYTE_MASK)/  BYTE_MASK;	  return    result    -(result    *    BYTE_MASK)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	130	None	replace
475	[BUG]  [BUGGY]  return  result  -(result  *  1000)/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  *  1000)/  BYTE_MASK;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  *  1000)/  BYTE_MASK;	  return    result    -(result    *    BYTE_MASK)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	130	None	replace
476	[BUG]  [BUGGY]  return  result  -(result  *  BYTE_MASK)/  4;  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  *  BYTE_MASK)/  4;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  *  BYTE_MASK)/  4;	  return    result    -(result    *    BYTE_MASK)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	130	None	replace
477	[BUG]  [BUGGY]  return  result  -(result  *  length)/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  *  length)/  BYTE_MASK;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  *  length)/  BYTE_MASK;	  return    result    -(result    *    BYTE_MASK)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	130	None	replace
478	[BUG]  [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance()).encodeAsCII(result);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(currentByte,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
479	[BUG]  [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance()).encodeAsCII(result);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(currentByte,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
480	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(currentByte);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsString(currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsString(result);    	non-compiled	[CE]  <identifier>  expected	160	None	replace
481	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(buffer,  result);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(buffer,  result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsString(buffer,  result);	  result    =    JsonStringEncoder.getInstance().encodeAsString(result);    	non-compiled	[CE]  <identifier>  expected	160	None	replace
482	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsShort(currentByte);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsShort(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsShort(currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsString(result);    	non-compiled	[CE]  <identifier>  expected	160	None	replace
483	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(currentByte,  result);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(currentByte,  result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsString(currentByte,  result);	  result    =    JsonStringEncoder.getInstance().encodeAsString(result);    	non-compiled	[CE]  <identifier>  expected	160	None	replace
484	[BUG]  [BUGGY]  result  =  result  -(result  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(result  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(result  -  '0');	  return    result    -(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	115	None	replace
485	[BUG]  [BUGGY]  return  result  -(result  -  '0'  +  1);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  '0'  +  1);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  '0'  +  1);	  return    result    -(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	115	None	replace
486	[BUG]  [BUGGY]  return  result  -(result  -  '0'  +  length);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  '0'  +  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  '0'  +  length);	  return    result    -(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	115	None	replace
487	[BUG]  [BUGGY]  return  result  -(result  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  '0')+  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  '0')+  1;	  return    result    -(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	115	None	replace
488	[BUG]  [BUGGY]  return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  BYTE_MASK);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  BYTE_MASK);	  return    result    >=    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
489	[BUG]  [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  4);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  4);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  4);	  return    result    >=    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
490	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  0);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  0);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  0);	  return    result    >=    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
491	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  BYTE_MASK);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  BYTE_MASK);	  return    result    >=    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
492	[BUG]  [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCI  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCI  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCI	  return    result!=    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	154	None	replace
493	[BUG]  [BUGGY]  return  result  -(length  -  '0')/(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(length  -  '0')/(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(length  -  '0')/(currentByte  -  '0');	  return    result    -(length    -    '0')+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	150	None	replace
494	[BUG]  [BUGGY]  return  result  -(result  -  '0')+(currentByte  -  '9');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  '0')+(currentByte  -  '9');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  '0')+(currentByte  -  '9');	  return    result    -(length    -    '0')+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	150	None	replace
495	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1);  result  =  result;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1);  result  =  result;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1);  result  =  result;	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    result    =    result;    	non-compiled	[CE]  <identifier>  expected	138	None	replace
496	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length,  currentByte);  result  =  result;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length,  currentByte);  result  =  result;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length,  currentByte);  result  =  result;	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    result    =    result;    	non-compiled	[CE]  <identifier>  expected	138	None	replace
497	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1);  result  =  result;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1);  result  =  result;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1);  result  =  result;	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    result    =    result;    	non-compiled	[CE]  <identifier>  expected	138	None	replace
498	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  length);  result  =  result;  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  length);  result  =  result;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	System.arraycopy(buffer,  offset,  buffer,  end,  length);  result  =  result;	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    result    =    result;    	non-compiled	[CE]  <identifier>  expected	138	None	replace
499	[BUG]  [BUGGY]  return  result  +  5;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +  5;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +  5;	  return    result    +    4;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
500	[BUG]  [BUGGY]  result  =  result  +(length  -  '0')/(result  -  '7');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  +(length  -  '0')/(result  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  +(length  -  '0')/(result  -  '7');	  return    result    +(result    -    '0')/(length    -    '7');    	non-compiled	[CE]  <identifier>  expected	171	None	replace
501	[BUG]  [BUGGY]  result  =  result  +(result  -  '0')/(length  -  '7');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  +(result  -  '0')/(length  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  +(result  -  '0')/(length  -  '7');	  return    result    +(result    -    '0')/(length    -    '7');    	non-compiled	[CE]  <identifier>  expected	171	None	replace
502	[BUG]  [BUGGY]  return  result  /(length  -  '0')/(result  -  '7');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /(length  -  '0')/(result  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /(length  -  '0')/(result  -  '7');	  return    result    +(result    -    '0')/(length    -    '7');    	non-compiled	[CE]  <identifier>  expected	171	None	replace
503	[BUG]  [BUGGY]  return  result  /(result  -  '0')/(length  -  '7');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /(result  -  '0')/(length  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /(result  -  '0')/(length  -  '7');	  return    result    +(result    -    '0')/(length    -    '7');    	non-compiled	[CE]  <identifier>  expected	171	None	replace
504	[BUG]  [BUGGY]  return  result  +(long  -  '0')/(length  -  '7');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(long  -  '0')/(length  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(long  -  '0')/(length  -  '7');	  return    result    +(result    -    '0')/(length    -    '7');    	non-compiled	[CE]  <identifier>  expected	171	None	replace
505	[BUG]  [BUGGY]  return  result  +(result  -  '0')/(length  -  1);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(result  -  '0')/(length  -  1);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(result  -  '0')/(length  -  1);	  return    result    +(result    -    '0')/(length    -    '7');    	non-compiled	[CE]  <identifier>  expected	171	None	replace
506	[BUG]  [BUGGY]  return  result  >=  0?  result  :  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  0?  result  :  BYTE_MASK  +  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  0?  result  :  BYTE_MASK  +  1;	  return    result    >=    0?    result    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
507	[BUG]  [BUGGY]  return  result  *  2  +(result  <  <  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  *  2  +(result  <  <  3)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  *  2  +(result  <  <  3)+(currentByte  -  '0');	  return    result    *    2;    	non-compiled	[CE]  <identifier>  expected	142	None	replace
508	[BUG]  [BUGGY]  return  result  *  2  +(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  *  2  +(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  *  2  +(currentByte  -  '0');	  return    result    *    2;    	non-compiled	[CE]  <identifier>  expected	142	None	replace
509	[BUG]  [BUGGY]  return  result  *  2  +(currentByte  <  <  3)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  *  2  +(currentByte  <  <  3)+(result  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  *  2  +(currentByte  <  <  3)+(result  -  '0');	  return    result    *    2;    	non-compiled	[CE]  <identifier>  expected	142	None	replace
510	[BUG]  [BUGGY]  return  result  *  2  +(result  /  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  *  2  +(result  /  BYTE_MASK);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  *  2  +(result  /  BYTE_MASK);	  return    result    *    2;    	non-compiled	[CE]  <identifier>  expected	142	None	replace
511	[BUG]  [BUGGY]  return  result  *  2  +(currentByte  <  <  3)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  *  2  +(currentByte  <  <  3)+(length  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  *  2  +(currentByte  <  <  3)+(length  -  '0');	  return    result    *    2;    	non-compiled	[CE]  <identifier>  expected	142	None	replace
512	[BUG]  [BUGGY]  return  result  -  '0'  -  1;  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -  '0'  -  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -  '0'  -  1;	  return    result    +    '0'    -    1;    	non-compiled	[CE]  <identifier>  expected	158	None	replace
513	[BUG]  [BUGGY]  return  result  /  '0'  -  1;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /  '0'  -  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /  '0'  -  1;	  return    result    +    '0'    -    1;    	non-compiled	[CE]  <identifier>  expected	158	None	replace
514	[BUG]  [BUGGY]  result  =  result  +  '0'  -  1;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  +  '0'  -  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  +  '0'  -  1;	  return    result    +    '0'    -    1;    	non-compiled	[CE]  <identifier>  expected	158	None	replace
515	[BUG]  [BUGGY]  result  +=  '0'  -  1;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  +=  '0'  -  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  +=  '0'  -  1;	  return    result    +    '0'    -    1;    	non-compiled	[CE]  <identifier>  expected	158	None	replace
516	[BUG]  [BUGGY]  return  result  +(result  -  1)/  '0'  -  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(result  -  1)/  '0'  -  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(result  -  1)/  '0'  -  1;	  return    result    +    '0'    -    1;    	non-compiled	[CE]  <identifier>  expected	158	None	replace
517	[BUG]  [BUGGY]  result  =  result  <  <  3;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  <  <  3;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  <  <  3;	  return    result    <    <    3;    	non-compiled	[CE]  <identifier>  expected	108	None	replace
518	[BUG]  [BUGGY]  result  =  result  -  3;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -  3;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -  3;	  result    =    result    -    1;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
519	[BUG]  [BUGGY]  result  =  result  -  2;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -  2;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -  2;	  result    =    result    -    1;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
520	[BUG]  [BUGGY]  result  =  result  -  1L;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -  1L;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -  1L;	  result    =    result    -    1;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
521	[BUG]  [BUGGY]  result  =  result  -  4;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -  4;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -  4;	  result    =    result    -    1;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
522	[BUG]  [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte);	  return    result    >=    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
523	[BUG]  [BUGGY]  return  result  >=  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result);	  return    result    >=    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
524	[BUG]  [BUGGY]  result  =(result  -  3)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  -  3)+(length  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  -  3)+(length  -  '0');	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	76	None	replace
525	[BUG]  [BUGGY]  result  =(length  <  <  3)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(length  <  <  3)+(result  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(length  <  <  3)+(result  -  '0');	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	76	None	replace
526	[BUG]  [BUGGY]  result  =(result  <  <  4)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  <  <  4)+(length  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  <  <  4)+(length  -  '0');	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	76	None	replace
527	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  -  '0'  +  1);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  <  <  3)+(length  -  '0'  +  1);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  <  <  3)+(length  -  '0'  +  1);	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	76	None	replace
528	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCI  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCI  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCI	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCI    	non-compiled	[CE]  <identifier>  expected	103	None	replace
529	[BUG]  [BUGGY]  return  result  -(length  +  1)/  2;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(length  +  1)/  2;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(length  +  1)/  2;	  return    result    -(length    +    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	96	None	replace
530	[BUG]  [BUGGY]  return  result  /(length  +  1)/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /(length  +  1)/  BYTE_MASK;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /(length  +  1)/  BYTE_MASK;	  return    result    -(length    +    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	96	None	replace
531	[BUG]  [BUGGY]  return  result  -(result  +  1)/  BYTE_SIZE;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  +  1)/  BYTE_SIZE;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  +  1)/  BYTE_SIZE;	  return    result    -(length    +    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	96	None	replace
532	[BUG]  [BUGGY]  return  result  *(length  +  1)/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  *(length  +  1)/  BYTE_MASK;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  *(length  +  1)/  BYTE_MASK;	  return    result    -(length    +    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	96	None	replace
533	[BUG]  [BUGGY]  return  result  <  <  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()));    	non-compiled	[CE]  <identifier>  expected	54	None	replace
534	[BUG]  [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  3);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  3);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  3);	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	56	None	replace
535	[BUG]  [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  1);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  1);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  1);	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	56	None	replace
536	[BUG]  [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  4);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  4);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  4);	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	56	None	replace
537	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  2);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  2);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  2);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    1);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
538	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  0);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  0);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  0);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    1);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
539	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  4);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  4);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  4);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    1);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
540	[BUG]  [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCI  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCI  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCI	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCI    	non-compiled	[CE]  <identifier>  expected	68	None	replace
541	[BUG]  [BUGGY]  return  result  -(result  <  <  1)+(currentByte  +  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  <  <  1)+(currentByte  +  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  <  <  1)+(currentByte  +  '0');	  return    result    -(result    <    <    1)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	3	None	replace
542	[BUG]  [BUGGY]  return  result  -(result  <  <  1)+(currentByte  *  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  <  <  1)+(currentByte  *  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  <  <  1)+(currentByte  *  '0');	  return    result    -(result    <    <    1)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	3	None	replace
543	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(currentByte);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(currentByte);	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	124	None	replace
544	[BUG]  [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(currentByte);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
545	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  length);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  length);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(currentByte);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
546	[BUG]  [BUGGY]  return  result  -(length  -  offset)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(length  -  offset)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(length  -  offset)+(currentByte  -  '0');	  return    result    -(result    -    offset)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	114	None	replace
547	[BUG]  [BUGGY]  return  result  -(result  -  offset)/(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  offset)/(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  offset)/(currentByte  -  '0');	  return    result    -(result    -    offset)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	114	None	replace
548	[BUG]  [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance    	non-compiled	[CE]  <identifier>  expected	8	None	replace
549	[BUG]  [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(currentByte);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(currentByte);	  return    result    >=    3?    JsonStringEncoder.getInstance().encodeAsByte(currentByte):    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	120	None	replace
550	[BUG]  [BUGGY]  return  result  /  '0'  +  2;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /  '0'  +  2;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /  '0'  +  2;	  return    result    /    '0';    	non-compiled	[CE]  <identifier>  expected	26	None	replace
551	[BUG]  [BUGGY]  return  result  /  '0'  +  4;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /  '0'  +  4;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /  '0'  +  4;	  return    result    /    '0';    	non-compiled	[CE]  <identifier>  expected	26	None	replace
552	[BUG]  [BUGGY]  return  result  *  '0';  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  *  '0';  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  *  '0';	  return    result    /    '0';    	non-compiled	[CE]  <identifier>  expected	26	None	replace
553	[BUG]  [BUGGY]  return  result  /(length  -  1);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /(length  -  1);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /(length  -  1);	  return    result    /(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	38	None	replace
554	[BUG]  [BUGGY]  return  result  *(length  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  *(length  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  *(length  -  '0');	  return    result    /(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	38	None	replace
555	[BUG]  [BUGGY]  return  result  /(length  -  '0'  +  1);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /(length  -  '0'  +  1);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /(length  -  '0'  +  1);	  return    result    /(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	38	None	replace
556	[BUG]  [BUGGY]  return  result  /(length  -  '0',  currentByte);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /(length  -  '0',  currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /(length  -  '0',  currentByte);	  return    result    /(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	38	None	replace
557	[BUG]  [BUGGY]  return  result  /(result  -  '0'  +  length);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /(result  -  '0'  +  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /(result  -  '0'  +  length);	  return    result    /(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	38	None	replace
558	[BUG]  [BUGGY]  return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCI  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCI  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCI	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCI    	non-compiled	[CE]  <identifier>  expected	125	None	replace
559	[BUG]  [BUGGY]  return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCI  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCI  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCI	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCI    	non-compiled	[CE]  <identifier>  expected	125	None	replace
560	[BUG]  [BUGGY]  result  =  result  -(length  -  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(length  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(length  -  '0');	  return    result    -(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	37	None	replace
561	[BUG]  [BUGGY]  return  result  -(length  -  '0'  +  1);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(length  -  '0'  +  1);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(length  -  '0'  +  1);	  return    result    -(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	37	None	replace
562	[BUG]  [BUGGY]  return  result  -(result  /  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  /  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  /  '0');	  return    result    -(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	37	None	replace
563	[BUG]  [BUGGY]  return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");	  return    result!=    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	132	None	replace
564	[BUG]  [BUGGY]  result  =(result  <  <  1)+(Byte  -  '0');  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  <  <  1)+(Byte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  <  <  1)+(Byte  -  '0');	  result    =(result    <    <    3)+(Byte    -    '0');    	non-compiled	[CE]  <identifier>  expected	78	None	replace
565	[BUG]  [BUGGY]  result  =(result  -  3)+(Byte  -  '0');  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  -  3)+(Byte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  -  3)+(Byte  -  '0');	  result    =(result    <    <    3)+(Byte    -    '0');    	non-compiled	[CE]  <identifier>  expected	78	None	replace
566	[BUG]  [BUGGY]  result  =(result  <  <  2)+(Byte  -  '0');  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  <  <  2)+(Byte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  <  <  2)+(Byte  -  '0');	  result    =(result    <    <    3)+(Byte    -    '0');    	non-compiled	[CE]  <identifier>  expected	78	None	replace
567	[BUG]  [BUGGY]  result  =(result  <  <  7)+(Byte  -  '0');  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  <  <  7)+(Byte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  <  <  7)+(Byte  -  '0');	  result    =(result    <    <    3)+(Byte    -    '0');    	non-compiled	[CE]  <identifier>  expected	78	None	replace
568	[BUG]  [BUGGY]  return  result  /(length  -  '0')/(length  -  '7');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /(length  -  '0')/(length  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /(length  -  '0')/(length  -  '7');	  return    result    +(length    -    '0')/(length    -    '7');    	non-compiled	[CE]  <identifier>  expected	88	None	replace
569	[BUG]  [BUGGY]  return  result  +(length  -  '0')/(buffer[length  -  '7');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')/(buffer[length  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')/(buffer[length  -  '7');	  return    result    +(length    -    '0')/(length    -    '7');    	non-compiled	[CE]  <identifier>  expected	88	None	replace
570	[BUG]  [BUGGY]  return  result  +(length  -  '0')/(buffer.length  -  '7');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')/(buffer.length  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')/(buffer.length  -  '7');	  return    result    +(length    -    '0')/(length    -    '7');    	non-compiled	[CE]  <identifier>  expected	88	None	replace
571	[BUG]  [BUGGY]  return  result  /(length  -  '0')/  '0';  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /(length  -  '0')/  '0';  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /(length  -  '0')/  '0';	  return    result    +(length    -    '0')/    '0';    	non-compiled	[CE]  <identifier>  expected	110	None	replace
572	[BUG]  [BUGGY]  return  result  +(length  -  '0')/  2.0;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')/  2.0;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')/  2.0;	  return    result    +(length    -    '0')/    '0';    	non-compiled	[CE]  <identifier>  expected	110	None	replace
573	[BUG]  [BUGGY]  result  =  result  +(length  -  '0')/  '0';  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  +(length  -  '0')/  '0';  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  +(length  -  '0')/  '0';	  return    result    +(length    -    '0')/    '0';    	non-compiled	[CE]  <identifier>  expected	110	None	replace
574	[BUG]  [BUGGY]  return  result  +(length  -  '0')/  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')/  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')/  1;	  return    result    +(length    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
575	[BUG]  [BUGGY]  return  result  /(length  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /(length  -  '0')+  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /(length  -  '0')+  1;	  return    result    +(length    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
576	[BUG]  [BUGGY]  return  result  +(length  -  '0')+  3;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')+  3;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')+  3;	  return    result    +(length    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
577	[BUG]  [BUGGY]  result  +(length  -  '0')/  1;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  +(length  -  '0')/  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  +(length  -  '0')/  1;	  return    result    +(length    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
578	[BUG]  [BUGGY]  return  result  <  <  4):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  4):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  4):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);	  return    result    <    <    4?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
579	[BUG]  [BUGGY]  return  result  <  <  4)?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  4)?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  4)?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn	  return    result    <    <    4?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
580	[BUG]  [BUGGY]  return  result  +(length  -  '0')+(buffer[start  +  '7');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')+(buffer[start  +  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')+(buffer[start  +  '7');	  return    result    +(length    -    '0')+(buffer[length    -    '7');    	non-compiled	[CE]  <identifier>  expected	92	None	replace
581	[BUG]  [BUGGY]  return  result  +(length  -  '0')+(buffer[currentByte  -  '7');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')+(buffer[currentByte  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')+(buffer[currentByte  -  '7');	  return    result    +(length    -    '0')+(buffer[length    -    '7');    	non-compiled	[CE]  <identifier>  expected	92	None	replace
582	[BUG]  [BUGGY]  result  =  result  +(length  -  '0')+(buffer[length  -  '7');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  +(length  -  '0')+(buffer[length  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  +(length  -  '0')+(buffer[length  -  '7');	  return    result    +(length    -    '0')+(buffer[length    -    '7');    	non-compiled	[CE]  <identifier>  expected	92	None	replace
583	[BUG]  [BUGGY]  return  result  /(length  -  '0')+(buffer[length  -  '7');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /(length  -  '0')+(buffer[length  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /(length  -  '0')+(buffer[length  -  '7');	  return    result    +(length    -    '0')+(buffer[length    -    '7');    	non-compiled	[CE]  <identifier>  expected	92	None	replace
584	[BUG]  [BUGGY]  return  result  +(length  -  '0')+(buffer[length  -  1]);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')+(buffer[length  -  1]);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')+(buffer[length  -  1]);	  return    result    +(length    -    '0')+(buffer[length    -    '7');    	non-compiled	[CE]  <identifier>  expected	92	None	replace
585	[BUG]  [BUGGY]  result  +(length  -  '0')/(buffer[length  -  '7');  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  +(length  -  '0')/(buffer[length  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  +(length  -  '0')/(buffer[length  -  '7');	  return    result    +(length    -    '0')+(buffer[length    -    '7');    	non-compiled	[CE]  <identifier>  expected	92	None	replace
586	[BUG]  [BUGGY]  result  =  result  -(result  +  1)/  3;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(result  +  1)/  3;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(result  +  1)/  3;	  return    result    -(result    +    1)/    3;    	non-compiled	[CE]  <identifier>  expected	100	None	replace
587	[BUG]  [BUGGY]  return  result  -(result  +  1)/  1;  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  +  1)/  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  +  1)/  1;	  return    result    -(result    +    1)/    3;    	non-compiled	[CE]  <identifier>  expected	100	None	replace
588	[BUG]  [BUGGY]  return  result  -(offset  *  BYTE_MASK)/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(offset  *  BYTE_MASK)/  BYTE_MASK;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(offset  *  BYTE_MASK)/  BYTE_MASK;	  return    result    -(result    *    BYTE_MASK)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	130	None	replace
589	[BUG]  [BUGGY]  return  result  -(long  *  BYTE_MASK)/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(long  *  BYTE_MASK)/  BYTE_MASK;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(long  *  BYTE_MASK)/  BYTE_MASK;	  return    result    -(result    *    BYTE_MASK)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	130	None	replace
590	[BUG]  [BUGGY]  return  result  +(length  -  '0')+(currentByte  -  '9');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')+(currentByte  -  '9');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')+(currentByte  -  '9');	  return    result    +(length    -    '0')+(currentByte    -    '7');    	non-compiled	[CE]  <identifier>  expected	89	None	replace
591	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  0,  currentByte);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  0,  currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  0,  currentByte);	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	131	None	replace
592	[BUG]  [BUGGY]  return  result  -(result  *  2)/  3;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  *  2)/  3;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  *  2)/  3;	  return    result    -(result    +    1)/    3;    	non-compiled	[CE]  <identifier>  expected	100	None	replace
593	[BUG]  [BUGGY]  result  =  offset  +(length  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  offset  +(length  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  offset  +(length  -  '0');	  result    =    result    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	40	None	replace
594	[BUG]  [BUGGY]  return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()));    	non-compiled	[CE]  <identifier>  expected	54	None	replace
595	[BUG]  [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  JsonStringEncoder.getIn  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  JsonStringEncoder.getIn  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  JsonStringEncoder.getIn	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()));    	non-compiled	[CE]  <identifier>  expected	54	None	replace
596	[BUG]  [BUGGY]  return  result  >=  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()));    	non-compiled	[CE]  <identifier>  expected	54	None	replace
597	[BUG]  [BUGGY]  return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()));    	non-compiled	[CE]  <identifier>  expected	54	None	replace
598	[BUG]  [BUGGY]  return  result  -(result  -  offset)+(currentByte  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  offset)+(currentByte  -  '0')+  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  offset)+(currentByte  -  '0')+  1;	  return    result    -(result    <    <    3)+(currentByte    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	122	None	replace
599	[BUG]  [BUGGY]  return  result  -(result  -  1)+(currentByte  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  1)+(currentByte  -  '0')+  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  1)+(currentByte  -  '0')+  1;	  return    result    -(result    <    <    3)+(currentByte    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	122	None	replace
600	[BUG]  [BUGGY]  return  result  -(result  -  start)+(currentByte  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  start)+(currentByte  -  '0')+  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  start)+(currentByte  -  '0')+  1;	  return    result    -(result    <    <    3)+(currentByte    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	122	None	replace
601	[BUG]  [BUGGY]  return  result  -(currentByte  <  <  3)+(currentByte  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(currentByte  <  <  3)+(currentByte  -  '0')+  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(currentByte  <  <  3)+(currentByte  -  '0')+  1;	  return    result    -(result    <    <    3)+(currentByte    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	122	None	replace
602	[BUG]  [BUGGY]  return  result  ==  4?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  4?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  4?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);	  return    result!=    3?    JsonStringEncoder.getInstance().encodeAsByte(currentByte):    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	121	None	replace
603	[BUG]  [BUGGY]  return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);	  return    result!=    3?    JsonStringEncoder.getInstance().encodeAsByte(currentByte):    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	121	None	replace
604	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsciiString(result);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsciiString(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsciiString(result);	  result    =    JsonStringEncoder.getInstance().quoteAsString(result);    	non-compiled	[CE]  <identifier>  expected	161	None	replace
605	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsciiString(currentByte);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsciiString(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsciiString(currentByte);	  result    =    JsonStringEncoder.getInstance().quoteAsString(result);    	non-compiled	[CE]  <identifier>  expected	161	None	replace
606	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsciiString(buffer);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsciiString(buffer);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsciiString(buffer);	  result    =    JsonStringEncoder.getInstance().quoteAsString(result);    	non-compiled	[CE]  <identifier>  expected	161	None	replace
607	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getInstance()).encodeAsCI  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getInstance()).encodeAsCI  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getInstance()).encodeAsCI	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(buffer,    result,    JsonStringEncoder.getInstance()).encodeAsCII(    	non-compiled	[CE]  <identifier>  expected	156	None	replace
608	[BUG]  [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getInstance()).encodeAsCI  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getInstance()).encodeAsCI  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getInstance()).encodeAsCI	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(buffer,    result,    JsonStringEncoder.getInstance()).encodeAsCII(    	non-compiled	[CE]  <identifier>  expected	156	None	replace
609	[BUG]  [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getInstance()).encodeAsCI  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getInstance()).encodeAsCI  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getInstance()).encodeAsCI	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(buffer,    result,    JsonStringEncoder.getInstance()).encodeAsCII(    	non-compiled	[CE]  <identifier>  expected	156	None	replace
610	[BUG]  [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getIn  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getIn  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getIn	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(buffer,    result,    JsonStringEncoder.getInstance()).encodeAsCII(    	non-compiled	[CE]  <identifier>  expected	156	None	replace
611	[BUG]  [BUGGY]  return  result  -(length  -  '0')+(currentByte  *  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(length  -  '0')+(currentByte  *  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(length  -  '0')+(currentByte  *  '0');	  return    result    -(length    -    '0')+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	150	None	replace
612	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end);  result  =  result;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end);  result  =  result;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  end);  result  =  result;	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    result    =    result;    	non-compiled	[CE]  <identifier>  expected	138	None	replace
613	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  +  3);  result  =  result;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  +  3);  result  =  result;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  +  3);  result  =  result;	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    result    =    result;    	non-compiled	[CE]  <identifier>  expected	138	None	replace
614	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  +  2);  result  =  result;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  +  2);  result  =  result;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  +  2);  result  =  result;	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    result    =    result;    	non-compiled	[CE]  <identifier>  expected	138	None	replace
615	[BUG]  [BUGGY]  return  result  -(result  -  '0')+(result  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  '0')+(result  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  '0')+(result  -  '0');	  return    result    -(result    <    <    1)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	164	None	replace
616	[BUG]  [BUGGY]  return  result  -(result  -  1)+(long  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  1)+(long  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  1)+(long  -  '0');	  return    result    -(result    <    <    1)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	164	None	replace
617	[BUG]  [BUGGY]  return  result  +(length  -  1)/  '0'  +  1;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  1)/  '0'  +  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  1)/  '0'  +  1;	  return    result    +(length    -    1)/    '0';    	non-compiled	[CE]  <identifier>  expected	165	None	replace
618	[BUG]  [BUGGY]  return  result  +(length  -  1)/  2'0';  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  1)/  2'0';  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  1)/  2'0';	  return    result    +(length    -    1)/    '0';    	non-compiled	[CE]  <identifier>  expected	165	None	replace
619	[BUG]  [BUGGY]  return  result  -(result  +  1)/  4  +  1;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  +  1)/  4  +  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  +  1)/  4  +  1;	  return    result    -(result    +    1)/    4;    	non-compiled	[CE]  <identifier>  expected	97	None	replace
620	[BUG]  [BUGGY]  result  =(result  <  <  6)+(BYTE_MASK  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  <  <  6)+(BYTE_MASK  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  <  <  6)+(BYTE_MASK  -  '0');	  result    =(result    <    <    3)+(BYTE_MASK    -    '0');    	non-compiled	[CE]  <identifier>  expected	75	None	replace
621	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  JsonStringEncoder.getIn  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  JsonStringEncoder.getIn  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  JsonStringEncoder.getIn	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()));    	non-compiled	[CE]  <identifier>  expected	116	None	replace
622	[BUG]  [BUGGY]  return  result  -(result  -  3)+(long  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  3)+(long  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  3)+(long  -  '0');	  return    result    -(result    <    <    3)+(long    -    '0');    	non-compiled	[CE]  <identifier>  expected	136	None	replace
623	[BUG]  [BUGGY]  return  result  -(result  -  offset)+(long  -  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  offset)+(long  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  offset)+(long  -  '0');	  return    result    -(result    <    <    3)+(long    -    '0');    	non-compiled	[CE]  <identifier>  expected	136	None	replace
624	[BUG]  [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	124	None	replace
625	[BUG]  [BUGGY]  return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	124	None	replace
626	[BUG]  [BUGGY]  return  result  /(offset  +  1)/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /(offset  +  1)/  BYTE_MASK;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /(offset  +  1)/  BYTE_MASK;	  return    result    -(offset    +    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	129	None	replace
627	[BUG]  [BUGGY]  return  result  *(offset  +  1)/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  *(offset  +  1)/  BYTE_MASK;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  *(offset  +  1)/  BYTE_MASK;	  return    result    -(offset    +    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	129	None	replace
628	[BUG]  [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  length);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  length);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    length);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
629	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  start,  length);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  start,  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  start,  length);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    length);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
630	[BUG]  [BUGGY]  return  result  *  3  +(result  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  *  3  +(result  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  *  3  +(result  -  '0');	  return    result    *    3;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
631	[BUG]  [BUGGY]  return  result  *  3  +(result  %  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  *  3  +(result  %  BYTE_MASK);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  *  3  +(result  %  BYTE_MASK);	  return    result    *    3;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
632	[BUG]  [BUGGY]  return  result  -(result  -  start)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  start)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  start)+(currentByte  -  '0');	  return    result    -(result    <    <    1)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	3	None	replace
633	[BUG]  [BUGGY]  return  result  ==  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCI  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCI  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCI	  return    result    <    <    4?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCI    	non-compiled	[CE]  <identifier>  expected	35	None	replace
634	[BUG]  [BUGGY]  return  result  ==  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encode  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encode  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encode	  return    result    <    <    4?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCI    	non-compiled	[CE]  <identifier>  expected	35	None	replace
635	[BUG]  [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().en  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().en  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().en	  return    result    <    <    4?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCI    	non-compiled	[CE]  <identifier>  expected	35	None	replace
636	[BUG]  [BUGGY]  return  result  -(length  -  '0')/  '0';  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(length  -  '0')/  '0';  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(length  -  '0')/  '0';	  return    result    +(length    -    '0')/    '0';    	non-compiled	[CE]  <identifier>  expected	110	None	replace
637	[BUG]  [BUGGY]  return  result  ==  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);	  return    result    <    <    4?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
638	[BUG]  [BUGGY]  return  result  <  <  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);	  return    result    <    <    4?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
639	[BUG]  [BUGGY]  return  result  >=  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);	  return    result    <    <    4?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
640	[BUG]  [BUGGY]  return  result  ==  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCI  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCI  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCI	  return    result    <    <    4?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
641	[BUG]  [BUGGY]  return  result  -(result  -  '0')/  1;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  '0')/  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  '0')/  1;	  return    result    +(result    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	141	None	replace
642	[BUG]  [BUGGY]  return  result  %  1;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  %  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  %  1;	  return    result    <    <    1;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
643	[BUG]  [BUGGY]  return  result  -  '0'  +  2;  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -  '0'  +  2;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -  '0'  +  2;	  return    result    -    '0';    	non-compiled	[CE]  <identifier>  expected	25	None	replace
644	[BUG]  [BUGGY]  return  result  -  '0'  +  3;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -  '0'  +  3;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -  '0'  +  3;	  return    result    -    '0';    	non-compiled	[CE]  <identifier>  expected	25	None	replace
645	[BUG]  [BUGGY]  return  result  +(end  -  '0')+(result  -  '7');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(end  -  '0')+(result  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(end  -  '0')+(result  -  '7');	  return    result    +(length    -    '0')+(end    -    '7');    	non-compiled	[CE]  <identifier>  expected	91	None	replace
646	[BUG]  [BUGGY]  return  result  +(length  -  '0')+(end  -  '7'  +  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')+(end  -  '7'  +  1);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')+(end  -  '7'  +  1);	  return    result    +(length    -    '0')+(end    -    '7');    	non-compiled	[CE]  <identifier>  expected	91	None	replace
647	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.get  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.get  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.get	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getIn    	non-compiled	[CE]  <identifier>  expected	117	None	replace
648	[BUG]  [BUGGY]  return  result  /  3  +(result  %  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /  3  +(result  %  BYTE_MASK);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /  3  +(result  %  BYTE_MASK);	  return    result    /    3;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
649	[BUG]  [BUGGY]  return  result  /  3  +(result  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /  3  +(result  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /  3  +(result  -  '0');	  return    result    /    3;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
650	[BUG]  [BUGGY]  return  result  /  3  +(length  %  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /  3  +(length  %  BYTE_MASK);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /  3  +(length  %  BYTE_MASK);	  return    result    /    3;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
651	[BUG]  [BUGGY]  result  =  offset  +  1;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  offset  +  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  offset  +  1;	  result    =    result    +    1;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
652	[BUG]  [BUGGY]  return  result  -(result  *  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  *  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  *  '0');	  return    result    -(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	37	None	replace
653	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  JsonStringEncoder.  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  JsonStringEncoder.  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  JsonStringEncoder.	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(buffer,    JsonStringEncoder.getIn    	non-compiled	[CE]  <identifier>  expected	107	None	replace
654	[BUG]  [BUGGY]  return  result  >  0?  result  :  buffer.length  +  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >  0?  result  :  buffer.length  +  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >  0?  result  :  buffer.length  +  1;	  return    result    >    0?    result    :    buffer.length;    	non-compiled	[CE]  <identifier>  expected	166	None	replace
655	[BUG]  [BUGGY]  return  result  *(currentByte  +  3)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  *(currentByte  +  3)+(result  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  *(currentByte  +  3)+(result  -  '0');	  return    result    -(currentByte    +    3)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	18	None	replace
656	[BUG]  [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result);	  return    result    ==    1?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCII(result));    	non-compiled	[CE]  <identifier>  expected	147	None	replace
657	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().en  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().en  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().en	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCI    	non-compiled	[CE]  <identifier>  expected	103	None	replace
658	[BUG]  [BUGGY]  result  =(result  -  '0')+(length  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  -  '0')+(length  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  -  '0')+(length  -  '0');	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	76	None	replace
659	[BUG]  [BUGGY]  result  =(result  -  offset)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  -  offset)+(length  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  -  offset)+(length  -  '0');	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	76	None	replace
660	[BUG]  [BUGGY]  result  =(result  +  3)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  +  3)+(length  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  +  3)+(length  -  '0');	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	76	None	replace
661	[BUG]  [BUGGY]  return  result  +  3);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +  3);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +  3);	  return    result    +    1L;    	non-compiled	[CE]  <identifier>  expected	113	None	replace
662	[BUG]  [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  JsonStringEncoder.getIn  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  JsonStringEncoder.getIn  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  JsonStringEncoder.getIn	  return    result    ==    1?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance());    	non-compiled	[CE]  <identifier>  expected	168	None	replace
663	[BUG]  [BUGGY]  return  result  ==  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");	  return    result    <    <    4?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	57	None	replace
664	[BUG]  [BUGGY]  return  result  <  <  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");	  return    result    <    <    4?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	57	None	replace
665	[BUG]  [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  1);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  1);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  1);	  return    result    <    <    4?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	57	None	replace
666	[BUG]  [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  2);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  2);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  2);	  return    result    <    <    4?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	57	None	replace
667	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(result,  buffer);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(result,  buffer);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsByte(result,  buffer);	  result    =    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	159	None	replace
668	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(buffer);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(buffer);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsByte(buffer);	  result    =    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	159	None	replace
669	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(buffer,  start);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(buffer,  start);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsByte(buffer,  start);	  result    =    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	159	None	replace
670	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(result,  length);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(result,  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsByte(result,  length);	  result    =    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	159	None	replace
671	[BUG]  [BUGGY]  return  result  -(length  -  '0')/  2;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(length  -  '0')/  2;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(length  -  '0')/  2;	  return    result    +(length    -    '0')/    4;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
672	[BUG]  [BUGGY]  return  result  /  2  +  4;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /  2  +  4;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /  2  +  4;	  return    result    /    2;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
673	[BUG]  [BUGGY]  return  result  +(length  -  1)+(currentByte  *  '7');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  1)+(currentByte  *  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  1)+(currentByte  *  '7');	  return    result    +(length    -    '0')+(currentByte    *    '7');    	non-compiled	[CE]  <identifier>  expected	93	None	replace
674	[BUG]  [BUGGY]  return  result  -(start  -  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(start  -  3)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(start  -  3)+(currentByte  -  '0');	  return    result    -(result    -    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	44	None	replace
675	[BUG]  [BUGGY]  return  result  /(result  -  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /(result  -  3)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /(result  -  3)+(currentByte  -  '0');	  return    result    -(result    -    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	44	None	replace
676	[BUG]  [BUGGY]  result  =  result  -(result  -  '0')+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(result  -  '0')+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(result  -  '0')+(currentByte  -  '0');	  result    =    result    -(result    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	42	None	replace
677	[BUG]  [BUGGY]  result  =  result  -(offset  <  <  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(offset  <  <  3)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(offset  <  <  3)+(currentByte  -  '0');	  result    =    result    -(result    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	42	None	replace
678	[BUG]  [BUGGY]  result  =  result  -(currentByte  <  <  3)+('0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(currentByte  <  <  3)+('0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(currentByte  <  <  3)+('0');	  result    =    result    -(result    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	42	None	replace
679	[BUG]  [BUGGY]  return  result  -(length  -  1)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(length  -  1)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(length  -  1)+(currentByte  -  '0');	  return    result    -(result    -    1)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	151	None	replace
680	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result);	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCII(result));    	non-compiled	[CE]  <identifier>  expected	104	None	replace
681	[BUG]  [BUGGY]  return  result  -(length  -  '0')+  '0';  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(length  -  '0')+  '0';  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(length  -  '0')+  '0';	  return    result    +(length    -    '0')+    '0';    	non-compiled	[CE]  <identifier>  expected	111	None	replace
682	[BUG]  [BUGGY]  return  result  +(length  -  1)+  '0';  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  1)+  '0';  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  1)+  '0';	  return    result    +(length    -    '0')+    '0';    	non-compiled	[CE]  <identifier>  expected	111	None	replace
683	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(    	non-compiled	[CE]  <identifier>  expected	155	None	replace
684	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  JsonStringEncoder.getInstance()).encodeAsCI  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  JsonStringEncoder.getInstance()).encodeAsCI  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  JsonStringEncoder.getInstance()).encodeAsCI	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(    	non-compiled	[CE]  <identifier>  expected	155	None	replace
685	[BUG]  [BUGGY]  result  =  result  +(length  -  '0')+  '0';  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  +(length  -  '0')+  '0';  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  +(length  -  '0')+  '0';	  result    =    result    +    '0';    	non-compiled	[CE]  <identifier>  expected	27	None	replace
686	[BUG]  [BUGGY]  result  =  result  +  '0'  +(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  +  '0'  +(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  +  '0'  +(currentByte  -  '0');	  result    =    result    +    '0';    	non-compiled	[CE]  <identifier>  expected	27	None	replace
687	[BUG]  [BUGGY]  safeNonArray(result))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  safeNonArray(result))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	safeNonArray(result))  {  throw  new  IllegalArgumentException( " ");  }	  if(result    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	137	None	replace
688	[BUG]  [BUGGY]  safeNonArray(result)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  safeNonArray(result)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	safeNonArray(result)  {  throw  new  IllegalArgumentException( " ");  }	  if(result    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	137	None	replace
689	[BUG]  [BUGGY]  [Delete]  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  [Delete]  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	[Delete]	  if(result    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	137	None	replace
690	[BUG]  [BUGGY]  safeNonArray(result)  {  throw  new  IllegalArgumentException( " ".equals(currentByte));  }  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  safeNonArray(result)  {  throw  new  IllegalArgumentException( " ".equals(currentByte));  }  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	safeNonArray(result)  {  throw  new  IllegalArgumentException( " ".equals(currentByte));  }	  if(result    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	137	None	replace
691	[BUG]  [BUGGY]  safeNonArray(result))  {  throw  new  IllegalArgumentException( " ".equals(currentByte);  }  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  safeNonArray(result))  {  throw  new  IllegalArgumentException( " ".equals(currentByte);  }  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	safeNonArray(result))  {  throw  new  IllegalArgumentException( " ".equals(currentByte);  }	  if(result    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	137	None	replace
692	[BUG]  [BUGGY]  result  =  0;  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  0;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  0;	  if(result    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	137	None	replace
693	[BUG]  [BUGGY]  result  =(result  +  1)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  +  1)+(length  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  +  1)+(length  -  '0');	  result    =(result    <    <    1)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	77	None	replace
694	[BUG]  [BUGGY]  return  result  -(length  -  '0')/  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(length  -  '0')/  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(length  -  '0')/  1;	  return    result    +(length    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
695	[BUG]  [BUGGY]  return  result  +(length  -  '0')/  8;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')/  8;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')/  8;	  return    result    +(length    -    '0')/    7;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
696	[BUG]  [BUGGY]  return  result  +(result  -  '0')/  3;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(result  -  '0')/  3;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(result  -  '0')/  3;	  return    result    +(length    -    '0')/    3;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
697	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsCII(buffer,  offset,  length);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsCII(buffer,  offset,  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsCII(buffer,  offset,  length);	  result    =    JsonStringEncoder.getInstance().encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	162	None	replace
698	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsCII(result,  buffer);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsCII(result,  buffer);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsCII(result,  buffer);	  result    =    JsonStringEncoder.getInstance().encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	162	None	replace
699	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsCII(buffer,  start);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsCII(buffer,  start);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsCII(buffer,  start);	  result    =    JsonStringEncoder.getInstance().encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	162	None	replace
700	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  BYTE_MASK);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  BYTE_MASK);	  return    result    >=    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
701	[BUG]  [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsByte(result):  JsonStringEncoder.getInstance().encodeAsByte(result);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsByte(result):  JsonStringEncoder.getInstance().encodeAsByte(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsByte(result):  JsonStringEncoder.getInstance().encodeAsByte(result);	  return    result    ==    1?    JsonStringEncoder.getInstance().encodeAsByte(currentByte):    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	153	None	replace
702	[BUG]  [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(buffer,  result);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(buffer,  result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(buffer,  result);	  return    result    ==    1?    JsonStringEncoder.getInstance().encodeAsByte(currentByte):    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	153	None	replace
703	[BUG]  [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance()).encodeAsCI  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance()).encodeAsCI  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance()).encodeAsCI	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(currentByte,    JsonStringEncoder.getInstance()).encodeAsCI    	non-compiled	[CE]  <identifier>  expected	72	None	replace
704	[BUG]  [BUGGY]  return  result  >>  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance()).encodeAsCI  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >>  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance()).encodeAsCI  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >>  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance()).encodeAsCI	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(currentByte,    JsonStringEncoder.getInstance()).encodeAsCI    	non-compiled	[CE]  <identifier>  expected	72	None	replace
705	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(currentByte,    JsonStringEncoder.getInstance    	non-compiled	[CE]  <identifier>  expected	53	None	replace
706	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsCharacter(currentByte);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsCharacter(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsCharacter(currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsString(result);    	non-compiled	[CE]  <identifier>  expected	160	None	replace
707	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsciiString(buffer,  offset,  length);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsciiString(buffer,  offset,  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsciiString(buffer,  offset,  length);	  result    =    JsonStringEncoder.getInstance().encodeAsString(result);    	non-compiled	[CE]  <identifier>  expected	160	None	replace
708	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsciiString(buffer);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsciiString(buffer);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsciiString(buffer);	  result    =    JsonStringEncoder.getInstance().encodeAsString(result);    	non-compiled	[CE]  <identifier>  expected	160	None	replace
709	[BUG]  [BUGGY]  return  result!=  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result!=  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result!=  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	56	None	replace
710	[BUG]  [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  0,  currentByte);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  0,  currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  0,  currentByte);	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	56	None	replace
711	[BUG]  [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance    	non-compiled	[CE]  <identifier>  expected	8	None	replace
712	[BUG]  [BUGGY]  return  result  -(length  -  '0')+(length  -  '9');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(length  -  '0')+(length  -  '9');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(length  -  '0')+(length  -  '9');	  return    result    -(length    -    '0')+(length    -    '7');    	non-compiled	[CE]  <identifier>  expected	94	None	replace
713	[BUG]  [BUGGY]  return  result  /(length  -  '0')+(length  -  '9');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /(length  -  '0')+(length  -  '9');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /(length  -  '0')+(length  -  '9');	  return    result    /(length    -    '0')+(length    -    '7');    	non-compiled	[CE]  <identifier>  expected	172	None	replace
714	[BUG]  [BUGGY]  return  result  ==  0?  result  :  BYTE_MASK  -  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  0?  result  :  BYTE_MASK  -  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  0?  result  :  BYTE_MASK  -  1;	  return    result    ==    0?    result    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	83	None	replace
715	[BUG]  [BUGGY]  return  result  /  '0'  +  3;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /  '0'  +  3;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /  '0'  +  3;	  return    result    /    '0';    	non-compiled	[CE]  <identifier>  expected	26	None	replace
716	[BUG]  [BUGGY]  return  result  *  2  +(result  %  BYTE_MASK);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  *  2  +(result  %  BYTE_MASK);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  *  2  +(result  %  BYTE_MASK);	  return    result    *    2;    	non-compiled	[CE]  <identifier>  expected	142	None	replace
717	[BUG]  [BUGGY]  return  result  *  2  +(currentByte  -  '0')+(currentByte  -  '7');  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  *  2  +(currentByte  -  '0')+(currentByte  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  *  2  +(currentByte  -  '0')+(currentByte  -  '7');	  return    result    *    2;    	non-compiled	[CE]  <identifier>  expected	142	None	replace
718	[BUG]  [BUGGY]  return  result  *  2  +(currentByte  -  '0')+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  *  2  +(currentByte  -  '0')+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  *  2  +(currentByte  -  '0')+(currentByte  -  '0');	  return    result    *    2;    	non-compiled	[CE]  <identifier>  expected	142	None	replace
719	[BUG]  [BUGGY]  return  result  -(offset  <  <  3)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(offset  <  <  3)+(length  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(offset  <  <  3)+(length  -  '0');	  return    result    -(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	135	None	replace
720	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  0,  currentByte);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  0,  currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  0,  currentByte);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    1);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
721	[BUG]  [BUGGY]  result  =  result  <  <  1?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  <  <  1?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  <  <  1?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);	  result    =    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsByte(currentByte):    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
722	[BUG]  [BUGGY]  return  result  +(length  -  '0')/  '0'  +  1;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')/  '0'  +  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')/  '0'  +  1;	  return    result    +    '0'    +    1;    	non-compiled	[CE]  <identifier>  expected	112	None	replace
723	[BUG]  [BUGGY]  return  result  +(length  -  '0')+  '0'  +  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')+  '0'  +  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')+  '0'  +  1;	  return    result    +    '0'    +    1;    	non-compiled	[CE]  <identifier>  expected	112	None	replace
724	[BUG]  [BUGGY]  return  result  &  2;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  &  2;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  &  2;	  return    result    <    <    2;    	non-compiled	[CE]  <identifier>  expected	178	None	replace
725	[BUG]  [BUGGY]  return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCI  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCI  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCI	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCI    	non-compiled	[CE]  <identifier>  expected	33	None	replace
726	[BUG]  [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().en  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().en  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().en	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCI    	non-compiled	[CE]  <identifier>  expected	33	None	replace
727	[BUG]  [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encode  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encode  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encode	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCI    	non-compiled	[CE]  <identifier>  expected	33	None	replace
728	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(result);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  throw  new  IllegalArgumentException(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	throw  new  IllegalArgumentException(result);	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	79	None	replace
729	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(result, " ");  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  throw  new  IllegalArgumentException(result, " ");  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	throw  new  IllegalArgumentException(result, " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	79	None	replace
730	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(result  +  '0');  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  throw  new  IllegalArgumentException(result  +  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	throw  new  IllegalArgumentException(result  +  '0');	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	79	None	replace
731	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".getMessage());  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  throw  new  IllegalArgumentException( " ".getMessage());  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	throw  new  IllegalArgumentException( " ".getMessage());	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	79	None	replace
732	[BUG]  [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  JsonStringEncoder.getIn  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  JsonStringEncoder.getIn  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  JsonStringEncoder.getIn	  result    =    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
733	[BUG]  [BUGGY]  result  =  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn	  result    =    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
734	[BUG]  [BUGGY]  result  =  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn	  result    =    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
735	[BUG]  [BUGGY]  return  result  -(result  <  <  1)+(offset  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  <  <  1)+(offset  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  <  <  1)+(offset  -  '0');	  return    result    -(currentByte    <    <    1)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	17	None	replace
736	[BUG]  [BUGGY]  return  result  -(result  /  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  /  3)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  /  3)+(currentByte  -  '0');	  return    result    -(result    +    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	152	None	replace
737	[BUG]  [BUGGY]  return  result  -(start  +  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(start  +  3)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(start  +  3)+(currentByte  -  '0');	  return    result    -(result    +    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	152	None	replace
738	[BUG]  [BUGGY]  return  result  -(length  +  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(length  +  3)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(length  +  3)+(currentByte  -  '0');	  return    result    -(result    +    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	152	None	replace
739	[BUG]  [BUGGY]  return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance());  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance());  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance());	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
740	[BUG]  [BUGGY]  return  result  *(currentByte  -  '0')+(result  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  *(currentByte  -  '0')+(result  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  *(currentByte  -  '0')+(result  -  '0');	  return    result    -(result    -    '0')+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	43	None	replace
741	[BUG]  [BUGGY]  return  result  +(currentByte  -  '0')+(result  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(currentByte  -  '0')+(result  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(currentByte  -  '0')+(result  -  '0');	  return    result    -(result    -    '0')+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	43	None	replace
742	[BUG]  [BUGGY]  return  result  +(result  -  1)/  BYTE_SIZE;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(result  -  1)/  BYTE_SIZE;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(result  -  1)/  BYTE_SIZE;	  return    result    +(length    -    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	105	None	replace
743	[BUG]  [BUGGY]  return  result  %  3;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  %  3;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  %  3;	  return    result    <    <    3;    	non-compiled	[CE]  <identifier>  expected	108	None	replace
744	[BUG]  [BUGGY]  return  result  -(result  +  1)/  2  +  3;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  +  1)/  2  +  3;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  +  1)/  2  +  3;	  return    result    -(result    +    1)/    2;    	non-compiled	[CE]  <identifier>  expected	95	None	replace
745	[BUG]  [BUGGY]  return  result  +(result  -  '0')+(result  -  '7');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(result  -  '0')+(result  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(result  -  '0')+(result  -  '7');	  return    result    +    '0'    +(result    -    '7');    	non-compiled	[CE]  <identifier>  expected	30	None	replace
746	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  result);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  result);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(currentByte,    result);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
747	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  buffer);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  buffer);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  buffer);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(currentByte,    result);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
748	[BUG]  [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  result);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  result);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(currentByte,    result);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
749	[BUG]  [BUGGY]  return  result  +(length  -  '0')+(start  -  '7',  currentByte);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')+(start  -  '7',  currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')+(start  -  '7',  currentByte);	  return    result    +(length    -    '0')+(length    -    '7',    currentByte);    	non-compiled	[CE]  <identifier>  expected	173	None	replace
750	[BUG]  [BUGGY]  return  result  +(length  -  '0')+(result  -  '7',  currentByte);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')+(result  -  '7',  currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')+(result  -  '7',  currentByte);	  return    result    +(length    -    '0')+(length    -    '7',    currentByte);    	non-compiled	[CE]  <identifier>  expected	173	None	replace
751	[BUG]  [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  0,  currentByte);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  0,  currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  0,  currentByte);	  return    result    ==    1?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	145	None	replace
752	[BUG]  [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  length);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  length);	  return    result    ==    1?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	145	None	replace
753	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance()).encodeAsCII(result);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(currentByte,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
754	[BUG]  [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance()).encodeAsCII(result);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(currentByte,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
755	[BUG]  [BUGGY]  return  result  +(currentByte  -  '0')+(currentByte  -  '7');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(currentByte  -  '0')+(currentByte  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(currentByte  -  '0')+(currentByte  -  '7');	  return    result    +    '0'    +(currentByte    -    '7');    	non-compiled	[CE]  <identifier>  expected	28	None	replace
756	[BUG]  [BUGGY]  return  result  +(currentByte  -  '0')+(result  -  '7');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(currentByte  -  '0')+(result  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(currentByte  -  '0')+(result  -  '7');	  return    result    +    '0'    +(currentByte    -    '7');    	non-compiled	[CE]  <identifier>  expected	28	None	replace
757	[BUG]  [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  0,  currentByte);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  0,  currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  0,  currentByte);	  result    =    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	55	None	replace
758	[BUG]  [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  4);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  4);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  4);	  result    =    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	55	None	replace
759	[BUG]  [BUGGY]  result  =  result  -(currentByte  <  <  3)+(currentByte  >  '0'?  '9'  :  currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(currentByte  <  <  3)+(currentByte  >  '0'?  '9'  :  currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(currentByte  <  <  3)+(currentByte  >  '0'?  '9'  :  currentByte  -  '0');	  result    =    result    -(currentByte    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	2	None	replace
760	[BUG]  [BUGGY]  result  =  result  -(currentByte  <  <  3)+(currentByte  >  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(currentByte  <  <  3)+(currentByte  >  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(currentByte  <  <  3)+(currentByte  >  '0');	  result    =    result    -(currentByte    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	2	None	replace
761	[BUG]  [BUGGY]  result  =  result  -(currentByte  <  <  3)+(currentByte  +  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(currentByte  <  <  3)+(currentByte  +  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(currentByte  <  <  3)+(currentByte  +  '0');	  result    =    result    -(currentByte    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	2	None	replace
762	[BUG]  [BUGGY]  result  =  result  -(currentByte  <  <  4)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(currentByte  <  <  4)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(currentByte  <  <  4)+(currentByte  -  '0');	  result    =    result    -(currentByte    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	2	None	replace
763	[BUG]  [BUGGY]  return  result  +(length  -  '0')+(buffer[start  -  '7');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')+(buffer[start  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')+(buffer[start  -  '7');	  return    result    +(length    -    '0')+(buffer[length    -    '7');    	non-compiled	[CE]  <identifier>  expected	92	None	replace
764	[BUG]  [BUGGY]  return  result  +(length  -  '0')+(buffer[offset  -  '7');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')+(buffer[offset  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')+(buffer[offset  -  '7');	  return    result    +(length    -    '0')+(buffer[length    -    '7');    	non-compiled	[CE]  <identifier>  expected	92	None	replace
765	[BUG]  [BUGGY]  return  result  +(length  -  '0')+(buffer[length  -  '7'  +  1);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')+(buffer[length  -  '7'  +  1);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')+(buffer[length  -  '7'  +  1);	  return    result    +(length    -    '0')+(buffer[length    -    '7');    	non-compiled	[CE]  <identifier>  expected	92	None	replace
766	[BUG]  [BUGGY]  return  result  +(length  -  '0')+(buffer[1]  -  '7');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')+(buffer[1]  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')+(buffer[1]  -  '7');	  return    result    +(length    -    '0')+(buffer[length    -    '7');    	non-compiled	[CE]  <identifier>  expected	92	None	replace
767	[BUG]  [BUGGY]  return  result  +(length  -  '0')+(buffer[length  -  '9');  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')+(buffer[length  -  '9');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')+(buffer[length  -  '9');	  return    result    +(length    -    '0')+(buffer[length    -    '7');    	non-compiled	[CE]  <identifier>  expected	92	None	replace
768	[BUG]  [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().en  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().en  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().en	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAs    	non-compiled	[CE]  <identifier>  expected	102	None	replace
769	[BUG]  [BUGGY]  return  result  >=  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
770	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  result,  end);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  result,  end);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  result,  end);	  System.arraycopy(buffer,    offset,    buffer,    0,    result,    length);    	non-compiled	[CE]  <identifier>  expected	140	None	replace
771	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  result,  start);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  result,  start);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  result,  start);	  System.arraycopy(buffer,    offset,    buffer,    0,    result,    length);    	non-compiled	[CE]  <identifier>  expected	140	None	replace
772	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  end);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	139	None	replace
773	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  +  3);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  +  3);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  +  3);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	139	None	replace
774	[BUG]  [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(currentByte);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result!=  3?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(currentByte);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsByte(currentByte):    JsonStringEncoder.getInstance().encodeAsByte(currentByte);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
775	[BUG]  [BUGGY]  return  result  -  1L  +  length;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -  1L  +  length;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -  1L  +  length;	  return    result    -    1L;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
776	[BUG]  [BUGGY]  return  result  -  1L  +  3;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -  1L  +  3;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -  1L  +  3;	  return    result    -    1L;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
777	[BUG]  [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(currentByte);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(currentByte);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(currentByte);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
778	[BUG]  [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(currentByte);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(currentByte);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(currentByte);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
779	[BUG]  [BUGGY]  return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result);	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
780	[BUG]  [BUGGY]  return  result  >=  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result);	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
781	[BUG]  [BUGGY]  return  result  -  2  +  1;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -  2  +  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -  2  +  1;	  return    result    -    2;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
782	[BUG]  [BUGGY]  return  result  +(length  -  '0')+(byte)-  '7';  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')+(byte)-  '7';  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')+(byte)-  '7';	  return    result    +(length    -    '0')+(result    -    '7');    	non-compiled	[CE]  <identifier>  expected	90	None	replace
783	[BUG]  [BUGGY]  result  +=(length  -  '0')+  3;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  +=(length  -  '0')+  3;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  +=(length  -  '0')+  3;	  result    +=(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	41	None	replace
784	[BUG]  [BUGGY]  return  result  +(length  -  1)/  '0'  -  1;  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  1)/  '0'  -  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  1)/  '0'  -  1;	  return    result    +    '0'    -    1;    	non-compiled	[CE]  <identifier>  expected	158	None	replace
785	[BUG]  [BUGGY]  return  result  +(result  -  '0')/  '1';  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(result  -  '0')/  '1';  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(result  -  '0')/  '1';	  return    result    +    '0'    -    1;    	non-compiled	[CE]  <identifier>  expected	158	None	replace
786	[BUG]  [BUGGY]  return  result  +(result  -  '0')-  1;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(result  -  '0')-  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(result  -  '0')-  1;	  return    result    +    '0'    -    1;    	non-compiled	[CE]  <identifier>  expected	158	None	replace
787	[BUG]  [BUGGY]  result  =(result  <  <  4)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  <  <  4)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  <  <  4)+(currentByte  -  '0');	  result    =(result    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
788	[BUG]  [BUGGY]  return  result  /(result  -  '0'  +  1);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /(result  -  '0'  +  1);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /(result  -  '0'  +  1);	  return    result    /(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	38	None	replace
789	[BUG]  [BUGGY]  return  result  -(result  -  1)+  '0';  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  1)+  '0';  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  1)+  '0';	  return    result    -(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	115	None	replace
790	[BUG]  [BUGGY]  return  result  >  0?  result  :  1L;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >  0?  result  :  1L;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >  0?  result  :  1L;	  return    result    >    0?    result    :    1;    	non-compiled	[CE]  <identifier>  expected	87	None	replace
791	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  currentByte);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  currentByte);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    currentByte);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
792	[BUG]  [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  currentByte);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  currentByte);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    currentByte);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
793	[BUG]  [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getIn  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getIn  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getIn	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(currentByte,    JsonStringEncoder.getIn    	non-compiled	[CE]  <identifier>  expected	9	None	replace
794	[BUG]  [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getIn  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getIn  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getIn	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(currentByte,    JsonStringEncoder.getIn    	non-compiled	[CE]  <identifier>  expected	9	None	replace
795	[BUG]  [BUGGY]  return  result  -(result  <  <  3)+('0'  +  length);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  <  <  3)+('0'  +  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  <  <  3)+('0'  +  length);	  return    result    -(result    <    <    3)+('0'    +    currentByte);    	non-compiled	[CE]  <identifier>  expected	134	None	replace
796	[BUG]  [BUGGY]  return  result  -(result  <  <  3)+('0'  +  currentByte  +  1);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  <  <  3)+('0'  +  currentByte  +  1);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  <  <  3)+('0'  +  currentByte  +  1);	  return    result    -(result    <    <    3)+('0'    +    currentByte);    	non-compiled	[CE]  <identifier>  expected	134	None	replace
797	[BUG]  [BUGGY]  return  result  >=  <  4?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  <  4?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  <  4?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);	  return    result    <    <    4?    JsonStringEncoder.getInstance().encodeAsByte(currentByte):    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
798	[BUG]  [BUGGY]  return  result  <  <  0?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  0?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  0?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);	  return    result    <    <    4?    JsonStringEncoder.getInstance().encodeAsByte(currentByte):    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
799	[BUG]  [BUGGY]  return  result  -(offset  *  BYTE_MASK  +  1)/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(offset  *  BYTE_MASK  +  1)/  BYTE_MASK;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(offset  *  BYTE_MASK  +  1)/  BYTE_MASK;	  return    result    -(result    *    BYTE_MASK    +    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
800	[BUG]  [BUGGY]  return  result  -(long  *  BYTE_MASK  +  1)/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(long  *  BYTE_MASK  +  1)/  BYTE_MASK;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(long  *  BYTE_MASK  +  1)/  BYTE_MASK;	  return    result    -(result    *    BYTE_MASK    +    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
801	[BUG]  [BUGGY]  return  result  +(result  -  '0'  +  length);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(result  -  '0'  +  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(result  -  '0'  +  length);	  return    result    +(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	36	None	replace
802	[BUG]  [BUGGY]  return  result!=  2?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result!=  2?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result!=  2?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsByte(currentByte):    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
803	[BUG]  [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCII(currentByte));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCII(currentByte));  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCII(currentByte));	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCII(currentByte));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
804	[BUG]  [BUGGY]  return  result  +(result  -  '0')+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(result  -  '0')+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(result  -  '0')+(currentByte  -  '0');	  return    result    +    '0'    +(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	109	None	replace
805	[BUG]  [BUGGY]  result  =(result  <  <  4)+(Byte  -  '0');  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  <  <  4)+(Byte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  <  <  4)+(Byte  -  '0');	  result    =(result    <    <    3)+(Byte    -    '0');    	non-compiled	[CE]  <identifier>  expected	78	None	replace
806	[BUG]  [BUGGY]  result  =(result  -  '0')+(Byte  -  '0');  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  -  '0')+(Byte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  -  '0')+(Byte  -  '0');	  result    =(result    <    <    3)+(Byte    -    '0');    	non-compiled	[CE]  <identifier>  expected	78	None	replace
807	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(buffer,  start):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encode  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(buffer,  start):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encode  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(buffer,  start):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encode	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encode    	non-compiled	[CE]  <identifier>  expected	146	None	replace
808	[BUG]  [BUGGY]  return  result  ==  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result);	  return    result!=    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	157	None	replace
809	[BUG]  [BUGGY]  return  result  -(length  <  <  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(length  <  <  3)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(length  <  <  3)+(currentByte  -  '0');	  return    result    -(currentByte    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	19	None	replace
810	[BUG]  [BUGGY]  return  result  -(result  -  '0')/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  '0')/  BYTE_MASK;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  '0')/  BYTE_MASK;	  return    result    +(result    -    '0')/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
811	[BUG]  [BUGGY]  return  result  +(long  -  '0')/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(long  -  '0')/  BYTE_MASK;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(long  -  '0')/  BYTE_MASK;	  return    result    +(result    -    '0')/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
812	[BUG]  [BUGGY]  return  result  -(length  -  '0')/(result  -  '7');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(length  -  '0')/(result  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(length  -  '0')/(result  -  '7');	  return    result    +(result    -    '0')/(length    -    '7');    	non-compiled	[CE]  <identifier>  expected	171	None	replace
813	[BUG]  [BUGGY]  return  result  *(length  -  '0')/(result  -  '7');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  *(length  -  '0')/(result  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  *(length  -  '0')/(result  -  '7');	  return    result    +(result    -    '0')/(length    -    '7');    	non-compiled	[CE]  <identifier>  expected	171	None	replace
814	[BUG]  [BUGGY]  return  result  -(result  -  '0')/(length  -  '7');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  '0')/(length  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  '0')/(length  -  '7');	  return    result    +(result    -    '0')/(length    -    '7');    	non-compiled	[CE]  <identifier>  expected	171	None	replace
815	[BUG]  [BUGGY]  return  result  -(currentByte  -  '0')+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(currentByte  -  '0')+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(currentByte  -  '0')+(currentByte  -  '0');	  return    result    -(currentByte    <    <    2)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	4	None	replace
816	[BUG]  [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCI  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCI  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCI	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCI    	non-compiled	[CE]  <identifier>  expected	125	None	replace
817	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAscii(result);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAscii(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().quoteAscii(result);	  result    =    JsonStringEncoder.getInstance().quoteAsCII(result);    	non-compiled	[CE]  <identifier>  expected	163	None	replace
818	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsCII(buffer,  result);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsCII(buffer,  result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsCII(buffer,  result);	  result    =    JsonStringEncoder.getInstance().quoteAsCII(result);    	non-compiled	[CE]  <identifier>  expected	163	None	replace
819	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  -  1);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  <  <  3)+(length  -  1);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  <  <  3)+(length  -  1);	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	76	None	replace
820	[BUG]  [BUGGY]  return  result  /  2  +(length  -  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /  2  +(length  -  1);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /  2  +(length  -  1);	  return    result    /    2;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
821	[BUG]  [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getIn  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getIn  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getIn	  return    result    ==    1?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCII(result));    	non-compiled	[CE]  <identifier>  expected	147	None	replace
822	[BUG]  [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getInstance().encodeAsCI  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getInstance().encodeAsCI  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getInstance().encodeAsCI	  return    result    ==    1?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCII(result));    	non-compiled	[CE]  <identifier>  expected	147	None	replace
823	[BUG]  [BUGGY]  result  =  result  -(length  -  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(length  -  3)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(length  -  3)+(currentByte  -  '0');	  result    =    result    -(result    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	42	None	replace
824	[BUG]  [BUGGY]  return  result  -(length  -  '0')/  4;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(length  -  '0')/  4;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(length  -  '0')/  4;	  return    result    +(length    -    '0')/    4;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
825	[BUG]  [BUGGY]  return  result  +(length  -  '0')/  2L;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')/  2L;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')/  2L;	  return    result    +(length    -    '0')/    2;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
826	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "result  must  be  >  0 ");  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  throw  new  IllegalArgumentException( "result  must  be  >  0 ");  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	throw  new  IllegalArgumentException( "result  must  be  >  0 ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	79	None	replace
827	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(result);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	throw  new  IllegalArgumentException( " ".equals(result);	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	79	None	replace
828	[BUG]  [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  start,  length);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  start,  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  start,  length);	  result    =    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	55	None	replace
829	[BUG]  [BUGGY]  result  =  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");	  result    =    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	55	None	replace
830	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsByte(result):  JsonStringEncoder.getInstance().encodeAsByte(result);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsByte(result):  JsonStringEncoder.getInstance().encodeAsByte(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsByte(result):  JsonStringEncoder.getInstance().encodeAsByte(result);	  return    result!=    3?    JsonStringEncoder.getInstance().encodeAsByte(currentByte):    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	121	None	replace
831	[BUG]  [BUGGY]  return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCII(result));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCII(result));  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCII(result));	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCII(result));    	non-compiled	[CE]  <identifier>  expected	104	None	replace
832	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getIn  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getIn  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getIn	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCII(result));    	non-compiled	[CE]  <identifier>  expected	104	None	replace
833	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  2);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  2);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  -  2);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	139	None	replace
834	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  length);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	System.arraycopy(buffer,  offset,  buffer,  end,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	139	None	replace
835	[BUG]  [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getIn	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getIn    	non-compiled	[CE]  <identifier>  expected	7	None	replace
836	[BUG]  [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(currentByte);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(currentByte);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(currentByte);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
837	[BUG]  [BUGGY]  return  result  -(length  +  1)/  4;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(length  +  1)/  4;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(length  +  1)/  4;	  return    result    -(result    +    1)/    4;    	non-compiled	[CE]  <identifier>  expected	97	None	replace
838	[BUG]  [BUGGY]  return  result  /(result  +  1)/  4;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /(result  +  1)/  4;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /(result  +  1)/  4;	  return    result    -(result    +    1)/    4;    	non-compiled	[CE]  <identifier>  expected	97	None	replace
839	[BUG]  [BUGGY]  return  result  >  0?  buffer[start]  :  result;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >  0?  buffer[start]  :  result;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >  0?  buffer[start]  :  result;	  return    result    >    0?    result    :    buffer.length;    	non-compiled	[CE]  <identifier>  expected	166	None	replace
840	[BUG]  [BUGGY]  return  result  -(result  -  1)/(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  1)/(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  1)/(currentByte  -  '0');	  return    result    -(result    <    <    1)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	3	None	replace
841	[BUG]  [BUGGY]  return  result  -(result  -  1  -(currentByte  -  '0'));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  1  -(currentByte  -  '0'));  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  1  -(currentByte  -  '0'));	  return    result    -(result    <    <    1)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	3	None	replace
842	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeA  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeA  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeA	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCI    	non-compiled	[CE]  <identifier>  expected	31	None	replace
843	[BUG]  [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encode  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encode  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encode	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCI    	non-compiled	[CE]  <identifier>  expected	31	None	replace
844	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance())    	non-compiled	[CE]  <identifier>  expected	177	None	replace
845	[BUG]  [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance())  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance())  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance())	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance())    	non-compiled	[CE]  <identifier>  expected	177	None	replace
846	[BUG]  [BUGGY]  return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance())  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance())  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance())	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance())    	non-compiled	[CE]  <identifier>  expected	177	None	replace
847	[BUG]  [BUGGY]  result  =  result  -(result  <  <  7)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(result  <  <  7)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(result  <  <  7)+(currentByte  -  '0');	  result    =    result    -(currentByte    <    <    3)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	16	None	replace
848	[BUG]  [BUGGY]  result  =  result  -(result  <  <  6)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(result  <  <  6)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(result  <  <  6)+(currentByte  -  '0');	  result    =    result    -(currentByte    <    <    3)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	16	None	replace
849	[BUG]  [BUGGY]  result  =  result  -(result  <  <  3)+(long  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  -(result  <  <  3)+(long  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  -(result  <  <  3)+(long  -  '0');	  result    =    result    -(currentByte    <    <    3)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	16	None	replace
850	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getInstance()).encodeAsCII(  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getInstance()).encodeAsCII(  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getInstance()).encodeAsCII(	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	124	None	replace
851	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getInstance()).encodeAsCII(result);	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	124	None	replace
852	[BUG]  [BUGGY]  return  result  -(result  *  3)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  *  3)+(result  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  *  3)+(result  -  '0');	  return    result    -(currentByte    +    3)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	18	None	replace
853	[BUG]  [BUGGY]  return  result  -(currentByte  +  1)/(result  -  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(currentByte  +  1)/(result  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(currentByte  +  1)/(result  -  '0');	  return    result    -(currentByte    +    3)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	18	None	replace
854	[BUG]  [BUGGY]  return  result  -(currentByte  +  3)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(currentByte  +  3)+(length  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(currentByte  +  3)+(length  -  '0');	  return    result    -(currentByte    +    3)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	18	None	replace
855	[BUG]  [BUGGY]  result  =(result  <  <  1)/(length  -  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  <  <  1)/(length  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  <  <  1)/(length  -  '0');	  result    =(result    <    <    1)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	77	None	replace
856	[BUG]  [BUGGY]  result  =(result  <  <  2)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  <  <  2)+(length  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  <  <  2)+(length  -  '0');	  result    =(result    <    <    1)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	77	None	replace
857	[BUG]  [BUGGY]  return  result  -(length  +  1)/  3;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(length  +  1)/  3;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(length  +  1)/  3;	  return    result    -(result    +    1)/    3;    	non-compiled	[CE]  <identifier>  expected	100	None	replace
858	[BUG]  [BUGGY]  return  result  -(result  *  3  +  1)/  3;  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  *  3  +  1)/  3;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  *  3  +  1)/  3;	  return    result    -(result    +    1)/    3;    	non-compiled	[CE]  <identifier>  expected	100	None	replace
859	[BUG]  [BUGGY]  return  result  ==  >  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  >  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  >  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);	  return    result    <    <    4?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
860	[BUG]  [BUGGY]  return  result  >=  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);	  return    result    <    <    4?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
861	[BUG]  [BUGGY]  return  result  ==  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(	  return    result    <    <    4?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
862	[BUG]  [BUGGY]  return  result  >  '0'?  result  -  '0'  :  result;  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >  '0'?  result  -  '0'  :  result;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >  '0'?  result  -  '0'  :  result;	  return    result    -    '0';    	non-compiled	[CE]  <identifier>  expected	25	None	replace
863	[BUG]  [BUGGY]  return  result  -  '0'  +  7;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -  '0'  +  7;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -  '0'  +  7;	  return    result    -    '0';    	non-compiled	[CE]  <identifier>  expected	25	None	replace
864	[BUG]  [BUGGY]  return  result  -  '0'  +(length  -  '7');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -  '0'  +(length  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -  '0'  +(length  -  '7');	  return    result    -    '0';    	non-compiled	[CE]  <identifier>  expected	25	None	replace
865	[BUG]  [BUGGY]  return  result  -  '0'  ||  result  >  '7';  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -  '0'  ||  result  >  '7';  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -  '0'  ||  result  >  '7';	  return    result    -    '0';    	non-compiled	[CE]  <identifier>  expected	25	None	replace
866	[BUG]  [BUGGY]  return  result  >=  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance	  return    result    >=    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance    	non-compiled	[CE]  <identifier>  expected	170	None	replace
867	[BUG]  [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.	  return    result    >=    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getIn    	non-compiled	[CE]  <identifier>  expected	118	None	replace
868	[BUG]  [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCII(currentByte));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCII(currentByte));  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAsCII(currentByte));	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCII(currentByte));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
869	[BUG]  [BUGGY]  result  =(result  <  <  7)+(BYTE_MASK  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  <  <  7)+(BYTE_MASK  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  <  <  7)+(BYTE_MASK  -  '0');	  result    =(result    <    <    3)+(BYTE_MASK    -    '0');    	non-compiled	[CE]  <identifier>  expected	75	None	replace
870	[BUG]  [BUGGY]  return  result  *  '0'  -  1;  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  *  '0'  -  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  *  '0'  -  1;	  return    result    +    '0'    -    1;    	non-compiled	[CE]  <identifier>  expected	158	None	replace
871	[BUG]  [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  length);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  length);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    length);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
872	[BUG]  [BUGGY]  return  result  -(result  -  '0')/(currentByte  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  '0')/(currentByte  -  '0')+  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  '0')/(currentByte  -  '0')+  1;	  return    result    -(result    <    <    3)+(currentByte    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	122	None	replace
873	[BUG]  [BUGGY]  return  result  -(length  -  '0')+(currentByte  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(length  -  '0')+(currentByte  -  '0')+  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(length  -  '0')+(currentByte  -  '0')+  1;	  return    result    -(result    <    <    3)+(currentByte    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	122	None	replace
874	[BUG]  [BUGGY]  return  result  -(result  -  '0')+(length  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  '0')+(length  -  '0')+  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  '0')+(length  -  '0')+  1;	  return    result    -(result    <    <    3)+(currentByte    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	122	None	replace
875	[BUG]  [BUGGY]  return  result  -(result  -  3)+(currentByte  -  '0')/  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  3)+(currentByte  -  '0')/  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  3)+(currentByte  -  '0')/  1;	  return    result    -(result    <    <    3)+(currentByte    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	122	None	replace
876	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(buffer,  offset,  length);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(buffer,  offset,  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsByte(buffer,  offset,  length);	  result    =    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	159	None	replace
877	[BUG]  [BUGGY]  result  =(result  <  <  6)+(Byte  -  '0');  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  <  <  6)+(Byte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  <  <  6)+(Byte  -  '0');	  result    =(result    <    <    3)+(Byte    -    '0');    	non-compiled	[CE]  <identifier>  expected	78	None	replace
878	[BUG]  [BUGGY]  return  result  >=  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance());  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance());  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance());	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
879	[BUG]  [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getInstance()).encodeAsCII(  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getInstance()).encodeAsCII(  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getInstance()).encodeAsCII(	  return    result    >=    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	126	None	replace
880	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encode  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encode  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encode	  return    result!=    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	154	None	replace
881	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAs  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAs  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAs	  return    result!=    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	154	None	replace
882	[BUG]  [BUGGY]  return  result  +(result  -  '0')/(length  -  '7',  currentByte);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(result  -  '0')/(length  -  '7',  currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(result  -  '0')/(length  -  '7',  currentByte);	  return    result    +(result    -    '0')/(length    -    '7');    	non-compiled	[CE]  <identifier>  expected	171	None	replace
883	[BUG]  [BUGGY]  return  result  >=  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()));	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()));    	non-compiled	[CE]  <identifier>  expected	54	None	replace
884	[BUG]  [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()));    	non-compiled	[CE]  <identifier>  expected	54	None	replace
885	[BUG]  [BUGGY]  return  result  -(result  -  '0'  +  '7');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  '0'  +  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  '0'  +  '7');	  return    result    -(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	37	None	replace
886	[BUG]  [BUGGY]  return  result  -(length  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(length  -  '0')+  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(length  -  '0')+  1;	  return    result    -(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	37	None	replace
887	[BUG]  [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.getInstance()).encodeAsCII(result);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(currentByte,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
888	[BUG]  [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.	  result    =    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
889	[BUG]  [BUGGY]  result  =  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  <  <  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);	  result    =    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
890	[BUG]  [BUGGY]  result  =  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(result);	  result    =    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
891	[BUG]  [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  <  <  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance	  result    =    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
892	[BUG]  [BUGGY]  return  result  -(result  +  1)/  2  +  length;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  +  1)/  2  +  length;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  +  1)/  2  +  length;	  return    result    -(result    +    1)/    2;    	non-compiled	[CE]  <identifier>  expected	95	None	replace
893	[BUG]  [BUGGY]  return  result  >=  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	56	None	replace
894	[BUG]  [BUGGY]  return  result  >=  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  BYTE_MASK);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  BYTE_MASK);	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	56	None	replace
895	[BUG]  [BUGGY]  return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance    	non-compiled	[CE]  <identifier>  expected	169	None	replace
896	[BUG]  [BUGGY]  return  result  ==  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance    	non-compiled	[CE]  <identifier>  expected	169	None	replace
897	[BUG]  [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.	  return    result    ==    1?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()));    	non-compiled	[CE]  <identifier>  expected	176	None	replace
898	[BUG]  [BUGGY]  return  result  >=  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");	  return    result    <    <    4?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	57	None	replace
899	[BUG]  [BUGGY]  return  result  ==  8?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  8?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  8?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,   "UTF-8 ");	  return    result    <    <    4?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	57	None	replace
900	[BUG]  [BUGGY]  return  result  +(length  *  '0')+(currentByte  *  '7');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  *  '0')+(currentByte  *  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  *  '0')+(currentByte  *  '7');	  return    result    +(length    -    '0')+(currentByte    *    '7');    	non-compiled	[CE]  <identifier>  expected	93	None	replace
901	[BUG]  [BUGGY]  return  result  -(result  -(length  -  '0'));  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -(length  -  '0'));  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -(length  -  '0'));	  return    result    -(currentByte    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	19	None	replace
902	[BUG]  [BUGGY]  return  result  -(result  -  length)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  length)+(length  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  length)+(length  -  '0');	  return    result    -(currentByte    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	19	None	replace
903	[BUG]  [BUGGY]  result  =  result  /(currentByte  <  <  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  /(currentByte  <  <  3)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  /(currentByte  <  <  3)+(currentByte  -  '0');	  result    =    result    -(currentByte    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	2	None	replace
904	[BUG]  [BUGGY]  return  result  >=  0?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  0?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  0?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);	  return    result    <    <    4?    JsonStringEncoder.getInstance().encodeAsByte(currentByte):    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
905	[BUG]  [BUGGY]  return  result  ==  >  4?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  >  4?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  >  4?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);	  return    result    <    <    4?    JsonStringEncoder.getInstance().encodeAsByte(currentByte):    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
906	[BUG]  [BUGGY]  return  result  +(result  -  '0')/(end  -  '7');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(result  -  '0')/(end  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(result  -  '0')/(end  -  '7');	  return    result    +(length    -    '0')+(end    -    '7');    	non-compiled	[CE]  <identifier>  expected	91	None	replace
907	[BUG]  [BUGGY]  return  result  +(end  -  '0')/(end  -  '7');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(end  -  '0')/(end  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(end  -  '0')/(end  -  '7');	  return    result    +(length    -    '0')+(end    -    '7');    	non-compiled	[CE]  <identifier>  expected	91	None	replace
908	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCII(    	non-compiled	[CE]  <identifier>  expected	149	None	replace
909	[BUG]  [BUGGY]  return  result  ==  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().en  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().en  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().en	  return    result    <    <    4?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCI    	non-compiled	[CE]  <identifier>  expected	35	None	replace
910	[BUG]  [BUGGY]  return  result  ==  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeA  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeA  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  4?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeA	  return    result    <    <    4?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCI    	non-compiled	[CE]  <identifier>  expected	35	None	replace
911	[BUG]  [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result);	  return    result    >=    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
912	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  0,  length);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  0,  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  0,  length);	  return    result    >=    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	143	None	replace
913	[BUG]  [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.	  return    result    >=    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()));    	non-compiled	[CE]  <identifier>  expected	175	None	replace
914	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()	  return    result    >=    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCI    	non-compiled	[CE]  <identifier>  expected	34	None	replace
915	[BUG]  [BUGGY]  return  result  *  3  +(length  %  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  *  3  +(length  %  BYTE_MASK);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  *  3  +(length  %  BYTE_MASK);	  return    result    *    3;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
916	[BUG]  [BUGGY]  return  result  *  2  +(length  -  1)/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  *  2  +(length  -  1)/  BYTE_MASK;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  *  2  +(length  -  1)/  BYTE_MASK;	  return    result    *    2;    	non-compiled	[CE]  <identifier>  expected	142	None	replace
917	[BUG]  [BUGGY]  return  result  *  2  +(length  %  BYTE_MASK);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  *  2  +(length  %  BYTE_MASK);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  *  2  +(length  %  BYTE_MASK);	  return    result    *    2;    	non-compiled	[CE]  <identifier>  expected	142	None	replace
918	[BUG]  [BUGGY]  return  result  *  2  +  1;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  *  2  +  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  *  2  +  1;	  return    result    *    2;    	non-compiled	[CE]  <identifier>  expected	142	None	replace
919	[BUG]  [BUGGY]  return  result  *  2  +(length  -  1);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  *  2  +(length  -  1);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  *  2  +(length  -  1);	  return    result    *    2;    	non-compiled	[CE]  <identifier>  expected	142	None	replace
920	[BUG]  [BUGGY]  return  result  *  2  +(length  -  1)/  2;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  *  2  +(length  -  1)/  2;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  *  2  +(length  -  1)/  2;	  return    result    *    2;    	non-compiled	[CE]  <identifier>  expected	142	None	replace
921	[BUG]  [BUGGY]  return  result  -(currentByte  -  '0')/(result  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(currentByte  -  '0')/(result  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(currentByte  -  '0')/(result  -  '0');	  return    result    -(result    -    '0')+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	43	None	replace
922	[BUG]  [BUGGY]  return  result  /(result  -  '0')+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /(result  -  '0')+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /(result  -  '0')+(currentByte  -  '0');	  return    result    -(result    -    '0')+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	43	None	replace
923	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getInstance()).encodeAsCII  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getInstance()).encodeAsCII  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getInstance()).encodeAsCII	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(buffer,    result,    JsonStringEncoder.getInstance()).encodeAsCII(    	non-compiled	[CE]  <identifier>  expected	156	None	replace
924	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getInstance()).encodeA  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getInstance()).encodeA  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getInstance()).encodeA	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(buffer,    result,    JsonStringEncoder.getInstance()).encodeAsCII(    	non-compiled	[CE]  <identifier>  expected	156	None	replace
925	[BUG]  [BUGGY]  result  =(result  <  <  7)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  <  <  7)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  <  <  7)+(currentByte  -  '0');	  result    =(result    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
926	[BUG]  [BUGGY]  result  =(result  <  <  6)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =(result  <  <  6)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =(result  <  <  6)+(currentByte  -  '0');	  result    =(result    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
927	[BUG]  [BUGGY]  return  result  +(length  -  1)+(currentByte  -  '7');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  1)+(currentByte  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  1)+(currentByte  -  '7');	  return    result    +(length    -    '0')+(currentByte    -    '7');    	non-compiled	[CE]  <identifier>  expected	89	None	replace
928	[BUG]  [BUGGY]  result  =  length  -  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  length  -  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  length  -  1;	  result    =    result    -    1;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
929	[BUG]  [BUGGY]  return  result  -(offset  <  <  3)+('0'  +  currentByte);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(offset  <  <  3)+('0'  +  currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(offset  <  <  3)+('0'  +  currentByte);	  return    result    -(result    <    <    3)+('0'    +    currentByte);    	non-compiled	[CE]  <identifier>  expected	134	None	replace
930	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(buffer,  offset,  length);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(buffer,  offset,  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsString(buffer,  offset,  length);	  result    =    JsonStringEncoder.getInstance().encodeAsString(result);    	non-compiled	[CE]  <identifier>  expected	160	None	replace
931	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(buffer,  start,  length);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(buffer,  start,  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsString(buffer,  start,  length);	  result    =    JsonStringEncoder.getInstance().encodeAsString(result);    	non-compiled	[CE]  <identifier>  expected	160	None	replace
932	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(buffer,  start);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(buffer,  start);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsString(buffer,  start);	  result    =    JsonStringEncoder.getInstance().encodeAsString(result);    	non-compiled	[CE]  <identifier>  expected	160	None	replace
933	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsciiString(buffer,  start,  length);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsciiString(buffer,  start,  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsciiString(buffer,  start,  length);	  result    =    JsonStringEncoder.getInstance().encodeAsString(result);    	non-compiled	[CE]  <identifier>  expected	160	None	replace
934	[BUG]  [BUGGY]  return  result  +  '0'  *  length;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +  '0'  *  length;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +  '0'  *  length;	  return    result    +    '0'    +    length;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
935	[BUG]  [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAs  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAs  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeAs	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAs    	non-compiled	[CE]  <identifier>  expected	102	None	replace
936	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsString(buffer,  result);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsString(buffer,  result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsString(buffer,  result);	  result    =    JsonStringEncoder.getInstance().quoteAsString(result);    	non-compiled	[CE]  <identifier>  expected	161	None	replace
937	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsISOControl(result);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsISOControl(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsISOControl(result);	  result    =    JsonStringEncoder.getInstance().quoteAsString(result);    	non-compiled	[CE]  <identifier>  expected	161	None	replace
938	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsByte(result);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsByte(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsByte(result);	  result    =    JsonStringEncoder.getInstance().quoteAsString(result);    	non-compiled	[CE]  <identifier>  expected	161	None	replace
939	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsString(buffer);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsString(buffer);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsString(buffer);	  result    =    JsonStringEncoder.getInstance().quoteAsString(result);    	non-compiled	[CE]  <identifier>  expected	161	None	replace
940	[BUG]  [BUGGY]  return  result  +(result  -  '0')/  2.0;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(result  -  '0')/  2.0;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(result  -  '0')/  2.0;	  return    result    +(length    -    '0')/    '0';    	non-compiled	[CE]  <identifier>  expected	110	None	replace
941	[BUG]  [BUGGY]  return  result  *(result  -  '0');  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  *(result  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  *(result  -  '0');	  return    result    +(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	36	None	replace
942	[BUG]  [BUGGY]  return  result  *(length  -  '0')+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  *(length  -  '0')+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  *(length  -  '0')+(currentByte  -  '0');	  return    result    -(length    -    '0')+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	150	None	replace
943	[BUG]  [BUGGY]  return  result  +(length  -  '0')+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  '0')+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  '0')+(currentByte  -  '0');	  return    result    -(length    -    '0')+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	150	None	replace
944	[BUG]  [BUGGY]  return  result  -(length  -  result)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(length  -  result)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(length  -  result)+(currentByte  -  '0');	  return    result    -(result    -    offset)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	114	None	replace
945	[BUG]  [BUGGY]  return  result  -(result  -  1)/(result  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  1)/(result  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  1)/(result  -  '0');	  return    result    -(result    <    <    1)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	164	None	replace
946	[BUG]  [BUGGY]  return  result  -(result  <  <  1)/(result  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  <  <  1)/(result  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  <  <  1)/(result  -  '0');	  return    result    -(currentByte    <    <    1)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	17	None	replace
947	[BUG]  [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  currentByte);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  currentByte);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    currentByte);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
948	[BUG]  [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  currentByte);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  currentByte);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    currentByte);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
949	[BUG]  [BUGGY]  return  result  /(result  *  BYTE_MASK  +  1)/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /(result  *  BYTE_MASK  +  1)/  BYTE_MASK;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /(result  *  BYTE_MASK  +  1)/  BYTE_MASK;	  return    result    -(result    *    BYTE_MASK    +    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
950	[BUG]  [BUGGY]  return  result  -(result  -  8)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  8)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  8)+(currentByte  -  '0');	  return    result    -(result    <    <    4)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	123	None	replace
951	[BUG]  [BUGGY]  return  result  -(result  -  10)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(result  -  10)+(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(result  -  10)+(currentByte  -  '0');	  return    result    -(result    <    <    4)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	123	None	replace
952	[BUG]  [BUGGY]  return  result  /  BYTE_MASK;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /  BYTE_MASK;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /  BYTE_MASK;	  return    result    /    '0';    	non-compiled	[CE]  <identifier>  expected	26	None	replace
953	[BUG]  [BUGGY]  return  result  /  '0'  +  7;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /  '0'  +  7;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /  '0'  +  7;	  return    result    /    '0';    	non-compiled	[CE]  <identifier>  expected	26	None	replace
954	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsCII(buffer,  start,  length);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsCII(buffer,  start,  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsCII(buffer,  start,  length);	  result    =    JsonStringEncoder.getInstance().encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	162	None	replace
955	[BUG]  [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,   "UTF-8 ");  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,   "UTF-8 ");  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,   "UTF-8 ");	  return    result    ==    1?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	145	None	replace
956	[BUG]  [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  0,  length);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  0,  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  0,  length);	  return    result    ==    1?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	145	None	replace
957	[BUG]  [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  BYTE_MASK);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  BYTE_MASK);	  return    result    ==    1?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,       "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	145	None	replace
958	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(currentByte,    JsonStringEncoder.getIn    	non-compiled	[CE]  <identifier>  expected	9	None	replace
959	[BUG]  [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  JsonStringEncoder.	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(currentByte,    JsonStringEncoder.getIn    	non-compiled	[CE]  <identifier>  expected	9	None	replace
960	[BUG]  [BUGGY]  return  result  /(result  *  BYTE_MASK)/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  /(result  *  BYTE_MASK)/  BYTE_MASK;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  /(result  *  BYTE_MASK)/  BYTE_MASK;	  return    result    -(result    *    BYTE_MASK)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	130	None	replace
961	[BUG]  [BUGGY]  return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().en  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().en  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().en	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCI    	non-compiled	[CE]  <identifier>  expected	33	None	replace
962	[BUG]  [BUGGY]  return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeA  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeA  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance().encodeA	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance().encodeAsCI    	non-compiled	[CE]  <identifier>  expected	33	None	replace
963	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeA  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeA  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeA	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCI    	non-compiled	[CE]  <identifier>  expected	68	None	replace
964	[BUG]  [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encode  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encode  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encode	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCI    	non-compiled	[CE]  <identifier>  expected	68	None	replace
965	[BUG]  [BUGGY]  return  result  +(result  -  '0')+(buffer[length  -  '7');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(result  -  '0')+(buffer[length  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(result  -  '0')+(buffer[length  -  '7');	  return    result    +(length    -    '0')+(buffer[length    -    '7');    	non-compiled	[CE]  <identifier>  expected	92	None	replace
966	[BUG]  [BUGGY]  return  result  +(length  -  1)+(buffer[length  -  '7');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  1)+(buffer[length  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  1)+(buffer[length  -  '7');	  return    result    +(length    -    '0')+(buffer[length    -    '7');    	non-compiled	[CE]  <identifier>  expected	92	None	replace
967	[BUG]  [BUGGY]  return  offset  +(length  -  '0')+(buffer[length  -  '7');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  offset  +(length  -  '0')+(buffer[length  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  offset  +(length  -  '0')+(buffer[length  -  '7');	  return    result    +(length    -    '0')+(buffer[length    -    '7');    	non-compiled	[CE]  <identifier>  expected	92	None	replace
968	[BUG]  [BUGGY]  return  result  +  '0'  +(currentByte  -  '7')+  1;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +  '0'  +(currentByte  -  '7')+  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +  '0'  +(currentByte  -  '7')+  1;	  return    result    +    '0'    +(currentByte    -    '7');    	non-compiled	[CE]  <identifier>  expected	28	None	replace
969	[BUG]  [BUGGY]  return  result  +(length  -  1)+(result  -  '7');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(length  -  1)+(result  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(length  -  1)+(result  -  '7');	  return    result    +(length    -    '0')+(result    -    '7');    	non-compiled	[CE]  <identifier>  expected	90	None	replace
970	[BUG]  [BUGGY]  result  =  result  *  1;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  *  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  *  1;	  result    =    result    +    1;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
971	[BUG]  [BUGGY]  return  result  -(length  -  '0')/  3;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  -(length  -  '0')/  3;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  -(length  -  '0')/  3;	  return    result    +(length    -    '0')/    3;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
972	[BUG]  [BUGGY]  return  offset  +(length  -  '0')/  3;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  offset  +(length  -  '0')/  3;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  offset  +(length  -  '0')/  3;	  return    result    +(length    -    '0')/    3;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
973	[BUG]  [BUGGY]  return  result  +(result  /  BYTE_MASK)/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +(result  /  BYTE_MASK)/  BYTE_MASK;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +(result  /  BYTE_MASK)/  BYTE_MASK;	  return    result    +(length    -    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	105	None	replace
974	[BUG]  [BUGGY]  result  +=(length  -  3);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  +=(length  -  3);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  +=(length  -  3);	  result    +=(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	41	None	replace
975	[BUG]  [BUGGY]  return  result  ==  0?  result  :  JsonStringEncoder.getInstance().encodeAsString(result);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  0?  result  :  JsonStringEncoder.getInstance().encodeAsString(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  0?  result  :  JsonStringEncoder.getInstance().encodeAsString(result);	  return    result    ==    0?    result    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	83	None	replace
976	[BUG]  [BUGGY]  return  result  ==  0?  result  :  JsonStringEncoder.getInstance().encodeAsString(result));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  0?  result  :  JsonStringEncoder.getInstance().encodeAsString(result));  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  0?  result  :  JsonStringEncoder.getInstance().encodeAsString(result));	  return    result    ==    0?    result    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	83	None	replace
977	[BUG]  [BUGGY]  return  result  ==  0?  result  :  JsonStringEncoder.getInstance().encodeAsByte(result);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  0?  result  :  JsonStringEncoder.getInstance().encodeAsByte(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  0?  result  :  JsonStringEncoder.getInstance().encodeAsByte(result);	  return    result    ==    0?    result    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	83	None	replace
978	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().parseAsCII(buffer,  start,  length);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().parseAsCII(buffer,  start,  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().parseAsCII(buffer,  start,  length);	  result    =    JsonStringEncoder.getInstance().quoteAsCII(result);    	non-compiled	[CE]  <identifier>  expected	163	None	replace
979	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().parseAsCII(buffer,  offset,  length);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().parseAsCII(buffer,  offset,  length);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  JsonStringEncoder.getInstance().parseAsCII(buffer,  offset,  length);	  result    =    JsonStringEncoder.getInstance().quoteAsCII(result);    	non-compiled	[CE]  <identifier>  expected	163	None	replace
980	[BUG]  [BUGGY]  return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(    	non-compiled	[CE]  <identifier>  expected	155	None	replace
981	[BUG]  [BUGGY]  return  result  +  '0'  +(length  -  '0');  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +  '0'  +(length  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +  '0'  +(length  -  '0');	  return    result    +    '0'    +(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	109	None	replace
982	[BUG]  [BUGGY]  return  result  +  1  +(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +  1  +(currentByte  -  '0');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +  1  +(currentByte  -  '0');	  return    result    +    '0'    +(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	109	None	replace
983	[BUG]  [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(currentByte);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
984	[BUG]  [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  result);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(currentByte,  result);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(currentByte,    result);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
985	[BUG]  [BUGGY]  return  result  >=  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  BYTE_MASK);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  BYTE_MASK);	  return    result    >=    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
986	[BUG]  [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  BYTE_MASK);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  BYTE_MASK);	  return    result    >=    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
987	[BUG]  [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,  BYTE_MASK);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  3?  JsonStringEncoder.getInstance().encodeAsCII(result):  JsonStringEncoder.getInstance().encodeAsCII(result,  BYTE_MASK);	  return    result    >=    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
988	[BUG]  [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  2);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  2);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  2);	  return    result    >=    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
989	[BUG]  [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsByte(result):  JsonStringEncoder.getInstance().encodeAsByte(result);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsByte(result):  JsonStringEncoder.getInstance().encodeAsByte(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsByte(result):  JsonStringEncoder.getInstance().encodeAsByte(result);	  return    result    >=    3?    JsonStringEncoder.getInstance().encodeAsByte(currentByte):    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	120	None	replace
990	[BUG]  [BUGGY]  return  result  +  '0'  +(result  -  '7')+  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +  '0'  +(result  -  '7')+  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +  '0'  +(result  -  '7')+  1;	  return    result    +    '0'    +(result    -    '7');    	non-compiled	[CE]  <identifier>  expected	30	None	replace
991	[BUG]  [BUGGY]  return  result  +  1  +(result  -  '7');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  +  1  +(result  -  '7');  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  +  1  +(result  -  '7');	  return    result    +    '0'    +(result    -    '7');    	non-compiled	[CE]  <identifier>  expected	30	None	replace
992	[BUG]  [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  currentByte,  JsonStringEncoder.  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  currentByte,  JsonStringEncoder.  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  currentByte,  JsonStringEncoder.	  return    result    ==    1?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance());    	non-compiled	[CE]  <identifier>  expected	168	None	replace
993	[BUG]  [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  1);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  1);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  >=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  1);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    1);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
994	[BUG]  [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  1);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  1);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result!=  3?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  1);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    1);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
995	[BUG]  [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  1);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  1?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  1);	  return    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    1);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
996	[BUG]  [BUGGY]  result  =  result  >=  3?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  >=  3?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  >=  3?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);	  result    =    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsByte(currentByte):    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
997	[BUG]  [BUGGY]  result  =  result  ==  3?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  result  =  result  ==  3?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	result  =  result  ==  3?  JsonStringEncoder.getInstance().encodeAsByte(currentByte):  JsonStringEncoder.getInstance().encodeAsByte(result);	  result    =    result    <    <    3?    JsonStringEncoder.getInstance().encodeAsByte(currentByte):    JsonStringEncoder.getInstance().encodeAsByte(result);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
998	[BUG]  [BUGGY]  return  result  %  2  <  <  1;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  %  2  <  <  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  %  2  <  <  1;	  return    result    <    <    1;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
999	[BUG]  [BUGGY]  return  result  %  2  >=  <  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  %  2  >=  <  1;  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  %  2  >=  <  1;	  return    result    <    <    1;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
1000	[BUG]  [BUGGY]  return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  0?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.	  return    result    ==    3?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getIn    	non-compiled	[CE]  <identifier>  expected	117	None	replace
1001	[BUG]  [BUGGY]  return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  ==  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(result,  JsonStringEncoder.getInstance()).encodeAsCII(	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
1002	[BUG]  [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getInstance()).encodeAsCII(  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getInstance()).encodeAsCII(  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	return  result  <  <  2?  JsonStringEncoder.getInstance().encodeAsCII(currentByte):  JsonStringEncoder.getInstance().encodeAsCII(buffer,  result,  JsonStringEncoder.getInstance()).encodeAsCII(	  return    result    <    <    2?    JsonStringEncoder.getInstance().encodeAsCII(currentByte):    JsonStringEncoder.getInstance().encodeAsCII(result,    JsonStringEncoder.getInstance()).encodeAsCII(result);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
1003	[BUG]  [BUGGY]  aught(new  IllegalArgumentException( " ").toString()));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  aught(new  IllegalArgumentException( " ").toString()));  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	aught(new  IllegalArgumentException( " ").toString()));	  if(result    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	137	None	replace
1004	[BUG]  [BUGGY]  aught(new  IllegalArgumentException( " "));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  aught(new  IllegalArgumentException( " "));  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	aught(new  IllegalArgumentException( " "));	  if(result    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	137	None	replace
1005	[BUG]  [BUGGY]  aught(new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  aught(new  IllegalArgumentException( " ");  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	aught(new  IllegalArgumentException( " ");	  if(result    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	137	None	replace
1006	[BUG]  [BUGGY]  aughtInvalidEOFInValue( "result ");  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }      [BUGGY]  aughtInvalidEOFInValue( "result ");  [BUGGY]      }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	111	111	1	replace	aughtInvalidEOFInValue( "result ");	  if(result    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	137	None	replace
