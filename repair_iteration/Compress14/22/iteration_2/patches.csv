bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  start,  length,  currentByte,  end));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  start,  length,  currentByte,  end));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  start,  length,  currentByte,  end));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    end));    	non-compiled	[CE]  <identifier>  expected	40	None	replace
2	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  currentByte,  allNUL));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  currentByte,  allNUL));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  currentByte,  allNUL));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    end));    	non-compiled	[CE]  <identifier>  expected	40	None	replace
3	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte,  '-'));  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte,  '-'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte,  '-'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '-'));    	non-compiled	[CE]  <identifier>  expected	102	None	replace
4	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end,  currentByte,  '-'));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end,  currentByte,  '-'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end,  currentByte,  '-'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '-'));    	non-compiled	[CE]  <identifier>  expected	102	None	replace
5	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  length,  currentByte,  '-'));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  length,  currentByte,  '-'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  length,  currentByte,  '-'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '-'));    	non-compiled	[CE]  <identifier>  expected	102	None	replace
6	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '-'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '-'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '-'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '-'));    	non-compiled	[CE]  <identifier>  expected	102	None	replace
7	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ".equals(currentByte));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalStateException( " ".equals(currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalStateException( " ".equals(currentByte));	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	26	None	replace
8	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw  new  IllegalStateException( " ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	26	None	replace
9	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ".equals(currentByte)?  null  : " ");  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalStateException( " ".equals(currentByte)?  null  : " ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalStateException( " ".equals(currentByte)?  null  : " ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	26	None	replace
10	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ".equals(currentByte)?  null  : "null ");  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalStateException( " ".equals(currentByte)?  null  : "null ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalStateException( " ".equals(currentByte)?  null  : "null ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	26	None	replace
11	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ".equals(currentByte.toString()));  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalStateException( " ".equals(currentByte.toString()));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalStateException( " ".equals(currentByte.toString()));	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	26	None	replace
12	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  start,  0));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  start,  0));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  start,  0));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    0));    	non-compiled	[CE]  <identifier>  expected	107	None	replace
13	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  start,  currentByte,  0));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  start,  currentByte,  0));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  start,  currentByte,  0));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    0));    	non-compiled	[CE]  <identifier>  expected	107	None	replace
14	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  1));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  1));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  1));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    0));    	non-compiled	[CE]  <identifier>  expected	107	None	replace
15	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  BYTE_MASK));  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  BYTE_MASK));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  BYTE_MASK));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    0));    	non-compiled	[CE]  <identifier>  expected	107	None	replace
16	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  false));  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  false));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  false));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    0));    	non-compiled	[CE]  <identifier>  expected	107	None	replace
17	[BUG]  [BUGGY]  ((  byte)currentByte).reset();  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  ((  byte)currentByte).reset();  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	((  byte)currentByte).reset();	  ((    byte)currentByte).setLength(0);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
18	[BUG]  [BUGGY]  ((  byte)currentByte).append('0');  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  ((  byte)currentByte).append('0');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	((  byte)currentByte).append('0');	  ((    byte)currentByte).setLength(0);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
19	[BUG]  [BUGGY]  ((  byte)currentByte).setLength(1);  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  ((  byte)currentByte).setLength(1);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	((  byte)currentByte).setLength(1);	  ((    byte)currentByte).setLength(0);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
20	[BUG]  [BUGGY]  ((  byte)currentByte).setLength(2);  [CE]  <identifier>  expected  [FE]                                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  ((  byte)currentByte).setLength(2);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	((  byte)currentByte).setLength(2);	  ((    byte)currentByte).setLength(0);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
21	[BUG]  [BUGGY]  ((  byte)currentByte).setEnd(0);  [CE]  <identifier>  expected  [FE]                                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  ((  byte)currentByte).setEnd(0);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	((  byte)currentByte).setEnd(0);	  ((    byte)currentByte).setLength(0);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
22	[BUG]  [BUGGY]  ((  byte)currentByte).getLength()  >  0;  [CE]  <identifier>  expected  [FE]                                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  ((  byte)currentByte).getLength()  >  0;  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	((  byte)currentByte).getLength()  >  0;	  ((    byte)currentByte).setLength(0);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
23	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  end,  length,  start,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  end,  length,  start,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  end,  length,  start,  currentByte,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    end,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	49	None	replace
24	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  end,  length,  start,  '0'));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  end,  length,  start,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  end,  length,  start,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    end,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	49	None	replace
25	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  end,  offset,  length,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  end,  offset,  length,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  end,  offset,  length,  currentByte,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    end,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	49	None	replace
26	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '0',  currentByte,  '1')+  1);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '0',  currentByte,  '1')+  1);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '0',  currentByte,  '1')+  1);	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    '0',    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	63	None	replace
27	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  0,  currentByte,  '1'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  0,  currentByte,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  0,  currentByte,  '1'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    '0',    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	63	None	replace
28	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '0',  currentByte,  '7'));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '0',  currentByte,  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '0',  currentByte,  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    '0',    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	63	None	replace
29	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  1  -  '0',  currentByte,  '1'));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  1  -  '0',  currentByte,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  1  -  '0',  currentByte,  '1'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    '0',    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	63	None	replace
30	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  '0',  currentByte,  '1'));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  '0',  currentByte,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  '0',  currentByte,  '1'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    '0',    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	63	None	replace
31	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  buffer.length  -  1));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  buffer.length  -  1));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  buffer.length  -  1));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    buffer.length));    	non-compiled	[CE]  <identifier>  expected	55	None	replace
32	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  start,  currentByte,  buffer.length));  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  start,  currentByte,  buffer.length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  start,  currentByte,  buffer.length));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    buffer.length));    	non-compiled	[CE]  <identifier>  expected	55	None	replace
33	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  length,  currentByte,  buffer.length));  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  length,  currentByte,  buffer.length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  length,  currentByte,  buffer.length));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    buffer.length));    	non-compiled	[CE]  <identifier>  expected	55	None	replace
34	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  buffer.length  +  1));  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  buffer.length  +  1));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  buffer.length  +  1));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    buffer.length));    	non-compiled	[CE]  <identifier>  expected	55	None	replace
35	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  buffer.length  -  start));  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  buffer.length  -  start));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  buffer.length  -  start));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    buffer.length));    	non-compiled	[CE]  <identifier>  expected	55	None	replace
36	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ");  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ");	  throw    new    IllegalArgumentException(   "Byte    must    be    in    the    range    [   "    +    getClass().getName()    +   "]   ");    	non-compiled	[CE]  <identifier>  expected	103	None	replace
37	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ",  currentByte);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ",  currentByte);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ",  currentByte);	  throw    new    IllegalArgumentException(   "Byte    must    be    in    the    range    [   "    +    getClass().getName()    +   "]   ");    	non-compiled	[CE]  <identifier>  expected	103	None	replace
38	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ",  currentByte] ");  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ",  currentByte] ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ",  currentByte] ");	  throw    new    IllegalArgumentException(   "Byte    must    be    in    the    range    [   "    +    getClass().getName()    +   "]   ");    	non-compiled	[CE]  <identifier>  expected	103	None	replace
39	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + "]. ");  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + "]. ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + "]. ");	  throw    new    IllegalArgumentException(   "Byte    must    be    in    the    range    [   "    +    getClass().getName()    +   "]   ");    	non-compiled	[CE]  <identifier>  expected	103	None	replace
40	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ",  trailer);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ",  trailer);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ",  trailer);	  throw    new    IllegalArgumentException(   "Byte    must    be    in    the    range    [   "    +    getClass().getName()    +   "]   ");    	non-compiled	[CE]  <identifier>  expected	103	None	replace
41	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + "],  allNUL] ");  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + "],  allNUL] ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + "],  allNUL] ");	  throw    new    IllegalArgumentException(   "Byte    must    be    in    the    range    [   "    +    getClass().getName()    +   "]   ");    	non-compiled	[CE]  <identifier>  expected	103	None	replace
42	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte,  '7'));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte,  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte,  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    start,    currentByte,    '7'));    	non-compiled	[CE]  <identifier>  expected	44	None	replace
43	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    start,    currentByte,    '7'));    	non-compiled	[CE]  <identifier>  expected	44	None	replace
44	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  start,  '0'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  start,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  start,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    '0'));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
45	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer,  start,  '0'));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer,  start,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer,  start,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    '0'));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
46	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  0,  '0'));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  0,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  0,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    '0'));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
47	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer,  '0'));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    '0'));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
48	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '0',  currentByte));  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '0',  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '0',  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    '0'));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
49	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  buffer,  start,  currentByte));  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  buffer,  start,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  buffer,  start,  currentByte));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    start,    length,    currentByte));    	non-compiled	[CE]  <identifier>  expected	56	None	replace
50	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  end,  length,  currentByte));  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  end,  length,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  end,  length,  currentByte));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    start,    length,    currentByte));    	non-compiled	[CE]  <identifier>  expected	56	None	replace
51	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  buffer,  currentByte));  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  buffer,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  buffer,  currentByte));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    start,    length,    currentByte));    	non-compiled	[CE]  <identifier>  expected	56	None	replace
52	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  end,  currentByte));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  end,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  end,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	9	None	replace
53	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  trailer,  start,  currentByte));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  trailer,  start,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  trailer,  start,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	9	None	replace
54	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer.length,  start,  currentByte));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer.length,  start,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer.length,  start,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	9	None	replace
55	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  start,  '7'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  start,  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  start,  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	9	None	replace
56	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  start,  end));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  start,  end));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  start,  end));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	9	None	replace
57	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0'  ||  currentByte  <  '7'));  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0'  ||  currentByte  <  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0'  ||  currentByte  <  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '0'    ||    currentByte    >    '7'));    	non-compiled	[CE]  <identifier>  expected	119	None	replace
58	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0'  &&  currentByte  >  '7'));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0'  &&  currentByte  >  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0'  &&  currentByte  >  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '0'    ||    currentByte    >    '7'));    	non-compiled	[CE]  <identifier>  expected	119	None	replace
59	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0'  ||  currentByte  >=  '7'));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0'  ||  currentByte  >=  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0'  ||  currentByte  >=  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '0'    ||    currentByte    >    '7'));    	non-compiled	[CE]  <identifier>  expected	119	None	replace
60	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0'  ||  currentByte  ==  '7'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0'  ||  currentByte  ==  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0'  ||  currentByte  ==  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '0'    ||    currentByte    >    '7'));    	non-compiled	[CE]  <identifier>  expected	119	None	replace
61	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte,  '0'  ||  currentByte  >  '7'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte,  '0'  ||  currentByte  >  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte,  '0'  ||  currentByte  >  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '0'    ||    currentByte    >    '7'));    	non-compiled	[CE]  <identifier>  expected	119	None	replace
62	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0'  ||  currentByte!=  '7'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0'  ||  currentByte!=  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0'  ||  currentByte!=  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '0'    ||    currentByte    >    '7'));    	non-compiled	[CE]  <identifier>  expected	119	None	replace
63	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte,  '0')+  '9');  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte,  '0')+  '9');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte,  '0')+  '9');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '0')+    '9');    	non-compiled	[CE]  <identifier>  expected	120	None	replace
64	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0')+  '7');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0')+  '7');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0')+  '7');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '0')+    '9');    	non-compiled	[CE]  <identifier>  expected	120	None	replace
65	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  currentByte,  '0')+  '9');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  currentByte,  '0')+  '9');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  currentByte,  '0')+  '9');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '0')+    '9');    	non-compiled	[CE]  <identifier>  expected	120	None	replace
66	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  0,  '0')+  '9');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  0,  '0')+  '9');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  0,  '0')+  '9');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '0')+    '9');    	non-compiled	[CE]  <identifier>  expected	120	None	replace
67	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end,  currentByte,  '0')+  '9');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end,  currentByte,  '0')+  '9');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end,  currentByte,  '0')+  '9');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '0')+    '9');    	non-compiled	[CE]  <identifier>  expected	120	None	replace
68	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0')+  '8');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0')+  '8');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0')+  '8');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '0')+    '9');    	non-compiled	[CE]  <identifier>  expected	120	None	replace
69	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  '0',  currentByte));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  '0',  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  '0',  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    start,    '0'));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
70	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end,  '0'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    start,    '0'));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
71	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  exceptionMessage(currentByte));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  exceptionMessage(currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  exceptionMessage(currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    end,    currentByte,    length));    	non-compiled	[CE]  <identifier>  expected	89	None	replace
72	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  currentByte  +  1);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  currentByte  +  1);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  start,  buffer,  0,  currentByte  +  1);	  System.arraycopy(buffer,    start,    buffer,    0,    currentByte);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
73	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  currentByte  -  '0');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  start,  buffer,  0,  currentByte  -  '0');	  System.arraycopy(buffer,    start,    buffer,    0,    currentByte);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
74	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  currentByte  -  1);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  currentByte  -  1);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  start,  buffer,  0,  currentByte  -  1);	  System.arraycopy(buffer,    start,    buffer,    0,    currentByte);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
75	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  currentByte);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  currentByte);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  currentByte);	  System.arraycopy(buffer,    start,    buffer,    0,    currentByte);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
76	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  currentByte  -  '7');  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  currentByte  -  '7');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  start,  buffer,  0,  currentByte  -  '7');	  System.arraycopy(buffer,    start,    buffer,    0,    currentByte);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
77	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  currentByte,  length);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  currentByte,  length);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  start,  buffer,  0,  currentByte,  length);	  System.arraycopy(buffer,    start,    buffer,    0,    currentByte);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
78	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte,  trailer.length));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte,  trailer.length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte,  trailer.length));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    trailer.length));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
79	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  trailer.length  -  1));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  trailer.length  -  1));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  trailer.length  -  1));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    trailer.length));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
80	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end,  currentByte,  trailer.length));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end,  currentByte,  trailer.length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end,  currentByte,  trailer.length));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    trailer.length));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
81	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  length,  currentByte,  trailer.length));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  length,  currentByte,  trailer.length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  length,  currentByte,  trailer.length));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    trailer.length));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
82	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  trailer.length  +  1));  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  trailer.length  +  1));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  trailer.length  +  1));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    trailer.length));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
83	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  currentByte,  trailer.length));  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  currentByte,  trailer.length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  currentByte,  trailer.length));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    trailer.length));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
84	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end,  '0'));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
85	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte,  buffer.length  -  1));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte,  buffer.length  -  1));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte,  buffer.length  -  1));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    buffer.length    -    1));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
86	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  end  -  1));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  end  -  1));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  end  -  1));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    buffer.length    -    1));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
87	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  length,  currentByte,  buffer.length  -  1));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  length,  currentByte,  buffer.length  -  1));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  length,  currentByte,  buffer.length  -  1));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    buffer.length    -    1));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
88	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  start,  buffer.length  -  1));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  start,  buffer.length  -  1));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  start,  buffer.length  -  1));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    buffer.length    -    1));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
89	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  currentByte,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    end,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
90	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  end,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  end,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  end,  currentByte,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    end,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
91	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  end,  start,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  end,  start,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  end,  start,  currentByte,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    end,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
92	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  end,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  end,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  end,  currentByte,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    end,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
93	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte,  end));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte,  end));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte,  end));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    start,    currentByte,    end));    	non-compiled	[CE]  <identifier>  expected	88	None	replace
94	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  start,  currentByte,  end));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  start,  currentByte,  end));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  start,  currentByte,  end));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    start,    currentByte,    end));    	non-compiled	[CE]  <identifier>  expected	88	None	replace
95	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  end,  '0'));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  end,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  end,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    end,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
96	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end,  currentByte,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    end,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
97	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  start,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  start,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  start,  currentByte,  '0'));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	42	None	replace
98	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  end,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  end,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  end,  currentByte,  '0'));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	42	None	replace
99	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  '0',  currentByte));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  '0',  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  '0',  currentByte));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	42	None	replace
100	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  last,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  last,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  last,  currentByte,  '0'));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	42	None	replace
101	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  1  +  1,  currentByte,  '1'));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  1  +  1,  currentByte,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  1  +  1,  currentByte,  '1'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    1,    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
102	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  1,  currentByte,  '9'));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  1,  currentByte,  '9'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  1,  currentByte,  '9'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    1,    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
103	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  2,  currentByte,  '1'));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  2,  currentByte,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  2,  currentByte,  '1'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    1,    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
104	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  0,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  0,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  0,  currentByte,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    1,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	5	None	replace
105	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  1,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  1,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  1,  currentByte,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    1,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	5	None	replace
106	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  1  +  1,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  1  +  1,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  1  +  1,  currentByte,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    1,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	5	None	replace
107	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  1,  currentByte  -  '0'));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  1,  currentByte  -  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  1,  currentByte  -  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    1,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	5	None	replace
108	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  0,  length  -  1));  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  0,  length  -  1));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  0,  length  -  1));	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    0,    length));    	non-compiled	[CE]  <identifier>  expected	69	None	replace
109	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end,  0,  length));  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end,  0,  length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  end,  0,  length));	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    0,    length));    	non-compiled	[CE]  <identifier>  expected	69	None	replace
110	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  currentByte,  0,  length));  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  currentByte,  0,  length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  end,  currentByte,  0,  length));	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    0,    length));    	non-compiled	[CE]  <identifier>  expected	69	None	replace
111	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  0,  length  -  1);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  0,  length  -  1);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  0,  length  -  1);	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    0,    length));    	non-compiled	[CE]  <identifier>  expected	69	None	replace
112	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  currentByte));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    end,    currentByte));    	non-compiled	[CE]  <identifier>  expected	83	None	replace
113	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  start,  currentByte,  buffer.length));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  start,  currentByte,  buffer.length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  start,  currentByte,  buffer.length));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    start,    currentByte,    buffer.length));    	non-compiled	[CE]  <identifier>  expected	58	None	replace
114	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  currentByte,  buffer.length));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  currentByte,  buffer.length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  currentByte,  buffer.length));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    start,    currentByte,    buffer.length));    	non-compiled	[CE]  <identifier>  expected	58	None	replace
115	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  currentByte,  '0')+  '9');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  currentByte,  '0')+  '9');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  currentByte,  '0')+  '9');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    '0')+    '9');    	non-compiled	[CE]  <identifier>  expected	118	None	replace
116	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  end,  length,  currentByte,  '0')+  '9');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  end,  length,  currentByte,  '0')+  '9');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  end,  length,  currentByte,  '0')+  '9');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    '0')+    '9');    	non-compiled	[CE]  <identifier>  expected	118	None	replace
117	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  length,  currentByte,  '0')+  '9');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  length,  currentByte,  '0')+  '9');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  length,  currentByte,  '0')+  '9');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    '0')+    '9');    	non-compiled	[CE]  <identifier>  expected	118	None	replace
118	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '0')+  '9');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '0')+  '9');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '0')+  '9');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    '0')+    '9');    	non-compiled	[CE]  <identifier>  expected	118	None	replace
119	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ") ");  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ") ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ") ");	  throw    new    IllegalArgumentException(   "Byte    must    be    in    the    range    [   "    +    getClass().getName()    +   ")   ");    	non-compiled	[CE]  <identifier>  expected	105	None	replace
120	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ") ",  currentByte);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ") ",  currentByte);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ") ",  currentByte);	  throw    new    IllegalArgumentException(   "Byte    must    be    in    the    range    [   "    +    getClass().getName()    +   ")   ");    	non-compiled	[CE]  <identifier>  expected	105	None	replace
121	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ")not  a  string  value. ");  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ")not  a  string  value. ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ")not  a  string  value. ");	  throw    new    IllegalArgumentException(   "Byte    must    be    in    the    range    [   "    +    getClass().getName()    +   ")   ");    	non-compiled	[CE]  <identifier>  expected	105	None	replace
122	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ")does  not  exist. ");  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ")does  not  exist. ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ")does  not  exist. ");	  throw    new    IllegalArgumentException(   "Byte    must    be    in    the    range    [   "    +    getClass().getName()    +   ")   ");    	non-compiled	[CE]  <identifier>  expected	105	None	replace
123	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ")not  a  value. ");  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ")not  a  value. ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ")not  a  value. ");	  throw    new    IllegalArgumentException(   "Byte    must    be    in    the    range    [   "    +    getClass().getName()    +   ")   ");    	non-compiled	[CE]  <identifier>  expected	105	None	replace
124	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  start,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  start,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  start,  currentByte,  '0'));	  throw    new    IllegalArgumentException(expandMessage(buffer,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	117	None	replace
125	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  currentByte,  '0'));	  throw    new    IllegalArgumentException(expandMessage(buffer,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	117	None	replace
126	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  end,  length,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  end,  length,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  end,  length,  currentByte,  '0'));	  throw    new    IllegalArgumentException(expandMessage(buffer,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	117	None	replace
127	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  buffer,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  buffer,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  buffer,  currentByte,  '0'));	  throw    new    IllegalArgumentException(expandMessage(buffer,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	117	None	replace
128	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  start,  '0'));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  start,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  start,  '0'));	  throw    new    IllegalArgumentException(expandMessage(buffer,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	117	None	replace
129	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  currentByte));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  currentByte));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	73	None	replace
130	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  end,  currentByte));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  end,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  end,  currentByte));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	73	None	replace
131	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  currentByte));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  currentByte));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	73	None	replace
132	[BUG]  [BUGGY]  System.arraycopy(currentByte,  0,  buffer,  0,  length);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(currentByte,  0,  buffer,  0,  length);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(currentByte,  0,  buffer,  0,  length);	  System.arraycopy(buffer,    0,    currentByte,    0,    length);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
133	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  currentByte,  0,  length  -  1);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  0,  currentByte,  0,  length  -  1);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  0,  currentByte,  0,  length  -  1);	  System.arraycopy(buffer,    0,    currentByte,    0,    length);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
134	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  currentByte,  0,  start);  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  0,  currentByte,  0,  start);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  0,  currentByte,  0,  start);	  System.arraycopy(buffer,    0,    currentByte,    0,    length);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
135	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  currentByte,  0,  end);  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  0,  currentByte,  0,  end);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  0,  currentByte,  0,  end);	  System.arraycopy(buffer,    0,    currentByte,    0,    length);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
136	[BUG]  [BUGGY]  System.arraycopy(trailer,  0,  currentByte,  0,  length);  [CE]  <identifier>  expected  [FE]                                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(trailer,  0,  currentByte,  0,  length);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(trailer,  0,  currentByte,  0,  length);	  System.arraycopy(buffer,    0,    currentByte,    0,    length);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
137	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  currentByte,  0,  size);  [CE]  <identifier>  expected  [FE]                                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  0,  currentByte,  0,  size);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  0,  currentByte,  0,  size);	  System.arraycopy(buffer,    0,    currentByte,    0,    length);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
138	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length  -  1,  start,  currentByte));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length  -  1,  start,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length  -  1,  start,  currentByte));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	52	None	replace
139	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte));	  throw    new    IllegalArgumentException(   "   ".equals(currentByte));    	non-compiled	[CE]  <identifier>  expected	24	None	replace
140	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equals(currentByte);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( " ").equals(currentByte);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( " ").equals(currentByte);	  throw    new    IllegalArgumentException(   "   ".equals(currentByte));    	non-compiled	[CE]  <identifier>  expected	24	None	replace
141	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer.equals(currentByte));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer.equals(currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( " "  +  trailer.equals(currentByte));	  throw    new    IllegalArgumentException(   "   ".equals(currentByte));    	non-compiled	[CE]  <identifier>  expected	24	None	replace
142	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  currentByte.getMessage());  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( " "  +  currentByte.getMessage());  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( " "  +  currentByte.getMessage());	  throw    new    IllegalArgumentException(   "   ".equals(currentByte));    	non-compiled	[CE]  <identifier>  expected	24	None	replace
143	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  buffer.length  -  1));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  buffer.length  -  1));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  buffer.length  -  1));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    buffer.length));    	non-compiled	[CE]  <identifier>  expected	60	None	replace
144	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  start,  length,  currentByte,  buffer.length));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  start,  length,  currentByte,  buffer.length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  start,  length,  currentByte,  buffer.length));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    buffer.length));    	non-compiled	[CE]  <identifier>  expected	60	None	replace
145	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  offset,  length,  currentByte,  buffer.length));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  offset,  length,  currentByte,  buffer.length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  offset,  length,  currentByte,  buffer.length));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    buffer.length));    	non-compiled	[CE]  <identifier>  expected	60	None	replace
146	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  currentByte,  buffer.length));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  currentByte,  buffer.length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  currentByte,  buffer.length));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    buffer.length));    	non-compiled	[CE]  <identifier>  expected	60	None	replace
147	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1);	  System.arraycopy(buffer,    offset,    buffer,    start,    length    -    currentByte);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
148	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1,  currentByte);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1,  currentByte);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1,  currentByte);	  System.arraycopy(buffer,    offset,    buffer,    start,    length    -    currentByte);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
149	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end  -  currentByte);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end  -  currentByte);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  end  -  currentByte);	  System.arraycopy(buffer,    offset,    buffer,    start,    length    -    currentByte);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
150	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  length  -  currentByte);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  length  -  currentByte);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  end,  length  -  currentByte);	  System.arraycopy(buffer,    offset,    buffer,    start,    length    -    currentByte);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
151	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  2);  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  2);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  -  2);	  System.arraycopy(buffer,    offset,    buffer,    start,    length    -    currentByte);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
152	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  currentByte.length  -  1);  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  currentByte.length  -  1);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  currentByte.length  -  1);	  System.arraycopy(buffer,    offset,    buffer,    start,    length    -    currentByte);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
153	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  length  -  1);  [CE]  <identifier>  expected  [FE]                                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  length  -  1);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  length  -  1);	  System.arraycopy(buffer,    offset,    buffer,    start,    length    -    currentByte);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
154	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  '0'));  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    buffer,    '0'));    	non-compiled	[CE]  <identifier>  expected	77	None	replace
155	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  '0',  currentByte));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  '0',  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  '0',  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    buffer,    '0'));    	non-compiled	[CE]  <identifier>  expected	77	None	replace
156	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equals(currentByte.toString());  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( " ").equals(currentByte.toString());  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( " ").equals(currentByte.toString());	  throw    new    IllegalArgumentException(   "   ".equals(currentByte.toString()));    	non-compiled	[CE]  <identifier>  expected	28	None	replace
157	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  currentByte.toString());  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( " "  +  currentByte.toString());  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( " "  +  currentByte.toString());	  throw    new    IllegalArgumentException(   "   ".equals(currentByte.toString()));    	non-compiled	[CE]  <identifier>  expected	28	None	replace
158	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer.equals(currentByte.toString()));  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer.equals(currentByte.toString()));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( " "  +  trailer.equals(currentByte.toString()));	  throw    new    IllegalArgumentException(   "   ".equals(currentByte.toString()));    	non-compiled	[CE]  <identifier>  expected	28	None	replace
159	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(currentByte.toString()));  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(currentByte.toString()));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw  new  IllegalArgumentException( " ").equals(currentByte.toString()));	  throw    new    IllegalArgumentException(   "   ".equals(currentByte.toString()));    	non-compiled	[CE]  <identifier>  expected	28	None	replace
160	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte,  '9'));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte,  '9'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte,  '9'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '9'));    	non-compiled	[CE]  <identifier>  expected	45	None	replace
161	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '8'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '8'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '8'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '9'));    	non-compiled	[CE]  <identifier>  expected	45	None	replace
162	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  '9'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  '9'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  '9'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '9'));    	non-compiled	[CE]  <identifier>  expected	45	None	replace
163	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exprMessage(buffer,  offset,  length,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exprMessage(buffer,  offset,  length,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exprMessage(buffer,  offset,  length,  currentByte,  '0'));	  throw    new    IllegalArgumentException(exprMessage(buffer,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	116	None	replace
164	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exprMessage(buffer,  offset,  length,  start,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exprMessage(buffer,  offset,  length,  start,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exprMessage(buffer,  offset,  length,  start,  currentByte,  '0'));	  throw    new    IllegalArgumentException(exprMessage(buffer,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	116	None	replace
165	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException(exprMessage(buffer,  start,  length,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw  new  IllegalArgumentException(exprMessage(buffer,  start,  length,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw  new  IllegalArgumentException(exprMessage(buffer,  start,  length,  currentByte,  '0'));	  throw    new    IllegalArgumentException(exprMessage(buffer,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	116	None	replace
166	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exprMessage(buffer,  end,  length,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exprMessage(buffer,  end,  length,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exprMessage(buffer,  end,  length,  currentByte,  '0'));	  throw    new    IllegalArgumentException(exprMessage(buffer,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	116	None	replace
167	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exprMessage(buffer,  offset,  length,  start,  '0'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exprMessage(buffer,  offset,  length,  start,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exprMessage(buffer,  offset,  length,  start,  '0'));	  throw    new    IllegalArgumentException(exprMessage(buffer,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	116	None	replace
168	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exprMessage(buffer,  0,  length,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exprMessage(buffer,  0,  length,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exprMessage(buffer,  0,  length,  currentByte,  '0'));	  throw    new    IllegalArgumentException(exprMessage(buffer,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	116	None	replace
169	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  length,  currentByte,  buffer.length));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  length,  currentByte,  buffer.length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  length,  currentByte,  buffer.length));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    start,    length,    currentByte,    buffer.length));    	non-compiled	[CE]  <identifier>  expected	16	None	replace
170	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  start,  currentByte,  '1'));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  start,  currentByte,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  start,  currentByte,  '1'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    start,    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	61	None	replace
171	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  '1'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  '1'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    start,    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	61	None	replace
172	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  length,  currentByte,  '1'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  length,  currentByte,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  length,  currentByte,  '1'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    start,    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	61	None	replace
173	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  currentByte,  '1'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  currentByte,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  currentByte,  '1'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    start,    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	61	None	replace
174	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  currentByte,  0,  currentByte  +  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  currentByte,  0,  currentByte  +  1);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  currentByte,  0,  currentByte  +  1);	  System.arraycopy(buffer,    offset,    currentByte,    0,    currentByte);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
175	[BUG]  [BUGGY]  System.arraycopy(currentByte,  offset,  buffer,  0,  currentByte);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(currentByte,  offset,  buffer,  0,  currentByte);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(currentByte,  offset,  buffer,  0,  currentByte);	  System.arraycopy(buffer,    offset,    currentByte,    0,    currentByte);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
176	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  currentByte,  0,  currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  currentByte,  0,  currentByte  -  '0');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  currentByte,  0,  currentByte  -  '0');	  System.arraycopy(buffer,    offset,    currentByte,    0,    currentByte);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
177	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  currentByte,  0,  currentByte  -  1);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  currentByte,  0,  currentByte  -  1);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  currentByte,  0,  currentByte  -  1);	  System.arraycopy(buffer,    offset,    currentByte,    0,    currentByte);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
178	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  currentByte,  0,  currentByte);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  start,  currentByte,  0,  currentByte);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  start,  currentByte,  0,  currentByte);	  System.arraycopy(buffer,    offset,    currentByte,    0,    currentByte);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
179	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte,  '1'));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte,  '1'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    start,    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
180	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '0',  currentByte  +  1));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '0',  currentByte  +  1));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '0',  currentByte  +  1));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    '0',    currentByte));    	non-compiled	[CE]  <identifier>  expected	86	None	replace
181	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end,  '0',  currentByte));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end,  '0',  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end,  '0',  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    '0',    currentByte));    	non-compiled	[CE]  <identifier>  expected	86	None	replace
182	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  '0',  currentByte));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  '0',  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  '0',  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    '0',    currentByte));    	non-compiled	[CE]  <identifier>  expected	86	None	replace
183	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  0,  currentByte));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  0,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  0,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    '0',    currentByte));    	non-compiled	[CE]  <identifier>  expected	86	None	replace
184	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  start,  end,  currentByte));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  start,  end,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  start,  end,  currentByte));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    end,    currentByte));    	non-compiled	[CE]  <identifier>  expected	43	None	replace
185	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  start,  currentByte,  '7'));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  start,  currentByte,  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  start,  currentByte,  '7'));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    '7'));    	non-compiled	[CE]  <identifier>  expected	109	None	replace
186	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  '1'));  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  '1'));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    '7'));    	non-compiled	[CE]  <identifier>  expected	109	None	replace
187	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  start,  '7'));  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  start,  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  start,  '7'));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    '7'));    	non-compiled	[CE]  <identifier>  expected	109	None	replace
188	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  length,  currentByte,  '7'));  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  length,  currentByte,  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  length,  currentByte,  '7'));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    '7'));    	non-compiled	[CE]  <identifier>  expected	109	None	replace
189	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  length));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  length));	  throw    new    IllegalArgumentException(expandMessage(buffer,    start,    length,    currentByte,    length));    	non-compiled	[CE]  <identifier>  expected	74	None	replace
190	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  currentByte,  BYTE_MASK));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  currentByte,  BYTE_MASK));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  currentByte,  BYTE_MASK));	  throw    new    IllegalArgumentException(expandMessage(buffer,    start,    length,    currentByte,    length));    	non-compiled	[CE]  <identifier>  expected	74	None	replace
191	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  currentByte,  0));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  currentByte,  0));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  currentByte,  0));	  throw    new    IllegalArgumentException(expandMessage(buffer,    start,    length,    currentByte,    length));    	non-compiled	[CE]  <identifier>  expected	74	None	replace
192	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  currentByte,  end));  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  currentByte,  end));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  currentByte,  end));	  throw    new    IllegalArgumentException(expandMessage(buffer,    start,    length,    currentByte,    length));    	non-compiled	[CE]  <identifier>  expected	74	None	replace
193	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  trailer));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  trailer));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  trailer));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    end));    	non-compiled	[CE]  <identifier>  expected	37	None	replace
194	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  0));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  0));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  0));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    end));    	non-compiled	[CE]  <identifier>  expected	37	None	replace
195	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  start,  '0',  currentByte));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  start,  '0',  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  start,  '0',  currentByte));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    start,    '0'));    	non-compiled	[CE]  <identifier>  expected	87	None	replace
196	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  end,  '0'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  end,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  end,  '0'));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    start,    '0'));    	non-compiled	[CE]  <identifier>  expected	87	None	replace
197	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte,  '1')+  '9');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte,  '1')+  '9');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte,  '1')+  '9');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '1')+    '9');    	non-compiled	[CE]  <identifier>  expected	114	None	replace
198	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  currentByte,  '1')+  '9');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  currentByte,  '1')+  '9');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  currentByte,  '1')+  '9');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '1')+    '9');    	non-compiled	[CE]  <identifier>  expected	114	None	replace
199	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  1,  currentByte,  '1')+  '9');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  1,  currentByte,  '1')+  '9');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  1,  currentByte,  '1')+  '9');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '1')+    '9');    	non-compiled	[CE]  <identifier>  expected	114	None	replace
200	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '1')+  '9'  +  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '1')+  '9'  +  '0');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '1')+  '9'  +  '0');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '1')+    '9');    	non-compiled	[CE]  <identifier>  expected	114	None	replace
201	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  currentByte  + "] ");  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  currentByte  + "] ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  currentByte  + "] ");	  throw    new    IllegalArgumentException(   "Byte    must    be    in    the    range    [   "    +    currentByte    +   "]   ");    	non-compiled	[CE]  <identifier>  expected	104	None	replace
202	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  currentByte  + "]. ");  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  currentByte  + "]. ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  currentByte  + "]. ");	  throw    new    IllegalArgumentException(   "Byte    must    be    in    the    range    [   "    +    currentByte    +   "]   ");    	non-compiled	[CE]  <identifier>  expected	104	None	replace
203	[BUG]  [BUGGY]  Throwables.wrap(new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  currentByte  + "] ");  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.wrap(new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  currentByte  + "] ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.wrap(new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  currentByte  + "] ");	  throw    new    IllegalArgumentException(   "Byte    must    be    in    the    range    [   "    +    currentByte    +   "]   ");    	non-compiled	[CE]  <identifier>  expected	104	None	replace
204	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  currentByte  + "] ",  trailer);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  currentByte  + "] ",  trailer);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  currentByte  + "] ",  trailer);	  throw    new    IllegalArgumentException(   "Byte    must    be    in    the    range    [   "    +    currentByte    +   "]   ");    	non-compiled	[CE]  <identifier>  expected	104	None	replace
205	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  start  + "] ");  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  start  + "] ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  start  + "] ");	  throw    new    IllegalArgumentException(   "Byte    must    be    in    the    range    [   "    +    currentByte    +   "]   ");    	non-compiled	[CE]  <identifier>  expected	104	None	replace
206	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer,  end));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer,  end));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer,  end));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    end,    currentByte));    	non-compiled	[CE]  <identifier>  expected	11	None	replace
207	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  end,  currentByte));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  end,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  end,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    end,    currentByte));    	non-compiled	[CE]  <identifier>  expected	11	None	replace
208	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  end,  currentByte));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  end,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  end,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    end,    currentByte));    	non-compiled	[CE]  <identifier>  expected	11	None	replace
209	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equals(currentByte)?  null  : " ");  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( " ").equals(currentByte)?  null  : " ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( " ").equals(currentByte)?  null  : " ");	  throw    new    IllegalArgumentException(   "   ".equals(currentByte)?    null    :   "   ");    	non-compiled	[CE]  <identifier>  expected	27	None	replace
210	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte)?  null  : " ");  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte)?  null  : " ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( " "  + "currentByte  equals(currentByte)?  null  : " ");	  throw    new    IllegalArgumentException(   "   ".equals(currentByte)?    null    :   "   ");    	non-compiled	[CE]  <identifier>  expected	27	None	replace
211	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  + "equals(currentByte)?  null  : " ");  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( " "  + "equals(currentByte)?  null  : " ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( " "  + "equals(currentByte)?  null  : " ");	  throw    new    IllegalArgumentException(   "   ".equals(currentByte)?    null    :   "   ");    	non-compiled	[CE]  <identifier>  expected	27	None	replace
212	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(currentByte)?  null  : " ");  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(currentByte)?  null  : " ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(currentByte)?  null  : " ");	  throw    new    IllegalArgumentException(   "   ".equals(currentByte)?    null    :   "   ");    	non-compiled	[CE]  <identifier>  expected	27	None	replace
213	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length,  currentByte);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length,  currentByte);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length,  currentByte);	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    length);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
214	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  currentByte,  length);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  currentByte,  length);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  currentByte,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    length);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
215	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  currentByte,  length);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  currentByte,  length);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  end,  currentByte,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    length);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
216	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end,  length);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end,  length);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  end,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    length);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
217	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end,  currentByte,  length);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end,  currentByte,  length);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  end,  currentByte,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    length);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
218	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  start,  currentByte));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  start,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  start,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    start,    end,    currentByte));    	non-compiled	[CE]  <identifier>  expected	38	None	replace
219	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
220	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
221	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  start,  length,  currentByte));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  start,  length,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  start,  length,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
222	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  end,  length,  '0',  currentByte));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  end,  length,  '0',  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  end,  length,  '0',  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    '0',    currentByte));    	non-compiled	[CE]  <identifier>  expected	79	None	replace
223	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  '0',  currentByte));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  '0',  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  '0',  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    '0',    currentByte));    	non-compiled	[CE]  <identifier>  expected	79	None	replace
224	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  '0',  currentByte  +  1));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  '0',  currentByte  +  1));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  '0',  currentByte  +  1));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    '0',    currentByte));    	non-compiled	[CE]  <identifier>  expected	79	None	replace
225	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  trailer,  start));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  trailer,  start));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  trailer,  start));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    buffer,    start));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
226	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer[start]));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer[start]));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer[start]));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    buffer,    start));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
227	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer[start],  start));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer[start],  start));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer[start],  start));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    buffer,    start));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
228	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer,  start,  end));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer,  start,  end));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer,  start,  end));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    buffer,    start));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
229	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  currentByte));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    buffer,    currentByte));    	non-compiled	[CE]  <identifier>  expected	75	None	replace
230	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  offset,  length,  currentByte));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  offset,  length,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  offset,  length,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    buffer,    currentByte));    	non-compiled	[CE]  <identifier>  expected	75	None	replace
231	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  + "IgnoreCase(currentByte));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( " "  + "IgnoreCase(currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( " "  + "IgnoreCase(currentByte));	  throw    new    IllegalArgumentException(   "   ".equalsIgnoreCase(currentByte));    	non-compiled	[CE]  <identifier>  expected	90	None	replace
232	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equalsIgnoreCase(currentByte);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( " ").equalsIgnoreCase(currentByte);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( " ").equalsIgnoreCase(currentByte);	  throw    new    IllegalArgumentException(   "   ".equalsIgnoreCase(currentByte));    	non-compiled	[CE]  <identifier>  expected	90	None	replace
233	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equalsIgnoreCase(currentByte));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( " ").equalsIgnoreCase(currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( " ").equalsIgnoreCase(currentByte));	  throw    new    IllegalArgumentException(   "   ".equalsIgnoreCase(currentByte));    	non-compiled	[CE]  <identifier>  expected	90	None	replace
234	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer.equalsIgnoreCase(currentByte));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer.equalsIgnoreCase(currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( " "  +  trailer.equalsIgnoreCase(currentByte));	  throw    new    IllegalArgumentException(   "   ".equalsIgnoreCase(currentByte));    	non-compiled	[CE]  <identifier>  expected	90	None	replace
235	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  length,  start,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  length,  start,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  length,  start,  currentByte,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    0,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	51	None	replace
236	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  currentByte,  length,  '0'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  currentByte,  length,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  currentByte,  length,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    0,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	51	None	replace
237	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  length,  end,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  length,  end,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  length,  end,  currentByte,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    0,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	51	None	replace
238	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  start,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  start,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  start,  currentByte,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    0,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	51	None	replace
239	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  length,  currentByte,  end));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  length,  currentByte,  end));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  length,  currentByte,  end));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    end));    	non-compiled	[CE]  <identifier>  expected	53	None	replace
240	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  end,  '1'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  end,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  end,  '1'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    end,    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
241	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer,  start  +  1));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer,  start  +  1));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer,  start  +  1));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    currentByte    +    1));    	non-compiled	[CE]  <identifier>  expected	99	None	replace
242	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end,  currentByte  +  1));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end,  currentByte  +  1));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end,  currentByte  +  1));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    currentByte    +    1));    	non-compiled	[CE]  <identifier>  expected	99	None	replace
243	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer,  start,  currentByte  +  1));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer,  start,  currentByte  +  1));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer,  start,  currentByte  +  1));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    currentByte    +    1));    	non-compiled	[CE]  <identifier>  expected	99	None	replace
244	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  buffer,  start,  currentByte  +  1));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  buffer,  start,  currentByte  +  1));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  buffer,  start,  currentByte  +  1));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    currentByte    +    1));    	non-compiled	[CE]  <identifier>  expected	99	None	replace
245	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  start,  currentByte  +  1));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  start,  currentByte  +  1));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  start,  currentByte  +  1));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    currentByte    +    1));    	non-compiled	[CE]  <identifier>  expected	99	None	replace
246	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  start  +  1));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  start  +  1));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  start  +  1));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    currentByte    +    1));    	non-compiled	[CE]  <identifier>  expected	99	None	replace
247	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end,  currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end,  currentByte  -  '0');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  end,  currentByte  -  '0');	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    length    -    '0');    	non-compiled	[CE]  <identifier>  expected	68	None	replace
248	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  currentByte,  length  -  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  currentByte,  length  -  '0');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  end,  currentByte,  length  -  '0');	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    length    -    '0');    	non-compiled	[CE]  <identifier>  expected	68	None	replace
249	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1,  currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1,  currentByte  -  '0');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1,  currentByte  -  '0');	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    length    -    '0');    	non-compiled	[CE]  <identifier>  expected	68	None	replace
250	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  0,  length  -  '0');  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  0,  length  -  '0');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  0,  length  -  '0');	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    length    -    '0');    	non-compiled	[CE]  <identifier>  expected	68	None	replace
251	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length,  currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length,  currentByte  -  '0');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length,  currentByte  -  '0');	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    length    -    '0');    	non-compiled	[CE]  <identifier>  expected	68	None	replace
252	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  trailer.length));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  trailer.length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  trailer.length));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    trailer));    	non-compiled	[CE]  <identifier>  expected	106	None	replace
253	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length,  currentByte));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length,  currentByte));	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    length));    	non-compiled	[CE]  <identifier>  expected	66	None	replace
254	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  length  -  1));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  length  -  1));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  length  -  1));	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    length));    	non-compiled	[CE]  <identifier>  expected	66	None	replace
255	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  currentByte,  length));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  currentByte,  length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  currentByte,  length));	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    length));    	non-compiled	[CE]  <identifier>  expected	66	None	replace
256	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  currentByte,  length));  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  currentByte,  length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  end,  currentByte,  length));	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    length));    	non-compiled	[CE]  <identifier>  expected	66	None	replace
257	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end,  currentByte,  length));  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end,  currentByte,  length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  end,  currentByte,  length));	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    length));    	non-compiled	[CE]  <identifier>  expected	66	None	replace
258	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end,  length));  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end,  length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  end,  length));	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    length));    	non-compiled	[CE]  <identifier>  expected	66	None	replace
259	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte  -  1));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte  -  1));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte  -  1));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    start,    length    -    1,    currentByte));    	non-compiled	[CE]  <identifier>  expected	72	None	replace
260	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start  -  1,  currentByte));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start  -  1,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start  -  1,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    start,    length    -    1,    currentByte));    	non-compiled	[CE]  <identifier>  expected	72	None	replace
261	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer.length  -  1,  currentByte));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer.length  -  1,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer.length  -  1,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    start,    length    -    1,    currentByte));    	non-compiled	[CE]  <identifier>  expected	72	None	replace
262	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte  -  1,  currentByte));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte  -  1,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte  -  1,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    start,    length    -    1,    currentByte));    	non-compiled	[CE]  <identifier>  expected	72	None	replace
263	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  length  -  1,  currentByte));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  length  -  1,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  length  -  1,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    start,    length    -    1,    currentByte));    	non-compiled	[CE]  <identifier>  expected	72	None	replace
264	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end  -  1,  currentByte));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end  -  1,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end  -  1,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    start,    length    -    1,    currentByte));    	non-compiled	[CE]  <identifier>  expected	72	None	replace
265	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(currentByte));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(currentByte));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	25	None	replace
266	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equalsIgnoreCase(currentByte));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equalsIgnoreCase(currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw  new  IllegalArgumentException( " ".equalsIgnoreCase(currentByte));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	25	None	replace
267	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(currentByte)?   "true "  : "false ");  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(currentByte)?   "true "  : "false ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(currentByte)?   "true "  : "false ");	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	25	None	replace
268	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".trim());  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".trim());  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw  new  IllegalArgumentException( " ".trim());	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	25	None	replace
269	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(currentByte)?  null  :  currentByte);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(currentByte)?  null  :  currentByte);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(currentByte)?  null  :  currentByte);	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	25	None	replace
270	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  end,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  end,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  end,  currentByte,  '0'));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	54	None	replace
271	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  length,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  length,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  length,  currentByte,  '0'));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	54	None	replace
272	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  buffer,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  buffer,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  buffer,  currentByte,  '0'));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	54	None	replace
273	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  1,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  1,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  1,  currentByte,  '0'));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	54	None	replace
274	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  currentByte,  length,  start,  '0'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  currentByte,  length,  start,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  currentByte,  length,  start,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    0,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
275	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  end,  length,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  end,  length,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  end,  length,  currentByte,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    0,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
276	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  buffer,  length,  start,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  buffer,  length,  start,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  buffer,  length,  start,  currentByte,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    0,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
277	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  currentByte,  start,  length,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  currentByte,  start,  length,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  currentByte,  start,  length,  currentByte,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    0,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
278	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  currentByte);	  System.arraycopy(buffer,    offset,    buffer,    end,    currentByte);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
279	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  end,  currentByte);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  start,  buffer,  end,  currentByte);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  start,  buffer,  end,  currentByte);	  System.arraycopy(buffer,    offset,    buffer,    end,    currentByte);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
280	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  0);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  0);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  end,  0);	  System.arraycopy(buffer,    offset,    buffer,    end,    currentByte);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
281	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  length,  currentByte);  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  length,  currentByte);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  length,  currentByte);	  System.arraycopy(buffer,    offset,    buffer,    end,    currentByte);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
282	[BUG]  [BUGGY]  final  byte[]  buffer  =(byte[])currentByte.toArray(new  byte[currentByte.size()  ]);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  final  byte[]  buffer  =(byte[])currentByte.toArray(new  byte[currentByte.size()  ]);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	final  byte[]  buffer  =(byte[])currentByte.toArray(new  byte[currentByte.size()  ]);	  final    byte[]    buffer    =(byte[])currentByte.clone();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
283	[BUG]  [BUGGY]  final  byte[]  buffer  =(byte[])currentByte.toArray(new  byte[currentByte.length()  ]);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  final  byte[]  buffer  =(byte[])currentByte.toArray(new  byte[currentByte.length()  ]);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	final  byte[]  buffer  =(byte[])currentByte.toArray(new  byte[currentByte.length()  ]);	  final    byte[]    buffer    =(byte[])currentByte.clone();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
284	[BUG]  [BUGGY]  final  byte[]  buffer  =(byte[])currentByte.cloneTrace();  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  final  byte[]  buffer  =(byte[])currentByte.cloneTrace();  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	final  byte[]  buffer  =(byte[])currentByte.cloneTrace();	  final    byte[]    buffer    =(byte[])currentByte.clone();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
285	[BUG]  [BUGGY]  final  byte[]  buffer  =(byte[])this.currentByte.clone();  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  final  byte[]  buffer  =(byte[])this.currentByte.clone();  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	final  byte[]  buffer  =(byte[])this.currentByte.clone();	  final    byte[]    buffer    =(byte[])currentByte.clone();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
286	[BUG]  [BUGGY]  final  byte[]  buffer  =(byte[])currentByte.toArray(new  byte[currentByte.length  ]);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  final  byte[]  buffer  =(byte[])currentByte.toArray(new  byte[currentByte.length  ]);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	final  byte[]  buffer  =(byte[])currentByte.toArray(new  byte[currentByte.length  ]);	  final    byte[]    buffer    =(byte[])currentByte.clone();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
287	[BUG]  [BUGGY]  final  byte[]  buffer  =(byte[])currentByte.getValue();  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  final  byte[]  buffer  =(byte[])currentByte.getValue();  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	final  byte[]  buffer  =(byte[])currentByte.getValue();	  final    byte[]    buffer    =(byte[])currentByte.clone();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
288	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  end,  buffer.length));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  end,  buffer.length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  end,  buffer.length));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    start,    currentByte,    buffer.length));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
289	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte.length));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte.length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte.length));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    start,    currentByte,    buffer.length));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
290	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  start,  buffer.length));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  start,  buffer.length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  start,  buffer.length));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    start,    currentByte,    buffer.length));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
291	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '1'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '1'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	62	None	replace
292	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  end,  length,  currentByte,  '1'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  end,  length,  currentByte,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  end,  length,  currentByte,  '1'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	62	None	replace
293	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  start,  currentByte,  '9'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  start,  currentByte,  '9'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  start,  currentByte,  '9'));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    '9'));    	non-compiled	[CE]  <identifier>  expected	111	None	replace
294	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  start,  '9'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  start,  '9'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  start,  '9'));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    '9'));    	non-compiled	[CE]  <identifier>  expected	111	None	replace
295	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  '0',  currentByte,  '7'));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  '0',  currentByte,  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  '0',  currentByte,  '7'));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    '9'));    	non-compiled	[CE]  <identifier>  expected	111	None	replace
296	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Thread.currentThread().interrupt();  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Thread.currentThread().interrupt();	  if(trailer    ==    0    ||    currentByte    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
297	[BUG]  [BUGGY]  result  =  trailer  ||  currentByte  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  result  =  trailer  ||  currentByte  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	result  =  trailer  ||  currentByte  ==  '')  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    currentByte    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
298	[BUG]  [BUGGY]  result  =  trailer  ||  currentByte  ==  'n'  ||  currentByte  ==  'r')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  result  =  trailer  ||  currentByte  ==  'n'  ||  currentByte  ==  'r')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	result  =  trailer  ||  currentByte  ==  'n'  ||  currentByte  ==  'r')  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    currentByte    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
299	[BUG]  [BUGGY]  result  =  trailer  ||(currentByte  ==  '0'  &&  currentByte  <  =  '7')||(currentByte  >=  'A'  &&  currentByte  <  =  'Z')||(currentByte  >  'z')  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  result  =  trailer  ||(currentByte  ==  '0'  &&  currentByte  <  =  '7')||(currentByte  >=  'A'  &&  currentByte  <  =  'Z')||(currentByte  >  'z')  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	result  =  trailer  ||(currentByte  ==  '0'  &&  currentByte  <  =  '7')||(currentByte  >=  'A'  &&  currentByte  <  =  'Z')||(currentByte  >  'z')	  if(trailer    ==    0    ||    currentByte    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
300	[BUG]  [BUGGY]  result  =  trailer  ||(currentByte  ==  '0'  &&  currentByte  <  =  '9')||(currentByte  >=  'A'  &&  currentByte  <  =  'Z')||(currentByte  >  'z')  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  result  =  trailer  ||(currentByte  ==  '0'  &&  currentByte  <  =  '9')||(currentByte  >=  'A'  &&  currentByte  <  =  'Z')||(currentByte  >  'z')  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	result  =  trailer  ||(currentByte  ==  '0'  &&  currentByte  <  =  '9')||(currentByte  >=  'A'  &&  currentByte  <  =  'Z')||(currentByte  >  'z')	  if(trailer    ==    0    ||    currentByte    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
301	[BUG]  [BUGGY]  result  =  trailer  ||(currentByte  ==  '0'  &&  currentByte  <  =  '7')||(currentByte  >=  'A'  &&  currentByte  <  =  'Z')||(currentByte  >  'z');  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  result  =  trailer  ||(currentByte  ==  '0'  &&  currentByte  <  =  '7')||(currentByte  >=  'A'  &&  currentByte  <  =  'Z')||(currentByte  >  'z');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	result  =  trailer  ||(currentByte  ==  '0'  &&  currentByte  <  =  '7')||(currentByte  >=  'A'  &&  currentByte  <  =  'Z')||(currentByte  >  'z');	  if(trailer    ==    0    ||    currentByte    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
302	[BUG]  [BUGGY]  result  =  trailer  ||(currentByte  ==  '0'  &&  currentByte  <  =  '7')||(currentByte  >=  'A'  &&  currentByte  <  =  'Z')||(currentByte  >  'Z')  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  result  =  trailer  ||(currentByte  ==  '0'  &&  currentByte  <  =  '7')||(currentByte  >=  'A'  &&  currentByte  <  =  'Z')||(currentByte  >  'Z')  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	result  =  trailer  ||(currentByte  ==  '0'  &&  currentByte  <  =  '7')||(currentByte  >=  'A'  &&  currentByte  <  =  'Z')||(currentByte  >  'Z')	  if(trailer    ==    0    ||    currentByte    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
303	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  length,  start,  currentByte));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  length,  start,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  length,  start,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    end,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
304	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  end,  start,  currentByte));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  end,  start,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  end,  start,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    end,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
305	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  buffer,  start,  currentByte));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  buffer,  start,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  buffer,  start,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    end,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
306	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  currentByte));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	65	None	replace
307	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(currentByte,  offset,  start,  currentByte));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(currentByte,  offset,  start,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(currentByte,  offset,  start,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	65	None	replace
308	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end,  currentByte  -  '7'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end,  currentByte  -  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end,  currentByte  -  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    currentByte    -    '7'));    	non-compiled	[CE]  <identifier>  expected	100	None	replace
309	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer,  start,  currentByte  -  '7'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer,  start,  currentByte  -  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer,  start,  currentByte  -  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    currentByte    -    '7'));    	non-compiled	[CE]  <identifier>  expected	100	None	replace
310	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  start,  currentByte  -  '7'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  start,  currentByte  -  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  start,  currentByte  -  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    currentByte    -    '7'));    	non-compiled	[CE]  <identifier>  expected	100	None	replace
311	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte  -  '9'));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte  -  '9'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte  -  '9'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    currentByte    -    '7'));    	non-compiled	[CE]  <identifier>  expected	100	None	replace
312	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte  -  '1'));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte  -  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte  -  '1'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    currentByte    -    '7'));    	non-compiled	[CE]  <identifier>  expected	100	None	replace
313	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer,  end,  currentByte));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer,  end,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer,  end,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    buffer,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
314	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  trailer,  start,  currentByte));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  trailer,  start,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  trailer,  start,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    buffer,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
315	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  trailer,  start,  currentByte));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  trailer,  start,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  trailer,  start,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    buffer,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
316	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length  -  1,  currentByte,  buffer,  start,  currentByte));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length  -  1,  currentByte,  buffer,  start,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length  -  1,  currentByte,  buffer,  start,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    buffer,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
317	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  currentByte,  buffer,  start,  currentByte));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  currentByte,  buffer,  start,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  currentByte,  buffer,  start,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    buffer,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
318	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end,  currentByte  -  '0'));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end,  currentByte  -  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end,  currentByte  -  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    currentByte    -    '0'));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
319	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer,  start,  currentByte  -  '0'));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer,  start,  currentByte  -  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer,  start,  currentByte  -  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    currentByte    -    '0'));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
320	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  start,  currentByte  -  '0'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  start,  currentByte  -  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  start,  currentByte  -  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    currentByte    -    '0'));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
321	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  7  -  '0'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  7  -  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  7  -  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    currentByte    -    '0'));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
322	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte  +  '0'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte  +  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte  +  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    currentByte    -    '0'));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
323	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  start,  currentByte,  '9'));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  start,  currentByte,  '9'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  start,  currentByte,  '9'));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    '9'));    	non-compiled	[CE]  <identifier>  expected	108	None	replace
324	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  start,  '9'));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  start,  '9'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  start,  '9'));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    '9'));    	non-compiled	[CE]  <identifier>  expected	108	None	replace
325	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  '8'));  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  '8'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  '8'));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    '9'));    	non-compiled	[CE]  <identifier>  expected	108	None	replace
326	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    start,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	85	None	replace
327	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  length,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  length,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  length,  currentByte,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    start,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	85	None	replace
328	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '9'));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '9'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '9'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    '7'));    	non-compiled	[CE]  <identifier>  expected	82	None	replace
329	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  end,  length,  currentByte,  '7'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  end,  length,  currentByte,  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  end,  length,  currentByte,  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    '7'));    	non-compiled	[CE]  <identifier>  expected	82	None	replace
330	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  start,  currentByte,  '1'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  start,  currentByte,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  start,  currentByte,  '1'));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	112	None	replace
331	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  start,  '1'));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  start,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  start,  '1'));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	112	None	replace
332	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  end,  currentByte,  '1'));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  end,  currentByte,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  end,  currentByte,  '1'));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	112	None	replace
333	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	result  =(result  <  <  3)+(currentByte  -  '0');	  result    =(length    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	31	None	replace
334	[BUG]  [BUGGY]  result  =(length  -  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  result  =(length  -  3)+(currentByte  -  '0');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	result  =(length  -  3)+(currentByte  -  '0');	  result    =(length    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	31	None	replace
335	[BUG]  [BUGGY]  result  =(currentByte  <  <  3)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  result  =(currentByte  <  <  3)+(length  -  '0');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	result  =(currentByte  <  <  3)+(length  -  '0');	  result    =(length    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	31	None	replace
336	[BUG]  [BUGGY]  result  =(length  <  <  3)+(currentByte  >  '0'?  currentByte  :  '0');  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  result  =(length  <  <  3)+(currentByte  >  '0'?  currentByte  :  '0');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	result  =(length  <  <  3)+(currentByte  >  '0'?  currentByte  :  '0');	  result    =(length    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	31	None	replace
337	[BUG]  [BUGGY]  result  =(end  <  <  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  result  =(end  <  <  3)+(currentByte  -  '0');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	result  =(end  <  <  3)+(currentByte  -  '0');	  result    =(length    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	31	None	replace
338	[BUG]  [BUGGY]  result  =(len  <  <  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  result  =(len  <  <  3)+(currentByte  -  '0');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	result  =(len  <  <  3)+(currentByte  -  '0');	  result    =(length    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	31	None	replace
339	[BUG]  [BUGGY]  result  =(start  <  <  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  result  =(start  <  <  3)+(currentByte  -  '0');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	result  =(start  <  <  3)+(currentByte  -  '0');	  result    =(length    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	31	None	replace
340	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end,  0,  length);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end,  0,  length);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  end,  0,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    0,    length);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
341	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  currentByte,  0,  length);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  currentByte,  0,  length);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  end,  currentByte,  0,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    0,    length);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
342	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  0,  size);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  0,  size);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  0,  size);	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    0,    length);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
343	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  0,  end);  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  0,  end);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  0,  end);	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    0,    length);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
344	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  offset,  '0'));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  offset,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  offset,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    buffer,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	50	None	replace
345	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  offset,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  offset,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  offset,  currentByte,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    buffer,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	50	None	replace
346	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  end,  '0'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  end,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  end,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    buffer,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	50	None	replace
347	[BUG]  [BUGGY]  final  byte[]  buffer  =(byte[])currentByte.cloneTree();  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  final  byte[]  buffer  =(byte[])currentByte.cloneTree();  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	final  byte[]  buffer  =(byte[])currentByte.cloneTree();	  final    byte[]    buffer    =(byte[])currentByte;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
348	[BUG]  [BUGGY]  final  byte[]  buffer  =(byte[])currentByte.cloneThan();  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  final  byte[]  buffer  =(byte[])currentByte.cloneThan();  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	final  byte[]  buffer  =(byte[])currentByte.cloneThan();	  final    byte[]    buffer    =(byte[])currentByte;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
349	[BUG]  [BUGGY]  final  byte[]  buffer  =(byte[])currentByte.cloneTar();  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  final  byte[]  buffer  =(byte[])currentByte.cloneTar();  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	final  byte[]  buffer  =(byte[])currentByte.cloneTar();	  final    byte[]    buffer    =(byte[])currentByte;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
350	[BUG]  [BUGGY]  final  byte[]  buffer  =(byte[])currentByte  +  1;  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  final  byte[]  buffer  =(byte[])currentByte  +  1;  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	final  byte[]  buffer  =(byte[])currentByte  +  1;	  final    byte[]    buffer    =(byte[])currentByte;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
351	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '7'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    start,    '7'));    	non-compiled	[CE]  <identifier>  expected	47	None	replace
352	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end,  '7'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end,  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end,  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    start,    '7'));    	non-compiled	[CE]  <identifier>  expected	47	None	replace
353	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  1,  currentByte,  '7'));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  1,  currentByte,  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  1,  currentByte,  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    start,    '7'));    	non-compiled	[CE]  <identifier>  expected	47	None	replace
354	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0')+  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0')+  '0');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0')+  '0');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '1')+    '0');    	non-compiled	[CE]  <identifier>  expected	113	None	replace
355	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0')+  '1');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0')+  '1');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0')+  '1');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '1')+    '0');    	non-compiled	[CE]  <identifier>  expected	113	None	replace
356	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte,  '1')+  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte,  '1')+  '0');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte,  '1')+  '0');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '1')+    '0');    	non-compiled	[CE]  <identifier>  expected	113	None	replace
357	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  currentByte,  '1')+  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  currentByte,  '1')+  '0');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  currentByte,  '1')+  '0');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '1')+    '0');    	non-compiled	[CE]  <identifier>  expected	113	None	replace
358	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  start,  currentByte,  '7'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  start,  currentByte,  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  start,  currentByte,  '7'));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    '7'));    	non-compiled	[CE]  <identifier>  expected	110	None	replace
359	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  start,  '7'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  start,  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  start,  '7'));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    '7'));    	non-compiled	[CE]  <identifier>  expected	110	None	replace
360	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  currentByte,  '7'));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  currentByte,  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  currentByte,  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    start,    currentByte,    '7'));    	non-compiled	[CE]  <identifier>  expected	81	None	replace
361	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  length,  currentByte,  '7'));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  length,  currentByte,  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  length,  currentByte,  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    start,    currentByte,    '7'));    	non-compiled	[CE]  <identifier>  expected	81	None	replace
362	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  '7'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    start,    currentByte,    '7'));    	non-compiled	[CE]  <identifier>  expected	81	None	replace
363	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  '1',  currentByte));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  '1',  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  '1',  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    start,    '1'));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
364	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end,  '1'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end,  '1'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    start,    '1'));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
365	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '1'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '1'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    start,    '1'));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
366	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  length));  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  length));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    length));    	non-compiled	[CE]  <identifier>  expected	64	None	replace
367	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  offset,  length,  currentByte,  length));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  offset,  length,  currentByte,  length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  offset,  length,  currentByte,  length));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    length));    	non-compiled	[CE]  <identifier>  expected	64	None	replace
368	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  currentByte,  buffer.length));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  currentByte,  buffer.length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  currentByte,  buffer.length));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    buffer,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	41	None	replace
369	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  buffer,  end,  currentByte));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  buffer,  end,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  buffer,  end,  currentByte));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    buffer,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	41	None	replace
370	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  currentByte,  buffer[start]));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  currentByte,  buffer[start]));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  currentByte,  buffer[start]));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    buffer,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	41	None	replace
371	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  currentByte,  BYTE_MASK));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  currentByte,  BYTE_MASK));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  currentByte,  BYTE_MASK));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    start));    	non-compiled	[CE]  <identifier>  expected	39	None	replace
372	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '0'  ||  currentByte  <  '7'));  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '0'  ||  currentByte  <  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '0'  ||  currentByte  <  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    '0'    ||    currentByte    >    '7'));    	non-compiled	[CE]  <identifier>  expected	115	None	replace
373	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '0'  ||  currentByte  >=  '7'));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '0'  ||  currentByte  >=  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '0'  ||  currentByte  >=  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    '0'    ||    currentByte    >    '7'));    	non-compiled	[CE]  <identifier>  expected	115	None	replace
374	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  end,  length,  currentByte,  '0'  ||  currentByte  >  '7'));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  end,  length,  currentByte,  '0'  ||  currentByte  >  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  end,  length,  currentByte,  '0'  ||  currentByte  >  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    '0'    ||    currentByte    >    '7'));    	non-compiled	[CE]  <identifier>  expected	115	None	replace
375	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '0'  &&  currentByte  >  '7'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '0'  &&  currentByte  >  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '0'  &&  currentByte  >  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    '0'    ||    currentByte    >    '7'));    	non-compiled	[CE]  <identifier>  expected	115	None	replace
376	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '0'  ||  currentByte  ==  '7'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '0'  ||  currentByte  ==  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '0'  ||  currentByte  ==  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    '0'    ||    currentByte    >    '7'));    	non-compiled	[CE]  <identifier>  expected	115	None	replace
377	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( " "));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw(new  IllegalArgumentException( " "));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw(new  IllegalArgumentException( " "));	  Throwables.throw(new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	91	None	replace
378	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( " "  +  currentByte  + ") ");  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw(new  IllegalArgumentException( " "  +  currentByte  + ") ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw(new  IllegalArgumentException( " "  +  currentByte  + ") ");	  Throwables.throw(new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	91	None	replace
379	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( " "  +  currentByte));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw(new  IllegalArgumentException( " "  +  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw(new  IllegalArgumentException( " "  +  currentByte));	  Throwables.throw(new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	91	None	replace
380	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( " "  +  getMessage()));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw(new  IllegalArgumentException( " "  +  getMessage()));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw(new  IllegalArgumentException( " "  +  getMessage()));	  Throwables.throw(new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	91	None	replace
381	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw(new  IllegalStateException( " ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw(new  IllegalStateException( " ");	  Throwables.throw(new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	91	None	replace
382	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  end);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
383	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
384	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  currentByte,  buffer,  start,  length);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  currentByte,  buffer,  start,  length);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  currentByte,  buffer,  start,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
385	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  length);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  length);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  end,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
386	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte,  0));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte,  0));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte,  0));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    0));    	non-compiled	[CE]  <identifier>  expected	121	None	replace
387	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  0));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  0));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  0));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    0));    	non-compiled	[CE]  <identifier>  expected	121	None	replace
388	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  1));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  1));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  1));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    0));    	non-compiled	[CE]  <identifier>  expected	121	None	replace
389	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  -1));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  -1));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  -1));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    0));    	non-compiled	[CE]  <identifier>  expected	121	None	replace
390	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  end,  length,  currentByte));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  end,  length,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  end,  length,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    end,    length,    currentByte));    	non-compiled	[CE]  <identifier>  expected	6	None	replace
391	[BUG]  [BUGGY]  result  =  trailer  ||  currentByte  ==  '')  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  result  =  trailer  ||  currentByte  ==  '')  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	result  =  trailer  ||  currentByte  ==  '')  {  throw  new  IllegalStateException( " ");  }	  if(trailer    ==    0    ||    currentByte    =='')    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
392	[BUG]  [BUGGY]  result  =  trailer  ||  currentByte  ==  'n'  ||  currentByte  ==  'r')  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  result  =  trailer  ||  currentByte  ==  'n'  ||  currentByte  ==  'r')  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	result  =  trailer  ||  currentByte  ==  'n'  ||  currentByte  ==  'r')  {  throw  new  IllegalStateException( " ");  }	  if(trailer    ==    0    ||    currentByte    =='')    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
393	[BUG]  [BUGGY]  bucket  ==  0  ||  trailer  ==  '')  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  bucket  ==  0  ||  trailer  ==  '')  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	bucket  ==  0  ||  trailer  ==  '')  {  throw  new  IllegalStateException( " ");  }	  if(trailer    ==    0    ||    currentByte    =='')    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
394	[BUG]  [BUGGY]  result  =  trailer  ||  currentByte  ==  'n'  ||  currentByte  ==  'n')  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  result  =  trailer  ||  currentByte  ==  'n'  ||  currentByte  ==  'n')  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	result  =  trailer  ||  currentByte  ==  'n'  ||  currentByte  ==  'n')  {  throw  new  IllegalStateException( " ");  }	  if(trailer    ==    0    ||    currentByte    =='')    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
395	[BUG]  [BUGGY]  bucket  ==  0  ||  currentByte  ==  '')  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  bucket  ==  0  ||  currentByte  ==  '')  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	bucket  ==  0  ||  currentByte  ==  '')  {  throw  new  IllegalStateException( " ");  }	  if(trailer    ==    0    ||    currentByte    =='')    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
396	[BUG]  [BUGGY]  allowSideEffects(currentByte))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  allowSideEffects(currentByte))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	allowSideEffects(currentByte))  {  throw  new  IllegalStateException( " ");  }	  if(trailer    ==    0    ||    currentByte    =='')    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
397	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer.trim());  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer.trim());  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( " "  +  trailer.trim());	  throw    new    IllegalArgumentException(   "   ".trim());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
398	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  getMessage());  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( " "  +  getMessage());  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( " "  +  getMessage());	  throw    new    IllegalArgumentException(   "   ".trim());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
399	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "currentByte  cannot  be  null. ");  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( "currentByte  cannot  be  null. ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( "currentByte  cannot  be  null. ");	  throw    new    IllegalArgumentException(   "   ".trim());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
400	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  currentByte  +  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  currentByte  +  1);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  currentByte  +  1);	  System.arraycopy(buffer,    offset,    buffer,    0,    currentByte);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
401	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  currentByte  -  1);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  currentByte  -  1);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  currentByte  -  1);	  System.arraycopy(buffer,    offset,    buffer,    0,    currentByte);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
402	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  currentByte  -  '0');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  currentByte  -  '0');	  System.arraycopy(buffer,    offset,    buffer,    0,    currentByte);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
403	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  currentByte  +  1,  length);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  currentByte  +  1,  length);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  currentByte  +  1,  length);	  System.arraycopy(buffer,    offset,    buffer,    0,    currentByte);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
404	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  0,  0));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  0,  0));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  0,  0));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    0));    	non-compiled	[CE]  <identifier>  expected	76	None	replace
405	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  start,  0));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  start,  0));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  start,  0));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    0));    	non-compiled	[CE]  <identifier>  expected	76	None	replace
406	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer,  start,  0));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer,  start,  0));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer,  start,  0));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    0));    	non-compiled	[CE]  <identifier>  expected	76	None	replace
407	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end,  0));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end,  0));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end,  0));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    0));    	non-compiled	[CE]  <identifier>  expected	76	None	replace
408	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte,  '3'));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte,  '3'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte,  '3'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '3'));    	non-compiled	[CE]  <identifier>  expected	101	None	replace
409	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  '3'));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  '3'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  '3'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '3'));    	non-compiled	[CE]  <identifier>  expected	101	None	replace
410	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '5'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '5'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '5'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '3'));    	non-compiled	[CE]  <identifier>  expected	101	None	replace
411	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  end,  currentByte));  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  end,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  end,  currentByte));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    end,    currentByte));    	non-compiled	[CE]  <identifier>  expected	57	None	replace
412	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  buffer,  end,  currentByte));  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  buffer,  end,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  buffer,  end,  currentByte));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    end,    currentByte));    	non-compiled	[CE]  <identifier>  expected	57	None	replace
413	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  end,  '7'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  end,  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  end,  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    end,    currentByte,    '7'));    	non-compiled	[CE]  <identifier>  expected	46	None	replace
414	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end,  '1'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end,  '1'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	20	None	replace
415	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0'));	  Throwables.throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
416	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte,  '0'));	  Throwables.throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
417	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  start,  length,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  start,  length,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  start,  length,  currentByte,  '0'));	  Throwables.throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
418	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  currentByte,  '0'));	  Throwables.throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
419	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  '0'));	  Throwables.throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
420	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  '0',  currentByte));  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  '0',  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  '0',  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    start,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	85	None	replace
421	[BUG]  [BUGGY]  System.arraycopy(currentByte,  offset,  buffer,  start,  currentByte,  0,  length));  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(currentByte,  offset,  buffer,  start,  currentByte,  0,  length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(currentByte,  offset,  buffer,  start,  currentByte,  0,  length));	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    0,    length));    	non-compiled	[CE]  <identifier>  expected	69	None	replace
422	[BUG]  [BUGGY]  System.arraycopy(currentByte,  buffer,  offset,  start,  currentByte,  0,  length));  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(currentByte,  buffer,  offset,  start,  currentByte,  0,  length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(currentByte,  buffer,  offset,  start,  currentByte,  0,  length));	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    0,    length));    	non-compiled	[CE]  <identifier>  expected	69	None	replace
423	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  0,  end));  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  0,  end));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  0,  end));	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    0,    length));    	non-compiled	[CE]  <identifier>  expected	69	None	replace
424	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  length  -  1,  currentByte));  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  length  -  1,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  length  -  1,  currentByte));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    start,    length,    currentByte));    	non-compiled	[CE]  <identifier>  expected	56	None	replace
425	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  currentByte));  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  currentByte));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    start,    length,    currentByte));    	non-compiled	[CE]  <identifier>  expected	56	None	replace
426	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  offset,  end,  currentByte));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  offset,  end,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  offset,  end,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    end,    currentByte));    	non-compiled	[CE]  <identifier>  expected	83	None	replace
427	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  start,  currentByte,  '1'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  start,  currentByte,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  start,  currentByte,  '1'));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	112	None	replace
428	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  start,  length,  currentByte,  '1'));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  start,  length,  currentByte,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  start,  length,  currentByte,  '1'));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	112	None	replace
429	[BUG]  [BUGGY]  final  byte[]  buffer  =(byte[])currentByte.toArray(new  byte[currentByte.length  -  1]);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  final  byte[]  buffer  =(byte[])currentByte.toArray(new  byte[currentByte.length  -  1]);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	final  byte[]  buffer  =(byte[])currentByte.toArray(new  byte[currentByte.length  -  1]);	  final    byte[]    buffer    =(byte[])currentByte.clone();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
430	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  1,  currentByte,  '1'));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  1,  currentByte,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  1,  currentByte,  '1'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    1,    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
431	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  1,  currentByte,  '1'));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  1,  currentByte,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  1,  currentByte,  '1'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    1,    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
432	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  start,  currentByte,  '9'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  start,  currentByte,  '9'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  start,  currentByte,  '9'));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    '9'));    	non-compiled	[CE]  <identifier>  expected	111	None	replace
433	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  '0',  currentByte,  '9'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  '0',  currentByte,  '9'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  '0',  currentByte,  '9'));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    '9'));    	non-compiled	[CE]  <identifier>  expected	111	None	replace
434	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  currentByte,  '9')+  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  currentByte,  '9')+  '0');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  currentByte,  '9')+  '0');	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    '9'));    	non-compiled	[CE]  <identifier>  expected	111	None	replace
435	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  '1'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  '1'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	62	None	replace
436	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  end,  currentByte,  '1'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  end,  currentByte,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  end,  currentByte,  '1'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	62	None	replace
437	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  currentByte,  '1'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  currentByte,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  currentByte,  '1'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	62	None	replace
438	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  start,  length,  currentByte,  '1'));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  start,  length,  currentByte,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  start,  length,  currentByte,  '1'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	62	None	replace
439	[BUG]  [BUGGY]  allowNonSideEffects(currentByte))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  allowNonSideEffects(currentByte))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	allowNonSideEffects(currentByte))  {  throw  new  IllegalStateException( " ");  }	  if(trailer    ==    0    ||    currentByte    =='')    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
440	[BUG]  [BUGGY]  allowNonEmpty(currentByte))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  allowNonEmpty(currentByte))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	allowNonEmpty(currentByte))  {  throw  new  IllegalStateException( " ");  }	  if(trailer    ==    0    ||    currentByte    =='')    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
441	[BUG]  [BUGGY]  allowNonWhitespace(currentByte)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  allowNonWhitespace(currentByte)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	allowNonWhitespace(currentByte)  {  throw  new  IllegalStateException( " ");  }	  if(trailer    ==    0    ||    currentByte    =='')    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
442	[BUG]  [BUGGY]  result  =  trailer  ||  currentByte  ==  '0')  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  result  =  trailer  ||  currentByte  ==  '0')  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	result  =  trailer  ||  currentByte  ==  '0')  {  throw  new  IllegalStateException( " ");  }	  if(trailer    ==    0    ||    currentByte    =='')    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
443	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  offset,  length);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  start,  buffer,  offset,  length);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  start,  buffer,  offset,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
444	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  0);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  0);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  0);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
445	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  currentByte  -  '9');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  currentByte  -  '9');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  currentByte  -  '9');	  System.arraycopy(buffer,    offset,    buffer,    0,    currentByte);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
446	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  currentByte  -  '7');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  currentByte  -  '7');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  currentByte  -  '7');	  System.arraycopy(buffer,    offset,    buffer,    0,    currentByte);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
447	[BUG]  [BUGGY]  final  byte[]  buffer  =(byte[])currentByte  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  final  byte[]  buffer  =(byte[])currentByte  *  BYTE_MASK;  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	final  byte[]  buffer  =(byte[])currentByte  *  BYTE_MASK;	  final    byte[]    buffer    =(byte[])currentByte;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
448	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  start,  length));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  start,  length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  start,  length));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    end,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
449	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  start,  '0'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  start,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  start,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    end,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
450	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  end,  currentByte,  length));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  end,  currentByte,  length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  end,  currentByte,  length));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    end,    currentByte,    length));    	non-compiled	[CE]  <identifier>  expected	89	None	replace
451	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  end,  currentByte,  length));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  end,  currentByte,  length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  end,  currentByte,  length));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    end,    currentByte,    length));    	non-compiled	[CE]  <identifier>  expected	89	None	replace
452	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte  -  '7'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte  -  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte  -  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    start,    '7'));    	non-compiled	[CE]  <identifier>  expected	47	None	replace
453	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  length));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  length));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	65	None	replace
454	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  end,  currentByte));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  end,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  end,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	65	None	replace
455	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exprMessage(buffer,  offset,  start,  currentByte));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exprMessage(buffer,  offset,  start,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exprMessage(buffer,  offset,  start,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	65	None	replace
456	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  start,  currentByte  -  '7'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  start,  currentByte  -  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  start,  currentByte  -  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    currentByte    -    '7'));    	non-compiled	[CE]  <identifier>  expected	100	None	replace
457	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end  -  '7'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end  -  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end  -  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    currentByte    -    '7'));    	non-compiled	[CE]  <identifier>  expected	100	None	replace
458	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  '0')+  '9');  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  '0')+  '9');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  '0')+  '9');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '0')+    '9');    	non-compiled	[CE]  <identifier>  expected	120	None	replace
459	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  '0')+  '9');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  '0')+  '9');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  '0')+  '9');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '0')+    '9');    	non-compiled	[CE]  <identifier>  expected	120	None	replace
460	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '0',  currentByte)+  '9');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '0',  currentByte)+  '9');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '0',  currentByte)+  '9');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '0')+    '9');    	non-compiled	[CE]  <identifier>  expected	120	None	replace
461	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  currentByte,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  0,  currentByte,  0,  buffer.length);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  0,  currentByte,  0,  buffer.length);	  System.arraycopy(buffer,    offset,    currentByte,    0,    currentByte);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
462	[BUG]  [BUGGY]  System.arraycopy(trailer,  offset,  buffer,  0,  currentByte);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(trailer,  offset,  buffer,  0,  currentByte);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(trailer,  offset,  buffer,  0,  currentByte);	  System.arraycopy(buffer,    offset,    currentByte,    0,    currentByte);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
463	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer.equals(currentByte)?  null  : " ");  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer.equals(currentByte)?  null  : " ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( " "  +  trailer.equals(currentByte)?  null  : " ");	  throw    new    IllegalArgumentException(   "   ".equals(currentByte)?    null    :   "   ");    	non-compiled	[CE]  <identifier>  expected	27	None	replace
464	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(currentByte)?  null  : "0 ");  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(currentByte)?  null  : "0 ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( " ".equals(currentByte)?  null  : "0 ");	  throw    new    IllegalArgumentException(   "   ".equals(currentByte)?    null    :   "   ");    	non-compiled	[CE]  <identifier>  expected	27	None	replace
465	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(currentByte)?  null  : ", ");  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(currentByte)?  null  : ", ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( " ".equals(currentByte)?  null  : ", ");	  throw    new    IllegalArgumentException(   "   ".equals(currentByte)?    null    :   "   ");    	non-compiled	[CE]  <identifier>  expected	27	None	replace
466	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  trailer.length));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  trailer.length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  trailer.length));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    trailer.length));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
467	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  '0',  currentByte,  '1'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  '0',  currentByte,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  '0',  currentByte,  '1'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    '0',    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	63	None	replace
468	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  '0',  currentByte,  '1'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  '0',  currentByte,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  '0',  currentByte,  '1'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    '0',    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	63	None	replace
469	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '0',  currentByte,  '1')+  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '0',  currentByte,  '1')+  '0');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '0',  currentByte,  '1')+  '0');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    '0',    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	63	None	replace
470	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  '0',  currentByte,  '1'));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  '0',  currentByte,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  '0',  currentByte,  '1'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    '0',    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	63	None	replace
471	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  buffer,  end,  currentByte));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  buffer,  end,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  buffer,  end,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    end,    currentByte));    	non-compiled	[CE]  <identifier>  expected	11	None	replace
472	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  currentByte,  0));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  currentByte,  0));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  currentByte,  0));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    0));    	non-compiled	[CE]  <identifier>  expected	76	None	replace
473	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  7));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  7));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  7));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    0));    	non-compiled	[CE]  <identifier>  expected	76	None	replace
474	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  '1')+  '9');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  '1')+  '9');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  '1')+  '9');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '1')+    '9');    	non-compiled	[CE]  <identifier>  expected	114	None	replace
475	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  '1')+  '9');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  '1')+  '9');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  '1')+  '9');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '1')+    '9');    	non-compiled	[CE]  <identifier>  expected	114	None	replace
476	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '1',  currentByte)+  '9');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '1',  currentByte)+  '9');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '1',  currentByte)+  '9');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '1')+    '9');    	non-compiled	[CE]  <identifier>  expected	114	None	replace
477	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end,  currentByte,  '1')+  '9');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end,  currentByte,  '1')+  '9');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end,  currentByte,  '1')+  '9');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '1')+    '9');    	non-compiled	[CE]  <identifier>  expected	114	None	replace
478	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  end,  currentByte));  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  end,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  end,  currentByte));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    end,    currentByte));    	non-compiled	[CE]  <identifier>  expected	57	None	replace
479	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  end,  start,  currentByte));  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  end,  start,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  end,  start,  currentByte));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    end,    currentByte));    	non-compiled	[CE]  <identifier>  expected	57	None	replace
480	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  end,  buffer,  start,  currentByte));  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  end,  buffer,  start,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  end,  buffer,  start,  currentByte));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    end,    currentByte));    	non-compiled	[CE]  <identifier>  expected	57	None	replace
481	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ".equalsIgnoreCase(currentByte));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalStateException( " ".equalsIgnoreCase(currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalStateException( " ".equalsIgnoreCase(currentByte));	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	26	None	replace
482	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ".equals(currentByte.getByte()));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalStateException( " ".equals(currentByte.getByte()));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalStateException( " ".equals(currentByte.getByte()));	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	26	None	replace
483	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  start,  length,  buffer,  '0'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  start,  length,  buffer,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  start,  length,  buffer,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    0,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
484	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  start,  length,  end,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  start,  length,  end,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  start,  length,  end,  currentByte,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    0,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
485	[BUG]  [BUGGY]  ((  byte)currentByte).getLength();  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  ((  byte)currentByte).getLength();  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	((  byte)currentByte).getLength();	  ((    byte)currentByte).setLength(0);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
486	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  '0',  currentByte));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  '0',  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  '0',  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    '0',    currentByte));    	non-compiled	[CE]  <identifier>  expected	86	None	replace
487	[BUG]  [BUGGY]  result  =(currentByte  <  <  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  result  =(currentByte  <  <  3)+(currentByte  -  '0');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	result  =(currentByte  <  <  3)+(currentByte  -  '0');	  result    =(length    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	31	None	replace
488	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  '3'));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  '3'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  '3'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '3'));    	non-compiled	[CE]  <identifier>  expected	101	None	replace
489	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '3'));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '3'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '3'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '3'));    	non-compiled	[CE]  <identifier>  expected	101	None	replace
490	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  offset,  '0',  currentByte));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  offset,  '0',  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  offset,  '0',  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    '0',    currentByte));    	non-compiled	[CE]  <identifier>  expected	79	None	replace
491	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  end,  '0',  currentByte));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  end,  '0',  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  end,  '0',  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    '0',    currentByte));    	non-compiled	[CE]  <identifier>  expected	79	None	replace
492	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  '-'));  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  '-'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  '-'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '-'));    	non-compiled	[CE]  <identifier>  expected	102	None	replace
493	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  '-'));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  '-'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  '-'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '-'));    	non-compiled	[CE]  <identifier>  expected	102	None	replace
494	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0'  -  '7'));  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0'  -  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0'  -  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '0'    ||    currentByte    >    '7'));    	non-compiled	[CE]  <identifier>  expected	119	None	replace
495	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  '0'  ||  currentByte  >  '7'));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  '0'  ||  currentByte  >  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  '0'  ||  currentByte  >  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '0'    ||    currentByte    >    '7'));    	non-compiled	[CE]  <identifier>  expected	119	None	replace
496	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  '0'  ||  currentByte  >  '7'));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  '0'  ||  currentByte  >  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  '0'  ||  currentByte  >  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '0'    ||    currentByte    >    '7'));    	non-compiled	[CE]  <identifier>  expected	119	None	replace
497	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  '0');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  -  '0');	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    length    -    '0');    	non-compiled	[CE]  <identifier>  expected	68	None	replace
498	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end  -  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end  -  '0');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  end  -  '0');	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    length    -    '0');    	non-compiled	[CE]  <identifier>  expected	68	None	replace
499	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  start,  currentByte,  end));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  start,  currentByte,  end));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  start,  currentByte,  end));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    end));    	non-compiled	[CE]  <identifier>  expected	40	None	replace
500	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  start,  length,  currentByte,  end));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  start,  length,  currentByte,  end));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  start,  length,  currentByte,  end));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    end));    	non-compiled	[CE]  <identifier>  expected	40	None	replace
501	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  end,  currentByte));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  end,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  end,  currentByte));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    end));    	non-compiled	[CE]  <identifier>  expected	40	None	replace
502	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  buffer,  start));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  buffer,  start));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  buffer,  start));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	9	None	replace
503	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  '9'));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  '9'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  '9'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '9'));    	non-compiled	[CE]  <identifier>  expected	45	None	replace
504	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '0',  currentByte,  '9'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '0',  currentByte,  '9'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '0',  currentByte,  '9'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '9'));    	non-compiled	[CE]  <identifier>  expected	45	None	replace
505	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  end,  buffer,  '0'));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  end,  buffer,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  end,  buffer,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    end,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
506	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  start,  end,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  start,  end,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  start,  end,  currentByte,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    end,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
507	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  buffer,  start,  '0'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  buffer,  start,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  buffer,  start,  '0'));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    buffer,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	41	None	replace
508	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  buffer.length  -  1));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  buffer.length  -  1));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  buffer.length  -  1));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    buffer.length    -    1));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
509	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte  -  '0'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte  -  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  currentByte  -  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    buffer.length    -    1));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
510	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  '1')+  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  '1')+  '0');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  '1')+  '0');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '1')+    '0');    	non-compiled	[CE]  <identifier>  expected	113	None	replace
511	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  '1')+  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  '1')+  '0');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  '1')+  '0');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '1')+    '0');    	non-compiled	[CE]  <identifier>  expected	113	None	replace
512	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '1')+  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '1')+  '0');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '1')+  '0');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '1')+    '0');    	non-compiled	[CE]  <identifier>  expected	113	None	replace
513	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end,  currentByte,  '1')+  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end,  currentByte,  '1')+  '0');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end,  currentByte,  '1')+  '0');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '1')+    '0');    	non-compiled	[CE]  <identifier>  expected	113	None	replace
514	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end,  currentByte));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  end,  currentByte));	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    length));    	non-compiled	[CE]  <identifier>  expected	66	None	replace
515	[BUG]  [BUGGY]  System.arraycopy(currentByte,  buffer,  offset,  start,  currentByte,  length));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(currentByte,  buffer,  offset,  start,  currentByte,  length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(currentByte,  buffer,  offset,  start,  currentByte,  length));	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    length));    	non-compiled	[CE]  <identifier>  expected	66	None	replace
516	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  length  +  1));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  length  +  1));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  length  +  1));	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    length));    	non-compiled	[CE]  <identifier>  expected	66	None	replace
517	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  buffer,  currentByte));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  buffer,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  buffer,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    currentByte));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
518	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ", ");  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ", ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ", ");	  throw    new    IllegalArgumentException(   "Byte    must    be    in    the    range    [   "    +    getClass().getName()    +   "]   ");    	non-compiled	[CE]  <identifier>  expected	103	None	replace
519	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + "= ");  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + "= ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + "= ");	  throw    new    IllegalArgumentException(   "Byte    must    be    in    the    range    [   "    +    getClass().getName()    +   "]   ");    	non-compiled	[CE]  <identifier>  expected	103	None	replace
520	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ",  allNUL);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ",  allNUL);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ",  allNUL);	  throw    new    IllegalArgumentException(   "Byte    must    be    in    the    range    [   "    +    getClass().getName()    +   "]   ");    	non-compiled	[CE]  <identifier>  expected	103	None	replace
521	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  buffer,  offset));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  buffer,  offset));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  buffer,  offset));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    buffer,    start));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
522	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  buffer,  length));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  buffer,  length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  buffer,  length));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    buffer,    start));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
523	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  length));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  length));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	73	None	replace
524	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  start,  end,  currentByte));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  start,  end,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  start,  end,  currentByte));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	73	None	replace
525	[BUG]  [BUGGY]  throw  new  IllegalStateException(expandMessage(buffer,  offset,  start,  currentByte));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalStateException(expandMessage(buffer,  offset,  start,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalStateException(expandMessage(buffer,  offset,  start,  currentByte));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	73	None	replace
526	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  buffer));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  buffer));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  buffer));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    buffer,    currentByte));    	non-compiled	[CE]  <identifier>  expected	75	None	replace
527	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  currentByte  + ", ");  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  currentByte  + ", ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  currentByte  + ", ");	  throw    new    IllegalArgumentException(   "Byte    must    be    in    the    range    [   "    +    currentByte    +   "]   ");    	non-compiled	[CE]  <identifier>  expected	104	None	replace
528	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  end  + "] ");  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  end  + "] ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  end  + "] ");	  throw    new    IllegalArgumentException(   "Byte    must    be    in    the    range    [   "    +    currentByte    +   "]   ");    	non-compiled	[CE]  <identifier>  expected	104	None	replace
529	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  this.currentByte  + "] ");  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  this.currentByte  + "] ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  this.currentByte  + "] ");	  throw    new    IllegalArgumentException(   "Byte    must    be    in    the    range    [   "    +    currentByte    +   "]   ");    	non-compiled	[CE]  <identifier>  expected	104	None	replace
530	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  currentByte);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( " "  +  currentByte);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( " "  +  currentByte);	  throw    new    IllegalArgumentException(   "   ".equals(currentByte));    	non-compiled	[CE]  <identifier>  expected	24	None	replace
531	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equals(currentByte));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( " ").equals(currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( " ").equals(currentByte));	  throw    new    IllegalArgumentException(   "   ".equals(currentByte));    	non-compiled	[CE]  <identifier>  expected	24	None	replace
532	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  start,  currentByte,  '7'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  start,  currentByte,  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  start,  currentByte,  '7'));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    '7'));    	non-compiled	[CE]  <identifier>  expected	110	None	replace
533	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  end,  currentByte,  '7'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  end,  currentByte,  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  end,  currentByte,  '7'));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    '7'));    	non-compiled	[CE]  <identifier>  expected	110	None	replace
534	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  start,  currentByte  +  1));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  start,  currentByte  +  1));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  start,  currentByte  +  1));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    currentByte    +    1));    	non-compiled	[CE]  <identifier>  expected	99	None	replace
535	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte  -  1));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte  -  1));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte  -  1));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    currentByte    +    1));    	non-compiled	[CE]  <identifier>  expected	99	None	replace
536	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '0'  +  currentByte  +  1));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '0'  +  currentByte  +  1));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '0'  +  currentByte  +  1));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    currentByte    +    1));    	non-compiled	[CE]  <identifier>  expected	99	None	replace
537	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  currentByte  +  1));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  currentByte  +  1));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  currentByte  +  1));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    currentByte    +    1));    	non-compiled	[CE]  <identifier>  expected	99	None	replace
538	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end,  currentByte);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end,  currentByte);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  end,  currentByte);	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    length);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
539	[BUG]  [BUGGY]  System.arraycopy(currentByte,  offset,  buffer,  start,  currentByte,  length);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(currentByte,  offset,  buffer,  start,  currentByte,  length);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(currentByte,  offset,  buffer,  start,  currentByte,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    length);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
540	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  length  +  1);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  length  +  1);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  length  +  1);	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    length);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
541	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte  -  '0'));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte  -  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte  -  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    start,    length    -    1,    currentByte));    	non-compiled	[CE]  <identifier>  expected	72	None	replace
542	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length  -  1,  currentByte));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length  -  1,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length  -  1,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    start,    length    -    1,    currentByte));    	non-compiled	[CE]  <identifier>  expected	72	None	replace
543	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  length  -  1,  currentByte  +  1));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  length  -  1,  currentByte  +  1));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  length  -  1,  currentByte  +  1));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    start,    length    -    1,    currentByte));    	non-compiled	[CE]  <identifier>  expected	72	None	replace
544	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  offset,  currentByte));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  offset,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  offset,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
545	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte  +  1));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte  +  1));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte  +  1));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
546	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  currentByte,  '7'));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  currentByte,  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  currentByte,  '7'));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    '7'));    	non-compiled	[CE]  <identifier>  expected	109	None	replace
547	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  start,  offset,  currentByte,  length));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  start,  offset,  currentByte,  length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  start,  offset,  currentByte,  length));	  throw    new    IllegalArgumentException(expandMessage(buffer,    start,    length,    currentByte,    length));    	non-compiled	[CE]  <identifier>  expected	74	None	replace
548	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  currentByte,  -1));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  currentByte,  -1));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  currentByte,  -1));	  throw    new    IllegalArgumentException(expandMessage(buffer,    start,    length,    currentByte,    length));    	non-compiled	[CE]  <identifier>  expected	74	None	replace
549	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  offset,  currentByte,  buffer.length));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  offset,  currentByte,  buffer.length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  offset,  currentByte,  buffer.length));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    buffer.length));    	non-compiled	[CE]  <identifier>  expected	60	None	replace
550	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  end,  currentByte,  buffer.length));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  end,  currentByte,  buffer.length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  end,  currentByte,  buffer.length));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    buffer.length));    	non-compiled	[CE]  <identifier>  expected	60	None	replace
551	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  length);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  length);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  length);	  System.arraycopy(buffer,    0,    currentByte,    0,    length);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
552	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  offset,  currentByte,  length));  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  offset,  currentByte,  length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  offset,  currentByte,  length));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    length));    	non-compiled	[CE]  <identifier>  expected	64	None	replace
553	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  currentByte,  length));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  currentByte,  length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  currentByte,  length));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    length));    	non-compiled	[CE]  <identifier>  expected	64	None	replace
554	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( " ").printStackTrace();  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw(new  IllegalArgumentException( " ").printStackTrace();  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw(new  IllegalArgumentException( " ").printStackTrace();	  Throwables.throw(new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	91	None	replace
555	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( " "  +  trailer));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw(new  IllegalArgumentException( " "  +  trailer));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw(new  IllegalArgumentException( " "  +  trailer));	  Throwables.throw(new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	91	None	replace
556	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( " "+trailer+ ") ");  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw(new  IllegalArgumentException( " "+trailer+ ") ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw(new  IllegalArgumentException( " "+trailer+ ") ");	  Throwables.throw(new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	91	None	replace
557	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte  -  '0');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  currentByte  -  '0');	  System.arraycopy(buffer,    offset,    buffer,    start,    length    -    currentByte);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
558	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  offset,  end  -  currentByte);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  start,  buffer,  offset,  end  -  currentByte);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  start,  buffer,  offset,  end  -  currentByte);	  System.arraycopy(buffer,    offset,    buffer,    start,    length    -    currentByte);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
559	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  0));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  0));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  0));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    0));    	non-compiled	[CE]  <identifier>  expected	121	None	replace
560	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  length,  currentByte,  0));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  length,  currentByte,  0));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  length,  currentByte,  0));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    0));    	non-compiled	[CE]  <identifier>  expected	121	None	replace
561	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  end,  currentByte,  buffer.length));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  end,  currentByte,  buffer.length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  end,  currentByte,  buffer.length));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    start,    length,    currentByte,    buffer.length));    	non-compiled	[CE]  <identifier>  expected	16	None	replace
562	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exprMessage(buffer,  start,  end,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exprMessage(buffer,  start,  end,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exprMessage(buffer,  start,  end,  currentByte,  '0'));	  throw    new    IllegalArgumentException(exprMessage(buffer,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	116	None	replace
563	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exprMessage(buffer,  start,  length,  buffer,  '0'));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exprMessage(buffer,  start,  length,  buffer,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exprMessage(buffer,  start,  length,  buffer,  '0'));	  throw    new    IllegalArgumentException(exprMessage(buffer,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	116	None	replace
564	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exprMessage(buffer,  start,  length,  '0',  currentByte));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exprMessage(buffer,  start,  length,  '0',  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exprMessage(buffer,  start,  length,  '0',  currentByte));	  throw    new    IllegalArgumentException(exprMessage(buffer,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	116	None	replace
565	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exprMessage(buffer,  0,  start,  length,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exprMessage(buffer,  0,  start,  length,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exprMessage(buffer,  0,  start,  length,  currentByte,  '0'));	  throw    new    IllegalArgumentException(exprMessage(buffer,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	116	None	replace
566	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  start,  length,  end,  currentByte));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  start,  length,  end,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  start,  length,  end,  currentByte));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    end,    currentByte));    	non-compiled	[CE]  <identifier>  expected	43	None	replace
567	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  start,  length,  currentByte));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  start,  length,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  start,  length,  currentByte));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    end,    currentByte));    	non-compiled	[CE]  <identifier>  expected	43	None	replace
568	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  end,  '0',  currentByte));  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  end,  '0',  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  end,  '0',  currentByte));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    end,    currentByte));    	non-compiled	[CE]  <identifier>  expected	43	None	replace
569	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  start,  currentByte  -  '0'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  start,  currentByte  -  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  start,  currentByte  -  '0'));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    start,    '0'));    	non-compiled	[CE]  <identifier>  expected	87	None	replace
570	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  last,  '0'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  last,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  last,  '0'));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    start,    '0'));    	non-compiled	[CE]  <identifier>  expected	87	None	replace
571	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  start,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  start,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  start,  currentByte,  '0'));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	42	None	replace
572	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  start,  length,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  start,  length,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  start,  length,  currentByte,  '0'));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	42	None	replace
573	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  '0')+  '9');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  '0')+  '9');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  '0')+  '9');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    '0')+    '9');    	non-compiled	[CE]  <identifier>  expected	118	None	replace
574	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  start,  length,  currentByte,  '0')+  '9');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  start,  length,  currentByte,  '0')+  '9');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  start,  length,  currentByte,  '0')+  '9');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    '0')+    '9');    	non-compiled	[CE]  <identifier>  expected	118	None	replace
575	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  currentByte,  length));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  currentByte,  length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  currentByte,  length));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    trailer));    	non-compiled	[CE]  <identifier>  expected	106	None	replace
576	[BUG]  [BUGGY]  System.arraycopy(currentByte,  offset,  buffer,  start,  currentByte,  0,  length);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(currentByte,  offset,  buffer,  start,  currentByte,  0,  length);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(currentByte,  offset,  buffer,  start,  currentByte,  0,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    0,    length);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
577	[BUG]  [BUGGY]  System.arraycopy(trailer,  offset,  buffer,  start,  currentByte,  0,  length);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(trailer,  offset,  buffer,  start,  currentByte,  0,  length);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(trailer,  offset,  buffer,  start,  currentByte,  0,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    0,    length);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
578	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  end,  currentByte,  '7'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  end,  currentByte,  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  end,  currentByte,  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    end,    currentByte,    '7'));    	non-compiled	[CE]  <identifier>  expected	46	None	replace
579	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  1,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  1,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  1,  currentByte,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    1,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	5	None	replace
580	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  1,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  1,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  1,  currentByte,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    1,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	5	None	replace
581	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ")out  of  range  [ "  +  start  + ") ");  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ")out  of  range  [ "  +  start  + ") ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ")out  of  range  [ "  +  start  + ") ");	  throw    new    IllegalArgumentException(   "Byte    must    be    in    the    range    [   "    +    getClass().getName()    +   ")   ");    	non-compiled	[CE]  <identifier>  expected	105	None	replace
582	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ")out  of  range. ");  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ")out  of  range. ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ")out  of  range. ");	  throw    new    IllegalArgumentException(   "Byte    must    be    in    the    range    [   "    +    getClass().getName()    +   ")   ");    	non-compiled	[CE]  <identifier>  expected	105	None	replace
583	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ")out  of  range[ ");  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ")out  of  range[ ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ")out  of  range[ ");	  throw    new    IllegalArgumentException(   "Byte    must    be    in    the    range    [   "    +    getClass().getName()    +   ")   ");    	non-compiled	[CE]  <identifier>  expected	105	None	replace
584	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ")out  of  range  [ "  +  currentByte  + ") ");  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ")out  of  range  [ "  +  currentByte  + ") ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ")out  of  range  [ "  +  currentByte  + ") ");	  throw    new    IllegalArgumentException(   "Byte    must    be    in    the    range    [   "    +    getClass().getName()    +   ")   ");    	non-compiled	[CE]  <identifier>  expected	105	None	replace
585	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  trailer));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  trailer));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  currentByte,  trailer));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    trailer));    	non-compiled	[CE]  <identifier>  expected	23	None	replace
586	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  end,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  end,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  end,  currentByte,  '0'));	  Throwables.throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
587	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  offset,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  offset,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  offset,  currentByte,  '0'));	  Throwables.throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
588	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  '0'));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  '0'));	  Throwables.throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
589	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  currentByte,  '0'));	  Throwables.throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
590	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  start,  length,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  start,  length,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  start,  length,  currentByte,  '0'));	  Throwables.throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
591	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  buffer,  offset,  currentByte));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  buffer,  offset,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  buffer,  offset,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    buffer,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
592	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  buffer,  start,  currentByte));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  buffer,  start,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  buffer,  start,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    buffer,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
593	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer,  start,  '7'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer,  start,  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer,  start,  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    buffer,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
594	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  currentByte  -  '9');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  currentByte  -  '9');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  start,  buffer,  0,  currentByte  -  '9');	  System.arraycopy(buffer,    start,    buffer,    0,    currentByte);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
595	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  end,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  end,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  end,  currentByte,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    end,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
596	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  end,  currentByte);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  end,  currentByte);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  0,  buffer,  end,  currentByte);	  System.arraycopy(buffer,    offset,    buffer,    end,    currentByte);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
597	[BUG]  [BUGGY]  System.arraycopy(currentByte,  buffer,  offset,  end,  currentByte);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(currentByte,  buffer,  offset,  end,  currentByte);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(currentByte,  buffer,  offset,  end,  currentByte);	  System.arraycopy(buffer,    offset,    buffer,    end,    currentByte);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
598	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  buffer,  currentByte,  '1'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  buffer,  currentByte,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  buffer,  currentByte,  '1'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	20	None	replace
599	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  buffer,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  buffer,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  buffer,  currentByte,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
600	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  start,  end,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  start,  end,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  start,  end,  currentByte,  '0'));	  throw    new    IllegalArgumentException(expandMessage(buffer,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	117	None	replace
601	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  buffer,  '0'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  buffer,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  buffer,  '0'));	  throw    new    IllegalArgumentException(expandMessage(buffer,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	117	None	replace
602	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  '0',  currentByte));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  '0',  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  '0',  currentByte));	  throw    new    IllegalArgumentException(expandMessage(buffer,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	117	None	replace
603	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  0,  start,  length,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  0,  start,  length,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  0,  start,  length,  currentByte,  '0'));	  throw    new    IllegalArgumentException(expandMessage(buffer,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	117	None	replace
604	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  currentByte,  '0'));	  throw    new    IllegalArgumentException(expandMessage(buffer,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	117	None	replace
605	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  '7'));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    '7'));    	non-compiled	[CE]  <identifier>  expected	82	None	replace
606	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  end,  currentByte,  '7'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  end,  currentByte,  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  end,  currentByte,  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    '7'));    	non-compiled	[CE]  <identifier>  expected	82	None	replace
607	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  currentByte,  end));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  currentByte,  end));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  currentByte,  end));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    end));    	non-compiled	[CE]  <identifier>  expected	53	None	replace
608	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  end,  currentByte,  length));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  end,  currentByte,  length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  end,  currentByte,  length));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    end));    	non-compiled	[CE]  <identifier>  expected	53	None	replace
609	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  currentByte,  0));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  currentByte,  0));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  currentByte,  0));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    0));    	non-compiled	[CE]  <identifier>  expected	107	None	replace
610	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  length,  currentByte,  0));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  length,  currentByte,  0));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  length,  currentByte,  0));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    0));    	non-compiled	[CE]  <identifier>  expected	107	None	replace
611	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  currentByte,  buffer.length));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  currentByte,  buffer.length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  currentByte,  buffer.length));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    buffer.length));    	non-compiled	[CE]  <identifier>  expected	55	None	replace
612	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  end,  currentByte,  '1'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  end,  currentByte,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  start,  end,  currentByte,  '1'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    end,    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
613	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  end,  currentByte,  '1'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  end,  currentByte,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  end,  currentByte,  '1'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    end,    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
614	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").printStackTrace();  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").printStackTrace();  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw  new  IllegalArgumentException( " ").printStackTrace();	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	25	None	replace
615	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( ", ");  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw  new  IllegalArgumentException( ", ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw  new  IllegalArgumentException( ", ");	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	25	None	replace
616	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( ". ");  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw  new  IllegalArgumentException( ". ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw  new  IllegalArgumentException( ". ");	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	25	None	replace
617	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  '0'  ||  currentByte  >  '7'));  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  '0'  ||  currentByte  >  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  '0'  ||  currentByte  >  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    '0'    ||    currentByte    >    '7'));    	non-compiled	[CE]  <identifier>  expected	115	None	replace
618	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '0'  -  '7'));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '0'  -  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '0'  -  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    '0'    ||    currentByte    >    '7'));    	non-compiled	[CE]  <identifier>  expected	115	None	replace
619	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  start,  currentByte));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  start,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  start,  currentByte));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    start));    	non-compiled	[CE]  <identifier>  expected	39	None	replace
620	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  end,  currentByte,  start));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  end,  currentByte,  start));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  end,  currentByte,  start));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    start));    	non-compiled	[CE]  <identifier>  expected	39	None	replace
621	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  0,  currentByte));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  0,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  0,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    buffer,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	50	None	replace
622	[BUG]  [BUGGY]  result  =  trailer  ||(currentByte  ==  '0'  &&  currentByte  <  =  '9')||(currentByte  >=  'a'  &&  currentByte  <  =  'f'))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  result  =  trailer  ||(currentByte  ==  '0'  &&  currentByte  <  =  '9')||(currentByte  >=  'a'  &&  currentByte  <  =  'f'))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	result  =  trailer  ||(currentByte  ==  '0'  &&  currentByte  <  =  '9')||(currentByte  >=  'a'  &&  currentByte  <  =  'f'))  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    currentByte    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
623	[BUG]  [BUGGY]  result  =  trailer  ||(currentByte  ==  '0'  &&  currentByte  <  =  '9')||(currentByte  >=  'a'  &&  currentByte  <  =  'z'))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  result  =  trailer  ||(currentByte  ==  '0'  &&  currentByte  <  =  '9')||(currentByte  >=  'a'  &&  currentByte  <  =  'z'))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	result  =  trailer  ||(currentByte  ==  '0'  &&  currentByte  <  =  '9')||(currentByte  >=  'a'  &&  currentByte  <  =  'z'))  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    currentByte    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
624	[BUG]  [BUGGY]  result  =  trailer  ||(currentByte  >=  '0'  &&  currentByte  <  =  '9')||(currentByte  >  '9'))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  result  =  trailer  ||(currentByte  >=  '0'  &&  currentByte  <  =  '9')||(currentByte  >  '9'))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	result  =  trailer  ||(currentByte  >=  '0'  &&  currentByte  <  =  '9')||(currentByte  >  '9'))  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    currentByte    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
625	[BUG]  [BUGGY]  result  =  trailer  ||(currentByte  ==  '0'  &&  currentByte  <  =  '9')||(currentByte  >  '9'))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  result  =  trailer  ||(currentByte  ==  '0'  &&  currentByte  <  =  '9')||(currentByte  >  '9'))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	result  =  trailer  ||(currentByte  ==  '0'  &&  currentByte  <  =  '9')||(currentByte  >  '9'))  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    currentByte    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
626	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end,  currentByte,  buffer.length));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end,  currentByte,  buffer.length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end,  currentByte,  buffer.length));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    start,    currentByte,    buffer.length));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
627	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equals(currentByte.toString()));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( " ").equals(currentByte.toString()));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( " ").equals(currentByte.toString()));	  throw    new    IllegalArgumentException(   "   ".equals(currentByte.toString()));    	non-compiled	[CE]  <identifier>  expected	28	None	replace
628	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  this.currentByte.toString());  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( " "  +  this.currentByte.toString());  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( " "  +  this.currentByte.toString());	  throw    new    IllegalArgumentException(   "   ".equals(currentByte.toString()));    	non-compiled	[CE]  <identifier>  expected	28	None	replace
629	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(currentByte.getByte()));  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(currentByte.getByte()));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( " ".equals(currentByte.getByte()));	  throw    new    IllegalArgumentException(   "   ".equals(currentByte.toString()));    	non-compiled	[CE]  <identifier>  expected	28	None	replace
630	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  System.identityHashCode(currentByte));  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( " "  +  System.identityHashCode(currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( " "  +  System.identityHashCode(currentByte));	  throw    new    IllegalArgumentException(   "   ".equals(currentByte.toString()));    	non-compiled	[CE]  <identifier>  expected	28	None	replace
631	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  this.currentByte.trim());  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( " "  +  this.currentByte.trim());  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( " "  +  this.currentByte.trim());	  throw    new    IllegalArgumentException(   "   ".trim());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
632	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( " "  +  trailer);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( " "  +  trailer);	  throw    new    IllegalArgumentException(   "   ".trim());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
633	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  start,  currentByte  -  '0'));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  start,  currentByte  -  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  buffer,  start,  currentByte  -  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    currentByte    -    '0'));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
634	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end  -  '0'));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end  -  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end  -  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    currentByte    -    '0'));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
635	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  currentByte,  '9'));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  currentByte,  '9'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  currentByte,  '9'));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    '9'));    	non-compiled	[CE]  <identifier>  expected	108	None	replace
636	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  '0',  currentByte,  '7'));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  '0',  currentByte,  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  '0',  currentByte,  '7'));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    '9'));    	non-compiled	[CE]  <identifier>  expected	108	None	replace
637	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  '0',  currentByte,  '9'));  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  '0',  currentByte,  '9'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  '0',  currentByte,  '9'));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    '9'));    	non-compiled	[CE]  <identifier>  expected	108	None	replace
638	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  1,  currentByte  -  '1'));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  1,  currentByte  -  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  1,  currentByte  -  '1'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    1,    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
639	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  currentByte,  trailer));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  currentByte,  trailer));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  start,  currentByte,  trailer));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    trailer));    	non-compiled	[CE]  <identifier>  expected	106	None	replace
640	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  trailer.getClass().getName()  + "] ");  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  trailer.getClass().getName()  + "] ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  trailer.getClass().getName()  + "] ");	  throw    new    IllegalArgumentException(   "   ".trim());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
641	[BUG]  [BUGGY]  System.arraycopy(currentByte,  buffer,  offset,  currentByte,  0,  currentByte);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(currentByte,  buffer,  offset,  currentByte,  0,  currentByte);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(currentByte,  buffer,  offset,  currentByte,  0,  currentByte);	  System.arraycopy(buffer,    offset,    currentByte,    0,    currentByte);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
642	[BUG]  [BUGGY]  System.arraycopy(currentByte,  start,  buffer,  0,  currentByte);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(currentByte,  start,  buffer,  0,  currentByte);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(currentByte,  start,  buffer,  0,  currentByte);	  System.arraycopy(buffer,    offset,    currentByte,    0,    currentByte);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
643	[BUG]  [BUGGY]  System.arraycopy(currentByte,  buffer,  offset,  currentByte);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(currentByte,  buffer,  offset,  currentByte);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(currentByte,  buffer,  offset,  currentByte);	  System.arraycopy(buffer,    offset,    currentByte,    0,    currentByte);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
644	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  end  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  end  -  '0');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  end  -  '0');	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    length    -    '0');    	non-compiled	[CE]  <identifier>  expected	68	None	replace
645	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  currentByte,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    0,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	51	None	replace
646	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  start,  length,  currentByte,  '9'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  start,  length,  currentByte,  '9'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  start,  length,  currentByte,  '9'));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    '9'));    	non-compiled	[CE]  <identifier>  expected	111	None	replace
647	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  currentByte,  '-'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  currentByte,  '-'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  currentByte,  '-'));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    start));    	non-compiled	[CE]  <identifier>  expected	39	None	replace
648	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte  +  1,  trailer));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte  +  1,  trailer));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte  +  1,  trailer));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    currentByte    +    1));    	non-compiled	[CE]  <identifier>  expected	99	None	replace
649	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer,  start  +  1);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer,  start  +  1);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer,  start  +  1);	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    currentByte    +    1));    	non-compiled	[CE]  <identifier>  expected	99	None	replace
650	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  trailer.length));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  trailer.length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  trailer.length));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    trailer.length));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
651	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  currentByte,  1,  length);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  0,  currentByte,  1,  length);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  0,  currentByte,  1,  length);	  System.arraycopy(buffer,    0,    currentByte,    0,    length);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
652	[BUG]  [BUGGY]  [Delete]  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  [Delete]  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	[Delete]	  if(trailer    ==    0    ||    currentByte    =='')    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
653	[BUG]  [BUGGY]  allowSideEffects(trailer,  start,  currentByte))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  allowSideEffects(trailer,  start,  currentByte))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	allowSideEffects(trailer,  start,  currentByte))  {  throw  new  IllegalStateException( " ");  }	  if(trailer    ==    0    ||    currentByte    =='')    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
654	[BUG]  [BUGGY]  bucket  <  =  0  ||  trailer  ==  '')  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  bucket  <  =  0  ||  trailer  ==  '')  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	bucket  <  =  0  ||  trailer  ==  '')  {  throw  new  IllegalStateException( " ");  }	  if(trailer    ==    0    ||    currentByte    =='')    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
655	[BUG]  [BUGGY]  allowSideEffects(trailer,  currentByte))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  allowSideEffects(trailer,  currentByte))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	allowSideEffects(trailer,  currentByte))  {  throw  new  IllegalStateException( " ");  }	  if(trailer    ==    0    ||    currentByte    =='')    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
656	[BUG]  [BUGGY]  aughtExceptionHandler(new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  aughtExceptionHandler(new  IllegalStateException( " ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	aughtExceptionHandler(new  IllegalStateException( " ");	  if(trailer    ==    0    ||    currentByte    =='')    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
657	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte  +  '7'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte  +  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte  +  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    currentByte    -    '7'));    	non-compiled	[CE]  <identifier>  expected	100	None	replace
658	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte  -  '7')+  1);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte  -  '7')+  1);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte  -  '7')+  1);	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    currentByte    -    '7'));    	non-compiled	[CE]  <identifier>  expected	100	None	replace
659	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte  -  '0',  currentByte));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte  -  '0',  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte  -  '0',  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    start,    length    -    1,    currentByte));    	non-compiled	[CE]  <identifier>  expected	72	None	replace
660	[BUG]  [BUGGY]  bucket  <  =  0  ||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  bucket  <  =  0  ||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	bucket  <  =  0  ||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    currentByte    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
661	[BUG]  [BUGGY]  aughtExceptionHandler(new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  aughtExceptionHandler(new  IllegalArgumentException( " ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	aughtExceptionHandler(new  IllegalArgumentException( " ");	  if(trailer    ==    0    ||    currentByte    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
662	[BUG]  [BUGGY]  aughtExceptionHandler(new  IllegalArgumentException( " "));  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  aughtExceptionHandler(new  IllegalArgumentException( " "));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	aughtExceptionHandler(new  IllegalArgumentException( " "));	  if(trailer    ==    0    ||    currentByte    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
663	[BUG]  [BUGGY]  aughtExceptionHandler(new  IllegalArgumentException( " ").printStackTrace());  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  aughtExceptionHandler(new  IllegalArgumentException( " ").printStackTrace());  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	aughtExceptionHandler(new  IllegalArgumentException( " ").printStackTrace());	  if(trailer    ==    0    ||    currentByte    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
664	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  buffer,  length,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  buffer,  length,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  0,  buffer,  length,  currentByte,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    0,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
665	[BUG]  [BUGGY]  System.arraycopy(currentByte,  buffer,  offset,  start,  length  -  currentByte);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(currentByte,  buffer,  offset,  start,  length  -  currentByte);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(currentByte,  buffer,  offset,  start,  length  -  currentByte);	  System.arraycopy(buffer,    offset,    buffer,    start,    length    -    currentByte);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
666	[BUG]  [BUGGY]  System.arraycopy(trailer,  offset,  buffer,  start,  length  -  currentByte);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(trailer,  offset,  buffer,  start,  length  -  currentByte);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(trailer,  offset,  buffer,  start,  length  -  currentByte);	  System.arraycopy(buffer,    offset,    buffer,    start,    length    -    currentByte);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
667	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  '9')+  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  '9')+  '0');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  '9')+  '0');	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    '9'));    	non-compiled	[CE]  <identifier>  expected	108	None	replace
668	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(currentByte,  exceptionMessage(buffer,  offset,  length,  currentByte,  '1'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(currentByte,  exceptionMessage(buffer,  offset,  length,  currentByte,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(currentByte,  exceptionMessage(buffer,  offset,  length,  currentByte,  '1'));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	112	None	replace
669	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  '0',  currentByte,  '1'));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  '0',  currentByte,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  '0',  currentByte,  '1'));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	112	None	replace
670	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  currentByte,  '1')+  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  currentByte,  '1')+  '0');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  currentByte,  '1')+  '0');	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	112	None	replace
671	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  1,  currentByte));  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  1,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  1,  currentByte));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    end,    currentByte));    	non-compiled	[CE]  <identifier>  expected	57	None	replace
672	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  0,  currentByte));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  0,  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  0,  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	9	None	replace
673	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  start,  7));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  start,  7));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  start,  7));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	9	None	replace
674	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '1')/  '9');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '1')/  '9');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '1')/  '9');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '1')+    '9');    	non-compiled	[CE]  <identifier>  expected	114	None	replace
675	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '1')+  '9',  trailer);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '1')+  '9',  trailer);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '1')+  '9',  trailer);	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '1')+    '9');    	non-compiled	[CE]  <identifier>  expected	114	None	replace
676	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '1')+  '9');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '1')+  '9');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '1')+  '9');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '1')+    '9');    	non-compiled	[CE]  <identifier>  expected	114	None	replace
677	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '1')+  '9',  end);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '1')+  '9',  end);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '1')+  '9',  end);	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '1')+    '9');    	non-compiled	[CE]  <identifier>  expected	114	None	replace
678	[BUG]  [BUGGY]  result  =(length  <  <  3)+(currentByte  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  result  =(length  <  <  3)+(currentByte  -  '0')+  1;  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	result  =(length  <  <  3)+(currentByte  -  '0')+  1;	  result    =(length    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	31	None	replace
679	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exprMessage(buffer,  start,  length,  currentByte,  '0'  ||  currentByte  >  '7'));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exprMessage(buffer,  start,  length,  currentByte,  '0'  ||  currentByte  >  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exprMessage(buffer,  start,  length,  currentByte,  '0'  ||  currentByte  >  '7'));	  throw    new    IllegalArgumentException(exprMessage(buffer,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	116	None	replace
680	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exprMessage(buffer,  start,  length,  currentByte,  '0')+  '9');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exprMessage(buffer,  start,  length,  currentByte,  '0')+  '9');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exprMessage(buffer,  start,  length,  currentByte,  '0')+  '9');	  throw    new    IllegalArgumentException(exprMessage(buffer,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	116	None	replace
681	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( " ").printStackTrace());  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw(new  IllegalArgumentException( " ").printStackTrace());  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw(new  IllegalArgumentException( " ").printStackTrace());	  Throwables.throw(new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	91	None	replace
682	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( " ").println());  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw(new  IllegalArgumentException( " ").println());  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw(new  IllegalArgumentException( " ").println());	  Throwables.throw(new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	91	None	replace
683	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '0',  '1'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '0',  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '0',  '1'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    start,    '1'));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
684	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  currentByte,  '0'  ||  currentByte  >  '7'));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  currentByte,  '0'  ||  currentByte  >  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  currentByte,  '0'  ||  currentByte  >  '7'));	  throw    new    IllegalArgumentException(expandMessage(buffer,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	117	None	replace
685	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  currentByte,  '0')+  '9');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  currentByte,  '0')+  '9');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  currentByte,  '0')+  '9');	  throw    new    IllegalArgumentException(expandMessage(buffer,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	117	None	replace
686	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +. "IgnoreCase(currentByte));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( " "  +. "IgnoreCase(currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( " "  +. "IgnoreCase(currentByte));	  throw    new    IllegalArgumentException(   "   ".equalsIgnoreCase(currentByte));    	non-compiled	[CE]  <identifier>  expected	90	None	replace
687	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer.length  -  start));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer.length  -  start));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer.length  -  start));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    start,    currentByte,    buffer.length));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
688	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '0',  currentByte  +  '7'));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '0',  currentByte  +  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '0',  currentByte  +  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    '0',    currentByte));    	non-compiled	[CE]  <identifier>  expected	86	None	replace
689	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  1  -  '0',  currentByte));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  1  -  '0',  currentByte));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  1  -  '0',  currentByte));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    '0',    currentByte));    	non-compiled	[CE]  <identifier>  expected	86	None	replace
690	[BUG]  [BUGGY]  final  byte[]  buffer  =  trailer.clone();  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  final  byte[]  buffer  =  trailer.clone();  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	final  byte[]  buffer  =  trailer.clone();	  final    byte[]    buffer    =(byte[])currentByte.clone();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
691	[BUG]  [BUGGY]  System.arraycopy(trailer,  offset,  buffer,  start,  currentByte,  0,  length));  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(trailer,  offset,  buffer,  start,  currentByte,  0,  length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(trailer,  offset,  buffer,  start,  currentByte,  0,  length));	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    0,    length));    	non-compiled	[CE]  <identifier>  expected	69	None	replace
692	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte  -  '0'  ||  currentByte  >  '7'));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte  -  '0'  ||  currentByte  >  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte  -  '0'  ||  currentByte  >  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    currentByte    -    '0'));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
693	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '+'));  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '+'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '+'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '-'));    	non-compiled	[CE]  <identifier>  expected	102	None	replace
694	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  currentByte,  '-'));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  currentByte,  '-'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  currentByte,  '-'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '-'));    	non-compiled	[CE]  <identifier>  expected	102	None	replace
695	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  '0'  ||  currentByte  >  '7'));  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  '0'  ||  currentByte  >  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  '0'  ||  currentByte  >  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '0'    ||    currentByte    >    '7'));    	non-compiled	[CE]  <identifier>  expected	119	None	replace
696	[BUG]  [BUGGY]  System.arraycopy(currentByte,  buffer,  offset,  start,  length);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(currentByte,  buffer,  offset,  start,  length);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(currentByte,  buffer,  offset,  start,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    0,    length);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
697	[BUG]  [BUGGY]  System.arraycopy(trailer,  offset,  buffer,  start,  currentByte,  length);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(trailer,  offset,  buffer,  start,  currentByte,  length);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(trailer,  offset,  buffer,  start,  currentByte,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    length);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
698	[BUG]  [BUGGY]  System.arraycopy(currentByte,  buffer,  offset,  start,  currentByte,  length);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(currentByte,  buffer,  offset,  start,  currentByte,  length);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(currentByte,  buffer,  offset,  start,  currentByte,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    length);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
699	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  currentByte,  '7'));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  currentByte,  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  currentByte,  '7'));	  throw    new    IllegalArgumentException(expandMessage(buffer,    start,    length,    currentByte,    length));    	non-compiled	[CE]  <identifier>  expected	74	None	replace
700	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  buffer,  currentByte,  length));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  buffer,  currentByte,  length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  buffer,  currentByte,  length));	  throw    new    IllegalArgumentException(expandMessage(buffer,    start,    length,    currentByte,    length));    	non-compiled	[CE]  <identifier>  expected	74	None	replace
701	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  buffer,  length));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  buffer,  length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  buffer,  length));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    buffer,    start));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
702	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '9')+  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '9')+  '0');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '9')+  '0');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '9'));    	non-compiled	[CE]  <identifier>  expected	45	None	replace
703	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '0',  currentByte,  '1',  'a'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '0',  currentByte,  '1',  'a'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '0',  currentByte,  '1',  'a'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    '0',    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	63	None	replace
704	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '0',  currentByte,  '1',  'A'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '0',  currentByte,  '1',  'A'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '0',  currentByte,  '1',  'A'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    '0',    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	63	None	replace
705	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '0',  currentByte,  '1',  'z'));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '0',  currentByte,  '1',  'z'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '0',  currentByte,  '1',  'z'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    '0',    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	63	None	replace
706	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte  -  '0'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte  -  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte  -  '0'));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    buffer,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	41	None	replace
707	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  currentByte,  trailer));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  currentByte,  trailer));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  currentByte,  trailer));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    buffer,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	41	None	replace
708	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '1')/  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '1')/  '0');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '1')/  '0');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '1')+    '0');    	non-compiled	[CE]  <identifier>  expected	113	None	replace
709	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '1')+  '0'  +  '9');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '1')+  '0'  +  '9');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '1')+  '0'  +  '9');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '1')+    '0');    	non-compiled	[CE]  <identifier>  expected	113	None	replace
710	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  currentByte,  '1')+  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  currentByte,  '1')+  '0');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  end,  currentByte,  '1')+  '0');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '1')+    '0');    	non-compiled	[CE]  <identifier>  expected	113	None	replace
711	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1,  currentByte);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1,  currentByte);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1,  currentByte);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
712	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(currentByte.getMessage()));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(currentByte.getMessage()));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( " ".equals(currentByte.getMessage()));	  throw    new    IllegalArgumentException(   "   ".equals(currentByte.toString()));    	non-compiled	[CE]  <identifier>  expected	28	None	replace
713	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  loadClass().getName()  + "] ");  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  loadClass().getName()  + "] ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  loadClass().getName()  + "] ");	  throw    new    IllegalArgumentException(   "Byte    must    be    in    the    range    [   "    +    getClass().getName()    +   "]   ");    	non-compiled	[CE]  <identifier>  expected	103	None	replace
714	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  trailer.getName()  + "] ");  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  trailer.getName()  + "] ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  trailer.getName()  + "] ");	  throw    new    IllegalArgumentException(   "Byte    must    be    in    the    range    [   "    +    getClass().getName()    +   "]   ");    	non-compiled	[CE]  <identifier>  expected	103	None	replace
715	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + "],  cannot  be  in  the  range  [ "  +  currentByte  + "] ");  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + "],  cannot  be  in  the  range  [ "  +  currentByte  + "] ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + "],  cannot  be  in  the  range  [ "  +  currentByte  + "] ");	  throw    new    IllegalArgumentException(   "Byte    must    be    in    the    range    [   "    +    getClass().getName()    +   "]   ");    	non-compiled	[CE]  <identifier>  expected	103	None	replace
716	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + "],  cannot  be  in  the  range  [ "  +  getClass().getName()  + "] ");  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + "],  cannot  be  in  the  range  [ "  +  getClass().getName()  + "] ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + "],  cannot  be  in  the  range  [ "  +  getClass().getName()  + "] ");	  throw    new    IllegalArgumentException(   "Byte    must    be    in    the    range    [   "    +    getClass().getName()    +   "]   ");    	non-compiled	[CE]  <identifier>  expected	103	None	replace
717	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").printStackTrace(currentByte);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( " ").printStackTrace(currentByte);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( " ").printStackTrace(currentByte);	  throw    new    IllegalArgumentException(   "   ".equals(currentByte));    	non-compiled	[CE]  <identifier>  expected	24	None	replace
718	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").printStackTrace(buffer,  start,  length);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( " ").printStackTrace(buffer,  start,  length);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( " ").printStackTrace(buffer,  start,  length);	  throw    new    IllegalArgumentException(   "   ".equals(currentByte));    	non-compiled	[CE]  <identifier>  expected	24	None	replace
719	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").printStackTrace(result);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( " ").printStackTrace(result);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( " ").printStackTrace(result);	  throw    new    IllegalArgumentException(   "   ".equals(currentByte));    	non-compiled	[CE]  <identifier>  expected	24	None	replace
720	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  start,  buffer.length));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  start,  buffer.length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  start,  buffer.length));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    buffer.length));    	non-compiled	[CE]  <identifier>  expected	55	None	replace
721	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    start,    length,    currentByte,    end));    	non-compiled	[CE]  <identifier>  expected	22	None	replace
722	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0')/  '9');  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0')/  '9');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0')/  '9');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '0')+    '9');    	non-compiled	[CE]  <identifier>  expected	120	None	replace
723	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0')+  '9'  +  1);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0')+  '9'  +  1);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0')+  '9'  +  1);	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '0')+    '9');    	non-compiled	[CE]  <identifier>  expected	120	None	replace
724	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0')+  '9',  end);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0')+  '9',  end);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  '0')+  '9',  end);	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    '0')+    '9');    	non-compiled	[CE]  <identifier>  expected	120	None	replace
725	[BUG]  [BUGGY]  System.arraycopy(trailer,  start,  buffer,  end,  currentByte);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(trailer,  start,  buffer,  end,  currentByte);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(trailer,  start,  buffer,  end,  currentByte);	  System.arraycopy(buffer,    offset,    buffer,    end,    currentByte);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
726	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(currentByte,  exceptionMessage(buffer,  offset,  length,  currentByte,  '7'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(currentByte,  exceptionMessage(buffer,  offset,  length,  currentByte,  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(currentByte,  exceptionMessage(buffer,  offset,  length,  currentByte,  '7'));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    '7'));    	non-compiled	[CE]  <identifier>  expected	110	None	replace
727	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  currentByte,  '5'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  currentByte,  '5'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  currentByte,  '5'));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    '7'));    	non-compiled	[CE]  <identifier>  expected	110	None	replace
728	[BUG]  [BUGGY]  System.arraycopy(trailer,  offset,  buffer,  start,  currentByte,  length));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  System.arraycopy(trailer,  offset,  buffer,  start,  currentByte,  length));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	System.arraycopy(trailer,  offset,  buffer,  start,  currentByte,  length));	  System.arraycopy(buffer,    offset,    buffer,    start,    currentByte,    length));    	non-compiled	[CE]  <identifier>  expected	66	None	replace
729	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  trailer  + "] ");  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  trailer  + "] ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  trailer  + "] ");	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	25	None	replace
730	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end,  '7'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end,  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end,  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    end,    currentByte,    '7'));    	non-compiled	[CE]  <identifier>  expected	46	None	replace
731	[BUG]  [BUGGY]  ((  int)currentByte).setLength(0);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  ((  int)currentByte).setLength(0);  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	((  int)currentByte).setLength(0);	  ((    byte)currentByte).setLength(0);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
732	[BUG]  [BUGGY]  ((  byte)currentByte).clearLength();  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  ((  byte)currentByte).clearLength();  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	((  byte)currentByte).clearLength();	  ((    byte)currentByte).setLength(0);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
733	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ");  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalStateException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalStateException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	26	None	replace
734	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Byte  must  be  in  the  range  [ "  +  currentByte  + "] ");  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalStateException( "Byte  must  be  in  the  range  [ "  +  currentByte  + "] ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalStateException( "Byte  must  be  in  the  range  [ "  +  currentByte  + "] ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	26	None	replace
735	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ") ");  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalStateException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ") ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalStateException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ") ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	26	None	replace
736	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equals(currentByte)?  null  : " ";  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( " ").equals(currentByte)?  null  : " ";  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( " ").equals(currentByte)?  null  : " ";	  throw    new    IllegalArgumentException(   "   ".equals(currentByte)?    null    :   "   ");    	non-compiled	[CE]  <identifier>  expected	27	None	replace
737	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  1,  currentByte,  '0'  ||  currentByte  >  '7'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  1,  currentByte,  '0'  ||  currentByte  >  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  1,  currentByte,  '0'  ||  currentByte  >  '7'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    1,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	5	None	replace
738	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  end,  length,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  end,  length,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	Throwables.throw  new  IllegalArgumentException(exceptionMessage(buffer,  end,  length,  currentByte,  '0'));	  Throwables.throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
739	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  -1));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  -1));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  -1));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    0));    	non-compiled	[CE]  <identifier>  expected	107	None	replace
740	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  2));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  2));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  2));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    0));    	non-compiled	[CE]  <identifier>  expected	107	None	replace
741	[BUG]  [BUGGY]  byte[]  buffer  =(byte[])currentByte;  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  byte[]  buffer  =(byte[])currentByte;  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	byte[]  buffer  =(byte[])currentByte;	  final    byte[]    buffer    =(byte[])currentByte;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
742	[BUG]  [BUGGY]  final  byte[]  buffer  =(byte[])this.currentByte;  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  final  byte[]  buffer  =(byte[])this.currentByte;  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	final  byte[]  buffer  =(byte[])this.currentByte;	  final    byte[]    buffer    =(byte[])currentByte;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
743	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  '0'  ||  currentByte  >  '7'));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  '0'  ||  currentByte  >  '7'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  '0'  ||  currentByte  >  '7'));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	54	None	replace
744	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  '0')+  '9');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  '0')+  '9');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  '0')+  '9');	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	54	None	replace
745	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  end,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  end,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  end,  currentByte,  '0'));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	54	None	replace
746	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(currentByte,  exceptionMessage(buffer,  offset,  length,  start,  '0'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(currentByte,  exceptionMessage(buffer,  offset,  length,  start,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(currentByte,  exceptionMessage(buffer,  offset,  length,  start,  '0'));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    start,    '0'));    	non-compiled	[CE]  <identifier>  expected	87	None	replace
747	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(this.result,  exceptionMessage(buffer,  offset,  length,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(this.result,  exceptionMessage(buffer,  offset,  length,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(this.result,  exceptionMessage(buffer,  offset,  length,  currentByte,  '0'));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    start,    '0'));    	non-compiled	[CE]  <identifier>  expected	87	None	replace
748	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  buffer,  '0'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  buffer,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  buffer,  '0'));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    start,    '0'));    	non-compiled	[CE]  <identifier>  expected	87	None	replace
749	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  loadClass().getName()  + ") ");  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  loadClass().getName()  + ") ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  loadClass().getName()  + ") ");	  throw    new    IllegalArgumentException(   "Byte    must    be    in    the    range    [   "    +    getClass().getName()    +   ")   ");    	non-compiled	[CE]  <identifier>  expected	105	None	replace
750	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ")out  of  range  [ "  +  currentByte  + "] ");  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ")out  of  range  [ "  +  currentByte  + "] ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ")out  of  range  [ "  +  currentByte  + "] ");	  throw    new    IllegalArgumentException(   "Byte    must    be    in    the    range    [   "    +    getClass().getName()    +   ")   ");    	non-compiled	[CE]  <identifier>  expected	105	None	replace
751	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ")out  of  range  [ "  +  start  + "] ");  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ")out  of  range  [ "  +  start  + "] ");  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + ")out  of  range  [ "  +  start  + "] ");	  throw    new    IllegalArgumentException(   "Byte    must    be    in    the    range    [   "    +    getClass().getName()    +   ")   ");    	non-compiled	[CE]  <identifier>  expected	105	None	replace
752	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  BYTE_MASK));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  BYTE_MASK));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  BYTE_MASK));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
753	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '0',  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '0',  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  '0',  currentByte,  '0'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    start,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	1	None	replace
754	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  '5'));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  '5'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  offset,  length,  currentByte,  '5'));	  throw    new    IllegalArgumentException(expandMessage(buffer,    offset,    length,    currentByte,    '7'));    	non-compiled	[CE]  <identifier>  expected	109	None	replace
755	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exprMessage(buffer,  start,  length,  currentByte,  '1'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exprMessage(buffer,  start,  length,  currentByte,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exprMessage(buffer,  start,  length,  currentByte,  '1'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	62	None	replace
756	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  currentByte,  '1'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  currentByte,  '1'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(expandMessage(buffer,  start,  length,  currentByte,  '1'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    '1'));    	non-compiled	[CE]  <identifier>  expected	62	None	replace
757	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '0')/  '9');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '0')/  '9');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  start,  length,  currentByte,  '0')/  '9');	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    start,    length,    currentByte,    '0')+    '9');    	non-compiled	[CE]  <identifier>  expected	118	None	replace
758	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  block.length  -  1));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  block.length  -  1));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  block.length  -  1));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    buffer.length    -    1));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
759	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(currentByte,  exceptionMessage(buffer,  offset,  length,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(currentByte,  exceptionMessage(buffer,  offset,  length,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(currentByte,  exceptionMessage(buffer,  offset,  length,  currentByte,  '0'));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	42	None	replace
760	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  end,  currentByte,  '0'));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  end,  currentByte,  '0'));  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  end,  currentByte,  '0'));	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	42	None	replace
761	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  currentByte,  '0')+  '9');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){      [BUGGY]  throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  currentByte,  '0')+  '9');  [BUGGY]      exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	104	105	1	replace	throw  new  IllegalArgumentException(trailer,  exceptionMessage(buffer,  offset,  length,  currentByte,  '0')+  '9');	  throw    new    IllegalArgumentException(trailer,    exceptionMessage(buffer,    offset,    length,    currentByte,    '0'));    	non-compiled	[CE]  <identifier>  expected	42	None	replace
