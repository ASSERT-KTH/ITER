bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  -  offset;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  -  offset;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  -  offset;	  trailer    =    buffer[end-1]    +    offset;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
2	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  +  offset;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  +  offset;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  +  offset;	  trailer    =    buffer[end-1]    +    offset;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
3	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  /  offset;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  /  offset;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  /  offset;	  trailer    =    buffer[end-1]    +    offset;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
4	[BUG]  [BUGGY]  Trailer  trailer  =  buffer[start-1];  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =  buffer[start-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  trailer  =  buffer[start-1];	  trailer    =    block[start-1];    	non-compiled	[CE]  <identifier>  expected	17	None	replace
5	[BUG]  [BUGGY]  trailer  =  this.block[start-1];  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  this.block[start-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  this.block[start-1];	  trailer    =    block[start-1];    	non-compiled	[CE]  <identifier>  expected	17	None	replace
6	[BUG]  [BUGGY]  Trailer  trailer  =  buffer[start-1]  &  0xff;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =  buffer[start-1]  &  0xff;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  trailer  =  buffer[start-1]  &  0xff;	  Trailer    trailer    =    buffer[end-1]    &    0xff;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
7	[BUG]  [BUGGY]  Trailer  trailer  =  buffer[end-1]  |  0xff;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =  buffer[end-1]  |  0xff;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  trailer  =  buffer[end-1]  |  0xff;	  Trailer    trailer    =    buffer[end-1]    &    0xff;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
8	[BUG]  [BUGGY]  Trailer  trailer  =  buffer[end-1]  +  0xff;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =  buffer[end-1]  +  0xff;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  trailer  =  buffer[end-1]  +  0xff;	  Trailer    trailer    =    buffer[end-1]    &    0xff;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
9	[BUG]  [BUGGY]  Trailer  trailer  =  buffer[end-2]  &  0xff;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =  buffer[end-2]  &  0xff;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  trailer  =  buffer[end-2]  &  0xff;	  Trailer    trailer    =    buffer[end-1]    &    0xff;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
10	[BUG]  [BUGGY]  trailer  =  buffer[length-1]  &  0xfff;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[length-1]  &  0xfff;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[length-1]  &  0xfff;	  trailer    =    buffer[start-1]    &    0xfff;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
11	[BUG]  [BUGGY]  trailer  =  buffer[0]  &  0xfff;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[0]  &  0xfff;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[0]  &  0xfff;	  trailer    =    buffer[start-1]    &    0xfff;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
12	[BUG]  [BUGGY]  Trailer  trailer  =  buffer[end-1]  &  0xfff;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =  buffer[end-1]  &  0xfff;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  trailer  =  buffer[end-1]  &  0xfff;	  trailer    =    buffer[start-1]    &    0xfff;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
13	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  0x7f;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  &  0x7f;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  &  0x7f;	  trailer    =    buffer[end-1]    &    0x7F;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
14	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  0x7FF;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  &  0x7FF;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  &  0x7FF;	  trailer    =    buffer[end-1]    &    0x7F;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
15	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  0x7;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  &  0x7;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  &  0x7;	  trailer    =    buffer[end-1]    &    0x7F;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
16	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  |  0x7F;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  |  0x7F;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  |  0x7F;	  trailer    =    buffer[end-1]    &    0x7F;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
17	[BUG]  [BUGGY]  while(end  <  length)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while(end  <  length)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while(end  <  length)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[start]);  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
18	[BUG]  [BUGGY]  final  byte  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start]);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  final  byte  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start]);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	final  byte  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start]);	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
19	[BUG]  [BUGGY]  terator  <?>,  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start]);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  terator  <?>,  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start]);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	terator  <?>,  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start]);	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
20	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[start-1];  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  final  byte  trailer  =  buffer[start-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	final  byte  trailer  =  buffer[start-1];	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
21	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[end-1];  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  final  byte  trailer  =  buffer[end-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	final  byte  trailer  =  buffer[end-1];	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
22	[BUG]  [BUGGY]  while(end  <  length)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  container[start]);  }  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while(end  <  length)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  container[start]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while(end  <  length)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  container[start]);  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
23	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  |  0xffff;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  |  0xffff;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  |  0xffff;	  trailer    =    buffer[end-1]    |    0xffff;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
24	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  -  0xffff;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  -  0xffff;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  -  0xffff;	  trailer    =    buffer[end-1]    |    0xffff;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
25	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  |  0xff;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  |  0xff;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  |  0xff;	  trailer    =    buffer[end-1]    |    0xff;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
26	[BUG]  [BUGGY]  trailer  =  buffer[end-1]?  0xff  :  end;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]?  0xff  :  end;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]?  0xff  :  end;	  trailer    =    buffer[end-1]    |    0xff;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
27	[BUG]  [BUGGY]  trailer  =  buffer[end-1]?  0xff  :  buffer[end-1];  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]?  0xff  :  buffer[end-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]?  0xff  :  buffer[end-1];	  trailer    =    buffer[end-1]    |    0xff;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
28	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  -  0xff;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  -  0xff;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  -  0xff;	  trailer    =    buffer[end-1]    |    0xff;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
29	[BUG]  [BUGGY]  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
30	[BUG]  [BUGGY]  terator  <?>)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  terator  <?>)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	terator  <?>)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[start]);  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
31	[BUG]  [BUGGY]  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
32	[BUG]  [BUGGY]  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end]);  }  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end]);  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
33	[BUG]  [BUGGY]  trailer  =  buffer[length-1]  &  0xff;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[length-1]  &  0xff;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[length-1]  &  0xff;	  trailer    =    buffer[start-1]    &    0xff;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
34	[BUG]  [BUGGY]  trailer  =  buffer[0]  &  0xff;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[0]  &  0xff;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[0]  &  0xff;	  trailer    =    buffer[start-1]    &    0xff;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
35	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  +  0xff;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  +  0xff;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  +  0xff;	  trailer    =    buffer[start-1]    &    0xff;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
36	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  2xff;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  &  2xff;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  &  2xff;	  trailer    =    buffer[end-1]    &    1xff;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
37	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  3xff;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  &  3xff;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  &  3xff;	  trailer    =    buffer[end-1]    &    1xff;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
38	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  &  1xff;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  &  1xff;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  &  1xff;	  trailer    =    buffer[end-1]    &    1xff;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
39	[BUG]  [BUGGY]  terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
40	[BUG]  [BUGGY]  terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>ter  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>ter  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>ter	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
41	[BUG]  [BUGGY]  terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
42	[BUG]  [BUGGY]  terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
43	[BUG]  [BUGGY]  terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>er  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>er  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>er	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
44	[BUG]  [BUGGY]  terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
45	[BUG]  [BUGGY]  terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
46	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  2;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  &  2;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  &  2;	  trailer    =    buffer[end-1]    &    start;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
47	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  0xFF;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  &  0xFF;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  &  0xFF;	  trailer    =    buffer[end-1]    &    start;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
48	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  &  end;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  &  end;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  &  end;	  trailer    =    buffer[end-1]    &    start;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
49	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  0xfffffl;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  &  0xfffffl;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  &  0xfffffl;	  trailer    =    buffer[end-1]    &    0xffffl;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
50	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  0xfffff;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  &  0xfffff;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  &  0xfffff;	  trailer    =    buffer[end-1]    &    0xffffl;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
51	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  0xfffffL;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  &  0xfffffL;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  &  0xfffffL;	  trailer    =    buffer[end-1]    &    0xffffl;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
52	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  &  0xfffffl;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  &  0xfffffl;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  &  0xfffffl;	  trailer    =    buffer[end-1]    &    0xffffl;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
53	[BUG]  [BUGGY]  while((  end  <  length)&&  trailer!=  0)  {  if(trailer  ==  '-'  ||  trailer  ==  '+')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer[start]);  }  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  end  <  length)&&  trailer!=  0)  {  if(trailer  ==  '-'  ||  trailer  ==  '+')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer[start]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  end  <  length)&&  trailer!=  0)  {  if(trailer  ==  '-'  ||  trailer  ==  '+')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer[start]);  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
54	[BUG]  [BUGGY]  while((  end  <  length)&&  trailer!=  '0')  {  if(trailer  ==  0  ||  trailer  ==  '9')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer[start]);  }  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  end  <  length)&&  trailer!=  '0')  {  if(trailer  ==  0  ||  trailer  ==  '9')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer[start]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  end  <  length)&&  trailer!=  '0')  {  if(trailer  ==  0  ||  trailer  ==  '9')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer[start]);  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
55	[BUG]  [BUGGY]  while((  end  <  length)&&  trailer!=  0)  {  if(trailer  ==  '-'  ||  trailer  ==  '+')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer[  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  end  <  length)&&  trailer!=  0)  {  if(trailer  ==  '-'  ||  trailer  ==  '+')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer[  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  end  <  length)&&  trailer!=  0)  {  if(trailer  ==  '-'  ||  trailer  ==  '+')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer[	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
56	[BUG]  [BUGGY]  while((  end  <  length)&&  trailer  ==  0)  {  if(trailer  ==  '-'  ||  trailer  ==  '+')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer[start]);  }  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  end  <  length)&&  trailer  ==  0)  {  if(trailer  ==  '-'  ||  trailer  ==  '+')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer[start]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  end  <  length)&&  trailer  ==  0)  {  if(trailer  ==  '-'  ||  trailer  ==  '+')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  currentByte,  buffer[start]);  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
57	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  -  0xfff;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  -  0xfff;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  -  0xfff;	  trailer    =    buffer[end-1]    +    0xfff;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
58	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  /  0xfff;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  /  0xfff;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  /  0xfff;	  trailer    =    buffer[end-1]    +    0xfff;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
59	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  -  2;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  -  2;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  -  2;	  trailer    =    buffer[end-1]    +    2;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
60	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  -  start;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  -  start;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  -  start;	  trailer    =    buffer[end-1]    -    length;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
61	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  /  length;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  /  length;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  /  length;	  trailer    =    buffer[end-1]    -    length;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
62	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  -  length  +  1;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  -  length  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  -  length  +  1;	  trailer    =    buffer[end-1]    -    length;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
63	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  -  end;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  -  end;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  -  end;	  trailer    =    buffer[end-1]    -    length;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
64	[BUG]  [BUGGY]  trailer  =  buffer[length-1]  &  0xffff;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[length-1]  &  0xffff;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[length-1]  &  0xffff;	  trailer    =    buffer[start-1]    &    0xffff;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
65	[BUG]  [BUGGY]  trailer  =  buffer[0]  &  0xffff;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[0]  &  0xffff;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[0]  &  0xffff;	  trailer    =    buffer[start-1]    &    0xffff;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
66	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  &  0xffffL;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  &  0xffffL;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  &  0xffffL;	  trailer    =    buffer[start-1]    &    0xffff;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
67	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  +  end;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  +  end;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  +  end;	  trailer    =    buffer[end-1]    +    start;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
68	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  /  start;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  /  start;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  /  start;	  trailer    =    buffer[end-1]    +    start;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
69	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  length;  ++i)  {  end--;  }  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  for(int  i  =  start;  i  <  length;  ++i)  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	for(int  i  =  start;  i  <  length;  ++i)  {  end--;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
70	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  end;  ++i)  {  end--;  }  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  for(int  i  =  start;  i  <  end;  ++i)  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	for(int  i  =  start;  i  <  end;  ++i)  {  end--;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
71	[BUG]  [BUGGY]  final  int  length  =  trailer.length();  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  final  int  length  =  trailer.length();  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	final  int  length  =  trailer.length();	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
72	[BUG]  [BUGGY]  End  end  =  exceptionMessage(buffer,  offset,  length,  end-1,  trailer);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  End  end  =  exceptionMessage(buffer,  offset,  length,  end-1,  trailer);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	End  end  =  exceptionMessage(buffer,  offset,  length,  end-1,  trailer);	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
73	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  length;  ++i)  {  end--;  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  for(int  i  =  start;  i  <  length;  ++i)  {  end--;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	for(int  i  =  start;  i  <  length;  ++i)  {  end--;	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
74	[BUG]  [BUGGY]  End  <?>  end  =  exceptionMessage(buffer,  offset,  length,  end-1,  trailer);  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  End  <?>  end  =  exceptionMessage(buffer,  offset,  length,  end-1,  trailer);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	End  <?>  end  =  exceptionMessage(buffer,  offset,  length,  end-1,  trailer);	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
75	[BUG]  [BUGGY]  End  <?>  end  =  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  [CE]  <identifier>  expected  [FE]                                          IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  End  <?>  end  =  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	End  <?>  end  =  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
76	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  +  length  -  2;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  +  length  -  2;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  +  length  -  2;	  trailer    =    buffer[end-1]    +    length    -    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
77	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  +  length  /  1;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  +  length  /  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  +  length  /  1;	  trailer    =    buffer[end-1]    +    length    -    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
78	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  +  length  *  2  -  1;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  +  length  *  2  -  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  +  length  *  2  -  1;	  trailer    =    buffer[end-1]    +    length    -    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
79	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  +  start  -  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  +  start  -  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  +  start  -  1;	  trailer    =    buffer[end-1]    +    length    -    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
80	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  -  length  -  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  -  length  -  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  -  length  -  1;	  trailer    =    buffer[end-1]    +    length    -    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
81	[BUG]  [BUGGY]  trailer  =  new  byte[BYTE_MASK];  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[BYTE_MASK];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  new  byte[BYTE_MASK];	  trailer    =    new    byte[end-1];    	non-compiled	[CE]  <identifier>  expected	23	None	replace
82	[BUG]  [BUGGY]  trailer  =  new  byte[BYTE_MASK-1];  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[BYTE_MASK-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  new  byte[BYTE_MASK-1];	  trailer    =    new    byte[end-1];    	non-compiled	[CE]  <identifier>  expected	23	None	replace
83	[BUG]  [BUGGY]  trailer  =  new  byte[BYTE_MASK+1];  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[BYTE_MASK+1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  new  byte[BYTE_MASK+1];	  trailer    =    new    byte[end-1];    	non-compiled	[CE]  <identifier>  expected	23	None	replace
84	[BUG]  [BUGGY]  End  <  =  length)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  End  <  =  length)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	End  <  =  length)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }	  if(end    <    length)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
85	[BUG]  [BUGGY]  End  <  length)  {  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  End  <  length)  {  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	End  <  length)  {  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }	  if(end    <    length)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
86	[BUG]  [BUGGY]  if(length  <  =  0)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(length  <  =  0)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(length  <  =  0)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }	  if(end    <    length)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
87	[BUG]  [BUGGY]  if(length  <  0)  {  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(length  <  0)  {  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(length  <  0)  {  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }	  if(end    <    length)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
88	[BUG]  [BUGGY]  End  <  length)  {  if(trailer  ==  0  ||  trailer  ==  'n')  {  end--;  }  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  End  <  length)  {  if(trailer  ==  0  ||  trailer  ==  'n')  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	End  <  length)  {  if(trailer  ==  0  ||  trailer  ==  'n')  {  end--;  }	  if(end    <    length)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
89	[BUG]  [BUGGY]  End  <  length)  {  if(trailer  ==  0  ||  trailer  ==  '/')  {  end--;  }  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  End  <  length)  {  if(trailer  ==  0  ||  trailer  ==  '/')  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	End  <  length)  {  if(trailer  ==  0  ||  trailer  ==  '/')  {  end--;  }	  if(end    <    length)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
90	[BUG]  [BUGGY]  End  <  length)  {  if(trailer  ==  0  ||  trailer  ==  '-')  {  end--;  }  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  End  <  length)  {  if(trailer  ==  0  ||  trailer  ==  '-')  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	End  <  length)  {  if(trailer  ==  0  ||  trailer  ==  '-')  {  end--;  }	  if(end    <    length)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
91	[BUG]  [BUGGY]  trailer  =  buffer[0];  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[0];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[0];	  trailer    =    buffer[length-1];    	non-compiled	[CE]  <identifier>  expected	16	None	replace
92	[BUG]  [BUGGY]  Trailer  trailer  =(trailer  ==  0)?  buffer[end-1]  :  trailer;  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =(trailer  ==  0)?  buffer[end-1]  :  trailer;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  trailer  =(trailer  ==  0)?  buffer[end-1]  :  trailer;	  Trailer    trailer    =    buffer[end-1];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
93	[BUG]  [BUGGY]  Trailer  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[end-1]  :  null;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[end-1]  :  null;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[end-1]  :  null;	  Trailer    trailer    =    buffer[end-1];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
94	[BUG]  [BUGGY]  Trailer  trailer  =(trailer  ==  0)?  buffer[end-1]  :  null;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =(trailer  ==  0)?  buffer[end-1]  :  null;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  trailer  =(trailer  ==  0)?  buffer[end-1]  :  null;	  Trailer    trailer    =    buffer[end-1];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
95	[BUG]  [BUGGY]  Trailer  trailer  =(trailer  ==  '-'  ||  trailer  ==  '+')?  buffer[end-1]  :  null;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =(trailer  ==  '-'  ||  trailer  ==  '+')?  buffer[end-1]  :  null;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  trailer  =(trailer  ==  '-'  ||  trailer  ==  '+')?  buffer[end-1]  :  null;	  Trailer    trailer    =    buffer[end-1];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
96	[BUG]  [BUGGY]  Trailer  trailer  =(trailer  ==  '[')?  buffer[end-1]  :  null;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =(trailer  ==  '[')?  buffer[end-1]  :  null;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  trailer  =(trailer  ==  '[')?  buffer[end-1]  :  null;	  Trailer    trailer    =    buffer[end-1];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
97	[BUG]  [BUGGY]  trailer  =  new  byte[length-1],  buffer[length-1];  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[length-1],  buffer[length-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  new  byte[length-1],  buffer[length-1];	  trailer    =    new    byte[length-1],    buffer[end-1];    	non-compiled	[CE]  <identifier>  expected	22	None	replace
98	[BUG]  [BUGGY]  trailer  =  new  byte[length-1],  buffer[offset-1];  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[length-1],  buffer[offset-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  new  byte[length-1],  buffer[offset-1];	  trailer    =    new    byte[length-1],    buffer[end-1];    	non-compiled	[CE]  <identifier>  expected	22	None	replace
99	[BUG]  [BUGGY]  trailer  =  new  byte[length-1],  buffer[0];  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[length-1],  buffer[0];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  new  byte[length-1],  buffer[0];	  trailer    =    new    byte[length-1],    buffer[end-1];    	non-compiled	[CE]  <identifier>  expected	22	None	replace
100	[BUG]  [BUGGY]  trailer  =  new  byte[buffer[length-1],  buffer[end-1];  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[buffer[length-1],  buffer[end-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  new  byte[buffer[length-1],  buffer[end-1];	  trailer    =    new    byte[length-1],    buffer[end-1];    	non-compiled	[CE]  <identifier>  expected	22	None	replace
101	[BUG]  [BUGGY]  trailer  =  new  byte[length-1],  buffer[1];  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[length-1],  buffer[1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  new  byte[length-1],  buffer[1];	  trailer    =    new    byte[length-1],    buffer[end-1];    	non-compiled	[CE]  <identifier>  expected	22	None	replace
102	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  &  0x7f;  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  &  0x7f;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  &  0x7f;	  trailer    =    buffer[start-1]    &    0x7F;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
103	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  &  0x7;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  &  0x7;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  &  0x7;	  trailer    =    buffer[start-1]    &    0x7F;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
104	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  &  0x7FF;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  &  0x7FF;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  &  0x7FF;	  trailer    =    buffer[start-1]    &    0x7F;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
105	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  &  0x3f;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  &  0x3f;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  &  0x3f;	  trailer    =    buffer[start-1]    &    0x7F;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
106	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  +  0x7F;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  +  0x7F;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  +  0x7F;	  trailer    =    buffer[start-1]    &    0x7F;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
107	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  +  length  *  2  +  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  +  length  *  2  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  +  length  *  2  +  1;	  trailer    =    buffer[end-1]    +    length    +    1;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
108	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  +  start  +  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  +  start  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  +  start  +  1;	  trailer    =    buffer[end-1]    +    length    +    1;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
109	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  +  length  +  2;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  +  length  +  2;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  +  length  +  2;	  trailer    =    buffer[end-1]    +    length    +    1;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
110	[BUG]  [BUGGY]  trailer  =  new  byte[buffer.length-2];  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[buffer.length-2];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  new  byte[buffer.length-2];	  trailer    =    new    byte[buffer.length-1];    	non-compiled	[CE]  <identifier>  expected	21	None	replace
111	[BUG]  [BUGGY]  trailer  =  new  byte[trailer.length-1];  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[trailer.length-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  new  byte[trailer.length-1];	  trailer    =    new    byte[buffer.length-1];    	non-compiled	[CE]  <identifier>  expected	21	None	replace
112	[BUG]  [BUGGY]  trailer  =  new  byte[byte.length-1];  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[byte.length-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  new  byte[byte.length-1];	  trailer    =    new    byte[buffer.length-1];    	non-compiled	[CE]  <identifier>  expected	21	None	replace
113	[BUG]  [BUGGY]  Trailer  trailer  =  new  byte[buffer.length-1];  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =  new  byte[buffer.length-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  trailer  =  new  byte[buffer.length-1];	  trailer    =    new    byte[buffer.length-1];    	non-compiled	[CE]  <identifier>  expected	21	None	replace
114	[BUG]  [BUGGY]  trailer  =  buffer[offset-1]  &  0xff;  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[offset-1]  &  0xff;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[offset-1]  &  0xff;	  trailer    =    buffer[offset-1];    	non-compiled	[CE]  <identifier>  expected	45	None	replace
115	[BUG]  [BUGGY]  trailer  =  buffer[offset-1]  &  0xfff;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[offset-1]  &  0xfff;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[offset-1]  &  0xfff;	  trailer    =    buffer[offset-1];    	non-compiled	[CE]  <identifier>  expected	45	None	replace
116	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  -  1;  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  -  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  -  1;	  trailer    =    buffer[end-1]    -    1;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
117	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  /  1;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  /  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  /  1;	  trailer    =    buffer[end-1]    -    1;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
118	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(trailer  ==  0  ||  trailer  =='')  {  end--;  }	  if(length    >    0)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
119	[BUG]  [BUGGY]  if(trailer  ==  '0'  ||  trailer  ==  '7')  {  if(length  >  0)  {  end--;  }  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(trailer  ==  '0'  ||  trailer  ==  '7')  {  if(length  >  0)  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(trailer  ==  '0'  ||  trailer  ==  '7')  {  if(length  >  0)  {  end--;  }	  if(length    >    0)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
120	[BUG]  [BUGGY]  terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>ter  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>ter  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>ter	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1]);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
121	[BUG]  [BUGGY]  terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1]);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
122	[BUG]  [BUGGY]  trailer  =  byte[start-1];  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  byte[start-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  byte[start-1];	  trailer    =    byte[end-1];    	non-compiled	[CE]  <identifier>  expected	14	None	replace
123	[BUG]  [BUGGY]  trailer  =  byte[length-1];  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  byte[length-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  byte[length-1];	  trailer    =    byte[end-1];    	non-compiled	[CE]  <identifier>  expected	14	None	replace
124	[BUG]  [BUGGY]  trailer  =  new  byte[end-1],  buffer[start-1];  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[end-1],  buffer[start-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  new  byte[end-1],  buffer[start-1];	  trailer    =    new    byte[length-1],    buffer[start-1];    	non-compiled	[CE]  <identifier>  expected	57	None	replace
125	[BUG]  [BUGGY]  safeThan!=  false)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  allNUL));  }  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  safeThan!=  false)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  allNUL));  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	safeThan!=  false)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  allNUL));  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1],    allNUL));    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
126	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  |  0xfff;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  |  0xfff;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  |  0xfff;	  trailer    =    buffer[end-1]    |    0xfff;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
127	[BUG]  [BUGGY]  End  end  =  exceptionMessage(buffer,  offset,  length,  buffer[start]);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  End  end  =  exceptionMessage(buffer,  offset,  length,  buffer[start]);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	End  end  =  exceptionMessage(buffer,  offset,  length,  buffer[start]);	  if(trailer    ==    0    ||    trailer    ==    '.')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
128	[BUG]  [BUGGY]  end--;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  end--;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	end--;	  if(trailer    ==    0    ||    trailer    ==    '-')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
129	[BUG]  [BUGGY]  End  end  =  exceptionMessage(buffer,  offset,  length,  trailer[start]);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  End  end  =  exceptionMessage(buffer,  offset,  length,  trailer[start]);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	End  end  =  exceptionMessage(buffer,  offset,  length,  trailer[start]);	  if(trailer    ==    0    ||    trailer    ==    '-')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
130	[BUG]  [BUGGY]  final  byte  trailer  =  exceptionMessage(buffer,  offset,  length,  container[start]);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  final  byte  trailer  =  exceptionMessage(buffer,  offset,  length,  container[start]);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	final  byte  trailer  =  exceptionMessage(buffer,  offset,  length,  container[start]);	  if(trailer    ==    0    ||    trailer    ==    '-')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
131	[BUG]  [BUGGY]  trailer  =  this.trailer[start-1];  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  this.trailer[start-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  this.trailer[start-1];	  trailer    =    this.trailer[end-1];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
132	[BUG]  [BUGGY]  trailer  =(char)this.trailer[end-1];  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =(char)this.trailer[end-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =(char)this.trailer[end-1];	  trailer    =    this.trailer[end-1];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
133	[BUG]  [BUGGY]  trailer  =  this.trailer[end-1]  +  1;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  this.trailer[end-1]  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  this.trailer[end-1]  +  1;	  trailer    =    this.trailer[end-1];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
134	[BUG]  [BUGGY]  trailer  =  this.trailer[0];  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  this.trailer[0];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  this.trailer[0];	  trailer    =    this.trailer[end-1];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
135	[BUG]  [BUGGY]  Trailer  trailer  =  this.trailer[end-1];  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =  this.trailer[end-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  trailer  =  this.trailer[end-1];	  trailer    =    this.trailer[end-1];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
136	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  &  0xfffl;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  &  0xfffl;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  &  0xfffl;	  trailer    =    buffer[end-1]    &    0xfffl;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
137	[BUG]  [BUGGY]  Trailer  trailer  =  new  byte[length-2];  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =  new  byte[length-2];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  trailer  =  new  byte[length-2];	  Trailer    trailer    =    new    byte[length-1];    	non-compiled	[CE]  <identifier>  expected	20	None	replace
138	[BUG]  [BUGGY]  Trailer  trailer  =  new  byte[trailer-1];  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =  new  byte[trailer-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  trailer  =  new  byte[trailer-1];	  Trailer    trailer    =    new    byte[length-1];    	non-compiled	[CE]  <identifier>  expected	20	None	replace
139	[BUG]  [BUGGY]  Trailer  trailer  =  new  byte[end-1];  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =  new  byte[end-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  trailer  =  new  byte[end-1];	  Trailer    trailer    =    new    byte[length-1];    	non-compiled	[CE]  <identifier>  expected	20	None	replace
140	[BUG]  [BUGGY]  Trailer  trailer  =  new  byte[1];  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =  new  byte[1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  trailer  =  new  byte[1];	  Trailer    trailer    =    new    byte[length-1];    	non-compiled	[CE]  <identifier>  expected	20	None	replace
141	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  1L;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  &  1L;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  &  1L;	  trailer    =    buffer[end-1]    &    1;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
142	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  |  1;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  |  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  |  1;	  trailer    =    buffer[end-1]    &    1;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
143	[BUG]  [BUGGY]  trailer  =  new  byte[len-1];  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[len-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  new  byte[len-1];	  trailer    =    new    byte[start-1];    	non-compiled	[CE]  <identifier>  expected	58	None	replace
144	[BUG]  [BUGGY]  trailer  =  new  byte[1];  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  new  byte[1];	  trailer    =    new    byte[start-1];    	non-compiled	[CE]  <identifier>  expected	58	None	replace
145	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  |  0x3f;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  |  0x3f;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  |  0x3f;	  trailer    =    buffer[end-1]    &    0x3f;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
146	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  0x3f  +  1;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  &  0x3f  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  &  0x3f  +  1;	  trailer    =    buffer[end-1]    &    0x3f;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
147	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  0x1f;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  &  0x1f;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  &  0x1f;	  trailer    =    buffer[end-1]    &    0x3f;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
148	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  0x3e;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  &  0x3e;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  &  0x3e;	  trailer    =    buffer[end-1]    &    0x3f;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
149	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  1x3f;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  &  1x3f;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  &  1x3f;	  trailer    =    buffer[end-1]    &    0x3f;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
150	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  -  0;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  -  0;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  -  0;	  trailer    =    buffer[end-1]    +    0;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
151	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  +  0;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  +  0;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  +  0;	  trailer    =    buffer[end-1]    +    0;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
152	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  0;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  &  0;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  &  0;	  trailer    =    buffer[end-1]    +    0;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
153	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  +  '0';  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  +  '0';  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  +  '0';	  trailer    =    buffer[end-1]    +    '0';    	non-compiled	[CE]  <identifier>  expected	29	None	replace
154	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  -  '0';  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  -  '0';  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  -  '0';	  trailer    =    buffer[end-1]    +    '0';    	non-compiled	[CE]  <identifier>  expected	29	None	replace
155	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  '0';  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  &  '0';  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  &  '0';	  trailer    =    buffer[end-1]    +    '0';    	non-compiled	[CE]  <identifier>  expected	29	None	replace
156	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  /  '0';  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  /  '0';  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  /  '0';	  trailer    =    buffer[end-1]    +    '0';    	non-compiled	[CE]  <identifier>  expected	29	None	replace
157	[BUG]  [BUGGY]  trailer  =  buffer[end-2]  +  '0';  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-2]  +  '0';  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-2]  +  '0';	  trailer    =    buffer[end-1]    +    '0';    	non-compiled	[CE]  <identifier>  expected	29	None	replace
158	[BUG]  [BUGGY]  trailer  =  this.block[end-1];  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  this.block[end-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  this.block[end-1];	  trailer    =    block[end-1];    	non-compiled	[CE]  <identifier>  expected	13	None	replace
159	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  +  length  -  1;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  +  length  -  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  +  length  -  1;	  trailer    =    buffer[start-1]    +    length;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
160	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  &  length;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  &  length;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  &  length;	  trailer    =    buffer[start-1]    +    length;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
161	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  +  length  +  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  +  length  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  +  length  +  1;	  trailer    =    buffer[start-1]    +    length;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
162	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  -  length;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  -  length;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  -  length;	  trailer    =    buffer[start-1]    +    length;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
163	[BUG]  [BUGGY]  trailer  =  new  byte[length-3];  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[length-3];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  new  byte[length-3];	  trailer    =    new    byte[length-2];    	non-compiled	[CE]  <identifier>  expected	19	None	replace
164	[BUG]  [BUGGY]  trailer  =  new  byte[length-5];  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[length-5];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  new  byte[length-5];	  trailer    =    new    byte[length-2];    	non-compiled	[CE]  <identifier>  expected	19	None	replace
165	[BUG]  [BUGGY]  trailer  =  new  byte[length-4];  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[length-4];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  new  byte[length-4];	  trailer    =    new    byte[length-2];    	non-compiled	[CE]  <identifier>  expected	19	None	replace
166	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  0xfffffL  +  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  &  0xfffffL  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  &  0xfffffL  +  1;	  trailer    =    buffer[end-1]    &    0xffffL;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
167	[BUG]  [BUGGY]  trailer  =  new  byte[buffer.length+1];  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[buffer.length+1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  new  byte[buffer.length+1];	  trailer    =    new    byte[length+1];    	non-compiled	[CE]  <identifier>  expected	53	None	replace
168	[BUG]  [BUGGY]  Trailer  trailer  =  new  byte[length+1];  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =  new  byte[length+1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  trailer  =  new  byte[length+1];	  trailer    =    new    byte[length+1];    	non-compiled	[CE]  <identifier>  expected	53	None	replace
169	[BUG]  [BUGGY]  trailer  =  new  byte[end+1];  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[end+1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  new  byte[end+1];	  trailer    =    new    byte[length+1];    	non-compiled	[CE]  <identifier>  expected	53	None	replace
170	[BUG]  [BUGGY]  trailer  =  new  byte[length++];  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[length++];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  new  byte[length++];	  trailer    =    new    byte[length+1];    	non-compiled	[CE]  <identifier>  expected	53	None	replace
171	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  +  length-1];  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  +  length-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  +  length-1];	  trailer    =    buffer[start-1]    +    end-1];    	non-compiled	[CE]  <identifier>  expected	18	None	replace
172	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  +  end-1];  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  +  end-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  +  end-1];	  trailer    =    buffer[start-1]    +    end-1];    	non-compiled	[CE]  <identifier>  expected	18	None	replace
173	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  +  start-1];  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  +  start-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  +  start-1];	  trailer    =    buffer[start-1]    +    end-1];    	non-compiled	[CE]  <identifier>  expected	18	None	replace
174	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  -  end-1];  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  -  end-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  -  end-1];	  trailer    =    buffer[start-1]    +    end-1];    	non-compiled	[CE]  <identifier>  expected	18	None	replace
175	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  +  start-1];  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  +  start-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  +  start-1];	  trailer    =    buffer[start-1]    +    end-1];    	non-compiled	[CE]  <identifier>  expected	18	None	replace
176	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  &  end-1];  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  &  end-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  &  end-1];	  trailer    =    buffer[start-1]    +    end-1];    	non-compiled	[CE]  <identifier>  expected	18	None	replace
177	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  /  0xff;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  /  0xff;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  /  0xff;	  trailer    =    buffer[end-1]    +    0xff;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
178	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  0xffffF;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  &  0xffffF;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  &  0xffffF;	  trailer    =    buffer[end-1]    &    0xfffF;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
179	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  |  0xfffF;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  |  0xfffF;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  |  0xfffF;	  trailer    =    buffer[end-1]    &    0xfffF;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
180	[BUG]  [BUGGY]  while((  trailer  ==  '0'  &&  trailer  <  =  '7')||(trailer!=  'A'  &&  trailer  <  =  'Z'))  {  end--;  }  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  trailer  ==  '0'  &&  trailer  <  =  '7')||(trailer!=  'A'  &&  trailer  <  =  'Z'))  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  trailer  ==  '0'  &&  trailer  <  =  '7')||(trailer!=  'A'  &&  trailer  <  =  'Z'))  {  end--;  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
181	[BUG]  [BUGGY]  while((  trailer  ==  '0'  &&  trailer  <  =  '7')||(trailer  >=  'A'  &&  trailer  <  =  'Z'))  {  end--;  }  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  trailer  ==  '0'  &&  trailer  <  =  '7')||(trailer  >=  'A'  &&  trailer  <  =  'Z'))  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  trailer  ==  '0'  &&  trailer  <  =  '7')||(trailer  >=  'A'  &&  trailer  <  =  'Z'))  {  end--;  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
182	[BUG]  [BUGGY]  while((  trailer  ==  '0'  &&  trailer  <  =  '7')||(trailer  >=  'a'  &&  trailer  <  =  'z'))  {  end--;  }  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  trailer  ==  '0'  &&  trailer  <  =  '7')||(trailer  >=  'a'  &&  trailer  <  =  'z'))  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  trailer  ==  '0'  &&  trailer  <  =  '7')||(trailer  >=  'a'  &&  trailer  <  =  'z'))  {  end--;  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
183	[BUG]  [BUGGY]  while((  trailer  ==  '0'  &&  trailer  <  =  '7')||(trailer!=  'a'  &&  trailer  <  =  'z'))  {  end--;  }  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  trailer  ==  '0'  &&  trailer  <  =  '7')||(trailer!=  'a'  &&  trailer  <  =  'z'))  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  trailer  ==  '0'  &&  trailer  <  =  '7')||(trailer!=  'a'  &&  trailer  <  =  'z'))  {  end--;  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
184	[BUG]  [BUGGY]  while((  trailer  ==  '0'  &&  trailer  <  =  '7')||(trailer  ==  'A'  &&  trailer  <  =  'Z'))  {  end--;  }  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  trailer  ==  '0'  &&  trailer  <  =  '7')||(trailer  ==  'A'  &&  trailer  <  =  'Z'))  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  trailer  ==  '0'  &&  trailer  <  =  '7')||(trailer  ==  'A'  &&  trailer  <  =  'Z'))  {  end--;  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
185	[BUG]  [BUGGY]  while((  trailer  ==  '0'  &&  trailer  <  =  '7')||(trailer  ==  'a'  &&  trailer  <  =  'z'))  {  end--;  }  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  trailer  ==  '0'  &&  trailer  <  =  '7')||(trailer  ==  'a'  &&  trailer  <  =  'z'))  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  trailer  ==  '0'  &&  trailer  <  =  '7')||(trailer  ==  'a'  &&  trailer  <  =  'z'))  {  end--;  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
186	[BUG]  [BUGGY]  while((  trailer  ==  '0'  &&  trailer  <  =  '9')||(trailer!=  'A'  &&  trailer  <  =  'Z'))  {  end--;  }  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  trailer  ==  '0'  &&  trailer  <  =  '9')||(trailer!=  'A'  &&  trailer  <  =  'Z'))  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  trailer  ==  '0'  &&  trailer  <  =  '9')||(trailer!=  'A'  &&  trailer  <  =  'Z'))  {  end--;  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
187	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  /  0xffff;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  /  0xffff;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  /  0xffff;	  trailer    =    buffer[end-1]    +    0xffff;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
188	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  +  0xffff;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  +  0xffff;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  +  0xffff;	  trailer    =    buffer[end-1]    +    0xffff;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
189	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  |  0xffF;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  |  0xffF;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  |  0xffF;	  trailer    =    buffer[end-1]    &    0xffF;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
190	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  0xffFF;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  &  0xffFF;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  &  0xffFF;	  trailer    =    buffer[end-1]    &    0xffF;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
191	[BUG]  [BUGGY]  Trailer  <?>  trailer  =  trailer[end-1];  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  <?>  trailer  =  trailer[end-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  <?>  trailer  =  trailer[end-1];	  Trailer    <?>    trailer    =    buffer[end-1];    	non-compiled	[CE]  <identifier>  expected	64	None	replace
192	[BUG]  [BUGGY]  Trailer  <?>  trailer  =  this.trailer[end-1];  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  <?>  trailer  =  this.trailer[end-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  <?>  trailer  =  this.trailer[end-1];	  Trailer    <?>    trailer    =    buffer[end-1];    	non-compiled	[CE]  <identifier>  expected	64	None	replace
193	[BUG]  [BUGGY]  Trailer  <?>  trailer  =(trailer  ==  0)?  buffer[end-1]  :  null;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  <?>  trailer  =(trailer  ==  0)?  buffer[end-1]  :  null;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  <?>  trailer  =(trailer  ==  0)?  buffer[end-1]  :  null;	  Trailer    <?>    trailer    =    buffer[end-1];    	non-compiled	[CE]  <identifier>  expected	64	None	replace
194	[BUG]  [BUGGY]  Trailer  <?>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[end-1]  :  null;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  <?>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[end-1]  :  null;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  <?>  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[end-1]  :  null;	  Trailer    <?>    trailer    =    buffer[end-1];    	non-compiled	[CE]  <identifier>  expected	64	None	replace
195	[BUG]  [BUGGY]  Trailer  <?>  trailer  =(trailer  >=  0)?  buffer[end-1]  :  null;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  <?>  trailer  =(trailer  >=  0)?  buffer[end-1]  :  null;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  <?>  trailer  =(trailer  >=  0)?  buffer[end-1]  :  null;	  Trailer    <?>    trailer    =    buffer[end-1];    	non-compiled	[CE]  <identifier>  expected	64	None	replace
196	[BUG]  [BUGGY]  Trailer  <?>  trailer  =(trailer  ==  '[')?  buffer[end-1]  :  null;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  <?>  trailer  =(trailer  ==  '[')?  buffer[end-1]  :  null;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  <?>  trailer  =(trailer  ==  '[')?  buffer[end-1]  :  null;	  Trailer    <?>    trailer    =    buffer[end-1];    	non-compiled	[CE]  <identifier>  expected	64	None	replace
197	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  BYTE_SIZE;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  &  BYTE_SIZE;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  &  BYTE_SIZE;	  trailer    =    buffer[end-1]    &    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
198	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  &  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  &  BYTE_MASK;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  &  BYTE_MASK;	  trailer    =    buffer[end-1]    &    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
199	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  &  BYTE_MASK  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  &  BYTE_MASK  +  1;	  trailer    =    buffer[end-1]    &    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
200	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  +  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  +  BYTE_MASK;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  +  BYTE_MASK;	  trailer    =    buffer[end-1]    &    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
201	[BUG]  [BUGGY]  trailer  =  this.buffer[end-1];  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  this.buffer[end-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  this.buffer[end-1];	  trailer    =    this.buffer[start-1];    	non-compiled	[CE]  <identifier>  expected	15	None	replace
202	[BUG]  [BUGGY]  trailer  =  this.buffer[length-1];  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  this.buffer[length-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  this.buffer[length-1];	  trailer    =    this.buffer[start-1];    	non-compiled	[CE]  <identifier>  expected	15	None	replace
203	[BUG]  [BUGGY]  trailer  =  new  byte[this.buffer[start-1];  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[this.buffer[start-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  new  byte[this.buffer[start-1];	  trailer    =    this.buffer[start-1];    	non-compiled	[CE]  <identifier>  expected	15	None	replace
204	[BUG]  [BUGGY]  trailer  =  this.buffer[start-1]  &  0xff;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  this.buffer[start-1]  &  0xff;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  this.buffer[start-1]  &  0xff;	  trailer    =    this.buffer[start-1];    	non-compiled	[CE]  <identifier>  expected	15	None	replace
205	[BUG]  [BUGGY]  trailer  =  this.buffer[start];  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  this.buffer[start];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  this.buffer[start];	  trailer    =    this.buffer[start-1];    	non-compiled	[CE]  <identifier>  expected	15	None	replace
206	[BUG]  [BUGGY]  if(start  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(start  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(start  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1]);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
207	[BUG]  [BUGGY]  if(start  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-2]);  }  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(start  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-2]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(start  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-2]);  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1]);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
208	[BUG]  [BUGGY]  if(start  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[length-1]);  }  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(start  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[length-1]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(start  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[length-1]);  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1]);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
209	[BUG]  [BUGGY]  Trailer  <?>  trailer  =  buffer[start-1];  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  <?>  trailer  =  buffer[start-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  <?>  trailer  =  buffer[start-1];	  Trailer    <?>    trailer    =    buffer[end-1];    	non-compiled	[CE]  <identifier>  expected	64	None	replace
210	[BUG]  [BUGGY]  Trailer  <?>  trailer  =  new  byte[length-1];  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  <?>  trailer  =  new  byte[length-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  <?>  trailer  =  new  byte[length-1];	  Trailer    <?>    trailer    =    buffer[end-1];    	non-compiled	[CE]  <identifier>  expected	64	None	replace
211	[BUG]  [BUGGY]  Trailer  <?>  end  =  buffer[end-1];  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  <?>  end  =  buffer[end-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  <?>  end  =  buffer[end-1];	  Trailer    <?>    trailer    =    buffer[end-1];    	non-compiled	[CE]  <identifier>  expected	64	None	replace
212	[BUG]  [BUGGY]  Trailer  <?>  trailer  =  buffer[length-1];  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  <?>  trailer  =  buffer[length-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  <?>  trailer  =  buffer[length-1];	  Trailer    <?>    trailer    =    buffer[end-1];    	non-compiled	[CE]  <identifier>  expected	64	None	replace
213	[BUG]  [BUGGY]  Trailer  <?>  trailer  =  buffer[end-2];  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  <?>  trailer  =  buffer[end-2];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  <?>  trailer  =  buffer[end-2];	  Trailer    <?>    trailer    =    buffer[end-1];    	non-compiled	[CE]  <identifier>  expected	64	None	replace
214	[BUG]  [BUGGY]  Trailer  <?>  trailer  =  buffer[0];  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  <?>  trailer  =  buffer[0];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  <?>  trailer  =  buffer[0];	  Trailer    <?>    trailer    =    buffer[end-1];    	non-compiled	[CE]  <identifier>  expected	64	None	replace
215	[BUG]  [BUGGY]  trailer  =  new  byte[trailer-1];  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[trailer-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  new  byte[trailer-1];	  trailer    =    new    byte[end-1];    	non-compiled	[CE]  <identifier>  expected	23	None	replace
216	[BUG]  [BUGGY]  if(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  end--;  }  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(start  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  end--;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
217	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  end--;  }  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  end--;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
218	[BUG]  [BUGGY]  while(start  <  length)  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  end--;  }  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while(start  <  length)  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while(start  <  length)  {  if(length  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  end--;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
219	[BUG]  [BUGGY]  while(start  <  length)  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  end--;  }  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while(start  <  length)  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while(start  <  length)  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  end--;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
220	[BUG]  [BUGGY]  End  i  =  start;  i  <  length;  ++i)  {  end--;  }  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  End  i  =  start;  i  <  length;  ++i)  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	End  i  =  start;  i  <  length;  ++i)  {  end--;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
221	[BUG]  [BUGGY]  if(trailer  ==  0)  {  trailer  =  byte[end-1];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(trailer  ==  0)  {  trailer  =  byte[end-1];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(trailer  ==  0)  {  trailer  =  byte[end-1];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  trailer    =    byte[end-1];    	non-compiled	[CE]  <identifier>  expected	14	None	replace
222	[BUG]  [BUGGY]  if(trailer  ==  0)  {  trailer  =  buffer[end-1];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(trailer  ==  0)  {  trailer  =  buffer[end-1];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(trailer  ==  0)  {  trailer  =  buffer[end-1];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  trailer    =    byte[end-1];    	non-compiled	[CE]  <identifier>  expected	14	None	replace
223	[BUG]  [BUGGY]  if(trailer  ==  '.')  {  trailer  =  buffer[end-1];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(trailer  ==  '.')  {  trailer  =  buffer[end-1];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(trailer  ==  '.')  {  trailer  =  buffer[end-1];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  trailer    =    byte[end-1];    	non-compiled	[CE]  <identifier>  expected	14	None	replace
224	[BUG]  [BUGGY]  if(trailer  =='')  {  trailer  =  byte[end-1];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(trailer  =='')  {  trailer  =  byte[end-1];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(trailer  =='')  {  trailer  =  byte[end-1];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  trailer    =    byte[end-1];    	non-compiled	[CE]  <identifier>  expected	14	None	replace
225	[BUG]  [BUGGY]  if(trailer  =='')  {  trailer  =  buffer[end-1];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(trailer  =='')  {  trailer  =  buffer[end-1];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(trailer  =='')  {  trailer  =  buffer[end-1];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  trailer    =    byte[end-1];    	non-compiled	[CE]  <identifier>  expected	14	None	replace
226	[BUG]  [BUGGY]  while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end-1],  allNUL));  }  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end-1],  allNUL));  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end-1],  allNUL));  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1],    allNUL));    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
227	[BUG]  [BUGGY]  while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end-1],  allNUL));  }  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end-1],  allNUL));  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end-1],  allNUL));  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1],    allNUL));    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
228	[BUG]  [BUGGY]  while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  0  ||  trailer  ==  'n')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end-1],  allNUL));  }  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  0  ||  trailer  ==  'n')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end-1],  allNUL));  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  0  ||  trailer  ==  'n')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end-1],  allNUL));  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1],    allNUL));    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
229	[BUG]  [BUGGY]  while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end-1]  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end-1]  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end-1]	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1],    allNUL));    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
230	[BUG]  [BUGGY]  End  =  System.currentTimeMillis();  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  End  =  System.currentTimeMillis();  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	End  =  System.currentTimeMillis();	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
231	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[start];  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  final  byte  trailer  =  buffer[start];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	final  byte  trailer  =  buffer[start];	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
232	[BUG]  [BUGGY]  terator  <  Object>  start  =  buffer.get(start);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  terator  <  Object>  start  =  buffer.get(start);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	terator  <  Object>  start  =  buffer.get(start);	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
233	[BUG]  [BUGGY]  terator  <  byte>  start  =  buffer.get(start);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  terator  <  byte>  start  =  buffer.get(start);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	terator  <  byte>  start  =  buffer.get(start);	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
234	[BUG]  [BUGGY]  terator  <  byte>  start  =  buffer.getStart();  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  terator  <  byte>  start  =  buffer.getStart();  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	terator  <  byte>  start  =  buffer.getStart();	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
235	[BUG]  [BUGGY]  trailer  =(this.trailer[end-1]!='')?  this.trailer[end-1]  :  buffer[end-1];  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =(this.trailer[end-1]!='')?  this.trailer[end-1]  :  buffer[end-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =(this.trailer[end-1]!='')?  this.trailer[end-1]  :  buffer[end-1];	  trailer    =    this.trailer[end-1];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
236	[BUG]  [BUGGY]  trailer  =(this.trailer[end-1]!='')?  this.trailer[end-1]  :  null;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =(this.trailer[end-1]!='')?  this.trailer[end-1]  :  null;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =(this.trailer[end-1]!='')?  this.trailer[end-1]  :  null;	  trailer    =    this.trailer[end-1];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
237	[BUG]  [BUGGY]  trailer  =(this.trailer[end-1]!=  'n')?  this.trailer[end-1]  :  buffer[end-1];  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =(this.trailer[end-1]!=  'n')?  this.trailer[end-1]  :  buffer[end-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =(this.trailer[end-1]!=  'n')?  this.trailer[end-1]  :  buffer[end-1];	  trailer    =    this.trailer[end-1];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
238	[BUG]  [BUGGY]  trailer  =(this.trailer[end-1]!=  'n')?  this.trailer[end-1]  :  null;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =(this.trailer[end-1]!=  'n')?  this.trailer[end-1]  :  null;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =(this.trailer[end-1]!=  'n')?  this.trailer[end-1]  :  null;	  trailer    =    this.trailer[end-1];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
239	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  +  '0'  +  '0';  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  +  '0'  +  '0';  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  +  '0'  +  '0';	  trailer    =    buffer[end-1]    +    '0';    	non-compiled	[CE]  <identifier>  expected	29	None	replace
240	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  +(byte)'0';  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  +(byte)'0';  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  +(byte)'0';	  trailer    =    buffer[end-1]    +    '0';    	non-compiled	[CE]  <identifier>  expected	29	None	replace
241	[BUG]  [BUGGY]  Trailer  trailer  =(trailer  ==  'n'  ||  trailer  ==  'r')?  buffer[end-1]  :  null;  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =(trailer  ==  'n'  ||  trailer  ==  'r')?  buffer[end-1]  :  null;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  trailer  =(trailer  ==  'n'  ||  trailer  ==  'r')?  buffer[end-1]  :  null;	  Trailer    trailer    =    buffer[end-1];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
242	[BUG]  [BUGGY]  Trailer  trailer  =(trailer  ==  '0'?  buffer[end-1]  :  buffer[end-1];  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =(trailer  ==  '0'?  buffer[end-1]  :  buffer[end-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  trailer  =(trailer  ==  '0'?  buffer[end-1]  :  buffer[end-1];	  Trailer    trailer    =    buffer[end-1];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
243	[BUG]  [BUGGY]  Trailer  trailer  =(trailer  ==  ')'?  buffer[end-1]  :  null;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =(trailer  ==  ')'?  buffer[end-1]  :  null;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  trailer  =(trailer  ==  ')'?  buffer[end-1]  :  null;	  Trailer    trailer    =    buffer[end-1];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
244	[BUG]  [BUGGY]  trailer  =  new  byte[length-start];  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[length-start];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  new  byte[length-start];	  trailer    =    new    byte[length-2];    	non-compiled	[CE]  <identifier>  expected	19	None	replace
245	[BUG]  [BUGGY]  trailer  =  buffer[load-1];  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[load-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[load-1];	  trailer    =    buffer[length-1];    	non-compiled	[CE]  <identifier>  expected	16	None	replace
246	[BUG]  [BUGGY]  Trailer  trailer  =  buffer[end-1]  &  0xffff;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =  buffer[end-1]  &  0xffff;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  trailer  =  buffer[end-1]  &  0xffff;	  trailer    =    buffer[end-1]    |    0xffff;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
247	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  |  0xfffL;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  |  0xfffL;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  |  0xfffL;	  trailer    =    buffer[end-1]    |    0xffff;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
248	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  &  0x3F;  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  &  0x3F;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  &  0x3F;	  trailer    =    buffer[start-1]    &    0x7F;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
249	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  &  0x7F  +  1;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  &  0x7F  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  &  0x7F  +  1;	  trailer    =    buffer[start-1]    &    0x7F;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
250	[BUG]  [BUGGY]  trailer  =  buffer[end-1]?  0xfff  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]?  0xfff  :  BYTE_MASK;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]?  0xfff  :  BYTE_MASK;	  trailer    =    buffer[end-1]    |    0xfff;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
251	[BUG]  [BUGGY]  trailer  =  this.buffer[offset-1];  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  this.buffer[offset-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  this.buffer[offset-1];	  trailer    =    this.buffer[start-1];    	non-compiled	[CE]  <identifier>  expected	15	None	replace
252	[BUG]  [BUGGY]  trailer  =  this.buffer[start-1]  +  1;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  this.buffer[start-1]  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  this.buffer[start-1]  +  1;	  trailer    =    this.buffer[start-1];    	non-compiled	[CE]  <identifier>  expected	15	None	replace
253	[BUG]  [BUGGY]  Trailer  trailer  =  new  byte[start-1];  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =  new  byte[start-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  trailer  =  new  byte[start-1];	  Trailer    trailer    =    new    byte[length-1];    	non-compiled	[CE]  <identifier>  expected	20	None	replace
254	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  0xfffL  +  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  &  0xfffL  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  &  0xfffL  +  1;	  trailer    =    buffer[end-1]    &    0xfffL;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
255	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  &  0xfffL;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  &  0xfffL;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  &  0xfffL;	  trailer    =    buffer[end-1]    &    0xfffL;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
256	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  0xfffL  |  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  &  0xfffL  |  BYTE_MASK;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  &  0xfffL  |  BYTE_MASK;	  trailer    =    buffer[end-1]    &    0xfffL;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
257	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  4xff;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  &  4xff;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  &  4xff;	  trailer    =    buffer[end-1]    &    1xff;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
258	[BUG]  [BUGGY]  trailer  =  new  byte[buffer[start-1],  buffer[end-1];  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[buffer[start-1],  buffer[end-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  new  byte[buffer[start-1],  buffer[end-1];	  trailer    =    new    byte[length-1],    buffer[end-1];    	non-compiled	[CE]  <identifier>  expected	22	None	replace
259	[BUG]  [BUGGY]  trailer  =  new  byte[start-1],  buffer[end-1];  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[start-1],  buffer[end-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  new  byte[start-1],  buffer[end-1];	  trailer    =    new    byte[length-1],    buffer[end-1];    	non-compiled	[CE]  <identifier>  expected	22	None	replace
260	[BUG]  [BUGGY]  trailer  =  new  byte[trailer+1];  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[trailer+1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  new  byte[trailer+1];	  trailer    =    new    byte[length+1];    	non-compiled	[CE]  <identifier>  expected	53	None	replace
261	[BUG]  [BUGGY]  trailer  =  new  byte[start+1];  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[start+1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  new  byte[start+1];	  trailer    =    new    byte[length+1];    	non-compiled	[CE]  <identifier>  expected	53	None	replace
262	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  +  length  *  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  +  length  *  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  +  length  *  1;	  trailer    =    buffer[end-1]    +    length    +    1;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
263	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  start  +  1;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  &  start  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  &  start  +  1;	  trailer    =    buffer[end-1]    &    start;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
264	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  0x3F;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  &  0x3F;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  &  0x3F;	  trailer    =    buffer[end-1]    &    0x7F;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
265	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  0x7F  +  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  &  0x7F  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  &  0x7F  +  1;	  trailer    =    buffer[end-1]    &    0x7F;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
266	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  0xffL;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  &  0xffL;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  &  0xffL;	  trailer    =    buffer[end-1]    &    0xffF;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
267	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  &  0xffF;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  &  0xffF;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  &  0xffF;	  trailer    =    buffer[end-1]    &    0xffF;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
268	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  +  0xffF;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  +  0xffF;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  +  0xffF;	  trailer    =    buffer[end-1]    &    0xffF;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
269	[BUG]  [BUGGY]  trailer  =  new  byte[(start  +  length)%  BYTE_MASK];  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[(start  +  length)%  BYTE_MASK];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  new  byte[(start  +  length)%  BYTE_MASK];	  trailer    =    new    byte[start-1];    	non-compiled	[CE]  <identifier>  expected	58	None	replace
270	[BUG]  [BUGGY]  if(start  >=  0)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(start  >=  0)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(start  >=  0)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }	  if(length    >    0)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
271	[BUG]  [BUGGY]  if(start  ==  0)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(start  ==  0)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(start  ==  0)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }	  if(length    >    0)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
272	[BUG]  [BUGGY]  if(end  >  0)  {  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(end  >  0)  {  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(end  >  0)  {  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }	  if(length    >    0)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
273	[BUG]  [BUGGY]  if(start  <  0)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(start  <  0)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(start  <  0)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }	  if(length    >    0)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
274	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  +  start;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  +  start;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  +  start;	  trailer    =    buffer[start-1]    +    length;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
275	[BUG]  [BUGGY]  terator  <  Object>  start  =  exceptionMessage(buffer,  offset,  length,  buffer[start]);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  terator  <  Object>  start  =  exceptionMessage(buffer,  offset,  length,  buffer[start]);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	terator  <  Object>  start  =  exceptionMessage(buffer,  offset,  length,  buffer[start]);	  if(trailer    ==    0    ||    trailer    ==    '-')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
276	[BUG]  [BUGGY]  terator  <  Object>  start  =  exceptionMessage(buffer,  offset,  length,  end-1,  trailer);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  terator  <  Object>  start  =  exceptionMessage(buffer,  offset,  length,  end-1,  trailer);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	terator  <  Object>  start  =  exceptionMessage(buffer,  offset,  length,  end-1,  trailer);	  if(trailer    ==    0    ||    trailer    ==    '-')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
277	[BUG]  [BUGGY]  terator  <  Object>  start  =  exceptionMessage(buffer,  offset,  length);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  terator  <  Object>  start  =  exceptionMessage(buffer,  offset,  length);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	terator  <  Object>  start  =  exceptionMessage(buffer,  offset,  length);	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
278	[BUG]  [BUGGY]  terator  <  Object>  start  =  exceptionMessage(buffer,  offset,  length,  end-1);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  terator  <  Object>  start  =  exceptionMessage(buffer,  offset,  length,  end-1);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	terator  <  Object>  start  =  exceptionMessage(buffer,  offset,  length,  end-1);	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
279	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  +  0xfff;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  +  0xfff;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  +  0xfff;	  trailer    =    buffer[end-1]    +    0xffff;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
280	[BUG]  [BUGGY]  if(length  ==  0)  {  if(end  <  length)  {  end--;  }  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(length  ==  0)  {  if(end  <  length)  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(length  ==  0)  {  if(end  <  length)  {  end--;  }	  if(end    <    length)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
281	[BUG]  [BUGGY]  while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
282	[BUG]  [BUGGY]  while((  start  <  length)&&(start  >  0))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  length)&&(start  >  0))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  start  <  length)&&(start  >  0))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
283	[BUG]  [BUGGY]  while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  0  ||  trailer  ==  'n')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  0  ||  trailer  ==  'n')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  0  ||  trailer  ==  'n')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
284	[BUG]  [BUGGY]  while((  start  <  length)&&(start  >  0))  {  if(trailer  ==  0  ||  trailer  ==  'n')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  length)&&(start  >  0))  {  if(trailer  ==  0  ||  trailer  ==  'n')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  start  <  length)&&(start  >  0))  {  if(trailer  ==  0  ||  trailer  ==  'n')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
285	[BUG]  [BUGGY]  while((  start  <  length)&&(trailer  ==  0))  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  length)&&(trailer  ==  0))  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  start  <  length)&&(trailer  ==  0))  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
286	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  +  1xff;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  +  1xff;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  +  1xff;	  trailer    =    buffer[end-1]    +    0xfff;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
287	[BUG]  [BUGGY]  trailer  =  buffer[offset-1]  &  0x7F;  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[offset-1]  &  0x7F;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[offset-1]  &  0x7F;	  trailer    =    buffer[offset-1];    	non-compiled	[CE]  <identifier>  expected	45	None	replace
288	[BUG]  [BUGGY]  Trailer  <  Object>  trailer  =  buffer[start-1];  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  <  Object>  trailer  =  buffer[start-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  <  Object>  trailer  =  buffer[start-1];	  trailer    =    block[start-1];    	non-compiled	[CE]  <identifier>  expected	17	None	replace
289	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  0xffffL  +  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  &  0xffffL  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  &  0xffffL  +  1;	  trailer    =    buffer[end-1]    &    0xffffL;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
290	[BUG]  [BUGGY]  trailer  =  new  byte[buffer[start-1],  length-1];  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[buffer[start-1],  length-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  new  byte[buffer[start-1],  length-1];	  trailer    =    new    byte[length-1],    buffer[start-1];    	non-compiled	[CE]  <identifier>  expected	57	None	replace
291	[BUG]  [BUGGY]  Trailer  trailer  =  buffer[end-1]  &  1xff;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =  buffer[end-1]  &  1xff;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  trailer  =  buffer[end-1]  &  1xff;	  Trailer    trailer    =    buffer[end-1]    &    0xff;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
292	[BUG]  [BUGGY]  Trailer  trailer  =  buffer[end-1]  &  0xff  +  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =  buffer[end-1]  &  0xff  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  trailer  =  buffer[end-1]  &  0xff  +  1;	  Trailer    trailer    =    buffer[end-1]    &    0xff;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
293	[BUG]  [BUGGY]  Trailer  trailer  =  buffer[end-1]  &  0x7F;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =  buffer[end-1]  &  0x7F;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  trailer  =  buffer[end-1]  &  0x7F;	  Trailer    trailer    =    buffer[end-1]    &    0xff;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
294	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  +  end  -  1;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  +  end  -  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  +  end  -  1;	  trailer    =    buffer[end-1]    +    length    -    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
295	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  0xfffF  +  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  &  0xfffF  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  &  0xfffF  +  1;	  trailer    =    buffer[end-1]    &    0xfffF;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
296	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  &  0xfffF;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  &  0xfffF;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  &  0xfffF;	  trailer    =    buffer[end-1]    &    0xfffF;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
297	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  0xffffl  +  1;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  &  0xffffl  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  &  0xffffl  +  1;	  trailer    =    buffer[end-1]    &    0xffffl;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
298	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  &  0xffffl;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  &  0xffffl;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  &  0xffffl;	  trailer    =    buffer[end-1]    &    0xffffl;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
299	[BUG]  [BUGGY]  Trailer  <  Object>  trailer  =  buffer[end-1];  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  <  Object>  trailer  =  buffer[end-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  <  Object>  trailer  =  buffer[end-1];	  trailer    =    block[end-1];    	non-compiled	[CE]  <identifier>  expected	13	None	replace
300	[BUG]  [BUGGY]  Trailer  <?>  end  =  block[end-1];  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  <?>  end  =  block[end-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  <?>  end  =  block[end-1];	  trailer    =    block[end-1];    	non-compiled	[CE]  <identifier>  expected	13	None	replace
301	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  &  0xff  +  1;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  &  0xff  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  &  0xff  +  1;	  trailer    =    buffer[start-1]    &    0xff;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
302	[BUG]  [BUGGY]  if(end  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(end  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(end  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }	  if(trailer    ==    0    ||    trailer    ==    '.')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
303	[BUG]  [BUGGY]  if(end  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  container[start]);  }  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(end  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  container[start]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(end  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  container[start]);  }	  if(trailer    ==    0    ||    trailer    ==    '.')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
304	[BUG]  [BUGGY]  if(end  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start].length);  }  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(end  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start].length);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(end  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start].length);  }	  if(trailer    ==    0    ||    trailer    ==    '.')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
305	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  0xfffl  +  1;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  &  0xfffl  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  &  0xfffl  +  1;	  trailer    =    buffer[end-1]    &    0xfffl;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
306	[BUG]  [BUGGY]  trailer  =  buffer[end-1]?  0xff  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]?  0xff  :  BYTE_MASK;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]?  0xff  :  BYTE_MASK;	  trailer    =    buffer[end-1]    |    0xff;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
307	[BUG]  [BUGGY]  while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
308	[BUG]  [BUGGY]  while((  start  <  =  length)&&(end  >  0))  {  if(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  =  length)&&(end  >  0))  {  if(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  start  <  =  length)&&(end  >  0))  {  if(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
309	[BUG]  [BUGGY]  while((  start  <  =  length)&&(end  <  =  length))  {  if(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  =  length)&&(end  <  =  length))  {  if(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  start  <  =  length)&&(end  <  =  length))  {  if(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
310	[BUG]  [BUGGY]  while((  start  <  length)&&(trailer!=  0))  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  length)&&(trailer!=  0))  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  start  <  length)&&(trailer!=  0))  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
311	[BUG]  [BUGGY]  while((  start  <  =  length)&&(end  <  =  length))  {  if(trailer  ==  0)  {  end--;  }  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  =  length)&&(end  <  =  length))  {  if(trailer  ==  0)  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  start  <  =  length)&&(end  <  =  length))  {  if(trailer  ==  0)  {  end--;  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
312	[BUG]  [BUGGY]  while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  0)  {  end--;  }  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  0)  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  0)  {  end--;  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
313	[BUG]  [BUGGY]  while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  currentByte,  buffer[start]);  }  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  currentByte,  buffer[start]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  currentByte,  buffer[start]);  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
314	[BUG]  [BUGGY]  while((  start  <  length)&&(currentByte  <  '0'  ||  currentByte  >  '7'))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  length)&&(currentByte  <  '0'  ||  currentByte  >  '7'))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  start  <  length)&&(currentByte  <  '0'  ||  currentByte  >  '7'))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
315	[BUG]  [BUGGY]  while((  start  <  length)&&(currentByte  <  '0'  ||  currentByte  >  '7'))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  length)&&(currentByte  <  '0'  ||  currentByte  >  '7'))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  start  <  length)&&(currentByte  <  '0'  ||  currentByte  >  '7'))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
316	[BUG]  [BUGGY]  while((  start  <  length)&&(currentByte  <  '0'  ||  currentByte  >  '7'))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  length)&&(currentByte  <  '0'  ||  currentByte  >  '7'))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  start  <  length)&&(currentByte  <  '0'  ||  currentByte  >  '7'))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
317	[BUG]  [BUGGY]  while((  start  <  length)&&(currentByte  <  '0'  ||  currentByte  >  '7'))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  length)&&(currentByte  <  '0'  ||  currentByte  >  '7'))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  start  <  length)&&(currentByte  <  '0'  ||  currentByte  >  '7'))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
318	[BUG]  [BUGGY]  while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  currentByte,  buffer[start]);  }  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  currentByte,  buffer[start]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  currentByte,  buffer[start]);  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
319	[BUG]  [BUGGY]  if(length  >  7)  {  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(length  >  7)  {  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(length  >  7)  {  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }	  if(length    >    0)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
320	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  +  '0'  *  2;  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  +  '0'  *  2;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  +  '0'  *  2;	  trailer    =    buffer[end-1]    +    '0';    	non-compiled	[CE]  <identifier>  expected	29	None	replace
321	[BUG]  [BUGGY]  Trailer  trailer  =  buffer[end-1]  +  '0';  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =  buffer[end-1]  +  '0';  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  trailer  =  buffer[end-1]  +  '0';	  trailer    =    buffer[end-1]    +    '0';    	non-compiled	[CE]  <identifier>  expected	29	None	replace
322	[BUG]  [BUGGY]  Trailer  trailer  =  buffer[end-1]  &  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =  buffer[end-1]  &  BYTE_MASK;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  trailer  =  buffer[end-1]  &  BYTE_MASK;	  Trailer    trailer    =    buffer[end-1]    &    0xff;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
323	[BUG]  [BUGGY]  Trailer  trailer  =  trailer[end-1]  &  0xff;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =  trailer[end-1]  &  0xff;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  trailer  =  trailer[end-1]  &  0xff;	  Trailer    trailer    =    buffer[end-1]    &    0xff;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
324	[BUG]  [BUGGY]  Trailer  trailer  =  trailer[end-1];  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =  trailer[end-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  trailer  =  trailer[end-1];	  Trailer    trailer    =    buffer[end-1];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
325	[BUG]  [BUGGY]  Trailer  trailer  =(end  <  0)?  buffer[start-1]  :  buffer[end-1];  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =(end  <  0)?  buffer[start-1]  :  buffer[end-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  trailer  =(end  <  0)?  buffer[start-1]  :  buffer[end-1];	  Trailer    trailer    =    buffer[end-1];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
326	[BUG]  [BUGGY]  Trailer  trailer  =(trailer  ==  0)?  buffer[end-1]  :  block[end-1];  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =(trailer  ==  0)?  buffer[end-1]  :  block[end-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  trailer  =(trailer  ==  0)?  buffer[end-1]  :  block[end-1];	  Trailer    trailer    =    buffer[end-1];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
327	[BUG]  [BUGGY]  Trailer  trailer  =(trailer  ==  0)?  buffer[start-1]  :  null;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =(trailer  ==  0)?  buffer[start-1]  :  null;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  trailer  =(trailer  ==  0)?  buffer[start-1]  :  null;	  Trailer    trailer    =    buffer[end-1];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
328	[BUG]  [BUGGY]  trailer  =  new  byte[buffer,  start-1],  buffer[end-1];  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[buffer,  start-1],  buffer[end-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  new  byte[buffer,  start-1],  buffer[end-1];	  trailer    =    new    byte[length-1],    buffer[end-1];    	non-compiled	[CE]  <identifier>  expected	22	None	replace
329	[BUG]  [BUGGY]  Trailer  <?>  end  =  byte[end-1];  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  <?>  end  =  byte[end-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  <?>  end  =  byte[end-1];	  trailer    =    byte[end-1];    	non-compiled	[CE]  <identifier>  expected	14	None	replace
330	[BUG]  [BUGGY]  trailer  =(this.trailer[end-1]!=  0)?  this.trailer[end-1]  :  null;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =(this.trailer[end-1]!=  0)?  this.trailer[end-1]  :  null;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =(this.trailer[end-1]!=  0)?  this.trailer[end-1]  :  null;	  trailer    =    this.trailer[end-1];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
331	[BUG]  [BUGGY]  trailer  =(this.trailer[end-1]!=  0)?  this.trailer[end-1]  :  trailer;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =(this.trailer[end-1]!=  0)?  this.trailer[end-1]  :  trailer;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =(this.trailer[end-1]!=  0)?  this.trailer[end-1]  :  trailer;	  trailer    =    this.trailer[end-1];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
332	[BUG]  [BUGGY]  trailer  =(this.trailer[end-1]  ==  '0'?  this.trailer[end-1]  :  trailer;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =(this.trailer[end-1]  ==  '0'?  this.trailer[end-1]  :  trailer;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =(this.trailer[end-1]  ==  '0'?  this.trailer[end-1]  :  trailer;	  trailer    =    this.trailer[end-1];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
333	[BUG]  [BUGGY]  if(end  <  length)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  currentByte,  buffer[start]);  }  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(end  <  length)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  currentByte,  buffer[start]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(end  <  length)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  currentByte,  buffer[start]);  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
334	[BUG]  [BUGGY]  if(length  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  currentByte,  buffer[start]);  }  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(length  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  currentByte,  buffer[start]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(length  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  currentByte,  buffer[start]);  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
335	[BUG]  [BUGGY]  if(end  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  currentByte,  buffer[start]);  }  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(end  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  currentByte,  buffer[start]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(end  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  currentByte,  buffer[start]);  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
336	[BUG]  [BUGGY]  while((  start  <  length)&&(currentByte  <  '0'  ||  currentByte  >  '7'))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  length)&&(currentByte  <  '0'  ||  currentByte  >  '7'))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  start  <  length)&&(currentByte  <  '0'  ||  currentByte  >  '7'))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    currentByte,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
337	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  &  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  &  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  &  1;	  trailer    =    buffer[end-1]    &    1;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
338	[BUG]  [BUGGY]  while((  start  <  =  length)&&(end  <  =  length))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end-1],  allNUL));  }  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  =  length)&&(end  <  =  length))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end-1],  allNUL));  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  start  <  =  length)&&(end  <  =  length))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end-1],  allNUL));  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1],    allNUL));    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
339	[BUG]  [BUGGY]  while((  start  <  =  length)&&(end  >  0))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end-1],  allNUL));  }  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  =  length)&&(end  >  0))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end-1],  allNUL));  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  start  <  =  length)&&(end  >  0))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end-1],  allNUL));  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1],    allNUL));    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
340	[BUG]  [BUGGY]  trailer  =  buffer[offset-1]  &  BYTE_MASK;  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[offset-1]  &  BYTE_MASK;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[offset-1]  &  BYTE_MASK;	  trailer    =    buffer[offset-1];    	non-compiled	[CE]  <identifier>  expected	45	None	replace
341	[BUG]  [BUGGY]  while((  start  <  =  length)&&(end  >  0))  {  if(trailer  ==  0)  {  end--;  }  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  =  length)&&(end  >  0))  {  if(trailer  ==  0)  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  start  <  =  length)&&(end  >  0))  {  if(trailer  ==  0)  {  end--;  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
342	[BUG]  [BUGGY]  while((  start  <  length)&&(end  <  length))  {  if(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  length)&&(end  <  length))  {  if(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  start  <  length)&&(end  <  length))  {  if(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
343	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  +  offset  -  1;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  +  offset  -  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  +  offset  -  1;	  trailer    =    buffer[end-1]    +    length    -    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
344	[BUG]  [BUGGY]  trailer  =  new  byte[length-9];  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[length-9];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  new  byte[length-9];	  trailer    =    new    byte[length-2];    	non-compiled	[CE]  <identifier>  expected	19	None	replace
345	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  1xfff;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  &  1xfff;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  &  1xfff;	  trailer    =    buffer[end-1]    &    0xfffF;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
346	[BUG]  [BUGGY]  if(end  <  length)  {  if(trailer  ==  0  ||  trailer  ==  '-')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(end  <  length)  {  if(trailer  ==  0  ||  trailer  ==  '-')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(end  <  length)  {  if(trailer  ==  0  ||  trailer  ==  '-')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }	  if(trailer    ==    0    ||    trailer    ==    '-')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
347	[BUG]  [BUGGY]  if(length  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(length  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(length  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }	  if(trailer    ==    0    ||    trailer    ==    '-')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
348	[BUG]  [BUGGY]  if(end  <  length)  {  if(trailer  ==  '-'  ||  trailer  ==  '-')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(end  <  length)  {  if(trailer  ==  '-'  ||  trailer  ==  '-')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(end  <  length)  {  if(trailer  ==  '-'  ||  trailer  ==  '-')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }	  if(trailer    ==    0    ||    trailer    ==    '-')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
349	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  &  1x7F;  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  &  1x7F;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  &  1x7F;	  trailer    =    buffer[start-1]    &    0x7F;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
350	[BUG]  [BUGGY]  if(end  <  length)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(end  <  length)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(end  <  length)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1]);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
351	[BUG]  [BUGGY]  if(start  <  =  length)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(start  <  =  length)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(start  <  =  length)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1]);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
352	[BUG]  [BUGGY]  if(start  <  =  0)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(start  <  =  0)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(start  <  =  0)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1]);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
353	[BUG]  [BUGGY]  trailer  =  buffer[end-1]?  0xfff  :  null;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]?  0xfff  :  null;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]?  0xfff  :  null;	  trailer    =    buffer[end-1]    |    0xfff;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
354	[BUG]  [BUGGY]  trailer  =  buffer[end-1]?  0xfff  :  end;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]?  0xfff  :  end;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]?  0xfff  :  end;	  trailer    =    buffer[end-1]    |    0xfff;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
355	[BUG]  [BUGGY]  if(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  end--;  }  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  end--;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
356	[BUG]  [BUGGY]  End--  {  for(int  i  =  start;  i  <  length;  ++i)  {  end--;  }  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  End--  {  for(int  i  =  start;  i  <  length;  ++i)  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	End--  {  for(int  i  =  start;  i  <  length;  ++i)  {  end--;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
357	[BUG]  [BUGGY]  while(i  <  length)  {  for(int  i  =  start;  i  <  length;  ++i)  {  end--;  }  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while(i  <  length)  {  for(int  i  =  start;  i  <  length;  ++i)  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while(i  <  length)  {  for(int  i  =  start;  i  <  length;  ++i)  {  end--;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
358	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  length  -  1;  ++i)  {  end--;  }  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  length  -  1;  ++i)  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(length  >  0)  {  for(int  i  =  start;  i  <  length  -  1;  ++i)  {  end--;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
359	[BUG]  [BUGGY]  Trailer  <?>  trailer  =  this.buffer[start-1];  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  <?>  trailer  =  this.buffer[start-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  <?>  trailer  =  this.buffer[start-1];	  trailer    =    this.buffer[start-1];    	non-compiled	[CE]  <identifier>  expected	15	None	replace
360	[BUG]  [BUGGY]  if(end  >=  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(end  >=  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(end  >=  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
361	[BUG]  [BUGGY]  if(length  <  =  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(length  <  =  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(length  <  =  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
362	[BUG]  [BUGGY]  if(end  <  =  length)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(end  <  =  length)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(end  <  =  length)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
363	[BUG]  [BUGGY]  if(end  >=  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  container[start]);  }  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(end  >=  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  container[start]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(end  >=  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  container[start]);  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
364	[BUG]  [BUGGY]  if(end  >=  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  parent[start]);  }  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(end  >=  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  parent[start]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(end  >=  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  parent[start]);  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
365	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  &  start;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  &  start;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  &  start;	  trailer    =    buffer[start-1]    +    length;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
366	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  /  0;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  /  0;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  /  0;	  trailer    =    buffer[end-1]    +    0;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
367	[BUG]  [BUGGY]  Trailer  trailer  =  new  byte[length-1],  buffer[end-1];  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =  new  byte[length-1],  buffer[end-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  trailer  =  new  byte[length-1],  buffer[end-1];	  trailer    =    new    byte[length-1],    buffer[start-1];    	non-compiled	[CE]  <identifier>  expected	57	None	replace
368	[BUG]  [BUGGY]  if(start  <  =  length)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(start  <  =  length)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(start  <  =  length)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
369	[BUG]  [BUGGY]  if(start  <  length)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(start  <  length)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(start  <  length)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
370	[BUG]  [BUGGY]  while((  start  <  length)&&(end  <  length))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  length)&&(end  <  length))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  start  <  length)&&(end  <  length))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
371	[BUG]  [BUGGY]  while((  start  <  =  length)&&(end  <  =  length))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  =  length)&&(end  <  =  length))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  start  <  =  length)&&(end  <  =  length))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
372	[BUG]  [BUGGY]  while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
373	[BUG]  [BUGGY]  if(end  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(end  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(end  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
374	[BUG]  [BUGGY]  trailer  =  new  byte[Long.parseLong(trailer)];  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[Long.parseLong(trailer)];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  new  byte[Long.parseLong(trailer)];	  trailer    =    new    byte[end-1];    	non-compiled	[CE]  <identifier>  expected	23	None	replace
375	[BUG]  [BUGGY]  trailer  =  new  byte[Long.parseLong(length)];  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[Long.parseLong(length)];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  new  byte[Long.parseLong(length)];	  trailer    =    new    byte[end-1];    	non-compiled	[CE]  <identifier>  expected	23	None	replace
376	[BUG]  [BUGGY]  if(start  <  length)  {  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(start  <  length)  {  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(start  <  length)  {  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }	  if(end    <    length)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
377	[BUG]  [BUGGY]  if(length  <  2)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(length  <  2)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(length  <  2)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }	  if(end    <    length)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
378	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  +  offset  +  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  +  offset  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  +  offset  +  1;	  trailer    =    buffer[end-1]    +    length    +    1;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
379	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  -  start  +  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  -  start  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  -  start  +  1;	  trailer    =    buffer[end-1]    +    length    +    1;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
380	[BUG]  [BUGGY]  Trailer  <?>  trailer  =  new  byte[start-1];  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  <?>  trailer  =  new  byte[start-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  <?>  trailer  =  new  byte[start-1];	  trailer    =    new    byte[start-1];    	non-compiled	[CE]  <identifier>  expected	58	None	replace
381	[BUG]  [BUGGY]  Trailer  <?>  trailer  =  new  byte[end-1];  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  <?>  trailer  =  new  byte[end-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	Trailer  <?>  trailer  =  new  byte[end-1];	  trailer    =    new    byte[start-1];    	non-compiled	[CE]  <identifier>  expected	58	None	replace
382	[BUG]  [BUGGY]  trailer  =  new  byte[start];  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[start];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  new  byte[start];	  trailer    =    new    byte[start-1];    	non-compiled	[CE]  <identifier>  expected	58	None	replace
383	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  pad;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  &  pad;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  &  pad;	  trailer    =    buffer[end-1]    &    start;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
384	[BUG]  [BUGGY]  if(end  <  length)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(end  <  length)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(end  <  length)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
385	[BUG]  [BUGGY]  if(end  <  =  length)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(end  <  =  length)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(end  <  =  length)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
386	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  &  start-1];  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  &  start-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  &  start-1];	  trailer    =    buffer[start-1]    +    end-1];    	non-compiled	[CE]  <identifier>  expected	18	None	replace
387	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  /  end-1];  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start-1]  /  end-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[start-1]  /  end-1];	  trailer    =    buffer[start-1]    +    end-1];    	non-compiled	[CE]  <identifier>  expected	18	None	replace
388	[BUG]  [BUGGY]  if(end  <  length)  {  if(trailer  ==  0  ||  trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(end  <  length)  {  if(trailer  ==  0  ||  trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(end  <  length)  {  if(trailer  ==  0  ||  trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }	  if(trailer    ==    0    ||    trailer    ==    '.')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
389	[BUG]  [BUGGY]  if(end  <  length)  {  if(trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(end  <  length)  {  if(trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	if(end  <  length)  {  if(trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }	  if(trailer    ==    0    ||    trailer    ==    '.')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
390	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  -  1L;  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  -  1L;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  -  1L;	  trailer    =    buffer[end-1]    -    1;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
391	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  /  2;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  /  2;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  /  2;	  trailer    =    buffer[end-1]    +    2;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
392	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  1x7F;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  &  1x7F;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  &  1x7F;	  trailer    =    buffer[end-1]    &    0x7F;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
393	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  +  1xfff;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end-1]  +  1xfff;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	95	95	1	replace	trailer  =  buffer[end-1]  +  1xfff;	  trailer    =    buffer[end-1]    +    0xffff;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
