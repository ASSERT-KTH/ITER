projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=true;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=false;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=false;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65BooleanallNUL=false;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=null;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalbooleanallNUL=true;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNul=false;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNul=true;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalbooleanallNul=false;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65BooleanallNul=true;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,0,buffer,0,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalintstart=offset+length;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalintstart=buffer.length();
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,start,buffer,end,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,start,buffer,0,end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,0,buffer,offset,end,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,start,buffer,0,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65BooleanallNUL=true;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65ByteallNUL=true;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalbooleanallNUL=false;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65staticfinalbooleanallNUL=false;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalbooleanALLNUL=false;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65staticfinalbooleanallNUL=true;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalbooleanallNUL=null;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=Boolean.TRUE;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=Boolean.FALSE;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=Boolean.valueOf(length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=Boolean.parseByte(buffer,0,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=true;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65BooleanALLNUL=true;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,start,buffer,0,length);end=offset+length;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,0,buffer,start,end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65intstart=offset+length;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNul=null;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65BooleanallNUL=null;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=buffer.length==0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=buffer.length!=0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=BooleanUtils.BYTE_MASK;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=this.currentByte!=null;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=BooleanUtils.isAllNull(buffer);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=Boolean.TRUE.compareTo(buffer,start,length)!=0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=Boolean.TRUE.equals(result);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=Boolean.TRUE.compareTo(buffer,start,end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=Boolean.TRUE.compareTo(buffer,start,length)==0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65IntegerallNUL=false;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(buffer==null){for(inti=start;i<end;i++){if(buffer[i]!=0){return0L;}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length<BYTE_MASK){for(inti=start;i<end;i++){if(buffer[i]!=0){return0L;}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length<BYTE_MASK){for(inti=start;i<end;i++){if(buffer[i]!=0){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(buffer==null){for(inti=start;i<end;i++){if(buffer[i]!=0){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length<BYTE_MASK){for(inti=start;i<end;i++){if(buffer[i]==0){return0L;}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(buffer==null){for(inti=start;i<end;i++){if(buffer[i]!=0){break;}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=BooleanUtils.BYTE_MASK||BooleanUtils.BYTE_MASK;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=BooleanUtils.BYTE_MASK||BooleanUtils.BYTE_MASK);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=BooleanUtils.BYTE_MASK|BYTE_MASK;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65for(inti=start;i<end;i++){if(buffer[i]!=0){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length==0){for(inti=start;i<end;i++){if(buffer[i]!=0){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length==BYTE_MASK){if(buffer==null){for(inti=start;i<end;i++){if(buffer[i]!=0){return0L;}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length==BYTE_MASK){for(inti=start;i<end;i++){if(buffer[i]!=0){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length==2){for(inti=start;i<end;i++){if(buffer[i]!=0){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length==BYTE_MASK){if(buffer==null){for(inti=start;i<end;i++){if(buffer[i]!=0){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65for(inti=start;i<end;i++){if(buffer[i]==0){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=Boolean.TRUE.compareTo(buffer,offset,length)==0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=Boolean.TRUE.compareTo(buffer,end,length)==0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=Boolean.TRUE.compareTo(buff,start,length)==0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=Boolean.TRUE.compareTo(buffer,0,length)==0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=Boolean.TRUE.compareTo(buffer,offset,length)==0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,offset,buffer,0,end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,start,buffer,offset,end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,end,buffer,0,start);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,offset,buffer,0,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,0,buffer,0,end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalbyteallNUL=false;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalintallNUL=false;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65BooleanALLNUL=false;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65BooleanALLNUL=null;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65ByteALLNUL=false;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65ByteallNUL=false;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65staticfinalbooleanallNUL=Boolean.TRUE.equals(Byte_MASK);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65staticfinalbyteallNUL=false;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65staticfinalbooleanallNUL=Boolean.TRUE.equals(buffer[0]);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65staticfinalintallNUL=false;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65staticfinalbooleanallNUL=Boolean.TRUE.equals(buffer[offset+length]);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=Boolean.TRUE.equals(length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=result.equals(BYTE_MASK);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=result.equals(Byte.TRUE);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=Boolean.valueOf(result).booleanValue();
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=result!=Boolean.TRUE.equals(result);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=result==Boolean.TRUE.equals(result);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=Boolean.TRUE||Boolean.FALSE;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalbooleanALLNUL=true;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65staticfinalbooleanALLNUL=false;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalintALLNUL=false;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,end,buffer,0,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,start,buffer,0,length-start);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,start,buffer,0,length,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=Boolean.TRUE.compareTo(buffer,offset,end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=Boolean.TRUE.compareTo(buffer,0,end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=Boolean.TRUE.compareTo(buffer,offset,end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=Boolean.TRUE.compareTo(buffer,start,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=Boolean.TRUE.compareTo(buffer,end,start);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=Boolean.FALSE.compareTo(buffer,start,end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalbooleanallNUL=Boolean.TRUE;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalbooleanallNUL=Boolean.FALSE;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalbooleanallNUL=Boolean.valueOf(length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalbooleanallNUL=Boolean.parseBoolean(buffer,0,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalintstart=buffer.length()-1;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalintstart=buffer.length()-2;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalintstart=buffer.length()+1;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalintstart=buffer.length()+2;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalintstart=offset.length();
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalintstart=buffer.length()*2;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=Boolean.valueOf(length+1);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=Boolean.valueOf(0);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=Boolean.valueOf(length+2);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=Boolean.parseByte(buffer,offset+length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=Boolean.valueOf(length-1);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65BooleanallNul=false;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,0,buffer,offset,length,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,0,buffer,offset,end,length+1);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,0,buffer,offset,start,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,0,buffer,offset,end,length-start);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,0,buffer,offset,end,length+2);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,0,buffer,offset,length,end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalintstart=offset+length-1;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalintstart=offset+length-2;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalintstart=offset+length/2;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalintstart=offset+length*2;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalintstart=offset+length+1;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalintstart=offset+length-4;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalbooleanallNul=true;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=null;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length<2){if(buffer==null){for(inti=start;i<end;i++){if(buffer[i]!=0){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length<2){if(buffer==null){for(inti=start;i<end;i++){if(buffer[i]!=0){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=this.currentByte==null;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=this.currentByte>=null;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=this.currentByte>>null;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=this.currentByte[Delete]null;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNul=Boolean.TRUE;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNul=Boolean.FALSE;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNul=Boolean.valueOf(length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNul=Boolean.valueOf(end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=buffer.length>0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=buffer.length==2;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=end==0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=length==0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=buffer.length==1;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65BooleanallNUL=Boolean.TRUE;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65BooleanallNUL=Boolean.valueOf(length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65BooleanallNUL=Boolean.FALSE;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65BooleanallNUL=Boolean.valueOf(BYTE_MASK);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=BooleanUtils.isAllNull(buffer,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=BooleanUtils.isAllNull(buffer,end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=BooleanUtils.isAllNull(end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=BooleanUtils.isAllNull(buffer,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=BooleanUtils.isAllNull(length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=BooleanUtils.isAllEmpty(buffer);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=Boolean.FALSE||Boolean.TRUE;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=buffer.length!=2;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=end!=0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=end>>0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=buffer.length>>0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65BooleanallNul=null;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65ByteallNul=false;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=Boolean.TRUE.compareTo(buffer,offset,length)!=0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=Boolean.TRUE.compareTo(buffer,end,length)!=0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=Boolean.TRUE.compareTo(buffer,offset,length)>>0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=Boolean.TRUE.compareTo(buffer,0,length)!=0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,offset,buffer,end,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,start,buffer,end,length,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,start,buffer,offset,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,start,buffer,end,length,BYTE_MASK);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,start,buffer,end,length+1);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65IntegerallNUL=true;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65intallNUL=true;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65IntegerallNUL=null;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65byteallNUL=false;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65LongallNUL=false;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65intallNUL=false;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,0,buffer,0,length-start);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,0,buffer,0,length-1);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,0,buffer,0,length+2);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,0,buffer,0,length+1);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,0,buffer,0,offset);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=Boolean.parseByte(buffer,0,end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=Boolean.parseByte(buffer,0,buffer.length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=Boolean.parseByte(buffer,0,start);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=Boolean.parseByte(buffer,0,result);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=Boolean.valueOf(buffer,0,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length==BYTE_MASK){if(buffer==null){for(inti=start;i<end;i++){if(buffer[i]!=0){break;}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65for(inti=start;i<end;i++){if(buffer[i]!=0){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65while(buffer!=null){for(inti=start;i<end;i++){if(buffer[i]!=0){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length==BYTE_MASK){for(inti=start;i<end;i++){if(buffer[i]!=0){break;}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length==BYTE_MASK){if(buffer==null){for(inti=start;i<end;i++){if(buffer[i]!=0){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length==BYTE_MASK){if(buffer==null){for(inti=start;i<end;i++){if(buffer[i]!=0){allNUL=false;break;}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length<2){for(inti=start;i<end;i++){if(buffer[i]==0){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length<=BYTE_MASK){for(inti=start;i<end;i++){if(buffer[i]==0){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length<BYTE_MASK){for(inti=start;i<end;i++){if(buffer[i]==0){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65while(length<BYTE_MASK){for(inti=start;i<end;i++){if(buffer[i]==0){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65staticfinalbyteallNUL=true;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length<2){for(inti=start;i<end;i++){if(buffer[i]!=0){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length<BYTE_MASK||length>BYTE_MASK){for(inti=start;i<end;i++){if(buffer[i]!=0){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65while(length<BYTE_MASK){for(inti=start;i<end;i++){if(buffer[i]!=0){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length<BYTE_MASK){for(inti=start;i<end;i++){if(buffer[i]!=0){return0;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65while(length<BYTE_MASK){for(inti=start;i<end;i++){if(buffer[i]!=0){return0;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,start,buffer,0,end);end=offset+length;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,end,buffer,0,length);end=offset+length;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,offset,buffer,0,end);end=offset+length;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,0,buffer,0,length);end=offset+length;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,0,buffer,0,end);end=offset+length;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,offset,buffer,0,length);end=offset+length;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,0,buffer,offset,end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,0,buffer,offset,start,end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,0,buffer,start,end,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,offset,buffer,start,end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,0,buffer,end,start);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,0,buffer,off,end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,0,buffer,offset,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65intstart=offset+length-1;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65intstart=offset+length-2;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65intstart=offset+length-4;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65intstart=offset+length/2;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65intstart=offset+length,buffer.length;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65intstart=offset+length*2;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65ByteallNUL=null;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=buffer.length>=0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalbooleanallNUL=buffer.length==0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalbooleanallNUL=buffer.length!=0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=BooleanUtils.BYTE_MASK||BooleanUtils.BYTE_FALSE;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=buffer.length==0L;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=offset==0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNul=buffer.length==0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNul=buffer.length!=0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,start,buffer,end,length-start);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=Boolean.parseByte(buffer,0,offset);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=Boolean.parseByte(buffer,0,start+length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65IntegerallNul=true;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65staticfinalbooleanallNUL=Boolean.TRUE.indexOf(length)==0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65staticfinalbooleanallNUL=Boolean.TRUE.compareTo(buffer,start,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65staticfinalbooleanallNUL=Boolean.TRUE.equals(buffer[offset]);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65staticfinalbooleanallNUL=Boolean.TRUE.equals(byte);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=Boolean.TRUE.compareTo(buffer,start,end-start);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=Boolean.TRUE.compareTo(buffer,start,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=Boolean.TRUE.compareTo(buffer,offset,length)!=0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=Boolean.TRUE.compareTo(byte,buffer,start,length)!=0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=Boolean.TRUE.compareTo(byte,buffer,start,length)==0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=length.compareTo(buffer,start,length)==0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=Boolean.TRUE.compareTo(buffer,start,length)>0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65BYTE_MASKallNUL=false;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65intstart=offset+length/BYTE_MASK;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65intstart=offset+length+1;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65intstart=offset+length+2;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=Boolean.TRUE.valueOf(length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=Boolean.valueOf(length)!=false;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(allNUL){staticfinalbooleanallNUL=true;}else{for(inti=start;i<end;i++){if(buffer[i]!=0){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(allNUL){staticfinalbooleanallNUL=true;}else{for(inti=start;i<end;i++){buffer[i]=0;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(allNUL){staticfinalbooleanallNUL=true;}else{for(inti=start;i<end;i++){if(buffer[i]==0){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(allNUL){staticfinalbooleanallNUL=true;}else{for(inti=start;i<end;i++){if(buffer[i]!=0){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(allNUL){staticfinalbooleanallNUL=true;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(allNUL){staticfinalbooleanallNUL=true;}else{for(inti=start;i<end;i++){if(buffer[i]!=0){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length==0){for(inti=start;i<end;i++){if(buffer[i]!=0){return0L;}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length==BYTE_MASK){for(inti=start;i<end;i++){if(buffer[i]!=0){return0L;}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length==0){for(inti=start;i<end;i++){if(buffer[i]!=0){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalintstart=buffer.length()-offset;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalintstart=buffer.length()+length;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalintstart=offset+length/BYTE_MASK;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalintstart=offset+length+2;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=Boolean.valueOf;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,0,buffer,0,start);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,start,buffer,0,length+1);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65BooleanallNUL=buffer.length==0?true:false;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65BooleanallNUL=buffer.length!=0?true:false;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,start,end,buffer,0,length);end=offset+length;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65staticfinalbooleanallNul=false;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=result!=Boolean.TRUE.equals(BYTE_MASK);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=result==Boolean.TRUE.equals(BYTE_MASK);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=result!=Boolean.TRUE.equals(byte);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=result==Boolean.TRUE.equals(byte);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length<=0){for(inti=start;i<end;i++){if(buffer[i]==0){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length<0){for(inti=start;i<end;i++){if(buffer[i]==0){return0L;}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length<0){for(inti=start;i<end;i++){if(buffer[i]==0){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length<=0){for(inti=start;i<end;i++){if(buffer[i]!=0){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length==0){for(inti=start;i<end;i++){if(buffer[i]!=0){break;}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length==BYTE_MASK){for(inti=start;i<end;i++){if(buffer[i]!=0){allNUL=false;break;}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length==0){for(inti=start;i<end;i++){if(buffer[i]>=0){break;}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length==BYTE_MASK){for(inti=start;i<end;i++){if(buffer[i]>=0){break;}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length==0){for(inti=start;i<end;i++){if(buffer[i]!=0){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length==BYTE_MASK){for(inti=start;i<end;i++){if(buffer[i]!=0){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=Boolean.FALSE||Boolean.parseByte(buffer,0,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length<0){for(inti=start;i<end;i++){if(buffer[i]!=0){return0L;}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length<0){for(inti=start;i<end;i++){if(buffer[i]!=0){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length<=0){for(inti=start;i<end;i++){if(buffer[i]!=0){return0L;}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=buffer!=null;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=this.currentByte!=false;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=BooleanUtils.isAllNull(buffer);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=BooleanUtils.isAllNull(length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length==0){for(inti=start;i<end;i++){if(buffer[i]>=0){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length==0){for(inti=start;i<end;i++){if(buffer[i]!=null){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,0,buffer,offset,length,start);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=Boolean.TRUE.compareTo(byte,start,length)!=0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=Boolean.TRUE.compareTo(buffer,start,end)!=0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length>BYTE_MASK){for(inti=start;i<end;i++){if(buffer[i]!=0){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length<1){for(inti=start;i<end;i++){if(buffer[i]!=0){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length<2){for(inti=start;i<end;i++){if(buffer[i]!=0){return0;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65for(inti=start;i<end;i++){if(buffer[i]!=0){return0;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length>BYTE_MASK){for(inti=start;i<end;i++){if(buffer[i]!=0){return0;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65BooleanallNUL=BYTE_MASK;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=this.currentByte!=null?Boolean.TRUE:Boolean.FALSE;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=this.currentByte==null?Boolean.TRUE:Boolean.FALSE;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=this.currentByte==null&&this.currentByte!=null;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalbooleanallNUL=BooleanUtils.isBoolean(byte);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalbooleanallNUL=Boolean.TRUE.equals(result);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalbooleanallNUL=BooleanUtils.isBoolean(length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalbooleanallNUL=Boolean.TRUE.compareTo(buffer,start,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalbooleanallNUL=Boolean.TRUE.equals(byte);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=Boolean.TRUE.compareTo(byte,start,end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=Boolean.TRUE.compareTo(byte,buffer,end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalintstart=offset+length*BYTE_MASK;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalbooleanALLNUL=Boolean.TRUE.equals(result);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalbooleanALLNUL=Boolean.TRUE.compareTo(buffer,start,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalbooleanALLNUL=Boolean.TRUE.equals(byte);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalbooleanALLNUL=Boolean.TRUE.compareTo(buffer,start,end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length<2){for(inti=start;i<end;i++){if(buffer[i]!=0){return0L;}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length<1){for(inti=start;i<end;i++){if(buffer[i]!=0){return0L;}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65for(inti=start;i<end;i++){if(buffer[i]!=0){return0L;}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length<2){for(inti=start;i<end;i++){if(buffer[i]!=0){return0;}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length<2){for(inti=start;i<end;i++){if(buffer[i]==0){return0L;}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length<BYTE_MASK){for(inti=start;i<end;i++){if(buffer[i]!=0){break;}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(end==0){for(inti=start;i<end;i++){if(buffer[i]!=0){break;}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65for(inti=start;i<end;i++){if(buffer[i]!=0){break;}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length<2){for(inti=start;i<end;i++){if(buffer[i]!=0){break;}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length<BYTE_MASK){for(inti=start;i<end;i++){if(buffer[i]==0){break;}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(allNUL){staticfinalbooleanallNUL=true;}else{for(inti=start;i<end;i++){if(buffer[i]!=0){return0L;}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(allNUL){staticfinalbooleanallNUL=true;for(inti=start;i<end;i++){if(buffer[i]!=0){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(allNUL){staticfinalbooleanallNUL=true;for(inti=start;i<end;i++){if(buffer[i]!=0){return0L;}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalbooleanallNul=null;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=BooleanUtils.BYTE_MASK||BooleanUtils.BYTE_MASK||BooleanUtils.BYTE_MASK;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=BooleanUtils.BYTE_MASK||BooleanUtils.BYTE_MASK||BooleanUtils.BYTE_MASK);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,0,buffer,offset,length,BYTE_MASK);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=Boolean.parseByte(buffer,offset,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(allNUL){staticfinalbooleanallNUL=false;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(!allNUL){staticfinalbooleanallNUL=false;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65staticfinalbooleanallNUL=Boolean.TRUE.equals(result);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65staticfinalbooleanallNUL=Boolean.TRUE.compareTo(buffer,0,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=Boolean.TRUE.equals(end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=Boolean.TRUE.equals(value);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=result.equals(BYTE_MASK);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(byte,0,buffer,start,end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65intstart=offset+length*BYTE_MASK;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,off,buffer,0,end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65System.arraycopy(buffer,offset+1,buffer,0,end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65BYTE_MASK=true;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=BooleanUtils.isAllNull(buffer,end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=BooleanUtils.isAllNull(end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(end==0){for(inti=start;i<end;i++){if(buffer[i]!=0){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length>0){for(inti=start;i<end;i++){if(buffer[i]!=0){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(start==0){for(inti=start;i<end;i++){if(buffer[i]!=0){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=buffer.length!=1;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=Boolean.parseByte(buffer,start,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=Boolean.valueOf(length)!=0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=Boolean.parseByte(buffer);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65IntegerallNUL=0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length<1){for(inti=start;i<end;i++){if(buffer[i]==0){return0L;}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length<2){for(inti=start;i<end;i++){if(buffer[i]==0){return0;}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65for(inti=start;i<end;i++){if(buffer[i]==0){return0L;}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(end==0){for(inti=start;i<end;i++){if(buffer[i]!=0){return0L;}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65if(length>0){for(inti=start;i<end;i++){if(buffer[i]!=0){return0L;}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65finalbooleanallNUL=BYTE_MASK;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=Boolean.FALSE||Boolean.parseByte(buffer,start,length));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanallNUL=Boolean.FALSE||Boolean.parseByte(buffer,start,end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=Boolean.TRUE.compareTo(byte,start,length)==0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=Boolean.TRUE.compareTo(BYTE_MASK,buffer,start,length)==0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java65booleanALLNUL=Boolean.TRUE.compareTo(buffer,start,end)==0;
