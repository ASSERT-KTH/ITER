projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(;start<end;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(;start<length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(;start<=end;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(intstart=0;start<end;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(;start<start;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(;start<0;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<end;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(;start>=0;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(;start==0;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(;start!=0;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(;end<0;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,offset,buffer,start,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100result=(result<<3)+(length-'0');
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,offset,buffer,end,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,offset,buffer,0,end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalbyte[]buffer=trailer.getBytes();
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalbyte[]buffer=trailer.getByteArray();
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalbyte[]buffer=exceptionMessage(buffer,offset,length,end-1,trailer);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(;start<=length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(;start<start+length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<=end;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end<=0;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end<0;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end<length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end<=length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(intstart=0;start<length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<=0;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<=(end<0)?0:end;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(intstart=0;start<len;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(;start<=start;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(intstart=0;start<start;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(;start<=0;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(;start<=1;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<0;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(;start>=length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(intstart=0;start>=end;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(intstart=0;start<end.length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,offset,buffer,start,length-start);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,offset,buffer,start,end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,start,buffer,0,end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalbyte[]buffer=buffer.getByteArray();
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end<start;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end<=start;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<start;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<=(start+length);start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<=length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(start=0;start<end;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(intstart=0;start<2;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100if(start<=0){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,start,buffer,0,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100if(start<=0){thrownewIllegalArgumentException(exceptionMessage(buffer,offset,length,buffer,start,end));}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100if(start<=length){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100if(start<=0){thrownewIllegalArgumentException(exceptionMessage(buffer,offset,length,buffer,start,'0'));}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(;start>0;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<end.length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end=(end<0)?0:end.length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<=end.length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(intstart=0;start<this.end.length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(intstart=0;start<trailer.length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start>=end;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start>>end;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(intstart=0;start>=length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(intstart=0;start!=end;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100bucket==0){thrownewIllegalArgumentException(exceptionMessage(buffer,offset,length,buffer,start,'0'));}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100aughtException(exceptionMessage(buffer,offset,length,buffer,start,'0'));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100bucket==0){thrownewIllegalArgumentException(exceptionMessage(buffer,offset,length,buffer,end,'0'));}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100cast(newIllegalArgumentException(buffer,offset,length,buffer,start,'0'));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100aughtException(exceptionMessage(buffer,offset,length,buffer,'0'));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100cast(exceptionMessage(buffer,offset,length,buffer,start,'0'));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100bucket==0){thrownewIllegalArgumentException(exceptionMessage(buffer,offset,length,buffer,0,'0'));}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,offset,buffer,start,end-start);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,offset,buffer,start,length-1);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,offset,buffer,end,length-start);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,offset,buffer,start,length-2);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,offset,buffer,0,end-start);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,offset,buffer,start,length-1,trailer);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,offset,buffer,start,length-1,trailer.length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end=(start+length);start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start+=length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end+=(start+length);start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100result=(start+length);start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<=(end+length);start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start=(start+length);start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(intstart=0;start<BYTE_MASK;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100begin=0;start<length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(intstart=0;start<offset;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100[Delete]
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100aughtException(exceptionMessage(buffer,offset,length,buffer,start,end));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100cast(newIllegalArgumentException(buffer,offset,length,buffer,start,end));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100cast(newIllegalArgumentException(trailer,offset,length,buffer,start,end));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100cast(exceptionMessage(buffer,offset,length,buffer,start,end));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100cast(newIllegalArgumentException(trailer,start,length,buffer,start,end));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100cast(newIllegalArgumentException(buffer,offset,length,trailer,start,end));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(;end>=0;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(;start>>0;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,0,buffer,0,end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,0,buffer,0,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,start,buffer,0,end-1);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,0,buffer,0,start);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,offset,buffer,0,end+1);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,offset,buffer,0,end-1);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,offset,buffer,0,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<=1;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<=2;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end<=0;end++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(trailer,start,buffer,0,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,start,buffer,0,length-1);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,start,buffer,0,length,trailer.length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,start,buffer,0,length+1);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100begin<end;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100Start<end;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start>=length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(;start>=end;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(;start>=start;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start>>length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end<=BYTE_MASK;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end<=buffer.length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end<length-1;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end<length+=trailer.length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end+=length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end<length&&trailer.length>0){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<=length-1;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<=length-2;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100result=(length<<3)+(result-'0');
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100result=(result<<3)+(length-'0'+1);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100result=(result<<3)+(end-'0');
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100result=(result-3)+(length-'0');
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100result=(result<<3)+(length-1);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100result=(result<<3)+(length-'0'+trailer);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100End<0;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(;end==0;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<2;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(intstart=0;start<4;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(intstart=0;start<1;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(intstart=0;start<3;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(intstart=0;start<6;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,offset,buffer,end,0,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,offset,buffer,end,0);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,start,buffer,end,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,offset,buffer,end,length,trailer.length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(;start<1;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(;start>=1;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start=1;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(;start==1;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100atch(0L){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100aughtExceptionHandler.throwAsIOException("");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100aughtExceptionHandler.throwInternal();
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100aughtExceptionHandler.throwUnquotedException("");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100aughtExceptionHandler.throwUnsupportedOperationException("");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100aughtExceptionHandler.throwInvalidOctalException("");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end<=trailer.length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end<=2;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end<=1;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end<=trailer;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end<=length-1;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end<=(end<0)?0:end;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<=(end<<1)?0:end;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<=(end<<3)?0:end;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<=(end<<0)?0:end;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<=(end<<6)?0:end;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100result=(end<<0)?0:end;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalstart<=(end<0)?0:end;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalbyte[]buffer=trailer!=null?null:trailer.getByteArray();
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalbyte[]buffer=trailer==null?null:trailer.getByteArray();
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalbyte[]buffer=trailer.getByteBuffer();
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalbyte[]buffer=trailer.getByteArray(offset);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalbyte[]buffer=trailer.toByteArray();
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end<=7;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end<=3;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100End<=0;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<for(intstart=0;start<length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<for(intstart=0;start<end;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<=(start<0)?0:start;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<for(intstart=0;start>=end;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<=trailer;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100bucket==null||start<=length){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100bucket!=null||start<=length){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100thrownewIllegalArgumentException("");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100bucket==null||end<=length){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100bucket==null||start<length){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100Thread.currentThread().interrupt();
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalbyte[]buffer=exceptionMessage(buffer,offset,length,trailer,end-1);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalbyte[]buffer=exceptionMessage(buffer,offset,length,0,end-1,trailer);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalbyte[]buffer=exceptionMessage(buffer,offset,length,start-1,trailer);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalbyte[]buffer=exceptionMessage(buffer,offset,length,end-1,trailer.length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalbyte[]buffer=exceptionMessage(buffer,offset,length,end-1,trailer,trailer);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalbyte[]buffer=exceptionMessage(buffer,offset,length,end-1,trailer,allNUL);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalbyte[]buffer=this.trailer.getByteArray();
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100byte[]buffer=trailer.getByteArray();
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalbyte[]buffer=this.buffer.getByteArray();
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100staticfinalbyte[]buffer=trailer.getByteArray();
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalbyte[]buffer=container.getByteArray();
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(intstart=start+length;start<start+length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(intstart=0;start<start+length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(;start<start+length-1;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(;start<end+length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(intstart=start+length;start>=start+length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start=0;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start>=0;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<len;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(intstart=0;start>=len;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100beginning=0;start<len;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(intstart=0;start<size;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end<<3;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end>=0;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end<<2;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end<1;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalintstart<length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<length&&trailer.length>0){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end+=trailer.length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start+=0;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100result<<0;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalbyte[]buffer=trailer.getBytes(offset);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalbyte[]buffer=trailer.getBytes(trailer);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalbyte[]buffer=trailer!=null?null:trailer.getBytes();
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalbyte[]buffer=trailer==null?null:trailer.getBytes();
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalbyte[]buffer=trailer.getBytes(length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalbyte[]buffer=trailer.getBytes(offset,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,offset,buffer,start,end,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,offset,buffer,end,start);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,offset,buffer,start,end,trailer.length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(trailer,offset,buffer,start,end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,offset,buffer,start,length,trailer.length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end<start;end++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end+=start;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100safeThan<=length){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100parent!=null&&parent==trailer.parent){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100allowNull(start){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100parent==null&&parent==trailer.parent){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100parent!=null&&parent==buffer.length){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100parent==null&&parent!=trailer.parent){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100parent!=null&&parent==trailer.getParent()){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(start=0;start<end.length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(intstart=0;start>=end.length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end.length=0;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100Start<end.length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,end,buffer,0,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100allowNonEmpty(start){thrownewIllegalArgumentException(exceptionMessage(buffer,offset,length,buffer,start,'0'));}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100cast(result,0,0){thrownewIllegalArgumentException(exceptionMessage(buffer,offset,length,buffer,start,'0'));}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100allowNonEmpty(start){thrownewIllegalArgumentException(exceptionMessage(buffer,offset,length,buffer,end,'0'));}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start>==0;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalbyte[]buffer=exceptionMessage(buffer,offset,length,end-1,trailer,false);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalbyte[]buffer=exceptionMessage(buffer,offset,length,end-2,trailer);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100allowNonEmpty(start){thrownewIllegalArgumentException(exceptionMessage(buffer,offset,length,buffer,start,end));}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100cast(start,end){thrownewIllegalArgumentException(exceptionMessage(buffer,offset,length,buffer,start,end));}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100cast(start,end){thrownewIllegalArgumentException(exceptionMessage(buffer,offset,length,buffer,start,0));}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100cast(start,end){thrownewIllegalArgumentException(exceptionMessage(buffer,offset,length,buffer,start,'0'));}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100allowNonEmpty(start){thrownewIllegalArgumentException(exceptionMessage(buffer,offset,length,buffer,start,end));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100result=(result-'0')+(length-'0');
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100result=(result<<3)+(start-'0');
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100result=(result<<3)+(trailer-'0');
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start+=(length+start);start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<=(start+length)-1;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100Start<len;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(intstart=0;start<buffer.length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<=end-1;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(start=0;start<2;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(intstart=0;start>=2;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<start+length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(start=start+length;start<start+length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start+length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(start++;start<start+length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start>0;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<=start;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(;start<=start.length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(start<=start;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start==0;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start>>0;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100Start<start;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100startsWith(start);start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,offset,buffer,start,length+1);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,start,buffer,offset,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,offset,buffer,start,end,trailer);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,offset,buffer,start,end-1);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start!=0;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100safeThan<=0){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100allowNonEmpty(start){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100allowNonLocal(start){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100allowNonEmpty(start)){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100allowNonLocalSideEffects(start){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100allowNonEmptyChar(start){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(;start>=offset;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<=(end<0)?0:buffer.length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<=(end<0)?0:end+1;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<=(end<0)?0:buffer[start++];
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<=(end<0)?0:end.length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<=(end<0)?1:end;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start>==length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalbyte[]buffer=trailer.getByteArray(start);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<length;end++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalbyte[]buffer=this.buffered.getByteArray();
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalbyte[]buffer=this.getByteArray();
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalbyte[]buffer=getByteArray();
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100Start<length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100begin<length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100startsWith(length);start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,start,buffer,offset,length-start);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,offset,buffer,start,length-start+1);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,offset,buffer,start,length-end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalbyte[]buffer=trailer.getBytes(start);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalbyte[]buffer=trailer.getBytes(end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end<start+length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end<start+1;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,offset,buffer,0,start);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end>0;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end+=0;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end=0;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100End<=length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end>length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end>=length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,start,buffer,0,end-start);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,start,buffer,0,end+1);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start!=end;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100allowNonLocalSideEffects(length){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100allowNonLocalSideEffects(trailer)){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100allowNonLocalSideEffects(length+1)){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalbyte[]buffer=TrailerUtils.getByteArray(buffer);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<=(start+length-1);start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<=(start+length)/2;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<=(length+start);start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100aughtInvalidByte(exceptionMessage(buffer,offset,length,buffer,start,end));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100aughtInvalidEOF(exceptionMessage(buffer,offset,length,buffer,start,end));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100aughtInvalidLog(exceptionMessage(buffer,offset,length,buffer,start,end));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(start<=length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(start=0;start<length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100aught(Throwable.class,exceptionMessage(buffer,offset,length,start,'0'));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100aught(Throwable.class,exceptionMessage(buffer,offset,length,start,0));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100aught(Throwable.class,exceptionMessage(buffer,offset,length,trailer,'0'));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100aught(Throwable.class,exceptionMessage(buffer,offset,length,start,'7'));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100aught(Throwable.class,exceptionMessage(buffer,offset,length),start,0));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100aught(Throwable.class,exceptionMessage(buffer,offset,length),start,0);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end<=JsonEnd.MAX_VALUE;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end<=8;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(start<start+length;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(;start<1){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<=3;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,0,buffer,start,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100begin<start;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<=JsonStringEncoder.getInstance().quoteAsIgnoredByName(trailer);start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<=JsonStringEncoder.getInstance().quoteAsString(trailer);start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<=JsonStringEncoder.getInstance().quoteAsIgnored("UTF-8");start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<=JsonStringEncoder.getInstance().quoteAsIgnored(trailer);start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(;end>0;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalbyte[]buffer=trailer.removeByteArray();
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100aughtInvalidArgumentException(exceptionMessage(buffer,offset,length,buffer,start,'0'));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100aughtInvalidByte(exceptionMessage(buffer,offset,length,buffer,start,'0'));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100aughtInvalidEOF(exceptionMessage(buffer,offset,length,buffer,start,'0'));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<=(end<0)?0:1;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<=(end>0)?0:end;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end<=JsonEnd.MIN_VALUE;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(intstart=0;start<=end;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalbyte[]buffer=exceptionMessage(buffer,offset,length,trailer,end-1,end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100finalbyte[]buffer=exceptionMessage(buffer,offset,length,buffer,end-1,trailer);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(start<=BYTE_MASK;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,offset,buffer,end,length+1);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,start,buffer,end,length-start);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100System.arraycopy(buffer,offset,buffer,start,end+1);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100for(start=0;start<len;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100start<=length+1;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end<length&&trailer!=null;start++){
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java100end<=4;start++){
