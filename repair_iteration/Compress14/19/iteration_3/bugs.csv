bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  start  <  end.length;  start++)  {  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  end.length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  end.length;  start++)  {	  for(int    start    =    0;start    <    end.length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
2	[BUG]  [BUGGY]  end  =(end  <  0)?  0  :  end.length;  start++)  {  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end  =(end  <  0)?  0  :  end.length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end  =(end  <  0)?  0  :  end.length;  start++)  {	  for(int    start    =    0;start    <    end.length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
3	[BUG]  [BUGGY]  start  <  =  end.length;  start++)  {  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  =  end.length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  =  end.length;  start++)  {	  for(int    start    =    0;start    <    end.length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
4	[BUG]  [BUGGY]  for(int  start  =  0;start  <  this.end.length;  start++)  {  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(int  start  =  0;start  <  this.end.length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(int  start  =  0;start  <  this.end.length;  start++)  {	  for(int    start    =    0;start    <    end.length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
5	[BUG]  [BUGGY]  for(int  start  =  0;start  <  trailer.length;  start++)  {  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(int  start  =  0;start  <  trailer.length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(int  start  =  0;start  <  trailer.length;  start++)  {	  for(int    start    =    0;start    <    end.length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
6	[BUG]  [BUGGY]  start  >=  end;  start++)  {  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  >=  end;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  >=  end;  start++)  {	  for(int    start    =    0;start    >=    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
7	[BUG]  [BUGGY]  start  >>  end;  start++)  {  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  >>  end;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  >>  end;  start++)  {	  for(int    start    =    0;start    >=    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
8	[BUG]  [BUGGY]  for(int  start  =  0;start  >=  length;  start++)  {  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(int  start  =  0;start  >=  length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(int  start  =  0;start  >=  length;  start++)  {	  for(int    start    =    0;start    >=    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
9	[BUG]  [BUGGY]  for(int  start  =  0;start!=  end;  start++)  {  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(int  start  =  0;start!=  end;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(int  start  =  0;start!=  end;  start++)  {	  for(int    start    =    0;start    >=    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
10	[BUG]  [BUGGY]  bucket  ==  0)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '0'));  }  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  bucket  ==  0)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '0'));  }  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	bucket  ==  0)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '0'));  }	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    '0'));    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
11	[BUG]  [BUGGY]  aughtException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '0'));  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  aughtException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '0'));  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	aughtException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '0'));	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    '0'));    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
12	[BUG]  [BUGGY]  bucket  ==  0)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end,  '0'));  }  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  bucket  ==  0)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end,  '0'));  }  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	bucket  ==  0)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end,  '0'));  }	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    '0'));    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
13	[BUG]  [BUGGY]  cast(new  IllegalArgumentException(buffer,  offset,  length,  buffer,  start,  '0'));  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  cast(new  IllegalArgumentException(buffer,  offset,  length,  buffer,  start,  '0'));  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	cast(new  IllegalArgumentException(buffer,  offset,  length,  buffer,  start,  '0'));	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    '0'));    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
14	[BUG]  [BUGGY]  aughtException(exceptionMessage(buffer,  offset,  length,  buffer,  '0'));  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  aughtException(exceptionMessage(buffer,  offset,  length,  buffer,  '0'));  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	aughtException(exceptionMessage(buffer,  offset,  length,  buffer,  '0'));	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    '0'));    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
15	[BUG]  [BUGGY]  cast(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '0'));  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  cast(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '0'));  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	cast(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '0'));	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    '0'));    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
16	[BUG]  [BUGGY]  bucket  ==  0)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  0,  '0'));  }  [CE]  <identifier>  expected  [FE]                                          IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  bucket  ==  0)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  0,  '0'));  }  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	bucket  ==  0)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  0,  '0'));  }	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    '0'));    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
17	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end  -  start);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end  -  start);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  end  -  start);	  System.arraycopy(buffer,    offset,    buffer,    start,    length    -    start);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
18	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1);	  System.arraycopy(buffer,    offset,    buffer,    start,    length    -    start);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
19	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  length  -  start);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  length  -  start);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  offset,  buffer,  end,  length  -  start);	  System.arraycopy(buffer,    offset,    buffer,    start,    length    -    start);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
20	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  2);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  2);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  -  2);	  System.arraycopy(buffer,    offset,    buffer,    start,    length    -    start);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
21	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  end  -  start);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  end  -  start);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  end  -  start);	  System.arraycopy(buffer,    offset,    buffer,    start,    length    -    start);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
22	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1,  trailer);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1,  trailer);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1,  trailer);	  System.arraycopy(buffer,    offset,    buffer,    start,    length    -    start);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
23	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1,  trailer.length);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1,  trailer.length);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1,  trailer.length);	  System.arraycopy(buffer,    offset,    buffer,    start,    length    -    start);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
24	[BUG]  [BUGGY]  end  =(start  +  length);  start++)  {  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end  =(start  +  length);  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end  =(start  +  length);  start++)  {	  start    <    =(start    +    length);    start++)    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
25	[BUG]  [BUGGY]  start  +=  length;  start++)  {  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  +=  length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  +=  length;  start++)  {	  start    <    =(start    +    length);    start++)    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
26	[BUG]  [BUGGY]  end  +=(start  +  length);  start++)  {  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end  +=(start  +  length);  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end  +=(start  +  length);  start++)  {	  start    <    =(start    +    length);    start++)    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
27	[BUG]  [BUGGY]  result  =(start  +  length);  start++)  {  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  result  =(start  +  length);  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	result  =(start  +  length);  start++)  {	  start    <    =(start    +    length);    start++)    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
28	[BUG]  [BUGGY]  start  <  =(end  +  length);  start++)  {  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  =(end  +  length);  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  =(end  +  length);  start++)  {	  start    <    =(start    +    length);    start++)    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
29	[BUG]  [BUGGY]  start  =(start  +  length);  start++)  {  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  =(start  +  length);  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  =(start  +  length);  start++)  {	  start    <    =(start    +    length);    start++)    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
30	[BUG]  [BUGGY]  for(int  start  =  0;start  <  BYTE_MASK;  start++)  {  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(int  start  =  0;start  <  BYTE_MASK;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(int  start  =  0;start  <  BYTE_MASK;  start++)  {	  for(int    start    =    0;start    <    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
31	[BUG]  [BUGGY]  begin  =  0;  start  <  length;  start++)  {  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  begin  =  0;  start  <  length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	begin  =  0;  start  <  length;  start++)  {	  for(int    start    =    0;start    <    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
32	[BUG]  [BUGGY]  for(int  start  =  0;start  <  offset;  start++)  {  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(int  start  =  0;start  <  offset;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(int  start  =  0;start  <  offset;  start++)  {	  for(int    start    =    0;start    <    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
33	[BUG]  [BUGGY]  [Delete]  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  [Delete]  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	[Delete]	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    end));    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
34	[BUG]  [BUGGY]  aughtException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  aughtException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	aughtException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    end));    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
35	[BUG]  [BUGGY]  cast(new  IllegalArgumentException(buffer,  offset,  length,  buffer,  start,  end));  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  cast(new  IllegalArgumentException(buffer,  offset,  length,  buffer,  start,  end));  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	cast(new  IllegalArgumentException(buffer,  offset,  length,  buffer,  start,  end));	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    end));    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
36	[BUG]  [BUGGY]  cast(new  IllegalArgumentException(trailer,  offset,  length,  buffer,  start,  end));  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  cast(new  IllegalArgumentException(trailer,  offset,  length,  buffer,  start,  end));  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	cast(new  IllegalArgumentException(trailer,  offset,  length,  buffer,  start,  end));	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    end));    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
37	[BUG]  [BUGGY]  cast(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  cast(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	cast(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    end));    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
38	[BUG]  [BUGGY]  cast(new  IllegalArgumentException(trailer,  start,  length,  buffer,  start,  end));  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  cast(new  IllegalArgumentException(trailer,  start,  length,  buffer,  start,  end));  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	cast(new  IllegalArgumentException(trailer,  start,  length,  buffer,  start,  end));	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    end));    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
39	[BUG]  [BUGGY]  cast(new  IllegalArgumentException(buffer,  offset,  length,  trailer,  start,  end));  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  cast(new  IllegalArgumentException(buffer,  offset,  length,  trailer,  start,  end));  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	cast(new  IllegalArgumentException(buffer,  offset,  length,  trailer,  start,  end));	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    end));    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
40	[BUG]  [BUGGY]  for(;end  >=  0;  start++)  {  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(;end  >=  0;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(;end  >=  0;  start++)  {	  for(;start    >    0;    start++)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
41	[BUG]  [BUGGY]  for(;start  >>  0;  start++)  {  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(;start  >>  0;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(;start  >>  0;  start++)  {	  for(;start    >    0;    start++)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
42	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  end);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  end);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  end);	  System.arraycopy(buffer,    start,    buffer,    0,    end);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
43	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  length);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  length);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  length);	  System.arraycopy(buffer,    start,    buffer,    0,    end);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
44	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  end  -  1);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  end  -  1);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  start,  buffer,  0,  end  -  1);	  System.arraycopy(buffer,    start,    buffer,    0,    end);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
45	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  start);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  start);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  start);	  System.arraycopy(buffer,    start,    buffer,    0,    end);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
46	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  end  +  1);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  end  +  1);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  end  +  1);	  System.arraycopy(buffer,    offset,    buffer,    0,    end);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
47	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  end  -  1);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  end  -  1);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  end  -  1);	  System.arraycopy(buffer,    offset,    buffer,    0,    end);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
48	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  length);	  System.arraycopy(buffer,    offset,    buffer,    0,    end);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
49	[BUG]  [BUGGY]  start  <  =  1;  start++)  {  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  =  1;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  =  1;  start++)  {	  start    <    =    0;    start++)    {    	non-compiled	[CE]  <identifier>  expected	21	None	replace
50	[BUG]  [BUGGY]  start  <  =  2;  start++)  {  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  =  2;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  =  2;  start++)  {	  start    <    =    0;    start++)    {    	non-compiled	[CE]  <identifier>  expected	21	None	replace
51	[BUG]  [BUGGY]  end  <  =  0;  end++)  {  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end  <  =  0;  end++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end  <  =  0;  end++)  {	  start    <    =    0;    start++)    {    	non-compiled	[CE]  <identifier>  expected	21	None	replace
52	[BUG]  [BUGGY]  System.arraycopy(trailer,  start,  buffer,  0,  length);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(trailer,  start,  buffer,  0,  length);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(trailer,  start,  buffer,  0,  length);	  System.arraycopy(buffer,    start,    buffer,    0,    length);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
53	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  length  -  1);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  length  -  1);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  start,  buffer,  0,  length  -  1);	  System.arraycopy(buffer,    start,    buffer,    0,    length);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
54	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  length,  trailer.length);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  length,  trailer.length);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  start,  buffer,  0,  length,  trailer.length);	  System.arraycopy(buffer,    start,    buffer,    0,    length);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
55	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  length  +  1);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  length  +  1);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  start,  buffer,  0,  length  +  1);	  System.arraycopy(buffer,    start,    buffer,    0,    length);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
56	[BUG]  [BUGGY]  begin  <  end;  start++)  {  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  begin  <  end;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	begin  <  end;  start++)  {	  for(start    =    0;start    <    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
57	[BUG]  [BUGGY]  Start  <  end;  start++)  {  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  Start  <  end;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	Start  <  end;  start++)  {	  for(start    =    0;start    <    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
58	[BUG]  [BUGGY]  start  >=  length;  start++)  {  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  >=  length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  >=  length;  start++)  {	  for(;start    >=    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
59	[BUG]  [BUGGY]  for(;start  >=  end;  start++)  {  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(;start  >=  end;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(;start  >=  end;  start++)  {	  for(;start    >=    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
60	[BUG]  [BUGGY]  for(;start  >=  start;  start++)  {  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(;start  >=  start;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(;start  >=  start;  start++)  {	  for(;start    >=    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
61	[BUG]  [BUGGY]  start  >>  length;  start++)  {  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  >>  length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  >>  length;  start++)  {	  for(;start    >=    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
62	[BUG]  [BUGGY]  end  <  =  BYTE_MASK;  start++)  {  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end  <  =  BYTE_MASK;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end  <  =  BYTE_MASK;  start++)  {	  start    <    =    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
63	[BUG]  [BUGGY]  end  <  =  buffer.length;  start++)  {  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end  <  =  buffer.length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end  <  =  buffer.length;  start++)  {	  start    <    =    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
64	[BUG]  [BUGGY]  end  <  length  -  1;  start++)  {  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end  <  length  -  1;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end  <  length  -  1;  start++)  {	  end    <    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
65	[BUG]  [BUGGY]  end  <  length  +=  trailer.length;  start++)  {  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end  <  length  +=  trailer.length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end  <  length  +=  trailer.length;  start++)  {	  end    <    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
66	[BUG]  [BUGGY]  end  +=  length;  start++)  {  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end  +=  length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end  +=  length;  start++)  {	  end    <    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
67	[BUG]  [BUGGY]  end  <  length  &&  trailer.length  >  0)  {  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end  <  length  &&  trailer.length  >  0)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end  <  length  &&  trailer.length  >  0)  {	  end    <    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
68	[BUG]  [BUGGY]  start  <  =  length  -  1;  start++)  {  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  =  length  -  1;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  =  length  -  1;  start++)  {	  start    <    =    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
69	[BUG]  [BUGGY]  start  <  =  length  -  2;  start++)  {  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  =  length  -  2;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  =  length  -  2;  start++)  {	  start    <    =    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
70	[BUG]  [BUGGY]  result  =(length  <  <  3)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  result  =(length  <  <  3)+(result  -  '0');  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	result  =(length  <  <  3)+(result  -  '0');	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
71	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  -  '0'  +  1);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  result  =(result  <  <  3)+(length  -  '0'  +  1);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	result  =(result  <  <  3)+(length  -  '0'  +  1);	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
72	[BUG]  [BUGGY]  result  =(result  <  <  3)+(end  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  result  =(result  <  <  3)+(end  -  '0');  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	result  =(result  <  <  3)+(end  -  '0');	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
73	[BUG]  [BUGGY]  result  =(result  -  3)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  result  =(result  -  3)+(length  -  '0');  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	result  =(result  -  3)+(length  -  '0');	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
74	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  -  1);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  result  =(result  <  <  3)+(length  -  1);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	result  =(result  <  <  3)+(length  -  1);	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
75	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  -  '0'  +  trailer);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  result  =(result  <  <  3)+(length  -  '0'  +  trailer);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	result  =(result  <  <  3)+(length  -  '0'  +  trailer);	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
76	[BUG]  [BUGGY]  End  <  0;  start++)  {  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  End  <  0;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	End  <  0;  start++)  {	  for(;end    <    0;    start++)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
77	[BUG]  [BUGGY]  for(;end  ==  0;  start++)  {  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(;end  ==  0;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(;end  ==  0;  start++)  {	  for(;end    <    0;    start++)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
78	[BUG]  [BUGGY]  start  <  2;  start++)  {  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  2;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  2;  start++)  {	  for(int    start    =    0;start    <    2;    start++)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
79	[BUG]  [BUGGY]  for(int  start  =  0;start  <  4;  start++)  {  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(int  start  =  0;start  <  4;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(int  start  =  0;start  <  4;  start++)  {	  for(int    start    =    0;start    <    2;    start++)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
80	[BUG]  [BUGGY]  for(int  start  =  0;start  <  1;  start++)  {  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(int  start  =  0;start  <  1;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(int  start  =  0;start  <  1;  start++)  {	  for(int    start    =    0;start    <    2;    start++)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
81	[BUG]  [BUGGY]  for(int  start  =  0;start  <  3;  start++)  {  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(int  start  =  0;start  <  3;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(int  start  =  0;start  <  3;  start++)  {	  for(int    start    =    0;start    <    2;    start++)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
82	[BUG]  [BUGGY]  for(int  start  =  0;start  <  6;  start++)  {  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(int  start  =  0;start  <  6;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(int  start  =  0;start  <  6;  start++)  {	  for(int    start    =    0;start    <    2;    start++)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
83	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  0,  length);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  0,  length);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  offset,  buffer,  end,  0,  length);	  System.arraycopy(buffer,    offset,    buffer,    end,    length);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
84	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  0);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  0);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  offset,  buffer,  end,  0);	  System.arraycopy(buffer,    offset,    buffer,    end,    length);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
85	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  end,  length);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  start,  buffer,  end,  length);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  start,  buffer,  end,  length);	  System.arraycopy(buffer,    offset,    buffer,    end,    length);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
86	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  length,  trailer.length);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  length,  trailer.length);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  offset,  buffer,  end,  length,  trailer.length);	  System.arraycopy(buffer,    offset,    buffer,    end,    length);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
87	[BUG]  [BUGGY]  for(;start  <  1;  start++)  {  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(;start  <  1;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(;start  <  1;  start++)  {	  for(;start    <    =    1;    start++)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
88	[BUG]  [BUGGY]  for(;start  >=  1;  start++)  {  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(;start  >=  1;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(;start  >=  1;  start++)  {	  for(;start    <    =    1;    start++)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
89	[BUG]  [BUGGY]  start  =  1;  start++)  {  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  =  1;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  =  1;  start++)  {	  for(;start    <    =    1;    start++)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
90	[BUG]  [BUGGY]  for(;start  ==  1;  start++)  {  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(;start  ==  1;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(;start  ==  1;  start++)  {	  for(;start    <    =    1;    start++)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
91	[BUG]  [BUGGY]  atch(0L)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  atch(0L)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	atch(0L)  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
92	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	aughtExceptionHandler.throwAsIOException( " ");	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
93	[BUG]  [BUGGY]  aughtExceptionHandler.throwInternal();  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  aughtExceptionHandler.throwInternal();  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	aughtExceptionHandler.throwInternal();	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
94	[BUG]  [BUGGY]  aughtExceptionHandler.throwUnquotedException( " ");  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  aughtExceptionHandler.throwUnquotedException( " ");  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	aughtExceptionHandler.throwUnquotedException( " ");	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
95	[BUG]  [BUGGY]  aughtExceptionHandler.throwUnsupportedOperationException( " ");  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  aughtExceptionHandler.throwUnsupportedOperationException( " ");  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	aughtExceptionHandler.throwUnsupportedOperationException( " ");	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
96	[BUG]  [BUGGY]  aughtExceptionHandler.throwInvalidOctalException( " ");  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  aughtExceptionHandler.throwInvalidOctalException( " ");  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	aughtExceptionHandler.throwInvalidOctalException( " ");	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
97	[BUG]  [BUGGY]  end  <  =  trailer.length;  start++)  {  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end  <  =  trailer.length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end  <  =  trailer.length;  start++)  {	  end    <    =    start;    start++)    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
98	[BUG]  [BUGGY]  end  <  =  2;  start++)  {  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end  <  =  2;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end  <  =  2;  start++)  {	  end    <    =    start;    start++)    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
99	[BUG]  [BUGGY]  end  <  =  1;  start++)  {  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end  <  =  1;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end  <  =  1;  start++)  {	  end    <    =    start;    start++)    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
100	[BUG]  [BUGGY]  end  <  =  trailer;  start++)  {  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end  <  =  trailer;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end  <  =  trailer;  start++)  {	  end    <    =    start;    start++)    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
101	[BUG]  [BUGGY]  end  <  =  length  -  1;  start++)  {  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end  <  =  length  -  1;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end  <  =  length  -  1;  start++)  {	  end    <    =    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
102	[BUG]  [BUGGY]  end  <  =(end  <  0)?  0  :  end;  start++)  {  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end  <  =(end  <  0)?  0  :  end;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end  <  =(end  <  0)?  0  :  end;  start++)  {	  start    <    =(end    <    0)?    0    :    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
103	[BUG]  [BUGGY]  start  <  =(end  <  <  1)?  0  :  end;  start++)  {  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  =(end  <  <  1)?  0  :  end;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  =(end  <  <  1)?  0  :  end;  start++)  {	  start    <    =(end    <    0)?    0    :    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
104	[BUG]  [BUGGY]  start  <  =(end  <  <  3)?  0  :  end;  start++)  {  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  =(end  <  <  3)?  0  :  end;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  =(end  <  <  3)?  0  :  end;  start++)  {	  start    <    =(end    <    0)?    0    :    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
105	[BUG]  [BUGGY]  start  <  =(end  <  <  0)?  0  :  end;  start++)  {  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  =(end  <  <  0)?  0  :  end;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  =(end  <  <  0)?  0  :  end;  start++)  {	  start    <    =(end    <    0)?    0    :    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
106	[BUG]  [BUGGY]  start  <  =(end  <  <  6)?  0  :  end;  start++)  {  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  =(end  <  <  6)?  0  :  end;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  =(end  <  <  6)?  0  :  end;  start++)  {	  start    <    =(end    <    0)?    0    :    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
107	[BUG]  [BUGGY]  result  =(end  <  <  0)?  0  :  end;  start++)  {  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  result  =(end  <  <  0)?  0  :  end;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	result  =(end  <  <  0)?  0  :  end;  start++)  {	  start    <    =(end    <    0)?    0    :    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
108	[BUG]  [BUGGY]  final  start  <  =(end  <  0)?  0  :  end;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  final  start  <  =(end  <  0)?  0  :  end;  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	final  start  <  =(end  <  0)?  0  :  end;	  start    <    =(end    <    0)?    0    :    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
109	[BUG]  [BUGGY]  final  byte[]  buffer  =  trailer!=  null?  null  :  trailer.getByteArray();  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  final  byte[]  buffer  =  trailer!=  null?  null  :  trailer.getByteArray();  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	final  byte[]  buffer  =  trailer!=  null?  null  :  trailer.getByteArray();	  final    byte[]    buffer    =    trailer.getByteArray();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
110	[BUG]  [BUGGY]  final  byte[]  buffer  =  trailer  ==  null?  null  :  trailer.getByteArray();  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  final  byte[]  buffer  =  trailer  ==  null?  null  :  trailer.getByteArray();  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	final  byte[]  buffer  =  trailer  ==  null?  null  :  trailer.getByteArray();	  final    byte[]    buffer    =    trailer.getByteArray();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
111	[BUG]  [BUGGY]  final  byte[]  buffer  =  trailer.getByteBuffer();  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  final  byte[]  buffer  =  trailer.getByteBuffer();  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	final  byte[]  buffer  =  trailer.getByteBuffer();	  final    byte[]    buffer    =    trailer.getByteArray();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
112	[BUG]  [BUGGY]  final  byte[]  buffer  =  trailer.getByteArray(offset);  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  final  byte[]  buffer  =  trailer.getByteArray(offset);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	final  byte[]  buffer  =  trailer.getByteArray(offset);	  final    byte[]    buffer    =    trailer.getByteArray();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
113	[BUG]  [BUGGY]  final  byte[]  buffer  =  trailer.toByteArray();  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  final  byte[]  buffer  =  trailer.toByteArray();  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	final  byte[]  buffer  =  trailer.toByteArray();	  final    byte[]    buffer    =    trailer.getByteArray();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
114	[BUG]  [BUGGY]  end  <  =  7;  start++)  {  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end  <  =  7;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end  <  =  7;  start++)  {	  end    <    =    0;    start++)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
115	[BUG]  [BUGGY]  end  <  =  3;  start++)  {  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end  <  =  3;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end  <  =  3;  start++)  {	  end    <    =    0;    start++)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
116	[BUG]  [BUGGY]  End  <  =  0;  start++)  {  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  End  <  =  0;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	End  <  =  0;  start++)  {	  end    <    =    0;    start++)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
117	[BUG]  [BUGGY]  start  <  for(int  start  =  0;start  <  length;  start++)  {  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  for(int  start  =  0;start  <  length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  for(int  start  =  0;start  <  length;  start++)  {	  for(int    start    =    0;start    <    start;    start++)    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
118	[BUG]  [BUGGY]  start  <  for(int  start  =  0;start  <  end;  start++)  {  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  for(int  start  =  0;start  <  end;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  for(int  start  =  0;start  <  end;  start++)  {	  for(int    start    =    0;start    <    start;    start++)    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
119	[BUG]  [BUGGY]  start  <  =(start  <  0)?  0  :  start;  start++)  {  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  =(start  <  0)?  0  :  start;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  =(start  <  0)?  0  :  start;  start++)  {	  for(int    start    =    0;start    <    start;    start++)    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
120	[BUG]  [BUGGY]  start  <  for(int  start  =  0;start  >=  end;  start++)  {  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  for(int  start  =  0;start  >=  end;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  for(int  start  =  0;start  >=  end;  start++)  {	  for(int    start    =    0;start    <    start;    start++)    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
121	[BUG]  [BUGGY]  start  <  =  trailer;  start++)  {  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  =  trailer;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  =  trailer;  start++)  {	  for(;start    <    =    start;    start++)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
122	[BUG]  [BUGGY]  bucket  ==  null  ||  start  <  =  length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  bucket  ==  null  ||  start  <  =  length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	bucket  ==  null  ||  start  <  =  length)  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    =    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
123	[BUG]  [BUGGY]  bucket!=  null  ||  start  <  =  length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  bucket!=  null  ||  start  <  =  length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	bucket!=  null  ||  start  <  =  length)  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    =    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
124	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	throw  new  IllegalArgumentException( " ");	  if(start    <    =    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
125	[BUG]  [BUGGY]  bucket  ==  null  ||  end  <  =  length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  bucket  ==  null  ||  end  <  =  length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	bucket  ==  null  ||  end  <  =  length)  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    =    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
126	[BUG]  [BUGGY]  bucket  ==  null  ||  start  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  bucket  ==  null  ||  start  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	bucket  ==  null  ||  start  <  length)  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    =    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
127	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  Thread.currentThread().interrupt();  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	Thread.currentThread().interrupt();	  if(start    <    =    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
128	[BUG]  [BUGGY]  final  byte[]  buffer  =  exceptionMessage(buffer,  offset,  length,  trailer,  end-1);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  final  byte[]  buffer  =  exceptionMessage(buffer,  offset,  length,  trailer,  end-1);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	final  byte[]  buffer  =  exceptionMessage(buffer,  offset,  length,  trailer,  end-1);	  final    byte[]    buffer    =    exceptionMessage(buffer,    offset,    length,    end-1,    trailer);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
129	[BUG]  [BUGGY]  final  byte[]  buffer  =  exceptionMessage(buffer,  offset,  length,  0,  end-1,  trailer);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  final  byte[]  buffer  =  exceptionMessage(buffer,  offset,  length,  0,  end-1,  trailer);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	final  byte[]  buffer  =  exceptionMessage(buffer,  offset,  length,  0,  end-1,  trailer);	  final    byte[]    buffer    =    exceptionMessage(buffer,    offset,    length,    end-1,    trailer);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
130	[BUG]  [BUGGY]  final  byte[]  buffer  =  exceptionMessage(buffer,  offset,  length,  start-1,  trailer);  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  final  byte[]  buffer  =  exceptionMessage(buffer,  offset,  length,  start-1,  trailer);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	final  byte[]  buffer  =  exceptionMessage(buffer,  offset,  length,  start-1,  trailer);	  final    byte[]    buffer    =    exceptionMessage(buffer,    offset,    length,    end-1,    trailer);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
131	[BUG]  [BUGGY]  final  byte[]  buffer  =  exceptionMessage(buffer,  offset,  length,  end-1,  trailer.length);  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  final  byte[]  buffer  =  exceptionMessage(buffer,  offset,  length,  end-1,  trailer.length);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	final  byte[]  buffer  =  exceptionMessage(buffer,  offset,  length,  end-1,  trailer.length);	  final    byte[]    buffer    =    exceptionMessage(buffer,    offset,    length,    end-1,    trailer);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
132	[BUG]  [BUGGY]  final  byte[]  buffer  =  exceptionMessage(buffer,  offset,  length,  end-1,  trailer,  trailer);  [CE]  <identifier>  expected  [FE]                                          IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  final  byte[]  buffer  =  exceptionMessage(buffer,  offset,  length,  end-1,  trailer,  trailer);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	final  byte[]  buffer  =  exceptionMessage(buffer,  offset,  length,  end-1,  trailer,  trailer);	  final    byte[]    buffer    =    exceptionMessage(buffer,    offset,    length,    end-1,    trailer);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
133	[BUG]  [BUGGY]  final  byte[]  buffer  =  exceptionMessage(buffer,  offset,  length,  end-1,  trailer,  allNUL);  [CE]  <identifier>  expected  [FE]                                            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  final  byte[]  buffer  =  exceptionMessage(buffer,  offset,  length,  end-1,  trailer,  allNUL);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	final  byte[]  buffer  =  exceptionMessage(buffer,  offset,  length,  end-1,  trailer,  allNUL);	  final    byte[]    buffer    =    exceptionMessage(buffer,    offset,    length,    end-1,    trailer);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
134	[BUG]  [BUGGY]  final  byte[]  buffer  =  this.trailer.getByteArray();  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  final  byte[]  buffer  =  this.trailer.getByteArray();  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	final  byte[]  buffer  =  this.trailer.getByteArray();	  final    byte[]    buffer    =    buffer.getByteArray();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
135	[BUG]  [BUGGY]  byte[]  buffer  =  trailer.getByteArray();  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  byte[]  buffer  =  trailer.getByteArray();  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	byte[]  buffer  =  trailer.getByteArray();	  final    byte[]    buffer    =    buffer.getByteArray();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
136	[BUG]  [BUGGY]  final  byte[]  buffer  =  this.buffer.getByteArray();  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  final  byte[]  buffer  =  this.buffer.getByteArray();  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	final  byte[]  buffer  =  this.buffer.getByteArray();	  final    byte[]    buffer    =    buffer.getByteArray();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
137	[BUG]  [BUGGY]  static  final  byte[]  buffer  =  trailer.getByteArray();  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  static  final  byte[]  buffer  =  trailer.getByteArray();  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	static  final  byte[]  buffer  =  trailer.getByteArray();	  final    byte[]    buffer    =    buffer.getByteArray();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
138	[BUG]  [BUGGY]  final  byte[]  buffer  =  container.getByteArray();  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  final  byte[]  buffer  =  container.getByteArray();  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	final  byte[]  buffer  =  container.getByteArray();	  final    byte[]    buffer    =    buffer.getByteArray();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
139	[BUG]  [BUGGY]  for(int  start  =  start  +  length;  start  <  start  +  length;  start++)  {  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(int  start  =  start  +  length;  start  <  start  +  length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(int  start  =  start  +  length;  start  <  start  +  length;  start++)  {	  for(;start    <    start    +    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
140	[BUG]  [BUGGY]  for(int  start  =  0;start  <  start  +  length;  start++)  {  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(int  start  =  0;start  <  start  +  length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(int  start  =  0;start  <  start  +  length;  start++)  {	  for(;start    <    start    +    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
141	[BUG]  [BUGGY]  for(;start  <  start  +  length  -  1;  start++)  {  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(;start  <  start  +  length  -  1;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(;start  <  start  +  length  -  1;  start++)  {	  for(;start    <    start    +    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
142	[BUG]  [BUGGY]  for(;start  <  end  +  length;  start++)  {  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(;start  <  end  +  length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(;start  <  end  +  length;  start++)  {	  for(;start    <    start    +    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
143	[BUG]  [BUGGY]  for(int  start  =  start  +  length;  start  >=  start  +  length;  start++)  {  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(int  start  =  start  +  length;  start  >=  start  +  length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(int  start  =  start  +  length;  start  >=  start  +  length;  start++)  {	  for(;start    <    start    +    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
144	[BUG]  [BUGGY]  start  =  0;  start++)  {  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  =  0;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  =  0;  start++)  {	  for(;start    >=    0;    start++)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
145	[BUG]  [BUGGY]  start  >=  0;  start++)  {  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  >=  0;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  >=  0;  start++)  {	  for(;start    >=    0;    start++)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
146	[BUG]  [BUGGY]  start  <  len;  start++)  {  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  len;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  len;  start++)  {	  for(int    start    =    0;start    <    len;    start++)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
147	[BUG]  [BUGGY]  for(int  start  =  0;start  >=  len;  start++)  {  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(int  start  =  0;start  >=  len;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(int  start  =  0;start  >=  len;  start++)  {	  for(int    start    =    0;start    <    len;    start++)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
148	[BUG]  [BUGGY]  beginning  =  0;  start  <  len;  start++)  {  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  beginning  =  0;  start  <  len;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	beginning  =  0;  start  <  len;  start++)  {	  for(int    start    =    0;start    <    len;    start++)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
149	[BUG]  [BUGGY]  for(int  start  =  0;start  <  size;  start++)  {  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(int  start  =  0;start  <  size;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(int  start  =  0;start  <  size;  start++)  {	  for(int    start    =    0;start    <    len;    start++)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
150	[BUG]  [BUGGY]  end  <  <  3;  start++)  {  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end  <  <  3;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end  <  <  3;  start++)  {	  end    <    0;    start++)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
151	[BUG]  [BUGGY]  end  >=  0;  start++)  {  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end  >=  0;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end  >=  0;  start++)  {	  end    <    0;    start++)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
152	[BUG]  [BUGGY]  end  <  <  2;  start++)  {  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end  <  <  2;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end  <  <  2;  start++)  {	  end    <    0;    start++)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
153	[BUG]  [BUGGY]  end  <  1;  start++)  {  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end  <  1;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end  <  1;  start++)  {	  end    <    0;    start++)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
154	[BUG]  [BUGGY]  final  int  start  <  length;  start++)  {  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  final  int  start  <  length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	final  int  start  <  length;  start++)  {	  start    <    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
155	[BUG]  [BUGGY]  start  <  length  &&  trailer.length  >  0)  {  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  length  &&  trailer.length  >  0)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  length  &&  trailer.length  >  0)  {	  start    <    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
156	[BUG]  [BUGGY]  end  +=  trailer.length;  start++)  {  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end  +=  trailer.length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end  +=  trailer.length;  start++)  {	  end    <    start;    start++)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
157	[BUG]  [BUGGY]  start  +=  0;  start++)  {  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  +=  0;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  +=  0;  start++)  {	  start    <    0;    start++)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
158	[BUG]  [BUGGY]  result  <  <  0;  start++)  {  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  result  <  <  0;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	result  <  <  0;  start++)  {	  start    <    0;    start++)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
159	[BUG]  [BUGGY]  final  byte[]  buffer  =  trailer.getBytes(offset);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  final  byte[]  buffer  =  trailer.getBytes(offset);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	final  byte[]  buffer  =  trailer.getBytes(offset);	  final    byte[]    buffer    =    trailer.getBytes();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
160	[BUG]  [BUGGY]  final  byte[]  buffer  =  trailer.getBytes(trailer);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  final  byte[]  buffer  =  trailer.getBytes(trailer);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	final  byte[]  buffer  =  trailer.getBytes(trailer);	  final    byte[]    buffer    =    trailer.getBytes();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
161	[BUG]  [BUGGY]  final  byte[]  buffer  =  trailer!=  null?  null  :  trailer.getBytes();  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  final  byte[]  buffer  =  trailer!=  null?  null  :  trailer.getBytes();  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	final  byte[]  buffer  =  trailer!=  null?  null  :  trailer.getBytes();	  final    byte[]    buffer    =    trailer.getBytes();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
162	[BUG]  [BUGGY]  final  byte[]  buffer  =  trailer  ==  null?  null  :  trailer.getBytes();  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  final  byte[]  buffer  =  trailer  ==  null?  null  :  trailer.getBytes();  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	final  byte[]  buffer  =  trailer  ==  null?  null  :  trailer.getBytes();	  final    byte[]    buffer    =    trailer.getBytes();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
163	[BUG]  [BUGGY]  final  byte[]  buffer  =  trailer.getBytes(length);  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  final  byte[]  buffer  =  trailer.getBytes(length);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	final  byte[]  buffer  =  trailer.getBytes(length);	  final    byte[]    buffer    =    trailer.getBytes();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
164	[BUG]  [BUGGY]  final  byte[]  buffer  =  trailer.getBytes(offset,  length);  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  final  byte[]  buffer  =  trailer.getBytes(offset,  length);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	final  byte[]  buffer  =  trailer.getBytes(offset,  length);	  final    byte[]    buffer    =    trailer.getBytes();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
165	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end,  length);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end,  length);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  end,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
166	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  start);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  start);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  offset,  buffer,  end,  start);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
167	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end,  trailer.length);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end,  trailer.length);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  end,  trailer.length);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
168	[BUG]  [BUGGY]  System.arraycopy(trailer,  offset,  buffer,  start,  end);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(trailer,  offset,  buffer,  start,  end);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(trailer,  offset,  buffer,  start,  end);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
169	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length,  trailer.length);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length,  trailer.length);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length,  trailer.length);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
170	[BUG]  [BUGGY]  end  <  start;  end++)  {  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end  <  start;  end++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end  <  start;  end++)  {	  start    <    start;    start++)    {    	non-compiled	[CE]  <identifier>  expected	38	None	replace
171	[BUG]  [BUGGY]  end  +=  start;  start++)  {  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end  +=  start;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end  +=  start;  start++)  {	  start    <    start;    start++)    {    	non-compiled	[CE]  <identifier>  expected	38	None	replace
172	[BUG]  [BUGGY]  safeThan  <  =  length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  safeThan  <  =  length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	safeThan  <  =  length)  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    =    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
173	[BUG]  [BUGGY]  parent!=  null  &&  parent  ==  trailer.parent)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  parent!=  null  &&  parent  ==  trailer.parent)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	parent!=  null  &&  parent  ==  trailer.parent)  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    =    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
174	[BUG]  [BUGGY]  allowNull(start)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  allowNull(start)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	allowNull(start)  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    =    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
175	[BUG]  [BUGGY]  parent  ==  null  &&  parent  ==  trailer.parent)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  parent  ==  null  &&  parent  ==  trailer.parent)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	parent  ==  null  &&  parent  ==  trailer.parent)  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    =    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
176	[BUG]  [BUGGY]  parent!=  null  &&  parent  ==  buffer.length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  parent!=  null  &&  parent  ==  buffer.length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	parent!=  null  &&  parent  ==  buffer.length)  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    =    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
177	[BUG]  [BUGGY]  parent  ==  null  &&  parent!=  trailer.parent)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  parent  ==  null  &&  parent!=  trailer.parent)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	parent  ==  null  &&  parent!=  trailer.parent)  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    =    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
178	[BUG]  [BUGGY]  parent!=  null  &&  parent  ==  trailer.getParent())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  parent!=  null  &&  parent  ==  trailer.getParent())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	parent!=  null  &&  parent  ==  trailer.getParent())  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    =    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
179	[BUG]  [BUGGY]  for(start  =  0;start  <  end.length;  start++)  {  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(start  =  0;start  <  end.length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(start  =  0;start  <  end.length;  start++)  {	  for(int    start    =    0;start    <    end.length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
180	[BUG]  [BUGGY]  for(int  start  =  0;start  >=  end.length;  start++)  {  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(int  start  =  0;start  >=  end.length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(int  start  =  0;start  >=  end.length;  start++)  {	  for(int    start    =    0;start    <    end.length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
181	[BUG]  [BUGGY]  end.length  =  0;  start++)  {  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end.length  =  0;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end.length  =  0;  start++)  {	  for(int    start    =    0;start    <    end.length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
182	[BUG]  [BUGGY]  Start  <  end.length;  start++)  {  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  Start  <  end.length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	Start  <  end.length;  start++)  {	  for(int    start    =    0;start    <    end.length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
183	[BUG]  [BUGGY]  System.arraycopy(buffer,  end,  buffer,  0,  length);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  end,  buffer,  0,  length);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  end,  buffer,  0,  length);	  System.arraycopy(buffer,    start,    buffer,    0,    length);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
184	[BUG]  [BUGGY]  allowNonEmpty(start)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '0'));  }  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  allowNonEmpty(start)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '0'));  }  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	allowNonEmpty(start)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '0'));  }	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    '0'));    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
185	[BUG]  [BUGGY]  cast(result,  0,  0)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '0'));  }  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  cast(result,  0,  0)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '0'));  }  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	cast(result,  0,  0)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '0'));  }	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    '0'));    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
186	[BUG]  [BUGGY]  allowNonEmpty(start)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end,  '0'));  }  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  allowNonEmpty(start)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end,  '0'));  }  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	allowNonEmpty(start)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end,  '0'));  }	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    '0'));    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
187	[BUG]  [BUGGY]  start  >=  =  0;  start++)  {  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  >=  =  0;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  >=  =  0;  start++)  {	  start    <    0;    start++)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
188	[BUG]  [BUGGY]  final  byte[]  buffer  =  exceptionMessage(buffer,  offset,  length,  end-1,  trailer,  false);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  final  byte[]  buffer  =  exceptionMessage(buffer,  offset,  length,  end-1,  trailer,  false);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	final  byte[]  buffer  =  exceptionMessage(buffer,  offset,  length,  end-1,  trailer,  false);	  final    byte[]    buffer    =    exceptionMessage(buffer,    offset,    length,    end-1,    trailer);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
189	[BUG]  [BUGGY]  final  byte[]  buffer  =  exceptionMessage(buffer,  offset,  length,  end-2,  trailer);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  final  byte[]  buffer  =  exceptionMessage(buffer,  offset,  length,  end-2,  trailer);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	final  byte[]  buffer  =  exceptionMessage(buffer,  offset,  length,  end-2,  trailer);	  final    byte[]    buffer    =    exceptionMessage(buffer,    offset,    length,    end-1,    trailer);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
190	[BUG]  [BUGGY]  allowNonEmpty(start)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  allowNonEmpty(start)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	allowNonEmpty(start)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    end));    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
191	[BUG]  [BUGGY]  cast(start,  end)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  cast(start,  end)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	cast(start,  end)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  }	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    end));    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
192	[BUG]  [BUGGY]  cast(start,  end)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  0));  }  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  cast(start,  end)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  0));  }  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	cast(start,  end)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  0));  }	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    end));    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
193	[BUG]  [BUGGY]  cast(start,  end)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '0'));  }  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  cast(start,  end)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '0'));  }  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	cast(start,  end)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '0'));  }	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    end));    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
194	[BUG]  [BUGGY]  allowNonEmpty(start)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  allowNonEmpty(start)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	allowNonEmpty(start)  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    end));    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
195	[BUG]  [BUGGY]  result  =(result  -  '0')+(length  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  result  =(result  -  '0')+(length  -  '0');  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	result  =(result  -  '0')+(length  -  '0');	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
196	[BUG]  [BUGGY]  result  =(result  <  <  3)+(start  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  result  =(result  <  <  3)+(start  -  '0');  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	result  =(result  <  <  3)+(start  -  '0');	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
197	[BUG]  [BUGGY]  result  =(result  <  <  3)+(trailer  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  result  =(result  <  <  3)+(trailer  -  '0');  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	result  =(result  <  <  3)+(trailer  -  '0');	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
198	[BUG]  [BUGGY]  start  +=(length  +  start);  start++)  {  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  +=(length  +  start);  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  +=(length  +  start);  start++)  {	  start    <    =(start    +    length);    start++)    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
199	[BUG]  [BUGGY]  start  <  =(start  +  length)-  1;  start++)  {  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  =(start  +  length)-  1;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  =(start  +  length)-  1;  start++)  {	  start    <    =(start    +    length);    start++)    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
200	[BUG]  [BUGGY]  Start  <  len;  start++)  {  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  Start  <  len;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	Start  <  len;  start++)  {	  for(int    start    =    0;start    <    len;    start++)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
201	[BUG]  [BUGGY]  for(int  start  =  0;start  <  buffer.length;  start++)  {  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(int  start  =  0;start  <  buffer.length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(int  start  =  0;start  <  buffer.length;  start++)  {	  for(int    start    =    0;start    <    len;    start++)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
202	[BUG]  [BUGGY]  start  <  =  end  -  1;  start++)  {  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  =  end  -  1;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  =  end  -  1;  start++)  {	  start    <    =    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
203	[BUG]  [BUGGY]  for(start  =  0;start  <  2;  start++)  {  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(start  =  0;start  <  2;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(start  =  0;start  <  2;  start++)  {	  for(int    start    =    0;start    <    2;    start++)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
204	[BUG]  [BUGGY]  for(int  start  =  0;start  >=  2;  start++)  {  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(int  start  =  0;start  >=  2;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(int  start  =  0;start  >=  2;  start++)  {	  for(int    start    =    0;start    <    2;    start++)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
205	[BUG]  [BUGGY]  start  <  start  +  length;  start++)  {  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  start  +  length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  start  +  length;  start++)  {	  for(;start    <    start    +    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
206	[BUG]  [BUGGY]  for(start  =  start  +  length;  start  <  start  +  length;  start++)  {  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(start  =  start  +  length;  start  <  start  +  length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(start  =  start  +  length;  start  <  start  +  length;  start++)  {	  for(;start    <    start    +    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
207	[BUG]  [BUGGY]  start  +  length;  start++)  {  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  +  length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  +  length;  start++)  {	  for(;start    <    start    +    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
208	[BUG]  [BUGGY]  for(start++;start  <  start  +  length;  start++)  {  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(start++;start  <  start  +  length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(start++;start  <  start  +  length;  start++)  {	  for(;start    <    start    +    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
209	[BUG]  [BUGGY]  start  >  0;  start++)  {  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  >  0;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  >  0;  start++)  {	  for(;start    >    0;    start++)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
210	[BUG]  [BUGGY]  start  <  =  start;  start++)  {  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  =  start;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  =  start;  start++)  {	  for(;start    <    =    start;    start++)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
211	[BUG]  [BUGGY]  for(;start  <  =  start.length;  start++)  {  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(;start  <  =  start.length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(;start  <  =  start.length;  start++)  {	  for(;start    <    =    start;    start++)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
212	[BUG]  [BUGGY]  for(start  <  =  start;  start++)  {  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(start  <  =  start;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(start  <  =  start;  start++)  {	  for(;start    <    =    start;    start++)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
213	[BUG]  [BUGGY]  start  ==  0;  start++)  {  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  ==  0;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  ==  0;  start++)  {	  for(;start    ==    0;    start++)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
214	[BUG]  [BUGGY]  start  >>  0;  start++)  {  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  >>  0;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  >>  0;  start++)  {	  for(;start    >=    0;    start++)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
215	[BUG]  [BUGGY]  Start  <  start;  start++)  {  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  Start  <  start;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	Start  <  start;  start++)  {	  for(int    start    =    0;start    <    start;    start++)    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
216	[BUG]  [BUGGY]  startsWith(start);  start++)  {  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  startsWith(start);  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	startsWith(start);  start++)  {	  for(int    start    =    0;start    <    start;    start++)    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
217	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
218	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  offset,  length);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  start,  buffer,  offset,  length);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  start,  buffer,  offset,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
219	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end,  trailer);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end,  trailer);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  end,  trailer);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
220	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end  -  1);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end  -  1);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  end  -  1);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
221	[BUG]  [BUGGY]  start!=  0;  start++)  {  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start!=  0;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start!=  0;  start++)  {	  for(;start!=    0;    start++)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
222	[BUG]  [BUGGY]  safeThan  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  safeThan  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	safeThan  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
223	[BUG]  [BUGGY]  allowNonEmpty(start)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  allowNonEmpty(start)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	allowNonEmpty(start)  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
224	[BUG]  [BUGGY]  allowNonLocal(start)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  allowNonLocal(start)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	allowNonLocal(start)  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
225	[BUG]  [BUGGY]  allowNonEmpty(start))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  allowNonEmpty(start))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	allowNonEmpty(start))  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
226	[BUG]  [BUGGY]  allowNonLocalSideEffects(start)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  allowNonLocalSideEffects(start)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	allowNonLocalSideEffects(start)  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
227	[BUG]  [BUGGY]  allowNonEmptyChar(start)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  allowNonEmptyChar(start)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	allowNonEmptyChar(start)  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
228	[BUG]  [BUGGY]  for(;start  >=  offset;  start++)  {  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(;start  >=  offset;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(;start  >=  offset;  start++)  {	  for(;start    >=    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
229	[BUG]  [BUGGY]  start  <  =(end  <  0)?  0  :  buffer.length;  start++)  {  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  =(end  <  0)?  0  :  buffer.length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  =(end  <  0)?  0  :  buffer.length;  start++)  {	  start    <    =(end    <    0)?    0    :    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
230	[BUG]  [BUGGY]  start  <  =(end  <  0)?  0  :  end  +  1;  start++)  {  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  =(end  <  0)?  0  :  end  +  1;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  =(end  <  0)?  0  :  end  +  1;  start++)  {	  start    <    =(end    <    0)?    0    :    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
231	[BUG]  [BUGGY]  start  <  =(end  <  0)?  0  :  buffer[start++];  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  =(end  <  0)?  0  :  buffer[start++];  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  =(end  <  0)?  0  :  buffer[start++];	  start    <    =(end    <    0)?    0    :    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
232	[BUG]  [BUGGY]  start  <  =(end  <  0)?  0  :  end.length;  start++)  {  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  =(end  <  0)?  0  :  end.length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  =(end  <  0)?  0  :  end.length;  start++)  {	  start    <    =(end    <    0)?    0    :    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
233	[BUG]  [BUGGY]  start  <  =(end  <  0)?  1  :  end;  start++)  {  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  =(end  <  0)?  1  :  end;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  =(end  <  0)?  1  :  end;  start++)  {	  start    <    =(end    <    0)?    0    :    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
234	[BUG]  [BUGGY]  start  >=  =  length;  start++)  {  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  >=  =  length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  >=  =  length;  start++)  {	  start    <    =    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
235	[BUG]  [BUGGY]  final  byte[]  buffer  =  trailer.getByteArray(start);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  final  byte[]  buffer  =  trailer.getByteArray(start);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	final  byte[]  buffer  =  trailer.getByteArray(start);	  final    byte[]    buffer    =    trailer.getByteArray();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
236	[BUG]  [BUGGY]  start  <  length;  end++)  {  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  length;  end++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  length;  end++)  {	  start    <    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
237	[BUG]  [BUGGY]  final  byte[]  buffer  =  this.buffered.getByteArray();  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  final  byte[]  buffer  =  this.buffered.getByteArray();  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	final  byte[]  buffer  =  this.buffered.getByteArray();	  final    byte[]    buffer    =    buffer.getByteArray();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
238	[BUG]  [BUGGY]  final  byte[]  buffer  =  this.getByteArray();  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  final  byte[]  buffer  =  this.getByteArray();  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	final  byte[]  buffer  =  this.getByteArray();	  final    byte[]    buffer    =    buffer.getByteArray();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
239	[BUG]  [BUGGY]  final  byte[]  buffer  =  getByteArray();  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  final  byte[]  buffer  =  getByteArray();  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	final  byte[]  buffer  =  getByteArray();	  final    byte[]    buffer    =    buffer.getByteArray();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
240	[BUG]  [BUGGY]  Start  <  length;  start++)  {  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  Start  <  length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	Start  <  length;  start++)  {	  for(int    start    =    0;start    <    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
241	[BUG]  [BUGGY]  begin  <  length;  start++)  {  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  begin  <  length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	begin  <  length;  start++)  {	  for(int    start    =    0;start    <    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
242	[BUG]  [BUGGY]  startsWith(length);  start++)  {  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  startsWith(length);  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	startsWith(length);  start++)  {	  for(int    start    =    0;start    <    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
243	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  offset,  length  -  start);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  start,  buffer,  offset,  length  -  start);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  start,  buffer,  offset,  length  -  start);	  System.arraycopy(buffer,    offset,    buffer,    start,    length    -    start);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
244	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  start  +  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  start  +  1);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  -  start  +  1);	  System.arraycopy(buffer,    offset,    buffer,    start,    length    -    start);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
245	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  end);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  end);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  -  end);	  System.arraycopy(buffer,    offset,    buffer,    start,    length    -    start);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
246	[BUG]  [BUGGY]  final  byte[]  buffer  =  trailer.getBytes(start);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  final  byte[]  buffer  =  trailer.getBytes(start);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	final  byte[]  buffer  =  trailer.getBytes(start);	  final    byte[]    buffer    =    trailer.getBytes();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
247	[BUG]  [BUGGY]  final  byte[]  buffer  =  trailer.getBytes(end);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  final  byte[]  buffer  =  trailer.getBytes(end);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	final  byte[]  buffer  =  trailer.getBytes(end);	  final    byte[]    buffer    =    trailer.getBytes();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
248	[BUG]  [BUGGY]  end  <  start  +  length;  start++)  {  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end  <  start  +  length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end  <  start  +  length;  start++)  {	  end    <    start;    start++)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
249	[BUG]  [BUGGY]  end  <  start  +  1;  start++)  {  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end  <  start  +  1;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end  <  start  +  1;  start++)  {	  end    <    start;    start++)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
250	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  start);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  start);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  start);	  System.arraycopy(buffer,    offset,    buffer,    0,    end);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
251	[BUG]  [BUGGY]  end  >  0;  start++)  {  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end  >  0;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end  >  0;  start++)  {	  end    <    0;    start++)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
252	[BUG]  [BUGGY]  end  +=  0;  start++)  {  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end  +=  0;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end  +=  0;  start++)  {	  end    <    0;    start++)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
253	[BUG]  [BUGGY]  end  =  0;  start++)  {  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end  =  0;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end  =  0;  start++)  {	  end    <    0;    start++)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
254	[BUG]  [BUGGY]  End  <  =  length;  start++)  {  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  End  <  =  length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	End  <  =  length;  start++)  {	  end    <    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
255	[BUG]  [BUGGY]  end  >  length;  start++)  {  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end  >  length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end  >  length;  start++)  {	  end    <    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
256	[BUG]  [BUGGY]  end  >=  length;  start++)  {  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end  >=  length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end  >=  length;  start++)  {	  end    <    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
257	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  end  -  start);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  end  -  start);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  start,  buffer,  0,  end  -  start);	  System.arraycopy(buffer,    start,    buffer,    0,    end);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
258	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  end  +  1);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  end  +  1);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  start,  buffer,  0,  end  +  1);	  System.arraycopy(buffer,    start,    buffer,    0,    end);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
259	[BUG]  [BUGGY]  start!=  end;  start++)  {  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start!=  end;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start!=  end;  start++)  {	  for(int    start    =    0;start    >=    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
260	[BUG]  [BUGGY]  allowNonLocalSideEffects(length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  allowNonLocalSideEffects(length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	allowNonLocalSideEffects(length)  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    =    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
261	[BUG]  [BUGGY]  allowNonLocalSideEffects(trailer))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  allowNonLocalSideEffects(trailer))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	allowNonLocalSideEffects(trailer))  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    =    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
262	[BUG]  [BUGGY]  allowNonLocalSideEffects(length  +  1))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  allowNonLocalSideEffects(length  +  1))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	allowNonLocalSideEffects(length  +  1))  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    =    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
263	[BUG]  [BUGGY]  final  byte[]  buffer  =  TrailerUtils.getByteArray(buffer);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  final  byte[]  buffer  =  TrailerUtils.getByteArray(buffer);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	final  byte[]  buffer  =  TrailerUtils.getByteArray(buffer);	  final    byte[]    buffer    =    buffer.getByteArray();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
264	[BUG]  [BUGGY]  start  <  =(start  +  length  -  1);  start++)  {  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  =(start  +  length  -  1);  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  =(start  +  length  -  1);  start++)  {	  start    <    =(start    +    length);    start++)    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
265	[BUG]  [BUGGY]  start  <  =(start  +  length)/  2;  start++)  {  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  =(start  +  length)/  2;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  =(start  +  length)/  2;  start++)  {	  start    <    =(start    +    length);    start++)    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
266	[BUG]  [BUGGY]  start  <  =(length  +  start);  start++)  {  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  =(length  +  start);  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  =(length  +  start);  start++)  {	  start    <    =(start    +    length);    start++)    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
267	[BUG]  [BUGGY]  aughtInvalidByte(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  aughtInvalidByte(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	aughtInvalidByte(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    end));    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
268	[BUG]  [BUGGY]  aughtInvalidEOF(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  aughtInvalidEOF(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	aughtInvalidEOF(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    end));    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
269	[BUG]  [BUGGY]  aughtInvalidLog(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  aughtInvalidLog(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	aughtInvalidLog(exceptionMessage(buffer,  offset,  length,  buffer,  start,  end));	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    end));    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
270	[BUG]  [BUGGY]  for(start  <  =  length;  start++)  {  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(start  <  =  length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(start  <  =  length;  start++)  {	  for(;start    <    =    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
271	[BUG]  [BUGGY]  for(start  =  0;start  <  length;  start++)  {  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(start  =  0;start  <  length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(start  =  0;start  <  length;  start++)  {	  for(start    =    0;start    <    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
272	[BUG]  [BUGGY]  aught(Throwable.class,  exceptionMessage(buffer,  offset,  length,  start,  '0'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  aught(Throwable.class,  exceptionMessage(buffer,  offset,  length,  start,  '0'));  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	aught(Throwable.class,  exceptionMessage(buffer,  offset,  length,  start,  '0'));	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
273	[BUG]  [BUGGY]  aught(Throwable.class,  exceptionMessage(buffer,  offset,  length,  start,  0));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  aught(Throwable.class,  exceptionMessage(buffer,  offset,  length,  start,  0));  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	aught(Throwable.class,  exceptionMessage(buffer,  offset,  length,  start,  0));	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
274	[BUG]  [BUGGY]  aught(Throwable.class,  exceptionMessage(buffer,  offset,  length,  trailer,  '0'));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  aught(Throwable.class,  exceptionMessage(buffer,  offset,  length,  trailer,  '0'));  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	aught(Throwable.class,  exceptionMessage(buffer,  offset,  length,  trailer,  '0'));	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
275	[BUG]  [BUGGY]  aught(Throwable.class,  exceptionMessage(buffer,  offset,  length,  start,  '7'));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  aught(Throwable.class,  exceptionMessage(buffer,  offset,  length,  start,  '7'));  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	aught(Throwable.class,  exceptionMessage(buffer,  offset,  length,  start,  '7'));	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
276	[BUG]  [BUGGY]  aught(Throwable.class,  exceptionMessage(buffer,  offset,  length),  start,  0));  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  aught(Throwable.class,  exceptionMessage(buffer,  offset,  length),  start,  0));  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	aught(Throwable.class,  exceptionMessage(buffer,  offset,  length),  start,  0));	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
277	[BUG]  [BUGGY]  aught(Throwable.class,  exceptionMessage(buffer,  offset,  length),  start,  0);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  aught(Throwable.class,  exceptionMessage(buffer,  offset,  length),  start,  0);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	aught(Throwable.class,  exceptionMessage(buffer,  offset,  length),  start,  0);	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
278	[BUG]  [BUGGY]  end  <  =  JsonEnd.MAX_VALUE;  start++)  {  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end  <  =  JsonEnd.MAX_VALUE;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end  <  =  JsonEnd.MAX_VALUE;  start++)  {	  end    <    =    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
279	[BUG]  [BUGGY]  end  <  =  8;  start++)  {  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end  <  =  8;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end  <  =  8;  start++)  {	  end    <    =    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
280	[BUG]  [BUGGY]  for(start  <  start  +  length;  start++)  {  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(start  <  start  +  length;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(start  <  start  +  length;  start++)  {	  for(;start    <    start    +    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
281	[BUG]  [BUGGY]  for(;start  <  1)  {  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(;start  <  1)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(;start  <  1)  {	  for(;start    <    =    1;    start++)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
282	[BUG]  [BUGGY]  start  <  =  3;  start++)  {  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  =  3;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  =  3;  start++)  {	  start    <    =    0;    start++)    {    	non-compiled	[CE]  <identifier>  expected	21	None	replace
283	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  start,  length);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  start,  length);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  0,  buffer,  start,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
284	[BUG]  [BUGGY]  begin  <  start;  start++)  {  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  begin  <  start;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	begin  <  start;  start++)  {	  for(int    start    =    0;start    <    start;    start++)    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
285	[BUG]  [BUGGY]  start  <  =  JsonStringEncoder.getInstance().quoteAsIgnoredByName(trailer);  start++)  {  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  =  JsonStringEncoder.getInstance().quoteAsIgnoredByName(trailer);  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  =  JsonStringEncoder.getInstance().quoteAsIgnoredByName(trailer);  start++)  {	  start    <    start;    start++)    {    	non-compiled	[CE]  <identifier>  expected	38	None	replace
286	[BUG]  [BUGGY]  start  <  =  JsonStringEncoder.getInstance().quoteAsString(trailer);  start++)  {  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  =  JsonStringEncoder.getInstance().quoteAsString(trailer);  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  =  JsonStringEncoder.getInstance().quoteAsString(trailer);  start++)  {	  start    <    start;    start++)    {    	non-compiled	[CE]  <identifier>  expected	38	None	replace
287	[BUG]  [BUGGY]  start  <  =  JsonStringEncoder.getInstance().quoteAsIgnored( "UTF-8 ");  start++)  {  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  =  JsonStringEncoder.getInstance().quoteAsIgnored( "UTF-8 ");  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  =  JsonStringEncoder.getInstance().quoteAsIgnored( "UTF-8 ");  start++)  {	  start    <    start;    start++)    {    	non-compiled	[CE]  <identifier>  expected	38	None	replace
288	[BUG]  [BUGGY]  start  <  =  JsonStringEncoder.getInstance().quoteAsIgnored(trailer);  start++)  {  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  =  JsonStringEncoder.getInstance().quoteAsIgnored(trailer);  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  =  JsonStringEncoder.getInstance().quoteAsIgnored(trailer);  start++)  {	  start    <    start;    start++)    {    	non-compiled	[CE]  <identifier>  expected	38	None	replace
289	[BUG]  [BUGGY]  for(;end  >  0;  start++)  {  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(;end  >  0;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(;end  >  0;  start++)  {	  for(;end    <    0;    start++)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
290	[BUG]  [BUGGY]  final  byte[]  buffer  =  trailer.removeByteArray();  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  final  byte[]  buffer  =  trailer.removeByteArray();  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	final  byte[]  buffer  =  trailer.removeByteArray();	  final    byte[]    buffer    =    trailer.getByteArray();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
291	[BUG]  [BUGGY]  aughtInvalidArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '0'));  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  aughtInvalidArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '0'));  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	aughtInvalidArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '0'));	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    '0'));    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
292	[BUG]  [BUGGY]  aughtInvalidByte(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '0'));  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  aughtInvalidByte(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '0'));  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	aughtInvalidByte(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '0'));	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    '0'));    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
293	[BUG]  [BUGGY]  aughtInvalidEOF(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '0'));  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  aughtInvalidEOF(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '0'));  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	aughtInvalidEOF(exceptionMessage(buffer,  offset,  length,  buffer,  start,  '0'));	  if(start    <    =    0)    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    start,    '0'));    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
294	[BUG]  [BUGGY]  start  <  =(end  <  0)?  0  :  1;  start++)  {  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  =(end  <  0)?  0  :  1;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  =(end  <  0)?  0  :  1;  start++)  {	  start    <    =(end    <    0)?    0    :    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
295	[BUG]  [BUGGY]  start  <  =(end  >  0)?  0  :  end;  start++)  {  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  =(end  >  0)?  0  :  end;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  =(end  >  0)?  0  :  end;  start++)  {	  start    <    =(end    <    0)?    0    :    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
296	[BUG]  [BUGGY]  end  <  =  JsonEnd.MIN_VALUE;  start++)  {  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end  <  =  JsonEnd.MIN_VALUE;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end  <  =  JsonEnd.MIN_VALUE;  start++)  {	  end    <    start;    start++)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
297	[BUG]  [BUGGY]  for(int  start  =  0;start  <  =  end;  start++)  {  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(int  start  =  0;start  <  =  end;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(int  start  =  0;start  <  =  end;  start++)  {	  for(int    start    =    0;start    >=    end;    start++)    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
298	[BUG]  [BUGGY]  final  byte[]  buffer  =  exceptionMessage(buffer,  offset,  length,  trailer,  end-1,  end);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  final  byte[]  buffer  =  exceptionMessage(buffer,  offset,  length,  trailer,  end-1,  end);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	final  byte[]  buffer  =  exceptionMessage(buffer,  offset,  length,  trailer,  end-1,  end);	  final    byte[]    buffer    =    exceptionMessage(buffer,    offset,    length,    end-1,    trailer);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
299	[BUG]  [BUGGY]  final  byte[]  buffer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  trailer);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  final  byte[]  buffer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  trailer);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	final  byte[]  buffer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  trailer);	  final    byte[]    buffer    =    exceptionMessage(buffer,    offset,    length,    end-1,    trailer);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
300	[BUG]  [BUGGY]  for(start  <  =  BYTE_MASK;  start++)  {  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(start  <  =  BYTE_MASK;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(start  <  =  BYTE_MASK;  start++)  {	  for(;start    <    =    start;    start++)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
301	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  length  +  1);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  length  +  1);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  offset,  buffer,  end,  length  +  1);	  System.arraycopy(buffer,    offset,    buffer,    end,    length);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
302	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  end,  length  -  start);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  start,  buffer,  end,  length  -  start);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  start,  buffer,  end,  length  -  start);	  System.arraycopy(buffer,    offset,    buffer,    start,    length    -    start);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
303	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end  +  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end  +  1);  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  end  +  1);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
304	[BUG]  [BUGGY]  for(start  =  0;start  <  len;  start++)  {  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  for(start  =  0;start  <  len;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	for(start  =  0;start  <  len;  start++)  {	  for(int    start    =    0;start    <    len;    start++)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
305	[BUG]  [BUGGY]  start  <  =  length  +  1;  start++)  {  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  start  <  =  length  +  1;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	start  <  =  length  +  1;  start++)  {	  start    <    =    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
306	[BUG]  [BUGGY]  end  <  length  &&  trailer!=  null;  start++)  {  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end  <  length  &&  trailer!=  null;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end  <  length  &&  trailer!=  null;  start++)  {	  end    <    length;    start++)    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
307	[BUG]  [BUGGY]  end  <  =  4;  start++)  {  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }      [BUGGY]  end  <  =  4;  start++)  {  [BUGGY]      final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	100	100	1	replace	end  <  =  4;  start++)  {	  end    <    =    0;    start++)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
