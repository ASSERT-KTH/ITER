bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  /  '0';  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  /  '0';  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.start  =  System.currentTimeMillis()  /  '0';	  Pipeline.this.start    =    System.currentTimeMillis()    +    '0';    	non-compiled	[CE]  <identifier>  expected	77	None	replace
2	[BUG]  [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  +  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.start  =  System.currentTimeMillis()  +  1;	  Pipeline.this.start    =    System.currentTimeMillis()    +    '0';    	non-compiled	[CE]  <identifier>  expected	77	None	replace
3	[BUG]  [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  *  '0';  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  *  '0';  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.start  =  System.currentTimeMillis()  *  '0';	  Pipeline.this.start    =    System.currentTimeMillis()    +    '0';    	non-compiled	[CE]  <identifier>  expected	77	None	replace
4	[BUG]  [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  -  '0';  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  -  '0';  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.start  =  System.currentTimeMillis()  -  '0';	  Pipeline.this.start    =    System.currentTimeMillis()    +    '0';    	non-compiled	[CE]  <identifier>  expected	77	None	replace
5	[BUG]  [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  +  2;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  +  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.start  =  System.currentTimeMillis()  +  2;	  Pipeline.this.start    =    System.currentTimeMillis()    +    '0';    	non-compiled	[CE]  <identifier>  expected	77	None	replace
6	[BUG]  [BUGGY]  End  =  trailer.length  -  2;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length  -  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	End  =  trailer.length  -  2;	  End    =    trailer.length    -    1;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
7	[BUG]  [BUGGY]  End  =  trailer.length  -  3;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length  -  3;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	End  =  trailer.length  -  3;	  End    =    trailer.length    -    1;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
8	[BUG]  [BUGGY]  End  =  trailer.length  -  1L;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length  -  1L;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	End  =  trailer.length  -  1L;	  End    =    trailer.length    -    1;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
9	[BUG]  [BUGGY]  End  =  trailer.length  -  4;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length  -  4;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	End  =  trailer.length  -  4;	  End    =    trailer.length    -    1;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
10	[BUG]  [BUGGY]  End  =  trailer.length  -  1  +  1;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length  -  1  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	End  =  trailer.length  -  1  +  1;	  End    =    trailer.length    -    1;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
11	[BUG]  [BUGGY]  End  =  trailer.length  /  1;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length  /  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	End  =  trailer.length  /  1;	  End    =    trailer.length    -    1;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
12	[BUG]  [BUGGY]  end  =(length  -  1)+  trailer.length  +(length  -  '7'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)+  trailer.length  +(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)+  trailer.length  +(length  -  '7'));	  end    =(length    <    <    3)+    trailer.length    +(length    -    1)/(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	125	None	replace
13	[BUG]  [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  1)/(trailer  -  '7'));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  1)/(trailer  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+  trailer.length  +(length  -  1)/(trailer  -  '7'));	  end    =(length    <    <    3)+    trailer.length    +(length    -    1)/(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	125	None	replace
14	[BUG]  [BUGGY]  end  =(length  -  1  <  <  3)+  trailer.length  +(length  -  1)/(length  -  '7'));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1  <  <  3)+  trailer.length  +(length  -  1)/(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1  <  <  3)+  trailer.length  +(length  -  1)/(length  -  '7'));	  end    =(length    <    <    3)+    trailer.length    +(length    -    1)/(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	125	None	replace
15	[BUG]  [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  1)/  2  *(length  -  '7'));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  1)/  2  *(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+  trailer.length  +(length  -  1)/  2  *(length  -  '7'));	  end    =(length    <    <    3)+    trailer.length    +(length    -    1)/(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	125	None	replace
16	[BUG]  [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  1)/  BYTE_MASK));  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  1)/  BYTE_MASK));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+  trailer.length  +(length  -  1)/  BYTE_MASK));	  end    =(length    <    <    3)+    trailer.length    +(length    -    1)/(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	125	None	replace
17	[BUG]  [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  1)/(end  -  '7'));  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  1)/(end  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+  trailer.length  +(length  -  1)/(end  -  '7'));	  end    =(length    <    <    3)+    trailer.length    +(length    -    1)/(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	125	None	replace
18	[BUG]  [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  1)/(length  -  2));  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  1)/(length  -  2));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+  trailer.length  +(length  -  1)/(length  -  2));	  end    =(length    <    <    3)+    trailer.length    +(length    -    1)/(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	125	None	replace
19	[BUG]  [BUGGY]  End  =  JsonStringEncoder.getInstance().quoteAsByte(trailer);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  JsonStringEncoder.getInstance().quoteAsByte(trailer);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	End  =  JsonStringEncoder.getInstance().quoteAsByte(trailer);	  end    =    JsonStringEncoder.getInstance().quoteAsByte(trailer);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
20	[BUG]  [BUGGY]  end  =  trailer.quoteAsByte(JsonStringEncoder.getInstance());  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.quoteAsByte(JsonStringEncoder.getInstance());  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.quoteAsByte(JsonStringEncoder.getInstance());	  end    =    JsonStringEncoder.getInstance().quoteAsByte(trailer);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
21	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsByte(trailer,  length);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsByte(trailer,  length);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().quoteAsByte(trailer,  length);	  end    =    JsonStringEncoder.getInstance().quoteAsByte(trailer);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
22	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsByte(trailer)+  1;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsByte(trailer)+  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().quoteAsByte(trailer)+  1;	  end    =    JsonStringEncoder.getInstance().quoteAsByte(trailer);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
23	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsByte(trailer,  0);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsByte(trailer,  0);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().quoteAsByte(trailer,  0);	  end    =    JsonStringEncoder.getInstance().quoteAsByte(trailer);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
24	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsByte(currentByte);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsByte(currentByte);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().quoteAsByte(currentByte);	  end    =    JsonStringEncoder.getInstance().quoteAsByte(trailer);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
25	[BUG]  [BUGGY]  end  =(length  -  1)+  trailer.length  +(length  -  '0')/(length  -  '7'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)+  trailer.length  +(length  -  '0')/(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)+  trailer.length  +(length  -  '0')/(length  -  '7'));	  end    =(length    -    1)+    trailer.length    +(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	123	None	replace
26	[BUG]  [BUGGY]  end  =(length  -  1)+  trailer.length  +(length  -  '0')+(length  -  '7')+  1);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)+  trailer.length  +(length  -  '0')+(length  -  '7')+  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)+  trailer.length  +(length  -  '0')+(length  -  '7')+  1);	  end    =(length    -    1)+    trailer.length    +(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	123	None	replace
27	[BUG]  [BUGGY]  end  =(end  -  1)+  trailer.length  +(length  -  '0')+(length  -  '7'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  1)+  trailer.length  +(length  -  '0')+(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  1)+  trailer.length  +(length  -  '0')+(length  -  '7'));	  end    =(length    -    1)+    trailer.length    +(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	123	None	replace
28	[BUG]  [BUGGY]  end  =(trailer.length  -  1)+  trailer.length  +(length  -  '0')+(length  -  '7'));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer.length  -  1)+  trailer.length  +(length  -  '0')+(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer.length  -  1)+  trailer.length  +(length  -  '0')+(length  -  '7'));	  end    =(length    -    1)+    trailer.length    +(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	123	None	replace
29	[BUG]  [BUGGY]  end  =(length  -  1)+  trailer.length  +(length  -  '0')+(length  -  '7')+  2);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)+  trailer.length  +(length  -  '0')+(length  -  '7')+  2);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)+  trailer.length  +(length  -  '0')+(length  -  '7')+  2);	  end    =(length    -    1)+    trailer.length    +(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	123	None	replace
30	[BUG]  [BUGGY]  end  =(trailer.length  -  1)+  length  +(length  -  '0')+(length  -  '7'));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer.length  -  1)+  length  +(length  -  '0')+(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer.length  -  1)+  length  +(length  -  '0')+(length  -  '7'));	  end    =(length    -    1)+    trailer.length    +(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	123	None	replace
31	[BUG]  [BUGGY]  End  =  trailer.length();  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length();  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	End  =  trailer.length();	  end    =    trailer.length()    -    2;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
32	[BUG]  [BUGGY]  start  =  trailer.length();  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  trailer.length();  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	start  =  trailer.length();	  end    =    trailer.length()    -    2;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
33	[BUG]  [BUGGY]  end  =  Trailer.length();  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  Trailer.length();  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  Trailer.length();	  end    =    trailer.length()    -    2;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
34	[BUG]  [BUGGY]  end  =  container.length();  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  container.length();  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  container.length();	  end    =    trailer.length()    -    2;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
35	[BUG]  [BUGGY]  Pipeline.this.reportError( "Current  line  not  followed  by  a  ' "+trailer+ "'  or  ' "+trailer+ "'. ");  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Current  line  not  followed  by  a  ' "+trailer+ "'  or  ' "+trailer+ "'. ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Current  line  not  followed  by  a  ' "+trailer+ "'  or  ' "+trailer+ "'. ");	  Pipeline.this.reportError(   "Current    line    not    followed    by    a    '   "+trailer+   "'    or    '   "+trailer+   "'   ");    	non-compiled	[CE]  <identifier>  expected	107	None	replace
36	[BUG]  [BUGGY]  Pipeline.this.reportError( "Current  line  not  followed  by  ' "+trailer+ "'  or  ' "+trailer+ "' ");  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Current  line  not  followed  by  ' "+trailer+ "'  or  ' "+trailer+ "' ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Current  line  not  followed  by  ' "+trailer+ "'  or  ' "+trailer+ "' ");	  Pipeline.this.reportError(   "Current    line    not    followed    by    a    '   "+trailer+   "'    or    '   "+trailer+   "'   ");    	non-compiled	[CE]  <identifier>  expected	107	None	replace
37	[BUG]  [BUGGY]  Pipeline.this.reportError( "Current  line  not  followed  by  a  ' "+trailer+ "'  or  ' "+trailer+ "' ",  trailer);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Current  line  not  followed  by  a  ' "+trailer+ "'  or  ' "+trailer+ "' ",  trailer);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Current  line  not  followed  by  a  ' "+trailer+ "'  or  ' "+trailer+ "' ",  trailer);	  Pipeline.this.reportError(   "Current    line    not    followed    by    a    '   "+trailer+   "'    or    '   "+trailer+   "'   ");    	non-compiled	[CE]  <identifier>  expected	107	None	replace
38	[BUG]  [BUGGY]  Pipeline.this.reportError( "Current  line  not  followed  by  a  ' "+trailer+ "'  or  ' "+trailer+ "': "+trailer+ "' ");  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Current  line  not  followed  by  a  ' "+trailer+ "'  or  ' "+trailer+ "': "+trailer+ "' ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Current  line  not  followed  by  a  ' "+trailer+ "'  or  ' "+trailer+ "': "+trailer+ "' ");	  Pipeline.this.reportError(   "Current    line    not    followed    by    a    '   "+trailer+   "'    or    '   "+trailer+   "'   ");    	non-compiled	[CE]  <identifier>  expected	107	None	replace
39	[BUG]  [BUGGY]  Pipeline.this.reportError( "Current  line  not  followed  by  a  ' "+trailer+ "'  or  ' "+trailer+ "': "+trailer);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Current  line  not  followed  by  a  ' "+trailer+ "'  or  ' "+trailer+ "': "+trailer);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Current  line  not  followed  by  a  ' "+trailer+ "'  or  ' "+trailer+ "': "+trailer);	  Pipeline.this.reportError(   "Current    line    not    followed    by    a    '   "+trailer+   "'    or    '   "+trailer+   "'   ");    	non-compiled	[CE]  <identifier>  expected	107	None	replace
40	[BUG]  [BUGGY]  end  =(length  -  '0')/(length  -  '3');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')/(length  -  '3');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')/(length  -  '3');	  end    =(length    -    '0')+(length    -    '3');    	non-compiled	[CE]  <identifier>  expected	65	None	replace
41	[BUG]  [BUGGY]  end  =(length  -  '0')+(length  -  '7');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+(length  -  '7');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+(length  -  '7');	  end    =(length    -    '0')+(length    -    '3');    	non-compiled	[CE]  <identifier>  expected	65	None	replace
42	[BUG]  [BUGGY]  end  =(length  -  '0')+(length  -  '9');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+(length  -  '9');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+(length  -  '9');	  end    =(length    -    '0')+(length    -    '3');    	non-compiled	[CE]  <identifier>  expected	65	None	replace
43	[BUG]  [BUGGY]  end  =(length  -  '0')+(length  -  '3'  +  1);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+(length  -  '3'  +  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+(length  -  '3'  +  1);	  end    =(length    -    '0')+(length    -    '3');    	non-compiled	[CE]  <identifier>  expected	65	None	replace
44	[BUG]  [BUGGY]  end  =(length  -  '0')+(length  -  '3',  trailer);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+(length  -  '3',  trailer);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+(length  -  '3',  trailer);	  end    =(length    -    '0')+(length    -    '3');    	non-compiled	[CE]  <identifier>  expected	65	None	replace
45	[BUG]  [BUGGY]  end  =(length  -  '0')+(length  -  1);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+(length  -  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+(length  -  1);	  end    =(length    -    '0')+(length    -    '3');    	non-compiled	[CE]  <identifier>  expected	65	None	replace
46	[BUG]  [BUGGY]  end  =(length  -  '0')+  trailer.length  +(length  -  '7');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+  trailer.length  +(length  -  '7');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+  trailer.length  +(length  -  '7');	  end    =(length    -    '0')+    trailer.length    +(length    -    '3');    	non-compiled	[CE]  <identifier>  expected	35	None	replace
47	[BUG]  [BUGGY]  end  =(length  -  '0')+  trailer.length  +(end  -  '3');  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+  trailer.length  +(end  -  '3');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+  trailer.length  +(end  -  '3');	  end    =(length    -    '0')+    trailer.length    +(length    -    '3');    	non-compiled	[CE]  <identifier>  expected	35	None	replace
48	[BUG]  [BUGGY]  end  =(length  -  '0')+  trailer.length  *(length  -  '3');  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+  trailer.length  *(length  -  '3');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+  trailer.length  *(length  -  '3');	  end    =(length    -    '0')+    trailer.length    +(length    -    '3');    	non-compiled	[CE]  <identifier>  expected	35	None	replace
49	[BUG]  [BUGGY]  end  =(trailer.length  -  '0')+  length  +(length  -  '3');  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer.length  -  '0')+  length  +(length  -  '3');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer.length  -  '0')+  length  +(length  -  '3');	  end    =(length    -    '0')+    trailer.length    +(length    -    '3');    	non-compiled	[CE]  <identifier>  expected	35	None	replace
50	[BUG]  [BUGGY]  end  =(length  -  '0')+  trailer.length  +(length  -  '9');  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+  trailer.length  +(length  -  '9');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+  trailer.length  +(length  -  '9');	  end    =(length    -    '0')+    trailer.length    +(length    -    '3');    	non-compiled	[CE]  <identifier>  expected	35	None	replace
51	[BUG]  [BUGGY]  end  =(length  -  '0')+  trailer.length  +(length  -  '3')+  1;  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+  trailer.length  +(length  -  '3')+  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+  trailer.length  +(length  -  '3')+  1;	  end    =(length    -    '0')+    trailer.length    +(length    -    '3');    	non-compiled	[CE]  <identifier>  expected	35	None	replace
52	[BUG]  [BUGGY]  result  =(result  <  <  3)+(trailer  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(trailer  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  <  <  3)+(trailer  -  '0');	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	36	None	replace
53	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  <  <  3)+(currentByte  -  '0');	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	36	None	replace
54	[BUG]  [BUGGY]  result  =(length  <  <  3)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(length  <  <  3)+(result  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(length  <  <  3)+(result  -  '0');	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	36	None	replace
55	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  -  '0'  +  trailer.length);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(length  -  '0'  +  trailer.length);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  <  <  3)+(length  -  '0'  +  trailer.length);	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	36	None	replace
56	[BUG]  [BUGGY]  result  =(result  -  3)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  -  3)+(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  -  3)+(length  -  '0');	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	36	None	replace
57	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  -  '0',  trailer.length);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(length  -  '0',  trailer.length);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  <  <  3)+(length  -  '0',  trailer.length);	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	36	None	replace
58	[BUG]  [BUGGY]  end  =(length  <  <  3)+  trailer  +(length  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+  trailer  +(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+  trailer  +(length  -  '0');	  end    =(trailer    <    <    3)+    length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	32	None	replace
59	[BUG]  [BUGGY]  end  =(length  <  <  3)+  trailer  +(trailer  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+  trailer  +(trailer  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+  trailer  +(trailer  -  '0');	  end    =(trailer    <    <    3)+    length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	32	None	replace
60	[BUG]  [BUGGY]  end  =(end  <  <  3)+  length  +(length  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)+  length  +(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)+  length  +(length  -  '0');	  end    =(trailer    <    <    3)+    length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	32	None	replace
61	[BUG]  [BUGGY]  end  =(trailer  <  <  3)+  length  +(length  -  1);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  3)+  length  +(length  -  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  3)+  length  +(length  -  1);	  end    =(trailer    <    <    3)+    length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	32	None	replace
62	[BUG]  [BUGGY]  end  =(trailer  <  <  3)+  length  +(length  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  3)+  length  +(length  -  '0')+  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  3)+  length  +(length  -  '0')+  1;	  end    =(trailer    <    <    3)+    length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	32	None	replace
63	[BUG]  [BUGGY]  end  =(trailer  <  <  3)+  length  +(length  -  '0',  trailer.length);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  3)+  length  +(length  -  '0',  trailer.length);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  3)+  length  +(length  -  '0',  trailer.length);	  end    =(trailer    <    <    3)+    length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	32	None	replace
64	[BUG]  [BUGGY]  end  =(length  <  <  3)+  length  +(trailer  -  '0');  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+  length  +(trailer  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+  length  +(trailer  -  '0');	  end    =(trailer    <    <    3)+    length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	32	None	replace
65	[BUG]  [BUGGY]  end  =  trailer.length()  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  *  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.length()  *  BYTE_MASK;	  end    =    trailer.length()    /    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	89	None	replace
66	[BUG]  [BUGGY]  end  =  trailer.length()  +  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  +  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.length()  +  BYTE_MASK;	  end    =    trailer.length()    /    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	89	None	replace
67	[BUG]  [BUGGY]  end  =  trailer.length()  /  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  /  BYTE_MASK  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.length()  /  BYTE_MASK  +  1;	  end    =    trailer.length()    /    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	89	None	replace
68	[BUG]  [BUGGY]  end  =  trailer.length()  /  BYTE_SIZE;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  /  BYTE_SIZE;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.length()  /  BYTE_SIZE;	  end    =    trailer.length()    /    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	89	None	replace
69	[BUG]  [BUGGY]  end  =  trailer.encodeAsByte(JsonStringEncoder.getInstance());  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.encodeAsByte(JsonStringEncoder.getInstance());  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.encodeAsByte(JsonStringEncoder.getInstance());	  end    =    JsonStringEncoder.getInstance().encodeAsByte(trailer);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
70	[BUG]  [BUGGY]  end  =  trailer.getInstance().encodeAsByte(JsonStringEncoder.getInstance());  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.getInstance().encodeAsByte(JsonStringEncoder.getInstance());  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.getInstance().encodeAsByte(JsonStringEncoder.getInstance());	  end    =    JsonStringEncoder.getInstance().encodeAsByte(trailer);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
71	[BUG]  [BUGGY]  End  =  JsonStringEncoder.getInstance().encodeAsByte(trailer);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  JsonStringEncoder.getInstance().encodeAsByte(trailer);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	End  =  JsonStringEncoder.getInstance().encodeAsByte(trailer);	  end    =    JsonStringEncoder.getInstance().encodeAsByte(trailer);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
72	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().encodeAsByte(converter);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().encodeAsByte(converter);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().encodeAsByte(converter);	  end    =    JsonStringEncoder.getInstance().encodeAsByte(trailer);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
73	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().encodeAsByte(trailer,  trailer);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().encodeAsByte(trailer,  trailer);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().encodeAsByte(trailer,  trailer);	  end    =    JsonStringEncoder.getInstance().encodeAsByte(trailer);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
74	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().encodeAsByte(trailer,  0);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().encodeAsByte(trailer,  0);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().encodeAsByte(trailer,  0);	  end    =    JsonStringEncoder.getInstance().encodeAsByte(trailer);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
75	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().encodeAsByte(byte);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().encodeAsByte(byte);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().encodeAsByte(byte);	  end    =    JsonStringEncoder.getInstance().encodeAsByte(trailer);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
76	[BUG]  [BUGGY]  end  =(length  -  1)+  trailer.length  +(length  -  1));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)+  trailer.length  +(length  -  1));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)+  trailer.length  +(length  -  1));	  end    =(length    <    <    3)+    trailer.length    +(length    -    1));    	non-compiled	[CE]  <identifier>  expected	118	None	replace
77	[BUG]  [BUGGY]  end  =(trailer  <  <  3)+  length  +(length  -  1));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  3)+  length  +(length  -  1));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  3)+  length  +(length  -  1));	  end    =(length    <    <    3)+    trailer.length    +(length    -    1));    	non-compiled	[CE]  <identifier>  expected	118	None	replace
78	[BUG]  [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(end  -  1));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(end  -  1));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+  trailer.length  +(end  -  1));	  end    =(length    <    <    3)+    trailer.length    +(length    -    1));    	non-compiled	[CE]  <identifier>  expected	118	None	replace
79	[BUG]  [BUGGY]  end  =(end  <  <  3)+  trailer.length  +(length  -  1));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)+  trailer.length  +(length  -  1));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)+  trailer.length  +(length  -  1));	  end    =(length    <    <    3)+    trailer.length    +(length    -    1));    	non-compiled	[CE]  <identifier>  expected	118	None	replace
80	[BUG]  [BUGGY]  end  =(length  &  3)+  trailer.length  +(length  -  1));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  &  3)+  trailer.length  +(length  -  1));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  &  3)+  trailer.length  +(length  -  1));	  end    =(length    <    <    3)+    trailer.length    +(length    -    1));    	non-compiled	[CE]  <identifier>  expected	118	None	replace
81	[BUG]  [BUGGY]  end  =(length  <  <  3)+  trailer.length  *(length  -  1));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+  trailer.length  *(length  -  1));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+  trailer.length  *(length  -  1));	  end    =(length    <    <    3)+    trailer.length    +(length    -    1));    	non-compiled	[CE]  <identifier>  expected	118	None	replace
82	[BUG]  [BUGGY]  end  =  trailer.length  +  2;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  +  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.length  +  2;	  end    =    trailer.length    +    1;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
83	[BUG]  [BUGGY]  end  =  trailer.length  +  3;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  +  3;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.length  +  3;	  end    =    trailer.length    +    1;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
84	[BUG]  [BUGGY]  end  =  trailer.length  *  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  *  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.length  *  1;	  end    =    trailer.length    +    1;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
85	[BUG]  [BUGGY]  end  =(length  -  1)?  BYTE_MASK  -  1  :  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)?  BYTE_MASK  -  1  :  BYTE_MASK  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)?  BYTE_MASK  -  1  :  BYTE_MASK  +  1;	  end    =(length    <    <    1)?    BYTE_MASK    -    1    :    BYTE_MASK    +    1;    	non-compiled	[CE]  <identifier>  expected	72	None	replace
86	[BUG]  [BUGGY]  end  =(length  <  <  1)?  1  :  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  1  :  BYTE_MASK  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  1  :  BYTE_MASK  +  1;	  end    =(length    <    <    1)?    BYTE_MASK    -    1    :    BYTE_MASK    +    1;    	non-compiled	[CE]  <identifier>  expected	72	None	replace
87	[BUG]  [BUGGY]  end  =(length  <  <  1)?  0  :  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  0  :  BYTE_MASK  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  0  :  BYTE_MASK  +  1;	  end    =(length    <    <    1)?    BYTE_MASK    -    1    :    BYTE_MASK    +    1;    	non-compiled	[CE]  <identifier>  expected	72	None	replace
88	[BUG]  [BUGGY]  end  =(trailer  <  <  1)?  BYTE_MASK  -  1  :  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  1)?  BYTE_MASK  -  1  :  BYTE_MASK  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  1)?  BYTE_MASK  -  1  :  BYTE_MASK  +  1;	  end    =(length    <    <    1)?    BYTE_MASK    -    1    :    BYTE_MASK    +    1;    	non-compiled	[CE]  <identifier>  expected	72	None	replace
89	[BUG]  [BUGGY]  end  =(length  <  <  1)?  trailer  -  1  :  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  trailer  -  1  :  BYTE_MASK  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  trailer  -  1  :  BYTE_MASK  +  1;	  end    =(length    <    <    1)?    BYTE_MASK    -    1    :    BYTE_MASK    +    1;    	non-compiled	[CE]  <identifier>  expected	72	None	replace
90	[BUG]  [BUGGY]  end  =(length  +  1)?  BYTE_MASK  -  1  :  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  +  1)?  BYTE_MASK  -  1  :  BYTE_MASK  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  +  1)?  BYTE_MASK  -  1  :  BYTE_MASK  +  1;	  end    =(length    <    <    1)?    BYTE_MASK    -    1    :    BYTE_MASK    +    1;    	non-compiled	[CE]  <identifier>  expected	72	None	replace
91	[BUG]  [BUGGY]  end  =  trailer.length()  /  2  +  1;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  /  2  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.length()  /  2  +  1;	  end    =    trailer.length()    /    2;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
92	[BUG]  [BUGGY]  Thread.currentThread().interrupt(trailer);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().interrupt(trailer);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Thread.currentThread().interrupt(trailer);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
93	[BUG]  [BUGGY]  Thread.currentThread().interrupt(throwable);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().interrupt(throwable);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Thread.currentThread().interrupt(throwable);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
94	[BUG]  [BUGGY]  Thread.currentThread().interrupt(null);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().interrupt(null);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Thread.currentThread().interrupt(null);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
95	[BUG]  [BUGGY]  Thread.currentThread().interrupt(this);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().interrupt(this);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Thread.currentThread().interrupt(this);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
96	[BUG]  [BUGGY]  Thread.currentThread().interrupt(throwables);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().interrupt(throwables);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Thread.currentThread().interrupt(throwables);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
97	[BUG]  [BUGGY]  Thread.currentThread().interrupt(trailer,  end);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().interrupt(trailer,  end);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Thread.currentThread().interrupt(trailer,  end);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
98	[BUG]  [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  /  start;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  /  start;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.start  =  System.currentTimeMillis()  /  start;	  Pipeline.this.start    =    System.currentTimeMillis()    -    start;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
99	[BUG]  [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  -  trailer;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  -  trailer;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.start  =  System.currentTimeMillis()  -  trailer;	  Pipeline.this.start    =    System.currentTimeMillis()    -    start;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
100	[BUG]  [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  -  start  +  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  -  start  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.start  =  System.currentTimeMillis()  -  start  +  1;	  Pipeline.this.start    =    System.currentTimeMillis()    -    start;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
101	[BUG]  [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  -  trailer.length;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  -  trailer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.start  =  System.currentTimeMillis()  -  trailer.length;	  Pipeline.this.start    =    System.currentTimeMillis()    -    start;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
102	[BUG]  [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  -  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  -  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.start  =  System.currentTimeMillis()  -  1;	  Pipeline.this.start    =    System.currentTimeMillis()    -    start;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
103	[BUG]  [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  *  start;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  *  start;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.start  =  System.currentTimeMillis()  *  start;	  Pipeline.this.start    =    System.currentTimeMillis()    -    start;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
104	[BUG]  [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  -  end;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  -  end;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.start  =  System.currentTimeMillis()  -  end;	  Pipeline.this.start    =    System.currentTimeMillis()    -    start;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
105	[BUG]  [BUGGY]  ||  trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer);  }  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer);  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	||  trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer);  }	  ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1],    trailer);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
106	[BUG]  [BUGGY]  ||  trailer  ==  '-')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer);  }  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  '-')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer);  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	||  trailer  ==  '-')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer);  }	  ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1],    trailer);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
107	[BUG]  [BUGGY]  ||  trailer  ==  '[')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer);  }  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  '[')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer);  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	||  trailer  ==  '[')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer);  }	  ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1],    trailer);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
108	[BUG]  [BUGGY]  ||  trailer  ==  '/')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer);  }  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  '/')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer);  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	||  trailer  ==  '/')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer);  }	  ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1],    trailer);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
109	[BUG]  [BUGGY]  ||  trailer  ==  'n')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer);  }  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  'n')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer);  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	||  trailer  ==  'n')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer);  }	  ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1],    trailer);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
110	[BUG]  [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  1)+(trailer  -  '7'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  1)+(trailer  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+  trailer.length  +(length  -  1)+(trailer  -  '7'));	  end    =(length    <    <    3)+    trailer.length    +(length    -    1)+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	58	None	replace
111	[BUG]  [BUGGY]  end  =(trailer  <  <  3)+  trailer.length  +(length  -  1)+(length  -  '7'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  3)+  trailer.length  +(length  -  1)+(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  3)+  trailer.length  +(length  -  1)+(length  -  '7'));	  end    =(length    <    <    3)+    trailer.length    +(length    -    1)+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	58	None	replace
112	[BUG]  [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  1)+(end  -  '7'));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  1)+(end  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+  trailer.length  +(length  -  1)+(end  -  '7'));	  end    =(length    <    <    3)+    trailer.length    +(length    -    1)+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	58	None	replace
113	[BUG]  [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  1)+(trailer  *  '7'));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  1)+(trailer  *  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+  trailer.length  +(length  -  1)+(trailer  *  '7'));	  end    =(length    <    <    3)+    trailer.length    +(length    -    1)+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	58	None	replace
114	[BUG]  [BUGGY]  end  =(end  <  <  3)+  trailer.length  +(length  -  1)+(length  -  '7'));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)+  trailer.length  +(length  -  1)+(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)+  trailer.length  +(length  -  1)+(length  -  '7'));	  end    =(length    <    <    3)+    trailer.length    +(length    -    1)+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	58	None	replace
115	[BUG]  [BUGGY]  end  -=  1;  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  -=  1;	  end    =    1;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
116	[BUG]  [BUGGY]  end  =(length  <  <  1)?  0  :  1;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  0  :  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  0  :  1;	  end    =    1;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
117	[BUG]  [BUGGY]  end  =(length  <  <  3)?  1  :  0;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)?  1  :  0;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)?  1  :  0;	  end    =    1;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
118	[BUG]  [BUGGY]  end  =(length  <  <  2)?  1  :  0;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  2)?  1  :  0;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  2)?  1  :  0;	  end    =    1;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
119	[BUG]  [BUGGY]  end  =(length  <  <  1)?  3  :  1;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  3  :  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  3  :  1;	  end    =(length    <    <    1)?    3    :    4;    	non-compiled	[CE]  <identifier>  expected	114	None	replace
120	[BUG]  [BUGGY]  end  =(length  <  <  1)?  1  :  4;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  1  :  4;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  1  :  4;	  end    =(length    <    <    1)?    3    :    4;    	non-compiled	[CE]  <identifier>  expected	114	None	replace
121	[BUG]  [BUGGY]  end  =(length  <  <  1)?  3  :  2;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  3  :  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  3  :  2;	  end    =(length    <    <    1)?    3    :    4;    	non-compiled	[CE]  <identifier>  expected	114	None	replace
122	[BUG]  [BUGGY]  end  =(length  <  <  1)?  0  :  4;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  0  :  4;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  0  :  4;	  end    =(length    <    <    1)?    3    :    4;    	non-compiled	[CE]  <identifier>  expected	114	None	replace
123	[BUG]  [BUGGY]  end  =(length  <  <  1)?  4  :  4;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  4  :  4;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  4  :  4;	  end    =(length    <    <    1)?    3    :    4;    	non-compiled	[CE]  <identifier>  expected	114	None	replace
124	[BUG]  [BUGGY]  end  =(trailer  +  1)?  BYTE_MASK  -  1  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  +  1)?  BYTE_MASK  -  1  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  +  1)?  BYTE_MASK  -  1  :  BYTE_MASK;	  end    =(length    +    1)?    BYTE_MASK    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
125	[BUG]  [BUGGY]  end  =(end  +  1)?  BYTE_MASK  -  1  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  +  1)?  BYTE_MASK  -  1  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  +  1)?  BYTE_MASK  -  1  :  BYTE_MASK;	  end    =(length    +    1)?    BYTE_MASK    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
126	[BUG]  [BUGGY]  end  =(length  +  1)?  0  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  +  1)?  0  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  +  1)?  0  :  BYTE_MASK;	  end    =(length    +    1)?    BYTE_MASK    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
127	[BUG]  [BUGGY]  end  =(length  +  1)?  trailer  -  1  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  +  1)?  trailer  -  1  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  +  1)?  trailer  -  1  :  BYTE_MASK;	  end    =(length    +    1)?    BYTE_MASK    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
128	[BUG]  [BUGGY]  end  =(end  +  1)?  BYTE_MASK  -  1  :  BYTE_SIZE;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  +  1)?  BYTE_MASK  -  1  :  BYTE_SIZE;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  +  1)?  BYTE_MASK  -  1  :  BYTE_SIZE;	  end    =(length    +    1)?    BYTE_MASK    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
129	[BUG]  [BUGGY]  end  =(length  +  1)?  1  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  +  1)?  1  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  +  1)?  1  :  BYTE_MASK;	  end    =(length    +    1)?    BYTE_MASK    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
130	[BUG]  [BUGGY]  end  =  trailer.length  /  3;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  /  3;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.length  /  3;	  end    =    trailer.length    /    1;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
131	[BUG]  [BUGGY]  end  =  trailer.length  /  4;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  /  4;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.length  /  4;	  end    =    trailer.length    /    1;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
132	[BUG]  [BUGGY]  End  =  trailer.length  /  2;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length  /  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	End  =  trailer.length  /  2;	  end    =    trailer.length    /    1;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
133	[BUG]  [BUGGY]  end  =(trailer.length  -  '0')+  length  +(length  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer.length  -  '0')+  length  +(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer.length  -  '0')+  length  +(length  -  '0');	  end    =(length    &    3)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	97	None	replace
134	[BUG]  [BUGGY]  end  =(end  -  '0')+  trailer.length  +(length  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  '0')+  trailer.length  +(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  '0')+  trailer.length  +(length  -  '0');	  end    =(length    &    3)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	97	None	replace
135	[BUG]  [BUGGY]  end  =(length  &  3)+  trailer.length  +(trailer  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  &  3)+  trailer.length  +(trailer  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  &  3)+  trailer.length  +(trailer  -  '0');	  end    =(length    &    3)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	97	None	replace
136	[BUG]  [BUGGY]  end  =(end  &  3)+  trailer.length  +(length  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  &  3)+  trailer.length  +(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  &  3)+  trailer.length  +(length  -  '0');	  end    =(length    &    3)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	97	None	replace
137	[BUG]  [BUGGY]  end  =(trailer.length  &  3)+  length  +(length  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer.length  &  3)+  length  +(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer.length  &  3)+  length  +(length  -  '0');	  end    =(length    &    3)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	97	None	replace
138	[BUG]  [BUGGY]  End  =  JsonStringEncoder.getInstance().quoteAsIgnored(trailer);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  JsonStringEncoder.getInstance().quoteAsIgnored(trailer);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	End  =  JsonStringEncoder.getInstance().quoteAsIgnored(trailer);	  end    =    JsonStringEncoder.getInstance().quoteAsIgnored(trailer);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
139	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsIgnored(trailer,  trailer);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsIgnored(trailer,  trailer);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().quoteAsIgnored(trailer,  trailer);	  end    =    JsonStringEncoder.getInstance().quoteAsIgnored(trailer);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
140	[BUG]  [BUGGY]  end  =  trailer.quoteAsIgnored(JsonStringEncoder.getInstance());  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.quoteAsIgnored(JsonStringEncoder.getInstance());  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.quoteAsIgnored(JsonStringEncoder.getInstance());	  end    =    JsonStringEncoder.getInstance().quoteAsIgnored(trailer);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
141	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsIgnored(trailer,  length);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsIgnored(trailer,  length);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().quoteAsIgnored(trailer,  length);	  end    =    JsonStringEncoder.getInstance().quoteAsIgnored(trailer);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
142	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsIgnored(trailer,  0);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsIgnored(trailer,  0);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().quoteAsIgnored(trailer,  0);	  end    =    JsonStringEncoder.getInstance().quoteAsIgnored(trailer);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
143	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAssign(trailer);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAssign(trailer);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().quoteAssign(trailer);	  end    =    JsonStringEncoder.getInstance().quoteAsIgnored(trailer);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
144	[BUG]  [BUGGY]  end  =(length  -  '0')+(length  -  '7')+  1);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+(length  -  '7')+  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+(length  -  '7')+  1);	  end    =(length    <    <    3)+    trailer.length    +(length    -    '0')+(length    -    '7')+    1);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
145	[BUG]  [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  '0')/(length  -  '7')+  1);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  '0')/(length  -  '7')+  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+  trailer.length  +(length  -  '0')/(length  -  '7')+  1);	  end    =(length    <    <    3)+    trailer.length    +(length    -    '0')+(length    -    '7')+    1);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
146	[BUG]  [BUGGY]  end  =(trailer  <  <  3)+  trailer.length  +(length  -  '0')+(length  -  '7')+  1);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  3)+  trailer.length  +(length  -  '0')+(length  -  '7')+  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  3)+  trailer.length  +(length  -  '0')+(length  -  '7')+  1);	  end    =(length    <    <    3)+    trailer.length    +(length    -    '0')+(length    -    '7')+    1);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
147	[BUG]  [BUGGY]  end  =(end  <  <  3)+  trailer.length  +(length  -  '0')+(length  -  '7')+  1);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)+  trailer.length  +(length  -  '0')+(length  -  '7')+  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)+  trailer.length  +(length  -  '0')+(length  -  '7')+  1);	  end    =(length    <    <    3)+    trailer.length    +(length    -    '0')+(length    -    '7')+    1);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
148	[BUG]  [BUGGY]  end  =(length  +  3)+  trailer.length  +(length  -  '0')+(length  -  '7')+  1);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  +  3)+  trailer.length  +(length  -  '0')+(length  -  '7')+  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  +  3)+  trailer.length  +(length  -  '0')+(length  -  '7')+  1);	  end    =(length    <    <    3)+    trailer.length    +(length    -    '0')+(length    -    '7')+    1);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
149	[BUG]  [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  '0')+(length  -  '7')/  2);  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  '0')+(length  -  '7')/  2);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+  trailer.length  +(length  -  '0')+(length  -  '7')/  2);	  end    =(length    <    <    3)+    trailer.length    +(length    -    '0')+(length    -    '7')+    1);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
150	[BUG]  [BUGGY]  ||  trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer));  }  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer));  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	||  trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer));  }	  ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1],    trailer));    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
151	[BUG]  [BUGGY]  ||  trailer  ==  '-')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer));  }  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  '-')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer));  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	||  trailer  ==  '-')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer));  }	  ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1],    trailer));    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
152	[BUG]  [BUGGY]  ||  trailer  ==  '[')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer));  }  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  '[')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer));  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	||  trailer  ==  '[')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer));  }	  ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1],    trailer));    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
153	[BUG]  [BUGGY]  ||  trailer  ==  '/')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer));  }  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  '/')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer));  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	||  trailer  ==  '/')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer));  }	  ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1],    trailer));    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
154	[BUG]  [BUGGY]  ||  trailer  ==  'n')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer));  }  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  'n')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer));  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	||  trailer  ==  'n')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer));  }	  ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1],    trailer));    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
155	[BUG]  [BUGGY]  end  =(end  <  <  3)+  trailer.length  +(trailer  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)+  trailer.length  +(trailer  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)+  trailer.length  +(trailer  -  '0');	  end    =(end    <    <    3)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	33	None	replace
156	[BUG]  [BUGGY]  end  =(end  <  <  3)+  trailer.length  +(length  -  1);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)+  trailer.length  +(length  -  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)+  trailer.length  +(length  -  1);	  end    =(end    <    <    3)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	33	None	replace
157	[BUG]  [BUGGY]  end  =(end  <  <  3)+  trailer.length  +(length  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)+  trailer.length  +(length  -  '0')+  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)+  trailer.length  +(length  -  '0')+  1;	  end    =(end    <    <    3)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	33	None	replace
158	[BUG]  [BUGGY]  end  =(end  <  <  3)+  trailer.length  *(length  -  '0');  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)+  trailer.length  *(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)+  trailer.length  *(length  -  '0');	  end    =(end    <    <    3)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	33	None	replace
159	[BUG]  [BUGGY]  end  =  trailer.length()  /  1;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  /  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.length()  /  1;	  end    =    trailer.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
160	[BUG]  [BUGGY]  end  =(trailer  <  <  3)+  trailer.length;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  3)+  trailer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  3)+  trailer.length;	  end    =(trailer    <    <    3)+    length;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
161	[BUG]  [BUGGY]  end  =(trailer  <  <  3)+  1;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  3)+  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  3)+  1;	  end    =(trailer    <    <    3)+    length;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
162	[BUG]  [BUGGY]  end  =(trailer  <  <  3)+  length  +  1;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  3)+  length  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  3)+  length  +  1;	  end    =(trailer    <    <    3)+    length;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
163	[BUG]  [BUGGY]  end  =(length  <  <  3)+  trailer;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+  trailer;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+  trailer;	  end    =(trailer    <    <    3)+    length;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
164	[BUG]  [BUGGY]  end  =(trailer  <  <  3)+  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  3)+  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  3)+  BYTE_MASK;	  end    =(trailer    <    <    3)+    length;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
165	[BUG]  [BUGGY]  end  =(trailer  <  <  3)+  2;  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  3)+  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  3)+  2;	  end    =(trailer    <    <    3)+    length;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
166	[BUG]  [BUGGY]  end  =(length  -  '0')/(length  -  '9');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')/(length  -  '9');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')/(length  -  '9');	  end    =(length    -    '0')/(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	68	None	replace
167	[BUG]  [BUGGY]  end  =(length  -  '0')/(trailer  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')/(trailer  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')/(trailer  -  '0');	  end    =(length    -    '0')/(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	68	None	replace
168	[BUG]  [BUGGY]  end  =(length  -  '0')/(length  -  '7');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')/(length  -  '7');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')/(length  -  '7');	  end    =(length    -    '0')/(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	68	None	replace
169	[BUG]  [BUGGY]  end  =(length  -  '0')/(length  -  1);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')/(length  -  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')/(length  -  1);	  end    =(length    -    '0')/(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	68	None	replace
170	[BUG]  [BUGGY]  end  =(length  -  '0')/(length  -  '8');  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')/(length  -  '8');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')/(length  -  '8');	  end    =(length    -    '0')/(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	68	None	replace
171	[BUG]  [BUGGY]  end  =(length  -  '0')/(length  -  '5');  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')/(length  -  '5');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')/(length  -  '5');	  end    =(length    -    '0')/(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	68	None	replace
172	[BUG]  [BUGGY]  end  =(length  -  '0')/(end  -  '9');  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')/(end  -  '9');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')/(end  -  '9');	  end    =(length    -    '0')/(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	68	None	replace
173	[BUG]  [BUGGY]  end  =(end  <  <  1)?  1  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  1)?  1  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  1)?  1  :  BYTE_MASK;	  end    =(end    <    <    1)?    BYTE_MASK    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
174	[BUG]  [BUGGY]  end  =(end  <  <  1)?  0  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  1)?  0  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  1)?  0  :  BYTE_MASK;	  end    =(end    <    <    1)?    BYTE_MASK    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
175	[BUG]  [BUGGY]  end  =(end  <  <  3)?  BYTE_MASK  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)?  BYTE_MASK  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)?  BYTE_MASK  :  BYTE_MASK;	  end    =(end    <    <    1)?    BYTE_MASK    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
176	[BUG]  [BUGGY]  end  =(end  <  <  1)?  BYTE_MASK  :  1;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  1)?  BYTE_MASK  :  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  1)?  BYTE_MASK  :  1;	  end    =(end    <    <    1)?    BYTE_MASK    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
177	[BUG]  [BUGGY]  end  =(end  <  <  1)?  BYTE_MASK  :  4;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  1)?  BYTE_MASK  :  4;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  1)?  BYTE_MASK  :  4;	  end    =(end    <    <    1)?    BYTE_MASK    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
178	[BUG]  [BUGGY]  end  =(end  <  <  1)?  BYTE_MASK  :  2;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  1)?  BYTE_MASK  :  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  1)?  BYTE_MASK  :  2;	  end    =(end    <    <    1)?    BYTE_MASK    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
179	[BUG]  [BUGGY]  end  =(trailer  <  <  3)+(length  -  1);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  3)+(length  -  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  3)+(length  -  1);	  end    =(trailer    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	81	None	replace
180	[BUG]  [BUGGY]  end  =(trailer  <  <  3)+(length  -  '0'  +  1);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  3)+(length  -  '0'  +  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  3)+(length  -  '0'  +  1);	  end    =(trailer    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	81	None	replace
181	[BUG]  [BUGGY]  end  =(trailer  <  <  3)+(length  -  '0',  trailer.length);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  3)+(length  -  '0',  trailer.length);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  3)+(length  -  '0',  trailer.length);	  end    =(trailer    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	81	None	replace
182	[BUG]  [BUGGY]  end  =(trailer  <  <  3)+(length  -  '0'  +  trailer.length);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  3)+(length  -  '0'  +  trailer.length);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  3)+(length  -  '0'  +  trailer.length);	  end    =(trailer    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	81	None	replace
183	[BUG]  [BUGGY]  end  =(length  -  1)?  trailer  -  1  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)?  trailer  -  1  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)?  trailer  -  1  :  BYTE_MASK;	  end    =(length    <    <    1)?    trailer    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
184	[BUG]  [BUGGY]  end  =(trailer  <  <  1)?  trailer  -  1  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  1)?  trailer  -  1  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  1)?  trailer  -  1  :  BYTE_MASK;	  end    =(length    <    <    1)?    trailer    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
185	[BUG]  [BUGGY]  end  =(trailer  <  <  1)?  length  -  1  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  1)?  length  -  1  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  1)?  length  -  1  :  BYTE_MASK;	  end    =(length    <    <    1)?    trailer    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
186	[BUG]  [BUGGY]  end  =(length  <  <  1)?  trailer.length  -  1  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  trailer.length  -  1  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  trailer.length  -  1  :  BYTE_MASK;	  end    =(length    <    <    1)?    trailer    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
187	[BUG]  [BUGGY]  end  =(length  <  <  1)?  trailer  -  1  :  BYTE_SIZE;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  trailer  -  1  :  BYTE_SIZE;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  trailer  -  1  :  BYTE_SIZE;	  end    =(length    <    <    1)?    trailer    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
188	[BUG]  [BUGGY]  ||  trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	||  trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
189	[BUG]  [BUGGY]  ||  trailer  ==  '-')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  '-')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	||  trailer  ==  '-')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
190	[BUG]  [BUGGY]  ||  trailer  ==  '/')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  '/')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	||  trailer  ==  '/')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
191	[BUG]  [BUGGY]  ||  trailer  ==  '[')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  '[')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	||  trailer  ==  '[')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
192	[BUG]  [BUGGY]  ||  trailer  ==  ':')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  ':')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	||  trailer  ==  ':')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
193	[BUG]  [BUGGY]  end  =(length  -  '0')+  trailer.length  +(length  -  '7')+  1);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+  trailer.length  +(length  -  '7')+  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+  trailer.length  +(length  -  '7')+  1);	  end    =(length    -    '0')+    trailer.length    +(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
194	[BUG]  [BUGGY]  end  =(length  -  '0')+  trailer.length  *(length  -  '7'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+  trailer.length  *(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+  trailer.length  *(length  -  '7'));	  end    =(length    -    '0')+    trailer.length    +(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
195	[BUG]  [BUGGY]  end  =(trailer.length  -  '0')+  trailer.length  +(length  -  '7'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer.length  -  '0')+  trailer.length  +(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer.length  -  '0')+  trailer.length  +(length  -  '7'));	  end    =(length    -    '0')+    trailer.length    +(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
196	[BUG]  [BUGGY]  end  =(length  -  '0')+  trailer.length  +(end  -  '7'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+  trailer.length  +(end  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+  trailer.length  +(end  -  '7'));	  end    =(length    -    '0')+    trailer.length    +(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
197	[BUG]  [BUGGY]  end  =(length  -  '0')+  trailer.length  +(length  -  '7')+  2);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+  trailer.length  +(length  -  '7')+  2);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+  trailer.length  +(length  -  '7')+  2);	  end    =(length    -    '0')+    trailer.length    +(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
198	[BUG]  [BUGGY]  end  =(trailer  ==  '0'  ||  trailer  ==  '7')?  -1  :  1;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  ==  '0'  ||  trailer  ==  '7')?  -1  :  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  ==  '0'  ||  trailer  ==  '7')?  -1  :  1;	  end    =    -1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
199	[BUG]  [BUGGY]  end  =(trailer  ==  '-'  ||  trailer  ==  '+')?  -1  :  1;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  ==  '-'  ||  trailer  ==  '+')?  -1  :  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  ==  '-'  ||  trailer  ==  '+')?  -1  :  1;	  end    =    -1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
200	[BUG]  [BUGGY]  end  =(trailer  ==  '0'  ||  trailer  ==  '7')?  -1  :  -1;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  ==  '0'  ||  trailer  ==  '7')?  -1  :  -1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  ==  '0'  ||  trailer  ==  '7')?  -1  :  -1;	  end    =    -1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
201	[BUG]  [BUGGY]  end  =(trailer  ==  '0'  ||  trailer  ==  '7')?  1  :  -1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  ==  '0'  ||  trailer  ==  '7')?  1  :  -1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  ==  '0'  ||  trailer  ==  '7')?  1  :  -1;	  end    =    -1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
202	[BUG]  [BUGGY]  end  =(trailer  ==  '['  ||  trailer  ==  ']')?  -1  :  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  ==  '['  ||  trailer  ==  ']')?  -1  :  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  ==  '['  ||  trailer  ==  ']')?  -1  :  1;	  end    =    -1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
203	[BUG]  [BUGGY]  end  =(trailer  <  <  1)?  BYTE_MASK  -  1  :  BYTE_SIZE;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  1)?  BYTE_MASK  -  1  :  BYTE_SIZE;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  1)?  BYTE_MASK  -  1  :  BYTE_SIZE;	  end    =(trailer    <    <    1)?    BYTE_MASK    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
204	[BUG]  [BUGGY]  end  =(trailer  <  <  1)?  BYTE_MASK  -  1  :  BYTE_SHIFT;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  1)?  BYTE_MASK  -  1  :  BYTE_SHIFT;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  1)?  BYTE_MASK  -  1  :  BYTE_SHIFT;	  end    =(trailer    <    <    1)?    BYTE_MASK    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
205	[BUG]  [BUGGY]  end  =(trailer  <  <  1)?  0  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  1)?  0  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  1)?  0  :  BYTE_MASK;	  end    =(trailer    <    <    1)?    BYTE_MASK    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
206	[BUG]  [BUGGY]  end  =(trailer  <  <  1)?  BYTE_MASK  -  1  :  BYTE_MILLIS;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  1)?  BYTE_MASK  -  1  :  BYTE_MILLIS;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  1)?  BYTE_MASK  -  1  :  BYTE_MILLIS;	  end    =(trailer    <    <    1)?    BYTE_MASK    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
207	[BUG]  [BUGGY]  end  =(trailer  <  <  1)?  BYTE_MASK  -  2  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  1)?  BYTE_MASK  -  2  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  1)?  BYTE_MASK  -  2  :  BYTE_MASK;	  end    =(trailer    <    <    1)?    BYTE_MASK    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
208	[BUG]  [BUGGY]  end  =(trailer  -  1)?  BYTE_MASK  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  -  1)?  BYTE_MASK  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  -  1)?  BYTE_MASK  :  BYTE_MASK;	  end    =(length    -    1)?    BYTE_MASK    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
209	[BUG]  [BUGGY]  end  =(length  -  1)?  1  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)?  1  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)?  1  :  BYTE_MASK;	  end    =(length    -    1)?    BYTE_MASK    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
210	[BUG]  [BUGGY]  end  =(length  -  1)?  0  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)?  0  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)?  0  :  BYTE_MASK;	  end    =(length    -    1)?    BYTE_MASK    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
211	[BUG]  [BUGGY]  end  =(length  -  1)?  BYTE_MASK  :  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)?  BYTE_MASK  :  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)?  BYTE_MASK  :  1;	  end    =(length    -    1)?    BYTE_MASK    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
212	[BUG]  [BUGGY]  end  =(length  -  1)?  BYTE_MASK  :  0;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)?  BYTE_MASK  :  0;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)?  BYTE_MASK  :  0;	  end    =(length    -    1)?    BYTE_MASK    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
213	[BUG]  [BUGGY]  end  =(length  -  1)?  BYTE_MASK  :  2;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)?  BYTE_MASK  :  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)?  BYTE_MASK  :  2;	  end    =(length    -    1)?    BYTE_MASK    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
214	[BUG]  [BUGGY]  end  =(length  -  1)?  trailer  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)?  trailer  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)?  trailer  :  BYTE_MASK;	  end    =(length    -    1)?    BYTE_MASK    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
215	[BUG]  [BUGGY]  end  =(end  -  '0')+(length  -  '9');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  '0')+(length  -  '9');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  '0')+(length  -  '9');	  end    =(length    -    '0')+(end    -    '0');    	non-compiled	[CE]  <identifier>  expected	80	None	replace
216	[BUG]  [BUGGY]  end  =(end  -  '0')+(length  -  '7');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  '0')+(length  -  '7');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  '0')+(length  -  '7');	  end    =(length    -    '0')+(end    -    '0');    	non-compiled	[CE]  <identifier>  expected	80	None	replace
217	[BUG]  [BUGGY]  end  =(end  -  '0')+(trailer  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  '0')+(trailer  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  '0')+(trailer  -  '0');	  end    =(length    -    '0')+(end    -    '0');    	non-compiled	[CE]  <identifier>  expected	80	None	replace
218	[BUG]  [BUGGY]  end  =(end  -  '0')+(length  -  '8');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  '0')+(length  -  '8');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  '0')+(length  -  '8');	  end    =(length    -    '0')+(end    -    '0');    	non-compiled	[CE]  <identifier>  expected	80	None	replace
219	[BUG]  [BUGGY]  end  =(end  -  '0')/(length  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  '0')/(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  '0')/(length  -  '0');	  end    =(length    -    '0')+(end    -    '0');    	non-compiled	[CE]  <identifier>  expected	80	None	replace
220	[BUG]  [BUGGY]  end  =(end  -  '0')+(length  -  '5');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  '0')+(length  -  '5');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  '0')+(length  -  '5');	  end    =(length    -    '0')+(end    -    '0');    	non-compiled	[CE]  <identifier>  expected	80	None	replace
221	[BUG]  [BUGGY]  end  =(length  -  '0')/(end  -  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')/(end  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')/(end  -  '0');	  end    =(length    -    '0')+(end    -    '0');    	non-compiled	[CE]  <identifier>  expected	80	None	replace
222	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsCII(trailer)+  1);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsCII(trailer)+  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().quoteAsCII(trailer)+  1);	  end    =    JsonStringEncoder.getInstance().quoteAsCII(trailer));    	non-compiled	[CE]  <identifier>  expected	91	None	replace
223	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsCII(trailer,  length));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsCII(trailer,  length));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().quoteAsCII(trailer,  length));	  end    =    JsonStringEncoder.getInstance().quoteAsCII(trailer));    	non-compiled	[CE]  <identifier>  expected	91	None	replace
224	[BUG]  [BUGGY]  end  =  trailer.quoteAsCII(JsonStringEncoder.getInstance());  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.quoteAsCII(JsonStringEncoder.getInstance());  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.quoteAsCII(JsonStringEncoder.getInstance());	  end    =    JsonStringEncoder.getInstance().quoteAsCII(trailer));    	non-compiled	[CE]  <identifier>  expected	91	None	replace
225	[BUG]  [BUGGY]  End  =  JsonStringEncoder.getInstance().quoteAsCII(trailer));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  JsonStringEncoder.getInstance().quoteAsCII(trailer));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	End  =  JsonStringEncoder.getInstance().quoteAsCII(trailer));	  end    =    JsonStringEncoder.getInstance().quoteAsCII(trailer));    	non-compiled	[CE]  <identifier>  expected	91	None	replace
226	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsCII(trailer,  0));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsCII(trailer,  0));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().quoteAsCII(trailer,  0));	  end    =    JsonStringEncoder.getInstance().quoteAsCII(trailer));    	non-compiled	[CE]  <identifier>  expected	91	None	replace
227	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsCII(currentByte));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsCII(currentByte));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().quoteAsCII(currentByte));	  end    =    JsonStringEncoder.getInstance().quoteAsCII(trailer));    	non-compiled	[CE]  <identifier>  expected	91	None	replace
228	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().generateJsonString(trailer,  trailer);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().generateJsonString(trailer,  trailer);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().generateJsonString(trailer,  trailer);	  end    =    JsonStringEncoder.getInstance().generateJsonString(trailer);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
229	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().generateJsonString(buffer);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().generateJsonString(buffer);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().generateJsonString(buffer);	  end    =    JsonStringEncoder.getInstance().generateJsonString(trailer);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
230	[BUG]  [BUGGY]  end  =  trailer.generateJsonString(JsonStringEncoder.getInstance());  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.generateJsonString(JsonStringEncoder.getInstance());  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.generateJsonString(JsonStringEncoder.getInstance());	  end    =    JsonStringEncoder.getInstance().generateJsonString(trailer);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
231	[BUG]  [BUGGY]  End  =  JsonStringEncoder.getInstance().generateJsonString(trailer);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  JsonStringEncoder.getInstance().generateJsonString(trailer);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	End  =  JsonStringEncoder.getInstance().generateJsonString(trailer);	  end    =    JsonStringEncoder.getInstance().generateJsonString(trailer);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
232	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().generateJsonString(buffer,  start);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().generateJsonString(buffer,  start);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().generateJsonString(buffer,  start);	  end    =    JsonStringEncoder.getInstance().generateJsonString(trailer);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
233	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().generateJsonString(buffer,  0,  length);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().generateJsonString(buffer,  0,  length);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().generateJsonString(buffer,  0,  length);	  end    =    JsonStringEncoder.getInstance().generateJsonString(trailer);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
234	[BUG]  [BUGGY]  end  =(trailer.length  &  3)+  length;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer.length  &  3)+  length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer.length  &  3)+  length;	  end    =(length    &    3)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
235	[BUG]  [BUGGY]  end  =(length  &  2)+  trailer.length;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  &  2)+  trailer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  &  2)+  trailer.length;	  end    =(length    &    3)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
236	[BUG]  [BUGGY]  end  =(length  &  1)+  trailer.length;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  &  1)+  trailer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  &  1)+  trailer.length;	  end    =(length    &    3)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
237	[BUG]  [BUGGY]  end  =(end  &  3)+  trailer.length;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  &  3)+  trailer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  &  3)+  trailer.length;	  end    =(length    &    3)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
238	[BUG]  [BUGGY]  End  =  0;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  0;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	End  =  0;	  end    =    0L;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
239	[BUG]  [BUGGY]  end  -=  0L;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  0L;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  -=  0L;	  end    =    0L;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
240	[BUG]  [BUGGY]  end  =  0,  end  =  0;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  0,  end  =  0;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  0,  end  =  0;	  end    =    0L;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
241	[BUG]  [BUGGY]  End  =  0L;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  0L;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	End  =  0L;	  end    =    0L;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
242	[BUG]  [BUGGY]  end  =  trailer.length()  *  2  +  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  *  2  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.length()  *  2  +  1;	  end    =    trailer.length()    *    2;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
243	[BUG]  [BUGGY]  end  =  trailer.length()  *  4;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  *  4;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.length()  *  4;	  end    =    trailer.length()    *    2;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
244	[BUG]  [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  '0')+(end  -  '7'));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  '0')+(end  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+  trailer.length  +(length  -  '0')+(end  -  '7'));	  end    =(end    <    <    3)+    trailer.length    +(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	60	None	replace
245	[BUG]  [BUGGY]  end  =(end  <  <  3)+  trailer.length  +(length  -  '0')+(length  -  '7')+  2);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)+  trailer.length  +(length  -  '0')+(length  -  '7')+  2);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)+  trailer.length  +(length  -  '0')+(length  -  '7')+  2);	  end    =(end    <    <    3)+    trailer.length    +(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	60	None	replace
246	[BUG]  [BUGGY]  end  =(end  <  <  3)+  trailer.length  +(length  -  2)+(length  -  '7'));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)+  trailer.length  +(length  -  2)+(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)+  trailer.length  +(length  -  2)+(length  -  '7'));	  end    =(end    <    <    3)+    trailer.length    +(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	60	None	replace
247	[BUG]  [BUGGY]  end  -=  trailer.length()  +  1;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length()  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  -=  trailer.length()  +  1;	  end    -=    trailer.length();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
248	[BUG]  [BUGGY]  end  -=  trailer.length()  *  2;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length()  *  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  -=  trailer.length()  *  2;	  end    -=    trailer.length();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
249	[BUG]  [BUGGY]  end  -=  trailer.length()  -  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length()  -  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  -=  trailer.length()  -  1;	  end    -=    trailer.length();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
250	[BUG]  [BUGGY]  end  -=  trailer.length()  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length()  *  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  -=  trailer.length()  *  BYTE_MASK;	  end    -=    trailer.length();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
251	[BUG]  [BUGGY]  end  -=  trailer.length()  +  2;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length()  +  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  -=  trailer.length()  +  2;	  end    -=    trailer.length();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
252	[BUG]  [BUGGY]  end  -=  trailer.length()  *  4;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length()  *  4;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  -=  trailer.length()  *  4;	  end    -=    trailer.length();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
253	[BUG]  [BUGGY]  end  =(trailer  -  '0')+(length  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  -  '0')+(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  -  '0')+(length  -  '0');	  end    =(length    -    '0')+(trailer    -    '0');    	non-compiled	[CE]  <identifier>  expected	69	None	replace
254	[BUG]  [BUGGY]  end  =(length  -  '0')+(trailer  -  '9');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+(trailer  -  '9');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+(trailer  -  '9');	  end    =(length    -    '0')+(trailer    -    '0');    	non-compiled	[CE]  <identifier>  expected	69	None	replace
255	[BUG]  [BUGGY]  end  =(length  -  '0')+(trailer  *  '0');  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+(trailer  *  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+(trailer  *  '0');	  end    =(length    -    '0')+(trailer    -    '0');    	non-compiled	[CE]  <identifier>  expected	69	None	replace
256	[BUG]  [BUGGY]  end  =(len  -  '0')+(trailer  -  '0');  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(len  -  '0')+(trailer  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(len  -  '0')+(trailer  -  '0');	  end    =(length    -    '0')+(trailer    -    '0');    	non-compiled	[CE]  <identifier>  expected	69	None	replace
257	[BUG]  [BUGGY]  end  =(length  -  '0')+(trailer  +  '0');  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+(trailer  +  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+(trailer  +  '0');	  end    =(length    -    '0')+(trailer    -    '0');    	non-compiled	[CE]  <identifier>  expected	69	None	replace
258	[BUG]  [BUGGY]  trailer  =  buffer[start-1];  if  (trailer  ==  0  ||  trailer  =='')  {  end--;  }  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  trailer  =  buffer[start-1];  if  (trailer  ==  0  ||  trailer  =='')  {  end--;  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	trailer  =  buffer[start-1];  if  (trailer  ==  0  ||  trailer  =='')  {  end--;  }	  trailer    =    buffer[end-1];    if    (trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
259	[BUG]  [BUGGY]  trailer  =  buffer[end-2];  if  (trailer  ==  0  ||  trailer  =='')  {  end--;  }  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  trailer  =  buffer[end-2];  if  (trailer  ==  0  ||  trailer  =='')  {  end--;  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	trailer  =  buffer[end-2];  if  (trailer  ==  0  ||  trailer  =='')  {  end--;  }	  trailer    =    buffer[end-1];    if    (trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
260	[BUG]  [BUGGY]  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer!='')  {  end--;  }  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer!='')  {  end--;  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer!='')  {  end--;  }	  trailer    =    buffer[end-1];    if    (trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
261	[BUG]  [BUGGY]  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '.')  {  end--;  }  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '.')  {  end--;  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '.')  {  end--;  }	  trailer    =    buffer[end-1];    if    (trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
262	[BUG]  [BUGGY]  trailer  =  buffer[0];  if  (trailer  ==  0  ||  trailer  =='')  {  end--;  }  [CE]  <identifier>  expected  [FE]                                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  trailer  =  buffer[0];  if  (trailer  ==  0  ||  trailer  =='')  {  end--;  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	trailer  =  buffer[0];  if  (trailer  ==  0  ||  trailer  =='')  {  end--;  }	  trailer    =    buffer[end-1];    if    (trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
263	[BUG]  [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  /  BYTE_MASK;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  /  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.start  =  System.currentTimeMillis()  /  BYTE_MASK;	  Pipeline.this.start    =    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
264	[BUG]  [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  /  2;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  /  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.start  =  System.currentTimeMillis()  /  2;	  Pipeline.this.start    =    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
265	[BUG]  [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  /  1000;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  /  1000;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.start  =  System.currentTimeMillis()  /  1000;	  Pipeline.this.start    =    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
266	[BUG]  [BUGGY]  end  =(length  -  1)?  1  :  0;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)?  1  :  0;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)?  1  :  0;	  end    =(length    <    <    1)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	117	None	replace
267	[BUG]  [BUGGY]  end  =(length  &  1)?  1  :  0;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  &  1)?  1  :  0;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  &  1)?  1  :  0;	  end    =(length    <    <    1)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	117	None	replace
268	[BUG]  [BUGGY]  end  =(length  <  <  1)?  2  :  0;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  2  :  0;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  2  :  0;	  end    =(length    <    <    1)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	117	None	replace
269	[BUG]  [BUGGY]  end  =(trailer  <  <  1)?  1  :  0;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  1)?  1  :  0;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  1)?  1  :  0;	  end    =(length    <    <    1)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	117	None	replace
270	[BUG]  [BUGGY]  end  =(length  <  <  1)?  1  :  -1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  1  :  -1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  1  :  -1;	  end    =(length    <    <    1)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	117	None	replace
271	[BUG]  [BUGGY]  end  =(length  +  1)?  1  :  0;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  +  1)?  1  :  0;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  +  1)?  1  :  0;	  end    =(length    <    <    1)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	117	None	replace
272	[BUG]  [BUGGY]  end  =(length  -  3)+  trailer.length  +(trailer  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  3)+  trailer.length  +(trailer  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  3)+  trailer.length  +(trailer  -  '0');	  end    =(length    <    <    3)+    trailer.length    +(trailer    -    '0');    	non-compiled	[CE]  <identifier>  expected	31	None	replace
273	[BUG]  [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(trailer  <  <  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(trailer  <  <  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+  trailer.length  +(trailer  <  <  '0');	  end    =(length    <    <    3)+    trailer.length    +(trailer    -    '0');    	non-compiled	[CE]  <identifier>  expected	31	None	replace
274	[BUG]  [BUGGY]  end  =(length  +  3)+  trailer.length  +(trailer  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  +  3)+  trailer.length  +(trailer  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  +  3)+  trailer.length  +(trailer  -  '0');	  end    =(length    <    <    3)+    trailer.length    +(trailer    -    '0');    	non-compiled	[CE]  <identifier>  expected	31	None	replace
275	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ ",  expecting  ' "+trailer+ "'  or  ' "+trailer+ "') ");  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ ",  expecting  ' "+trailer+ "'  or  ' "+trailer+ "') ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ ",  expecting  ' "+trailer+ "'  or  ' "+trailer+ "') ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   "'    or    '   "+trailer+   "')   ");    	non-compiled	[CE]  <identifier>  expected	108	None	replace
276	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ ",  ' "+trailer+ "'  or  ' "+trailer+ "') ");  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ ",  ' "+trailer+ "'  or  ' "+trailer+ "') ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ ",  ' "+trailer+ "'  or  ' "+trailer+ "') ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   "'    or    '   "+trailer+   "')   ");    	non-compiled	[CE]  <identifier>  expected	108	None	replace
277	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'  for  trailer  ' "+trailer+ "') ");  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'  for  trailer  ' "+trailer+ "') ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'  for  trailer  ' "+trailer+ "') ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   "'    or    '   "+trailer+   "')   ");    	non-compiled	[CE]  <identifier>  expected	108	None	replace
278	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ ".') ");  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ ".') ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ ".') ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   "'    or    '   "+trailer+   "')   ");    	non-compiled	[CE]  <identifier>  expected	108	None	replace
279	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'): ");  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'): ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'): ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   "'    or    '   "+trailer+   "')   ");    	non-compiled	[CE]  <identifier>  expected	108	None	replace
280	[BUG]  [BUGGY]  end  =(length  -  1)?  0  :  BYTE_MASK  -  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)?  0  :  BYTE_MASK  -  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)?  0  :  BYTE_MASK  -  1;	  end    =(length    <    <    1)?    0    :    BYTE_MASK    -    1;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
281	[BUG]  [BUGGY]  end  =(length  <  <  1)?  0  :  trailer.length  -  1;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  0  :  trailer.length  -  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  0  :  trailer.length  -  1;	  end    =(length    <    <    1)?    0    :    BYTE_MASK    -    1;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
282	[BUG]  [BUGGY]  end  =(length  &  1)?  0  :  BYTE_MASK  -  1;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  &  1)?  0  :  BYTE_MASK  -  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  &  1)?  0  :  BYTE_MASK  -  1;	  end    =(length    <    <    1)?    0    :    BYTE_MASK    -    1;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
283	[BUG]  [BUGGY]  end  =(length  <  <  1)?  1  :  BYTE_MASK  -  1;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  1  :  BYTE_MASK  -  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  1  :  BYTE_MASK  -  1;	  end    =(length    <    <    1)?    0    :    BYTE_MASK    -    1;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
284	[BUG]  [BUGGY]  end  =(trailer  <  <  1)?  0  :  BYTE_MASK  -  1;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  1)?  0  :  BYTE_MASK  -  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  1)?  0  :  BYTE_MASK  -  1;	  end    =(length    <    <    1)?    0    :    BYTE_MASK    -    1;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
285	[BUG]  [BUGGY]  end  =(length  +  1)?  0  :  BYTE_MASK  -  1;  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  +  1)?  0  :  BYTE_MASK  -  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  +  1)?  0  :  BYTE_MASK  -  1;	  end    =(length    <    <    1)?    0    :    BYTE_MASK    -    1;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
286	[BUG]  [BUGGY]  end  =  trailer.length  /  1  +  1;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  /  1  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.length  /  1  +  1;	  end    =    trailer.length    -    1    +    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
287	[BUG]  [BUGGY]  end  =  trailer.length  *  1  +  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  *  1  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.length  *  1  +  1;	  end    =    trailer.length    -    1    +    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
288	[BUG]  [BUGGY]  end  =(length  -  1)+  trailer.length  +(trailer  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)+  trailer.length  +(trailer  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)+  trailer.length  +(trailer  -  '0');	  end    =(length    -    1)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	120	None	replace
289	[BUG]  [BUGGY]  end  =(trailer.length  -  1)+  length  +(length  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer.length  -  1)+  length  +(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer.length  -  1)+  length  +(length  -  '0');	  end    =(length    -    1)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	120	None	replace
290	[BUG]  [BUGGY]  end  =(end  -  1)+  trailer.length  +(length  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  1)+  trailer.length  +(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  1)+  trailer.length  +(length  -  '0');	  end    =(length    -    1)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	120	None	replace
291	[BUG]  [BUGGY]  end  =(length  -  1)+  trailer.length  +(end  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)+  trailer.length  +(end  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)+  trailer.length  +(end  -  '0');	  end    =(length    -    1)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	120	None	replace
292	[BUG]  [BUGGY]  end  =(length  -  1)+  trailer.length  +(result  -  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)+  trailer.length  +(result  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)+  trailer.length  +(result  -  '0');	  end    =(length    -    1)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	120	None	replace
293	[BUG]  [BUGGY]  end  =(length  -  1)+  trailer.length  *(length  -  '0');  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)+  trailer.length  *(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)+  trailer.length  *(length  -  '0');	  end    =(length    -    1)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	120	None	replace
294	[BUG]  [BUGGY]  end  -=  0l;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  0l;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  -=  0l;	  end    =    0l;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
295	[BUG]  [BUGGY]  end  =  0x7F;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  0x7F;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  0x7F;	  end    =    0l;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
296	[BUG]  [BUGGY]  end  =  0x7f;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  0x7f;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  0x7f;	  end    =    0l;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
297	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsBytes(trailer);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsBytes(trailer);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().quoteAsBytes(trailer);	  end    =    JsonStringEncoder.getInstance().quoteAsBytes('    ');    	non-compiled	[CE]  <identifier>  expected	95	None	replace
298	[BUG]  [BUGGY]  End  =  JsonStringEncoder.getInstance().quoteAsBytes(trailer);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  JsonStringEncoder.getInstance().quoteAsBytes(trailer);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	End  =  JsonStringEncoder.getInstance().quoteAsBytes(trailer);	  end    =    JsonStringEncoder.getInstance().quoteAsBytes('    ');    	non-compiled	[CE]  <identifier>  expected	95	None	replace
299	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsBytes('  ',  trailer);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsBytes('  ',  trailer);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().quoteAsBytes('  ',  trailer);	  end    =    JsonStringEncoder.getInstance().quoteAsBytes('    ');    	non-compiled	[CE]  <identifier>  expected	95	None	replace
300	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsBytes(trailer,'');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsBytes(trailer,'');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().quoteAsBytes(trailer,'');	  end    =    JsonStringEncoder.getInstance().quoteAsBytes('    ');    	non-compiled	[CE]  <identifier>  expected	95	None	replace
301	[BUG]  [BUGGY]  end  =  trailer.quoteAsBytes('  ');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.quoteAsBytes('  ');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.quoteAsBytes('  ');	  end    =    JsonStringEncoder.getInstance().quoteAsBytes('    ');    	non-compiled	[CE]  <identifier>  expected	95	None	replace
302	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsBytes(result);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsBytes(result);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().quoteAsBytes(result);	  end    =    JsonStringEncoder.getInstance().quoteAsBytes('    ');    	non-compiled	[CE]  <identifier>  expected	95	None	replace
303	[BUG]  [BUGGY]  end  =(length  <  <  4)+  trailer.length  +  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  4)+  trailer.length  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  4)+  trailer.length  +  1;	  end    =(length    <    <    4)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	115	None	replace
304	[BUG]  [BUGGY]  end  =(end  <  <  4)+  trailer.length;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  4)+  trailer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  4)+  trailer.length;	  end    =(length    <    <    4)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	115	None	replace
305	[BUG]  [BUGGY]  end  =(length  &  4)+  trailer.length;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  &  4)+  trailer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  &  4)+  trailer.length;	  end    =(length    <    <    4)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	115	None	replace
306	[BUG]  [BUGGY]  end  =(trailer  <  <  4)+  length;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  4)+  length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  4)+  length;	  end    =(length    <    <    4)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	115	None	replace
307	[BUG]  [BUGGY]  end  =(length  -  '0')/(length  -  '7'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')/(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')/(length  -  '7'));	  end    =(length    <    <    3)+    trailer.length    +(length    -    '0')/(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	57	None	replace
308	[BUG]  [BUGGY]  end  =(length  +  3)+  trailer.length  +(length  -  '0')/(length  -  '7'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  +  3)+  trailer.length  +(length  -  '0')/(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  +  3)+  trailer.length  +(length  -  '0')/(length  -  '7'));	  end    =(length    <    <    3)+    trailer.length    +(length    -    '0')/(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	57	None	replace
309	[BUG]  [BUGGY]  end  =(trailer  <  <  3)+  trailer.length  +(length  -  '0')/(length  -  '7'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  3)+  trailer.length  +(length  -  '0')/(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  3)+  trailer.length  +(length  -  '0')/(length  -  '7'));	  end    =(length    <    <    3)+    trailer.length    +(length    -    '0')/(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	57	None	replace
310	[BUG]  [BUGGY]  end  =(length  -  '0')+  trailer.length  +(length  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+  trailer.length  +(length  -  '0')+  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+  trailer.length  +(length  -  '0')+  1;	  end    =(length    <    <    3)+    trailer.length    +(length    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
311	[BUG]  [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  '0')/  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  '0')/  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+  trailer.length  +(length  -  '0')/  1;	  end    =(length    <    <    3)+    trailer.length    +(length    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
312	[BUG]  [BUGGY]  end  =(trailer  <  <  3)+  trailer.length  +(length  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  3)+  trailer.length  +(length  -  '0')+  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  3)+  trailer.length  +(length  -  '0')+  1;	  end    =(length    <    <    3)+    trailer.length    +(length    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
313	[BUG]  [BUGGY]  end  =(length  -  3)+  trailer.length  +(length  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  3)+  trailer.length  +(length  -  '0')+  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  3)+  trailer.length  +(length  -  '0')+  1;	  end    =(length    <    <    3)+    trailer.length    +(length    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
314	[BUG]  [BUGGY]  end  =(length  -  '0')+  2  +(length  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+  2  +(length  -  '0')+  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+  2  +(length  -  '0')+  1;	  end    =(length    <    <    3)+    trailer.length    +(length    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
315	[BUG]  [BUGGY]  end  =(length  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+  1;	  end    =(length    <    <    3)+    trailer.length    +(length    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
316	[BUG]  [BUGGY]  end  =(end  -  4)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  4)+(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  4)+(length  -  '0');	  end    =(length    -    4)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	110	None	replace
317	[BUG]  [BUGGY]  end  =(length  -  2)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  2)+(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  2)+(length  -  '0');	  end    =(length    -    4)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	110	None	replace
318	[BUG]  [BUGGY]  end  =(length  -  4)+(trailer  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  4)+(trailer  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  4)+(trailer  -  '0');	  end    =(length    -    4)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	110	None	replace
319	[BUG]  [BUGGY]  end  =(length  -  6)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  6)+(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  6)+(length  -  '0');	  end    =(length    -    4)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	110	None	replace
320	[BUG]  [BUGGY]  end  =(end  -  '0')+(length  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  '0')+(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  '0')+(length  -  '0');	  end    =(length    -    4)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	110	None	replace
321	[BUG]  [BUGGY]  end  =(length  -  3)+  trailer.length  +(end  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  3)+  trailer.length  +(end  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  3)+  trailer.length  +(end  -  '0');	  end    =(length    <    <    3)+    trailer.length    +(end    -    '0');    	non-compiled	[CE]  <identifier>  expected	121	None	replace
322	[BUG]  [BUGGY]  end  =(length  -  '0')+  trailer.length  +(end  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+  trailer.length  +(end  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+  trailer.length  +(end  -  '0');	  end    =(length    <    <    3)+    trailer.length    +(end    -    '0');    	non-compiled	[CE]  <identifier>  expected	121	None	replace
323	[BUG]  [BUGGY]  end  =(length  &  3)+  trailer.length  +(end  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  &  3)+  trailer.length  +(end  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  &  3)+  trailer.length  +(end  -  '0');	  end    =(length    <    <    3)+    trailer.length    +(end    -    '0');    	non-compiled	[CE]  <identifier>  expected	121	None	replace
324	[BUG]  [BUGGY]  end  =(trailer  <  <  3)+  length  +(end  -  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  3)+  length  +(end  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  3)+  length  +(end  -  '0');	  end    =(length    <    <    3)+    trailer.length    +(end    -    '0');    	non-compiled	[CE]  <identifier>  expected	121	None	replace
325	[BUG]  [BUGGY]  end  =(length  -  '0')+(length  -  '7')+  2);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+(length  -  '7')+  2);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+(length  -  '7')+  2);	  end    =(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	56	None	replace
326	[BUG]  [BUGGY]  end  =(length  -  '0')+(length  -  '7'),  trailer);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+(length  -  '7'),  trailer);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+(length  -  '7'),  trailer);	  end    =(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	56	None	replace
327	[BUG]  [BUGGY]  end  =(length  -  '0')+(trailer  -  '7'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+(trailer  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+(trailer  -  '7'));	  end    =(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	56	None	replace
328	[BUG]  [BUGGY]  ||  trailer  ==  '-')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  '-')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	||  trailer  ==  '-')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }	  ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1]);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
329	[BUG]  [BUGGY]  ||  trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	||  trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }	  ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1]);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
330	[BUG]  [BUGGY]  ||  trailer  ==  '[')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  '[')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	||  trailer  ==  '[')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }	  ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1]);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
331	[BUG]  [BUGGY]  ||  trailer  ==  '/')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  '/')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	||  trailer  ==  '/')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }	  ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1]);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
332	[BUG]  [BUGGY]  ||  trailer  ==  'n')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  'n')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	||  trailer  ==  'n')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }	  ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1]);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
333	[BUG]  [BUGGY]  end  =  trailer.length  /  1L;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  /  1L;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.length  /  1L;	  end    =    trailer.length    -    1L;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
334	[BUG]  [BUGGY]  end  =  trailer.length  -  128;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  -  128;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.length  -  128;	  end    =    trailer.length    -    1L;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
335	[BUG]  [BUGGY]  end  =(trailer  -  1)?  BYTE_MASK  -  1  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  -  1)?  BYTE_MASK  -  1  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  -  1)?  BYTE_MASK  -  1  :  BYTE_MASK;	  end    =(length    -    1)?    BYTE_MASK    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
336	[BUG]  [BUGGY]  end  =(length  -  1)?  trailer.length  -  1  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)?  trailer.length  -  1  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)?  trailer.length  -  1  :  BYTE_MASK;	  end    =(length    -    1)?    BYTE_MASK    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
337	[BUG]  [BUGGY]  end  =(end  -  1)?  BYTE_MASK  -  1  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  1)?  BYTE_MASK  -  1  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  1)?  BYTE_MASK  -  1  :  BYTE_MASK;	  end    =(length    -    1)?    BYTE_MASK    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
338	[BUG]  [BUGGY]  end  =(length  -  1)?  BYTE_MASK  -  1  :  BYTE_SIZE;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)?  BYTE_MASK  -  1  :  BYTE_SIZE;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)?  BYTE_MASK  -  1  :  BYTE_SIZE;	  end    =(length    -    1)?    BYTE_MASK    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
339	[BUG]  [BUGGY]  end  =(length  -  1)?  BYTE_MASK  -  2  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)?  BYTE_MASK  -  2  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)?  BYTE_MASK  -  2  :  BYTE_MASK;	  end    =(length    -    1)?    BYTE_MASK    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
340	[BUG]  [BUGGY]  end  =(trailer.length  -  3)+  length;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer.length  -  3)+  length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer.length  -  3)+  length;	  end    =(length    -    3)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
341	[BUG]  [BUGGY]  end  =(length  -  2)+  trailer.length;  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  2)+  trailer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  2)+  trailer.length;	  end    =(length    -    3)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
342	[BUG]  [BUGGY]  end  =(end  -  1)+  trailer.length;  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  1)+  trailer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  1)+  trailer.length;	  end    =(length    -    3)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
343	[BUG]  [BUGGY]  end  =(trailer  -  3)+  length;  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  -  3)+  length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  -  3)+  length;	  end    =(length    -    3)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
344	[BUG]  [BUGGY]  end  =(end  -  3)+  trailer.length;  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  3)+  trailer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  3)+  trailer.length;	  end    =(length    -    3)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
345	[BUG]  [BUGGY]  end  =(length  -  3)+(trailer  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  3)+(trailer  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  3)+(trailer  -  '0');	  end    =(length    <    <    3)+(trailer    -    '0');    	non-compiled	[CE]  <identifier>  expected	64	None	replace
346	[BUG]  [BUGGY]  end  =(end  <  <  3)+(trailer  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)+(trailer  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)+(trailer  -  '0');	  end    =(length    <    <    3)+(trailer    -    '0');    	non-compiled	[CE]  <identifier>  expected	64	None	replace
347	[BUG]  [BUGGY]  end  =(length  &  3)+(trailer  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  &  3)+(trailer  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  &  3)+(trailer  -  '0');	  end    =(length    <    <    3)+(trailer    -    '0');    	non-compiled	[CE]  <identifier>  expected	64	None	replace
348	[BUG]  [BUGGY]  end  =(length  /  3)+(trailer  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  /  3)+(trailer  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  /  3)+(trailer  -  '0');	  end    =(length    <    <    3)+(trailer    -    '0');    	non-compiled	[CE]  <identifier>  expected	64	None	replace
349	[BUG]  [BUGGY]  end  =(len  <  <  3)+(trailer  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(len  <  <  3)+(trailer  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(len  <  <  3)+(trailer  -  '0');	  end    =(length    <    <    3)+(trailer    -    '0');    	non-compiled	[CE]  <identifier>  expected	64	None	replace
350	[BUG]  [BUGGY]  end  =(length  +  3)+(trailer  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  +  3)+(trailer  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  +  3)+(trailer  -  '0');	  end    =(length    <    <    3)+(trailer    -    '0');    	non-compiled	[CE]  <identifier>  expected	64	None	replace
351	[BUG]  [BUGGY]  end  =(end  +  3)+  trailer.length  +(length  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  +  3)+  trailer.length  +(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  +  3)+  trailer.length  +(length  -  '0');	  end    =(length    +    3)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	34	None	replace
352	[BUG]  [BUGGY]  end  =(length  +  1)+  trailer.length  +(length  -  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  +  1)+  trailer.length  +(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  +  1)+  trailer.length  +(length  -  '0');	  end    =(length    +    3)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	34	None	replace
353	[BUG]  [BUGGY]  end  =(trailer.length  +  3)+  length  +(length  -  '0');  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer.length  +  3)+  length  +(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer.length  +  3)+  length  +(length  -  '0');	  end    =(length    +    3)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	34	None	replace
354	[BUG]  [BUGGY]  end  =(length  /  3)+  trailer.length  +(length  -  '0');  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  /  3)+  trailer.length  +(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  /  3)+  trailer.length  +(length  -  '0');	  end    =(length    +    3)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	34	None	replace
355	[BUG]  [BUGGY]  end  =(length  *  3)+  trailer.length  +(length  -  '0');  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  *  3)+  trailer.length  +(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  *  3)+  trailer.length  +(length  -  '0');	  end    =(length    +    3)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	34	None	replace
356	[BUG]  [BUGGY]  end  =(end  <  <  3)+(length  -  '0',  trailer.length);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)+(length  -  '0',  trailer.length);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)+(length  -  '0',  trailer.length);	  end    =(end    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	67	None	replace
357	[BUG]  [BUGGY]  end  =(end  <  <  3)+(length  -  '0',  trailer);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)+(length  -  '0',  trailer);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)+(length  -  '0',  trailer);	  end    =(end    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	67	None	replace
358	[BUG]  [BUGGY]  end  =(end  <  <  3)+(length  -  '0'  +  trailer.length);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)+(length  -  '0'  +  trailer.length);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)+(length  -  '0'  +  trailer.length);	  end    =(end    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	67	None	replace
359	[BUG]  [BUGGY]  end  =(end  <  <  3)+(length  -  1);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)+(length  -  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)+(length  -  1);	  end    =(end    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	67	None	replace
360	[BUG]  [BUGGY]  end  =(end  <  <  3)+(length  -  '0'  +  trailer);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)+(length  -  '0'  +  trailer);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)+(length  -  '0'  +  trailer);	  end    =(end    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	67	None	replace
361	[BUG]  [BUGGY]  end  =(end  -  3)+  trailer.length  +(length  -  '0')+(length  -  '7'));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  3)+  trailer.length  +(length  -  '0')+(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  3)+  trailer.length  +(length  -  '0')+(length  -  '7'));	  end    =(length    -    3)+    trailer.length    +(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	61	None	replace
362	[BUG]  [BUGGY]  end  =(length  -  3)+  trailer.length  +(length  -  '0')+(length  -  '7')+  1);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  3)+  trailer.length  +(length  -  '0')+(length  -  '7')+  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  3)+  trailer.length  +(length  -  '0')+(length  -  '7')+  1);	  end    =(length    -    3)+    trailer.length    +(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	61	None	replace
363	[BUG]  [BUGGY]  end  =(trailer.length  -  3)+  length  +(length  -  '0')+(length  -  '7'));  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer.length  -  3)+  length  +(length  -  '0')+(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer.length  -  3)+  length  +(length  -  '0')+(length  -  '7'));	  end    =(length    -    3)+    trailer.length    +(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	61	None	replace
364	[BUG]  [BUGGY]  end  =(trailer.length  -  3)+  trailer.length  +(length  -  '0')+(length  -  '7'));  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer.length  -  3)+  trailer.length  +(length  -  '0')+(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer.length  -  3)+  trailer.length  +(length  -  '0')+(length  -  '7'));	  end    =(length    -    3)+    trailer.length    +(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	61	None	replace
365	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "',' "+trailer+ ") ");  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "',' "+trailer+ ") ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "',' "+trailer+ ") ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   ",'   "+trailer+   ")   ");    	non-compiled	[CE]  <identifier>  expected	106	None	replace
366	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "',' "+trailer+ "') ");  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "',' "+trailer+ "') ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "',' "+trailer+ "') ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   ",'   "+trailer+   ")   ");    	non-compiled	[CE]  <identifier>  expected	106	None	replace
367	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ ",  expecting  ' "+trailer+ "',' "+trailer+ ") ");  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ ",  expecting  ' "+trailer+ "',' "+trailer+ ") ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ ",  expecting  ' "+trailer+ "',' "+trailer+ ") ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   ",'   "+trailer+   ")   ");    	non-compiled	[CE]  <identifier>  expected	106	None	replace
368	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ ".',' "+trailer+ ") ");  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ ".',' "+trailer+ ") ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ ".',' "+trailer+ ") ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   ",'   "+trailer+   ")   ");    	non-compiled	[CE]  <identifier>  expected	106	None	replace
369	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "',' "+trailer+ ",' "+trailer+ ") ");  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "',' "+trailer+ ",' "+trailer+ ") ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "',' "+trailer+ ",' "+trailer+ ") ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   ",'   "+trailer+   ")   ");    	non-compiled	[CE]  <identifier>  expected	106	None	replace
370	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "',' "+trailer+ "': "+trailer+ ") ");  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "',' "+trailer+ "': "+trailer+ ") ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "',' "+trailer+ "': "+trailer+ ") ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   ",'   "+trailer+   ")   ");    	non-compiled	[CE]  <identifier>  expected	106	None	replace
371	[BUG]  [BUGGY]  end  =(length  <  <  1)?  2  :  1;  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  2  :  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  2  :  1;	  end    =(length    <    <    1)?    2    :    4;    	non-compiled	[CE]  <identifier>  expected	113	None	replace
372	[BUG]  [BUGGY]  end  =(length  <  <  1)?  2  :  3;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  2  :  3;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  2  :  3;	  end    =(length    <    <    1)?    2    :    4;    	non-compiled	[CE]  <identifier>  expected	113	None	replace
373	[BUG]  [BUGGY]  end  =(length  <  <  1)?  2;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  2;	  end    =(length    <    <    1)?    2    :    4;    	non-compiled	[CE]  <identifier>  expected	113	None	replace
374	[BUG]  [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(trailer  -  '0')+(trailer  -  '7'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(trailer  -  '0')+(trailer  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+  trailer.length  +(trailer  -  '0')+(trailer  -  '7'));	  end    =(trailer    <    <    3)+    trailer.length    +(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	59	None	replace
375	[BUG]  [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  '0')+(trailer  -  '7'));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  '0')+(trailer  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+  trailer.length  +(length  -  '0')+(trailer  -  '7'));	  end    =(trailer    <    <    3)+    trailer.length    +(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	59	None	replace
376	[BUG]  [BUGGY]  end  =(trailer  <  <  3)+  trailer.length  +(length  -  '0')+(length  -  '7')+  2);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  3)+  trailer.length  +(length  -  '0')+(length  -  '7')+  2);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  3)+  trailer.length  +(length  -  '0')+(length  -  '7')+  2);	  end    =(trailer    <    <    3)+    trailer.length    +(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	59	None	replace
377	[BUG]  [BUGGY]  end  =(end  <  <  3)+  trailer.length  +  1;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)+  trailer.length  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)+  trailer.length  +  1;	  end    =(end    <    <    3)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
378	[BUG]  [BUGGY]  end  =(end  <  <  3)+  trailer.length  -  1;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)+  trailer.length  -  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)+  trailer.length  -  1;	  end    =(end    <    <    3)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
379	[BUG]  [BUGGY]  end  =(end  <  <  3)+  trailer.length  +  2;  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)+  trailer.length  +  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)+  trailer.length  +  2;	  end    =(end    <    <    3)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
380	[BUG]  [BUGGY]  end  =(trailer  <  <  3)+  trailer.length  +(length  -  1);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  3)+  trailer.length  +(length  -  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  3)+  trailer.length  +(length  -  1);	  end    =(trailer    <    <    3)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	96	None	replace
381	[BUG]  [BUGGY]  end  =(trailer  <  <  3)+  trailer.length  +(length  -  2);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  3)+  trailer.length  +(length  -  2);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  3)+  trailer.length  +(length  -  2);	  end    =(trailer    <    <    3)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	96	None	replace
382	[BUG]  [BUGGY]  end  =(trailer  -  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  -  '0');	  end    =(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	79	None	replace
383	[BUG]  [BUGGY]  end  =(length  -  '0'  +  1);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0'  +  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0'  +  1);	  end    =(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	79	None	replace
384	[BUG]  [BUGGY]  end  =(end  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  '0');	  end    =(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	79	None	replace
385	[BUG]  [BUGGY]  end  =(end  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  '0')+  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  '0')+  1;	  end    =(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	79	None	replace
386	[BUG]  [BUGGY]  end  =(length  -  '0'  +  trailer.length);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0'  +  trailer.length);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0'  +  trailer.length);	  end    =(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	79	None	replace
387	[BUG]  [BUGGY]  result  =(result  -  3)+(byte  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  -  3)+(byte  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  -  3)+(byte  -  '0');	  result    =(result    <    <    3)+(byte    -    '0');    	non-compiled	[CE]  <identifier>  expected	38	None	replace
388	[BUG]  [BUGGY]  result  =(result  <  <  3)+(Byte_MASK  -  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(Byte_MASK  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  <  <  3)+(Byte_MASK  -  '0');	  result    =(result    <    <    3)+(byte    -    '0');    	non-compiled	[CE]  <identifier>  expected	38	None	replace
389	[BUG]  [BUGGY]  result  =(result  <  <  3)+(byte)-  '0';  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(byte)-  '0';  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  <  <  3)+(byte)-  '0';	  result    =(result    <    <    3)+(byte    -    '0');    	non-compiled	[CE]  <identifier>  expected	38	None	replace
390	[BUG]  [BUGGY]  result  =(result  <  <  3)+(byte)0;  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(byte)0;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  <  <  3)+(byte)0;	  result    =(result    <    <    3)+(byte    -    '0');    	non-compiled	[CE]  <identifier>  expected	38	None	replace
391	[BUG]  [BUGGY]  end  -=  2;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  -=  2;	  end    =    2;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
392	[BUG]  [BUGGY]  end  =  3;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  3;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  3;	  end    =    2;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
393	[BUG]  [BUGGY]  end  =(length  -  1)+(trailer  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)+(trailer  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)+(trailer  -  '0');	  end    =(length    -    1)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	112	None	replace
394	[BUG]  [BUGGY]  end  =(end  -  1)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  1)+(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  1)+(length  -  '0');	  end    =(length    -    1)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	112	None	replace
395	[BUG]  [BUGGY]  end  =(length  -  1)/(length  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)/(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)/(length  -  '0');	  end    =(length    -    1)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	112	None	replace
396	[BUG]  [BUGGY]  end  =(length  -  1)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)+(result  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)+(result  -  '0');	  end    =(length    -    1)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	112	None	replace
397	[BUG]  [BUGGY]  end  =(length  -  1)+(start  -  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)+(start  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)+(start  -  '0');	  end    =(length    -    1)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	112	None	replace
398	[BUG]  [BUGGY]  end  =(trailer  -  1)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  -  1)+(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  -  1)+(length  -  '0');	  end    =(length    -    1)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	112	None	replace
399	[BUG]  [BUGGY]  end  =(length  -  1)+(len  -  '0');  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)+(len  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)+(len  -  '0');	  end    =(length    -    1)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	112	None	replace
400	[BUG]  [BUGGY]  end  =(trailer  <  <  1)?  BYTE_MASK  :  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  1)?  BYTE_MASK  :  BYTE_MASK  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  1)?  BYTE_MASK  :  BYTE_MASK  +  1;	  end    =(trailer    <    <    1)?    BYTE_MASK    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
401	[BUG]  [BUGGY]  end  =(trailer  <  <  3)?  BYTE_MASK  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  3)?  BYTE_MASK  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  3)?  BYTE_MASK  :  BYTE_MASK;	  end    =(trailer    <    <    1)?    BYTE_MASK    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
402	[BUG]  [BUGGY]  end  =(trailer  <  <  1)?  BYTE_MASK  :  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  1)?  BYTE_MASK  :  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  1)?  BYTE_MASK  :  1;	  end    =(trailer    <    <    1)?    BYTE_MASK    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
403	[BUG]  [BUGGY]  end  =(trailer  <  <  1)?  BYTE_MASK  :  BYTE_SIZE;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  1)?  BYTE_MASK  :  BYTE_SIZE;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  1)?  BYTE_MASK  :  BYTE_SIZE;	  end    =(trailer    <    <    1)?    BYTE_MASK    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
404	[BUG]  [BUGGY]  end  =(trailer  <  <  1)?  1  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  1)?  1  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  1)?  1  :  BYTE_MASK;	  end    =(trailer    <    <    1)?    BYTE_MASK    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
405	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0'));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  <  <  3)+(currentByte  -  '0'));	  result    =(result    <    <    3)+(BYTE_MASK    -    '0'));    	non-compiled	[CE]  <identifier>  expected	101	None	replace
406	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  -  '0'));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(length  -  '0'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  <  <  3)+(length  -  '0'));	  result    =(result    <    <    3)+(BYTE_MASK    -    '0'));    	non-compiled	[CE]  <identifier>  expected	101	None	replace
407	[BUG]  [BUGGY]  result  =(result  <  <  1)+(BYTE_MASK  -  '0'));  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  1)+(BYTE_MASK  -  '0'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  <  <  1)+(BYTE_MASK  -  '0'));	  result    =(result    <    <    3)+(BYTE_MASK    -    '0'));    	non-compiled	[CE]  <identifier>  expected	101	None	replace
408	[BUG]  [BUGGY]  result  =(result  <  <  3)+(BYTE_MASK  -  '0')+  1);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(BYTE_MASK  -  '0')+  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  <  <  3)+(BYTE_MASK  -  '0')+  1);	  result    =(result    <    <    3)+(BYTE_MASK    -    '0'));    	non-compiled	[CE]  <identifier>  expected	101	None	replace
409	[BUG]  [BUGGY]  result  =(result  <  <  3)+(BYTE_MASK  *  '0'));  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(BYTE_MASK  *  '0'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  <  <  3)+(BYTE_MASK  *  '0'));	  result    =(result    <    <    3)+(BYTE_MASK    -    '0'));    	non-compiled	[CE]  <identifier>  expected	101	None	replace
410	[BUG]  [BUGGY]  result  =(result  <  <  3)+(TRUE  -  '0'));  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(TRUE  -  '0'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  <  <  3)+(TRUE  -  '0'));	  result    =(result    <    <    3)+(BYTE_MASK    -    '0'));    	non-compiled	[CE]  <identifier>  expected	101	None	replace
411	[BUG]  [BUGGY]  end  =(end  -  3)+  trailer.length  +(length  -  '0')/(length  -  '7'));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  3)+  trailer.length  +(length  -  '0')/(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  3)+  trailer.length  +(length  -  '0')/(length  -  '7'));	  end    =(length    -    3)+    trailer.length    +(length    -    '0')/(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	122	None	replace
412	[BUG]  [BUGGY]  end  =(trailer.length  -  3)+  trailer.length  +(length  -  '0')/(length  -  '7'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer.length  -  3)+  trailer.length  +(length  -  '0')/(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer.length  -  3)+  trailer.length  +(length  -  '0')/(length  -  '7'));	  end    =(length    -    3)+    trailer.length    +(length    -    '0')/(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	122	None	replace
413	[BUG]  [BUGGY]  end  =(length  -  3)+  trailer.length  +(length  -  1)/(length  -  '7'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  3)+  trailer.length  +(length  -  1)/(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  3)+  trailer.length  +(length  -  1)/(length  -  '7'));	  end    =(length    -    3)+    trailer.length    +(length    -    '0')/(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	122	None	replace
414	[BUG]  [BUGGY]  end  =(length  -  3)+  trailer.length  +(length  -  '0')/(end  -  '7'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  3)+  trailer.length  +(length  -  '0')/(end  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  3)+  trailer.length  +(length  -  '0')/(end  -  '7'));	  end    =(length    -    3)+    trailer.length    +(length    -    '0')/(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	122	None	replace
415	[BUG]  [BUGGY]  end  =(trailer.length  -  3)+  length  +(length  -  '0')/(length  -  '7'));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer.length  -  3)+  length  +(length  -  '0')/(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer.length  -  3)+  length  +(length  -  '0')/(length  -  '7'));	  end    =(length    -    3)+    trailer.length    +(length    -    '0')/(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	122	None	replace
416	[BUG]  [BUGGY]  end  =(end  <  <  1)?  BYTE_MASK  -  1  :  BYTE_SIZE;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  1)?  BYTE_MASK  -  1  :  BYTE_SIZE;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  1)?  BYTE_MASK  -  1  :  BYTE_SIZE;	  end    =(end    <    <    1)?    BYTE_MASK    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	73	None	replace
417	[BUG]  [BUGGY]  end  =(end  <  <  1)?  BYTE_MASK  -  1  :  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  1)?  BYTE_MASK  -  1  :  BYTE_MASK  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  1)?  BYTE_MASK  -  1  :  BYTE_MASK  +  1;	  end    =(end    <    <    1)?    BYTE_MASK    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	73	None	replace
418	[BUG]  [BUGGY]  end  =(end  <  <  3)?  BYTE_MASK  -  1  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)?  BYTE_MASK  -  1  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)?  BYTE_MASK  -  1  :  BYTE_MASK;	  end    =(end    <    <    1)?    BYTE_MASK    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	73	None	replace
419	[BUG]  [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  -  1;  end--;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  -  1;  end--;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.start  =  System.currentTimeMillis()  -  1;  end--;	  Pipeline.this.start    =    System.currentTimeMillis();    end--;    	non-compiled	[CE]  <identifier>  expected	78	None	replace
420	[BUG]  [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  /  BYTE_MASK;  end--;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  /  BYTE_MASK;  end--;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.start  =  System.currentTimeMillis()  /  BYTE_MASK;  end--;	  Pipeline.this.start    =    System.currentTimeMillis();    end--;    	non-compiled	[CE]  <identifier>  expected	78	None	replace
421	[BUG]  [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  +  1;  end--;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  +  1;  end--;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.start  =  System.currentTimeMillis()  +  1;  end--;	  Pipeline.this.start    =    System.currentTimeMillis();    end--;    	non-compiled	[CE]  <identifier>  expected	78	None	replace
422	[BUG]  [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  -  2;  end--;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  -  2;  end--;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.start  =  System.currentTimeMillis()  -  2;  end--;	  Pipeline.this.start    =    System.currentTimeMillis();    end--;    	non-compiled	[CE]  <identifier>  expected	78	None	replace
423	[BUG]  [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  /  2;  end--;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  /  2;  end--;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.start  =  System.currentTimeMillis()  /  2;  end--;	  Pipeline.this.start    =    System.currentTimeMillis();    end--;    	non-compiled	[CE]  <identifier>  expected	78	None	replace
424	[BUG]  [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  -  start;  end--;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  -  start;  end--;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.start  =  System.currentTimeMillis()  -  start;  end--;	  Pipeline.this.start    =    System.currentTimeMillis();    end--;    	non-compiled	[CE]  <identifier>  expected	78	None	replace
425	[BUG]  [BUGGY]  end  =(end  <  <  1)+  trailer.length;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  1)+  trailer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  1)+  trailer.length;	  end    =(length    <    <    1)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	116	None	replace
426	[BUG]  [BUGGY]  end  =(length  <  <  1)+  trailer.length  -  1;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)+  trailer.length  -  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)+  trailer.length  -  1;	  end    =(length    <    <    1)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	116	None	replace
427	[BUG]  [BUGGY]  end  =(length  <  <  1)+  trailer.length  +  1;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)+  trailer.length  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)+  trailer.length  +  1;	  end    =(length    <    <    1)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	116	None	replace
428	[BUG]  [BUGGY]  end  =(trailer  <  <  1)+  length;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  1)+  length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  1)+  length;	  end    =(length    <    <    1)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	116	None	replace
429	[BUG]  [BUGGY]  end  =(length  +  1)+  trailer.length;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  +  1)+  trailer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  +  1)+  trailer.length;	  end    =(length    <    <    1)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	116	None	replace
430	[BUG]  [BUGGY]  end  =(trailer.length  -  3)+  length  +(length  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer.length  -  3)+  length  +(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer.length  -  3)+  length  +(length  -  '0');	  end    =(length    -    3)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	29	None	replace
431	[BUG]  [BUGGY]  end  =(end  -  3)+  trailer.length  +(length  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  3)+  trailer.length  +(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  3)+  trailer.length  +(length  -  '0');	  end    =(length    -    3)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	29	None	replace
432	[BUG]  [BUGGY]  end  =(trailer.length  -  3)+  trailer.length  +(length  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer.length  -  3)+  trailer.length  +(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer.length  -  3)+  trailer.length  +(length  -  '0');	  end    =(length    -    3)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	29	None	replace
433	[BUG]  [BUGGY]  end  =(length  -  '0')+  trailer.length  *(length  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+  trailer.length  *(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+  trailer.length  *(length  -  '0');	  end    =(length    -    '0')+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	30	None	replace
434	[BUG]  [BUGGY]  end  =(length  -  '0')+  trailer.length  +(length  -  '8');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+  trailer.length  +(length  -  '8');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+  trailer.length  +(length  -  '8');	  end    =(length    -    '0')+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	30	None	replace
435	[BUG]  [BUGGY]  end  =(length  &  1)?  0  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  &  1)?  0  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  &  1)?  0  :  BYTE_MASK;	  end    =(length    <    <    1)?    0    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
436	[BUG]  [BUGGY]  end  =(length  <  <  1)?  1  :  2;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  1  :  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  1  :  2;	  end    =(length    <    <    1)?    BYTE_MASK    :    2;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
437	[BUG]  [BUGGY]  end  =(length  <  <  1)?  0  :  2;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  0  :  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  0  :  2;	  end    =(length    <    <    1)?    BYTE_MASK    :    2;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
438	[BUG]  [BUGGY]  end  =(length  <  <  1)?  trailer  :  2;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  trailer  :  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  trailer  :  2;	  end    =(length    <    <    1)?    BYTE_MASK    :    2;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
439	[BUG]  [BUGGY]  end  =(length  &  1)?  BYTE_MASK  :  2;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  &  1)?  BYTE_MASK  :  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  &  1)?  BYTE_MASK  :  2;	  end    =(length    <    <    1)?    BYTE_MASK    :    2;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
440	[BUG]  [BUGGY]  end  =(length  <  <  1)?  trailer.length  :  2;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  trailer.length  :  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  trailer.length  :  2;	  end    =(length    <    <    1)?    BYTE_MASK    :    2;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
441	[BUG]  [BUGGY]  end  -=  trailer.length  -  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length  -  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  -=  trailer.length  -  1;	  end    -=    trailer.length;    	non-compiled	[CE]  <identifier>  expected	102	None	replace
442	[BUG]  [BUGGY]  end  -=  trailer.length  +  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  -=  trailer.length  +  1;	  end    -=    trailer.length;    	non-compiled	[CE]  <identifier>  expected	102	None	replace
443	[BUG]  [BUGGY]  end  -=  trailer.length  -  2;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length  -  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  -=  trailer.length  -  2;	  end    -=    trailer.length;    	non-compiled	[CE]  <identifier>  expected	102	None	replace
444	[BUG]  [BUGGY]  end  -=  trailer.length  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length  *  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  -=  trailer.length  *  BYTE_MASK;	  end    -=    trailer.length;    	non-compiled	[CE]  <identifier>  expected	102	None	replace
445	[BUG]  [BUGGY]  end  -=  trailer.length  *  2;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length  *  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  -=  trailer.length  *  2;	  end    -=    trailer.length;    	non-compiled	[CE]  <identifier>  expected	102	None	replace
446	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  length);  end  =  0;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  length);  end  =  0;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	System.arraycopy(buffer,  offset,  buffer,  end,  length);  end  =  0;	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    end    =    0;    	non-compiled	[CE]  <identifier>  expected	88	None	replace
447	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  end);  end  =  0;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  end);  end  =  0;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  end);  end  =  0;	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    end    =    0;    	non-compiled	[CE]  <identifier>  expected	88	None	replace
448	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length,  trailer.length);  end  =  0;  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length,  trailer.length);  end  =  0;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length,  trailer.length);  end  =  0;	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    end    =    0;    	non-compiled	[CE]  <identifier>  expected	88	None	replace
449	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1);  end  =  0;  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1);  end  =  0;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1);  end  =  0;	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    end    =    0;    	non-compiled	[CE]  <identifier>  expected	88	None	replace
450	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end);  end  =  0;  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end);  end  =  0;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  end);  end  =  0;	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    end    =    0;    	non-compiled	[CE]  <identifier>  expected	88	None	replace
451	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1);  end  =  0;  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1);  end  =  0;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1);  end  =  0;	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    end    =    0;    	non-compiled	[CE]  <identifier>  expected	88	None	replace
452	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'.  Could  not  parse  ' "+trailer+ "'. ");  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'.  Could  not  parse  ' "+trailer+ "'. ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'.  Could  not  parse  ' "+trailer+ "'. ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   "'    or    '   "+trailer+   "'.   ");    	non-compiled	[CE]  <identifier>  expected	105	None	replace
453	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ ",  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'. ");  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ ",  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'. ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ ",  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'. ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   "'    or    '   "+trailer+   "'.   ");    	non-compiled	[CE]  <identifier>  expected	105	None	replace
454	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'.  If(trailer!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'.  If(trailer!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'.  If(trailer!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   "'    or    '   "+trailer+   "'.   ");    	non-compiled	[CE]  <identifier>  expected	105	None	replace
455	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'.  If(trailer  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'.  If(trailer  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'.  If(trailer  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   "'    or    '   "+trailer+   "'.   ");    	non-compiled	[CE]  <identifier>  expected	105	None	replace
456	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'.  If(trailer  ==  ' "+trailer+)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'.  If(trailer  ==  ' "+trailer+)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'.  If(trailer  ==  ' "+trailer+)  {  throw  new  IllegalArgumentException( " ");  }	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   "'    or    '   "+trailer+   "'.   ");    	non-compiled	[CE]  <identifier>  expected	105	None	replace
457	[BUG]  [BUGGY]  result  =(result  -  3)+(BYTE_MASK  -  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  -  3)+(BYTE_MASK  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  -  3)+(BYTE_MASK  -  '0');	  result    =(result    <    <    3)+(BYTE_MASK    -    '0');    	non-compiled	[CE]  <identifier>  expected	39	None	replace
458	[BUG]  [BUGGY]  result  =(result  <  <  1)+(BYTE_MASK  -  '0');  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  1)+(BYTE_MASK  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  <  <  1)+(BYTE_MASK  -  '0');	  result    =(result    <    <    3)+(BYTE_MASK    -    '0');    	non-compiled	[CE]  <identifier>  expected	39	None	replace
459	[BUG]  [BUGGY]  result  =(result  <  <  3)+(BYTE_MASK  *  '0');  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(BYTE_MASK  *  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  <  <  3)+(BYTE_MASK  *  '0');	  result    =(result    <    <    3)+(BYTE_MASK    -    '0');    	non-compiled	[CE]  <identifier>  expected	39	None	replace
460	[BUG]  [BUGGY]  result  =(result  <  <  3)+(TRUE  -  '0');  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(TRUE  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  <  <  3)+(TRUE  -  '0');	  result    =(result    <    <    3)+(BYTE_MASK    -    '0');    	non-compiled	[CE]  <identifier>  expected	39	None	replace
461	[BUG]  [BUGGY]  end  =(end  -  3)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  3)+(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  3)+(length  -  '0');	  end    =(length    -    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	109	None	replace
462	[BUG]  [BUGGY]  end  =(length  -  3)/(length  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  3)/(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  3)/(length  -  '0');	  end    =(length    -    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	109	None	replace
463	[BUG]  [BUGGY]  end  =(length  -  3)+(start  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  3)+(start  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  3)+(start  -  '0');	  end    =(length    -    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	109	None	replace
464	[BUG]  [BUGGY]  end  =(end  <  <  3)+  trailer.length  +(length  -  1)/(length  -  '7'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)+  trailer.length  +(length  -  1)/(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)+  trailer.length  +(length  -  1)/(length  -  '7'));	  end    =(end    <    <    3)+    trailer.length    +(length    -    '0')/(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	124	None	replace
465	[BUG]  [BUGGY]  end  =(end  <  <  3)+  trailer.length  +(length  -  '0')/(length  -  '7')+  1);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)+  trailer.length  +(length  -  '0')/(length  -  '7')+  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)+  trailer.length  +(length  -  '0')/(length  -  '7')+  1);	  end    =(end    <    <    3)+    trailer.length    +(length    -    '0')/(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	124	None	replace
466	[BUG]  [BUGGY]  end  =(end  <  <  3)+  trailer.length  +(length  -  '0')/  2  *(length  -  '7'));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)+  trailer.length  +(length  -  '0')/  2  *(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)+  trailer.length  +(length  -  '0')/  2  *(length  -  '7'));	  end    =(end    <    <    3)+    trailer.length    +(length    -    '0')/(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	124	None	replace
467	[BUG]  [BUGGY]  end  =(end  <  <  3)+  trailer.length  *(length  -  '0')/(length  -  '7'));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)+  trailer.length  *(length  -  '0')/(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)+  trailer.length  *(length  -  '0')/(length  -  '7'));	  end    =(end    <    <    3)+    trailer.length    +(length    -    '0')/(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	124	None	replace
468	[BUG]  [BUGGY]  end  =(length  &  1)?  1  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  &  1)?  1  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  &  1)?  1  :  BYTE_MASK;	  end    =(length    <    <    1)?    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
469	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  length);	  System.arraycopy(buffer,    offset,    buffer,    0,    end);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
470	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  end  -  1);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  end  -  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  end  -  1);	  System.arraycopy(buffer,    offset,    buffer,    0,    end);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
471	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  end  -  start);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  end  -  start);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  end  -  start);	  System.arraycopy(buffer,    offset,    buffer,    0,    end);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
472	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  end  +  1);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  end  +  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  end  +  1);	  System.arraycopy(buffer,    offset,    buffer,    0,    end);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
473	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ ",  expecting  ' "+trailer+ "'  or  ' "+trailer+ "' ");  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ ",  expecting  ' "+trailer+ "'  or  ' "+trailer+ "' ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ ",  expecting  ' "+trailer+ "'  or  ' "+trailer+ "' ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   "'    or    '   "+trailer+   "'   ");    	non-compiled	[CE]  <identifier>  expected	104	None	replace
474	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ ",  ' "+trailer+ "'  or  ' "+trailer+ "' ");  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ ",  ' "+trailer+ "'  or  ' "+trailer+ "' ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ ",  ' "+trailer+ "'  or  ' "+trailer+ "' ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   "'    or    '   "+trailer+   "'   ");    	non-compiled	[CE]  <identifier>  expected	104	None	replace
475	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ ".' ");  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ ".' ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ ".' ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   "'    or    '   "+trailer+   "'   ");    	non-compiled	[CE]  <identifier>  expected	104	None	replace
476	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'  for  trailer  ' "+trailer+ "' ");  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'  for  trailer  ' "+trailer+ "' ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'  for  trailer  ' "+trailer+ "' ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   "'    or    '   "+trailer+   "'   ");    	non-compiled	[CE]  <identifier>  expected	104	None	replace
477	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "': "+trailer+ "' ");  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "': "+trailer+ "' ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "': "+trailer+ "' ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   "'    or    '   "+trailer+   "'   ");    	non-compiled	[CE]  <identifier>  expected	104	None	replace
478	[BUG]  [BUGGY]  end  =  buffer.length  -  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer.length  -  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  buffer.length  -  1;	  end    =    buffer.length;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
479	[BUG]  [BUGGY]  end  -=  buffer.length;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  buffer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  -=  buffer.length;	  end    =    buffer.length;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
480	[BUG]  [BUGGY]  End  end  =  trailer.length;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  end  =  trailer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	End  end  =  trailer.length;	  end    =    buffer.length;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
481	[BUG]  [BUGGY]  End  =  trailer.length;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	End  =  trailer.length;	  end    =    buffer.length;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
482	[BUG]  [BUGGY]  end  =  buffer.length  -  2;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer.length  -  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  buffer.length  -  2;	  end    =    buffer.length;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
483	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  end);  end--;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  end);  end--;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  end);  end--;	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    end--;    	non-compiled	[CE]  <identifier>  expected	100	None	replace
484	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  length);  end--;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  length);  end--;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	System.arraycopy(buffer,  offset,  buffer,  end,  length);  end--;	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    end--;    	non-compiled	[CE]  <identifier>  expected	100	None	replace
485	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1);  end--;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1);  end--;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1);  end--;	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    end--;    	non-compiled	[CE]  <identifier>  expected	100	None	replace
486	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length,  trailer.length);  end--;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length,  trailer.length);  end--;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length,  trailer.length);  end--;	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    end--;    	non-compiled	[CE]  <identifier>  expected	100	None	replace
487	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1);  end--;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1);  end--;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1);  end--;	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    end--;    	non-compiled	[CE]  <identifier>  expected	100	None	replace
488	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end);  end--;  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end);  end--;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  end);  end--;	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    end--;    	non-compiled	[CE]  <identifier>  expected	100	None	replace
489	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  2);  end--;  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  2);  end--;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  -  2);  end--;	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    end--;    	non-compiled	[CE]  <identifier>  expected	100	None	replace
490	[BUG]  [BUGGY]  end  -=  7;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  7;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  -=  7;	  end    -=    0;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
491	[BUG]  [BUGGY]  end  -=  4;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  4;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  -=  4;	  end    -=    0;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
492	[BUG]  [BUGGY]  end  -=  3;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  3;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  -=  3;	  end    -=    0;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
493	[BUG]  [BUGGY]  end  -=  6;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  6;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  -=  6;	  end    -=    0;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
494	[BUG]  [BUGGY]  end  -=  8;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  8;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  -=  8;	  end    -=    0;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
495	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(trailer));  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(trailer));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	throw  new  IllegalArgumentException( " ".equals(trailer));	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
496	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(trailer)?   "true "  : "false ");  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(trailer)?   "true "  : "false ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	throw  new  IllegalArgumentException( " ".equals(trailer)?   "true "  : "false ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
497	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(trailer)?  null  : " ");  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(trailer)?  null  : " ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	throw  new  IllegalArgumentException( " ".equals(trailer)?  null  : " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
498	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(trailer)?  null  : "null ");  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(trailer)?  null  : "null ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	throw  new  IllegalArgumentException( " ".equals(trailer)?  null  : "null ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
499	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(trailer)&&  trailer  ==  '0'  ||  trailer  ==  '7'));  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(trailer)&&  trailer  ==  '0'  ||  trailer  ==  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	throw  new  IllegalArgumentException( " ".equals(trailer)&&  trailer  ==  '0'  ||  trailer  ==  '7'));	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
500	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]                                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	throw  new  IllegalStateException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
501	[BUG]  [BUGGY]  end  =(length  -  10)+(trailer  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  10)+(trailer  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  10)+(trailer  -  '0');	  end    =(length    -    10)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	111	None	replace
502	[BUG]  [BUGGY]  end  =(end  -  10)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  10)+(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  10)+(length  -  '0');	  end    =(length    -    10)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	111	None	replace
503	[BUG]  [BUGGY]  end  =(length  -  9)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  9)+(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  9)+(length  -  '0');	  end    =(length    -    10)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	111	None	replace
504	[BUG]  [BUGGY]  end  =(length  <  <  1)?  3  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  3  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  3  :  BYTE_MASK;	  end    =(length    <    <    1)?    2    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
505	[BUG]  [BUGGY]  end  =(trailer  <  <  1)?  2  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  1)?  2  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  1)?  2  :  BYTE_MASK;	  end    =(length    <    <    1)?    2    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
506	[BUG]  [BUGGY]  end  =(length  -  1)?  2  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)?  2  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)?  2  :  BYTE_MASK;	  end    =(length    <    <    1)?    2    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
507	[BUG]  [BUGGY]  end  =(length  -  1)+  trailer.length  +  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)+  trailer.length  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)+  trailer.length  +  1;	  end    =(length    <    <    3)+    trailer.length    +    1;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
508	[BUG]  [BUGGY]  end  =(length  <  <  3)+  trailer.length  +  2;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+  trailer.length  +  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+  trailer.length  +  2;	  end    =(length    <    <    3)+    trailer.length    +    1;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
509	[BUG]  [BUGGY]  end  =(length  &  3)+  trailer.length  +  1;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  &  3)+  trailer.length  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  &  3)+  trailer.length  +  1;	  end    =(length    <    <    3)+    trailer.length    +    1;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
510	[BUG]  [BUGGY]  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }	  trailer    =    buffer[end-1];    if    (trailer    ==    0    ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
511	[BUG]  [BUGGY]  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '/')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '/')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '/')  {  throw  new  IllegalArgumentException( " ");  }	  trailer    =    buffer[end-1];    if    (trailer    ==    0    ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
512	[BUG]  [BUGGY]  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer!='')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer!='')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer!='')  {  throw  new  IllegalArgumentException( " ");  }	  trailer    =    buffer[end-1];    if    (trailer    ==    0    ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
513	[BUG]  [BUGGY]  trailer  =  buffer[end-2];  if  (trailer  ==  0  ||  trailer  =='')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  trailer  =  buffer[end-2];  if  (trailer  ==  0  ||  trailer  =='')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	trailer  =  buffer[end-2];  if  (trailer  ==  0  ||  trailer  =='')  {  throw  new  IllegalArgumentException( " ");  }	  trailer    =    buffer[end-1];    if    (trailer    ==    0    ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
514	[BUG]  [BUGGY]  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }	  trailer    =    buffer[end-1];    if    (trailer    ==    0    ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
515	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end,  length);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end,  length);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  end,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
516	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  length);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  length);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	System.arraycopy(buffer,  offset,  buffer,  end,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
517	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end  +  1);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end  +  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  end  +  1);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
518	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  start);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  start);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	System.arraycopy(buffer,  offset,  buffer,  end,  start);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
519	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end-1);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end-1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  end-1);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
520	[BUG]  [BUGGY]  end  =(trailer  -  1)+  length;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  -  1)+  length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  -  1)+  length;	  end    =(length    -    1)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
521	[BUG]  [BUGGY]  end  =(trailer.length  -  1)+  length;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer.length  -  1)+  length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer.length  -  1)+  length;	  end    =(length    -    1)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
522	[BUG]  [BUGGY]  end  =(length  -  1)+  trailer.length  -  1;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)+  trailer.length  -  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)+  trailer.length  -  1;	  end    =(length    -    1)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
523	[BUG]  [BUGGY]  end  =(length  -  1)/  trailer.length;  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)/  trailer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)/  trailer.length;	  end    =(length    -    1)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
524	[BUG]  [BUGGY]  end  =(trailer  <  <  3)+  length-1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  3)+  length-1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  3)+  length-1;	  end    =(length    <    <    3)+    trailer.length-1;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
525	[BUG]  [BUGGY]  end  =(length  <  <  3)+  trailer.length-2;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+  trailer.length-2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+  trailer.length-2;	  end    =(length    <    <    3)+    trailer.length-1;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
526	[BUG]  [BUGGY]  end  =(length  &  3)+  trailer.length-1;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  &  3)+  trailer.length-1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  &  3)+  trailer.length-1;	  end    =(length    <    <    3)+    trailer.length-1;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
527	[BUG]  [BUGGY]  end  =(length  -  31)+  trailer.length-1;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  31)+  trailer.length-1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  31)+  trailer.length-1;	  end    =(length    <    <    3)+    trailer.length-1;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
528	[BUG]  [BUGGY]  end  =(length  -  '0')/(length  -  '1');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')/(length  -  '1');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')/(length  -  '1');	  end    =(length    -    '0')+(length    -    '1');    	non-compiled	[CE]  <identifier>  expected	66	None	replace
529	[BUG]  [BUGGY]  end  =(length  -  '0')+(length  -  '1'  +  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+(length  -  '1'  +  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+(length  -  '1'  +  1);	  end    =(length    -    '0')+(length    -    '1');    	non-compiled	[CE]  <identifier>  expected	66	None	replace
530	[BUG]  [BUGGY]  end  =(length  -  '0')+(length  -  '1',  trailer.length);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+(length  -  '1',  trailer.length);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+(length  -  '1',  trailer.length);	  end    =(length    -    '0')+(length    -    '1');    	non-compiled	[CE]  <identifier>  expected	66	None	replace
531	[BUG]  [BUGGY]  end  =(length  -  '0')+(length  -  '1',  trailer);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+(length  -  '1',  trailer);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+(length  -  '1',  trailer);	  end    =(length    -    '0')+(length    -    '1');    	non-compiled	[CE]  <identifier>  expected	66	None	replace
532	[BUG]  [BUGGY]  end  =(end  -  '0')+(length  -  '1');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  '0')+(length  -  '1');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  '0')+(length  -  '1');	  end    =(length    -    '0')+(length    -    '1');    	non-compiled	[CE]  <identifier>  expected	66	None	replace
533	[BUG]  [BUGGY]  end  =(length  <  <  1)?  1  :  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  1  :  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  1  :  1;	  end    =(length    <    <    1)?    BYTE_MASK    :    1;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
534	[BUG]  [BUGGY]  end  =(length  <  <  1)?  trailer  :  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  trailer  :  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  trailer  :  1;	  end    =(length    <    <    1)?    BYTE_MASK    :    1;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
535	[BUG]  [BUGGY]  end  =(length  &  1)?  BYTE_MASK  :  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  &  1)?  BYTE_MASK  :  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  &  1)?  BYTE_MASK  :  1;	  end    =(length    <    <    1)?    BYTE_MASK    :    1;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
536	[BUG]  [BUGGY]  end  =(length  <  <  1)?  trailer.length  :  1;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  trailer.length  :  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  trailer.length  :  1;	  end    =(length    <    <    1)?    BYTE_MASK    :    1;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
537	[BUG]  [BUGGY]  end  =(length  -  1)+  trailer.length  +(length  -  1);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)+  trailer.length  +(length  -  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)+  trailer.length  +(length  -  1);	  end    =(length    <    <    3)+    trailer.length    +(length    -    1);    	non-compiled	[CE]  <identifier>  expected	119	None	replace
538	[BUG]  [BUGGY]  end  =(length  &  3)+  trailer.length  +(length  -  1);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  &  3)+  trailer.length  +(length  -  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  &  3)+  trailer.length  +(length  -  1);	  end    =(length    <    <    3)+    trailer.length    +(length    -    1);    	non-compiled	[CE]  <identifier>  expected	119	None	replace
539	[BUG]  [BUGGY]  end  =(length  -  31)+  trailer.length  +(length  -  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  31)+  trailer.length  +(length  -  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  31)+  trailer.length  +(length  -  1);	  end    =(length    <    <    3)+    trailer.length    +(length    -    1);    	non-compiled	[CE]  <identifier>  expected	119	None	replace
540	[BUG]  [BUGGY]  end  =(length  -  '0')+(end  -  '9');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+(end  -  '9');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+(end  -  '9');	  end    =(length    -    '0')+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	63	None	replace
541	[BUG]  [BUGGY]  end  =(length  -  '0')+(length  -  '8');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+(length  -  '8');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+(length  -  '8');	  end    =(length    -    '0')+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	63	None	replace
542	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ ",  expecting  ' "+trailer+ "'  or  ' "+trailer+ ") ");  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ ",  expecting  ' "+trailer+ "'  or  ' "+trailer+ ") ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ ",  expecting  ' "+trailer+ "'  or  ' "+trailer+ ") ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   "'    or    '   "+trailer+   ")   ");    	non-compiled	[CE]  <identifier>  expected	103	None	replace
543	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'  for  trailer  ' "+trailer+ ") ");  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'  for  trailer  ' "+trailer+ ") ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'  for  trailer  ' "+trailer+ ") ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   "'    or    '   "+trailer+   ")   ");    	non-compiled	[CE]  <identifier>  expected	103	None	replace
544	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "' ") ");  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "' ") ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "' ") ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   "'    or    '   "+trailer+   ")   ");    	non-compiled	[CE]  <identifier>  expected	103	None	replace
545	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  -  1);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
546	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length,  trailer.length);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length,  trailer.length);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length,  trailer.length);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
547	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
548	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  2);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  2);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  -  2);	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
549	[BUG]  [BUGGY]  end  =  trailer.length  /  2  +  1;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  /  2  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.length  /  2  +  1;	  end    =    trailer.length    /    2;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
550	[BUG]  [BUGGY]  end  =  trailer.length  /  2L;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  /  2L;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.length  /  2L;	  end    =    trailer.length    /    2;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
551	[BUG]  [BUGGY]  end  =  trailer.length  /  2  *  2;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  /  2  *  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.length  /  2  *  2;	  end    =    trailer.length    /    2;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
552	[BUG]  [BUGGY]  end  =  trailer.length  *  2;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  *  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.length  *  2;	  end    =    trailer.length    /    2;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
553	[BUG]  [BUGGY]  end  =(length  -  1)?  BYTE_MASK  :  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)?  BYTE_MASK  :  BYTE_MASK  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)?  BYTE_MASK  :  BYTE_MASK  +  1;	  end    =(length    <    <    1)?    BYTE_MASK    :    BYTE_MASK    +    1;    	non-compiled	[CE]  <identifier>  expected	83	None	replace
554	[BUG]  [BUGGY]  end  =(length  +  1)?  BYTE_MASK  :  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  +  1)?  BYTE_MASK  :  BYTE_MASK  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  +  1)?  BYTE_MASK  :  BYTE_MASK  +  1;	  end    =(length    <    <    1)?    BYTE_MASK    :    BYTE_MASK    +    1;    	non-compiled	[CE]  <identifier>  expected	83	None	replace
555	[BUG]  [BUGGY]  end  =(length  <  <  1)?  2  :  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  2  :  BYTE_MASK  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  2  :  BYTE_MASK  +  1;	  end    =(length    <    <    1)?    BYTE_MASK    :    BYTE_MASK    +    1;    	non-compiled	[CE]  <identifier>  expected	83	None	replace
556	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsByte(converter);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsByte(converter);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().quoteAsByte(converter);	  end    =    JsonStringEncoder.getInstance().quoteAsByte(trailer);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
557	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsByte(buffer);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsByte(buffer);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().quoteAsByte(buffer);	  end    =    JsonStringEncoder.getInstance().quoteAsByte(trailer);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
558	[BUG]  [BUGGY]  end  =(end  <  <  1)?  BYTE_MASK  -  1  :  BYTE_SHIFT;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  1)?  BYTE_MASK  -  1  :  BYTE_SHIFT;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  1)?  BYTE_MASK  -  1  :  BYTE_SHIFT;	  end    =(end    <    <    1)?    BYTE_MASK    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	73	None	replace
559	[BUG]  [BUGGY]  end  =(start  <  <  1)?  BYTE_MASK  -  1  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(start  <  <  1)?  BYTE_MASK  -  1  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(start  <  <  1)?  BYTE_MASK  -  1  :  BYTE_MASK;	  end    =(end    <    <    1)?    BYTE_MASK    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	73	None	replace
560	[BUG]  [BUGGY]  result  =(result  -  '0')+(length  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  -  '0')+(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  -  '0')+(length  -  '0');	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	36	None	replace
561	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  -  '0'  +  1);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(length  -  '0'  +  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  <  <  3)+(length  -  '0'  +  1);	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	36	None	replace
562	[BUG]  [BUGGY]  result  =(result  <  <  3)+(start  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(start  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  <  <  3)+(start  -  '0');	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	36	None	replace
563	[BUG]  [BUGGY]  end  =(length  <  <  1)?  2  :  8;  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  2  :  8;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  2  :  8;	  end    =(length    <    <    1)?    2    :    4;    	non-compiled	[CE]  <identifier>  expected	113	None	replace
564	[BUG]  [BUGGY]  end  =(length  <  <  1)?  2  :  6;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  2  :  6;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  2  :  6;	  end    =(length    <    <    1)?    2    :    4;    	non-compiled	[CE]  <identifier>  expected	113	None	replace
565	[BUG]  [BUGGY]  end  =  trailer.length()  /  2L;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  /  2L;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.length()  /  2L;	  end    =    trailer.length()    /    2;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
566	[BUG]  [BUGGY]  end  =(length  <  <  1)?  0  :  0;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  0  :  0;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  0  :  0;	  end    =(length    <    <    1)?    3    :    4;    	non-compiled	[CE]  <identifier>  expected	114	None	replace
567	[BUG]  [BUGGY]  end  =(trailer  <  <  1)?  3  :  4;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  1)?  3  :  4;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  1)?  3  :  4;	  end    =(length    <    <    1)?    3    :    4;    	non-compiled	[CE]  <identifier>  expected	114	None	replace
568	[BUG]  [BUGGY]  end  =(end  <  <  1)?  1  :  0;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  1)?  1  :  0;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  1)?  1  :  0;	  end    =(length    <    <    1)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	117	None	replace
569	[BUG]  [BUGGY]  trailer  =  buffer[end-1];  if  (trailer  ==  0)  {  end--;  }  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  trailer  =  buffer[end-1];  if  (trailer  ==  0)  {  end--;  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	trailer  =  buffer[end-1];  if  (trailer  ==  0)  {  end--;  }	  trailer    =    buffer[end-1];    if    (trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
570	[BUG]  [BUGGY]  trailer  =  buffer[end-1];  if  (trailer  =='')  {  end--;  }  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  trailer  =  buffer[end-1];  if  (trailer  =='')  {  end--;  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	trailer  =  buffer[end-1];  if  (trailer  =='')  {  end--;  }	  trailer    =    buffer[end-1];    if    (trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
571	[BUG]  [BUGGY]  trailer  =  buffer[end-1];  if  (trailer  ==''  ||  trailer  =='')  {  end--;  }  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  trailer  =  buffer[end-1];  if  (trailer  ==''  ||  trailer  =='')  {  end--;  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	trailer  =  buffer[end-1];  if  (trailer  ==''  ||  trailer  =='')  {  end--;  }	  trailer    =    buffer[end-1];    if    (trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
572	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end  -  start);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  end  -  start);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  end  -  start);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
573	[BUG]  [BUGGY]  end  =(end  <  <  1)?  0  :  BYTE_MASK  -  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  1)?  0  :  BYTE_MASK  -  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  1)?  0  :  BYTE_MASK  -  1;	  end    =(length    <    <    1)?    0    :    BYTE_MASK    -    1;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
574	[BUG]  [BUGGY]  end  =(trailer  <  <  6)?  BYTE_MASK  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  6)?  BYTE_MASK  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  6)?  BYTE_MASK  :  BYTE_MASK;	  end    =(trailer    <    <    1)?    BYTE_MASK    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
575	[BUG]  [BUGGY]  end  =(trailer  <  <  1)?  BYTE_MASK  :  BYTE_SHIFT;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  1)?  BYTE_MASK  :  BYTE_SHIFT;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  1)?  BYTE_MASK  :  BYTE_SHIFT;	  end    =(trailer    <    <    1)?    BYTE_MASK    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
576	[BUG]  [BUGGY]  end  =(trailer  <  <  3)+  trailer.length  +(length  -  1));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  3)+  trailer.length  +(length  -  1));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  3)+  trailer.length  +(length  -  1));	  end    =(length    <    <    3)+    trailer.length    +(length    -    1));    	non-compiled	[CE]  <identifier>  expected	118	None	replace
577	[BUG]  [BUGGY]  end  =(length  +  3)+  trailer.length  +(length  -  1));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  +  3)+  trailer.length  +(length  -  1));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  +  3)+  trailer.length  +(length  -  1));	  end    =(length    <    <    3)+    trailer.length    +(length    -    1));    	non-compiled	[CE]  <identifier>  expected	118	None	replace
578	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ ",'  or  ' "+trailer+ ") ");  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ ",'  or  ' "+trailer+ ") ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ ",'  or  ' "+trailer+ ") ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   "'    or    '   "+trailer+   ")   ");    	non-compiled	[CE]  <identifier>  expected	103	None	replace
579	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ ",',  expecting  ' "+trailer+ "'  or  ' "+trailer+ ") ");  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ ",',  expecting  ' "+trailer+ "'  or  ' "+trailer+ ") ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ ",',  expecting  ' "+trailer+ "'  or  ' "+trailer+ ") ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   "'    or    '   "+trailer+   ")   ");    	non-compiled	[CE]  <identifier>  expected	103	None	replace
580	[BUG]  [BUGGY]  Thread.currentThread().interrupt(throwOctal);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().interrupt(throwOctal);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Thread.currentThread().interrupt(throwOctal);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
581	[BUG]  [BUGGY]  Thread.currentThread().interrupt(getChronology());  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().interrupt(getChronology());  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Thread.currentThread().interrupt(getChronology());	  Thread.currentThread().interrupt();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
582	[BUG]  [BUGGY]  end  =(trailer  ==  '0'  ||  trailer  ==  '9')?  -1  :  1;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  ==  '0'  ||  trailer  ==  '9')?  -1  :  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  ==  '0'  ||  trailer  ==  '9')?  -1  :  1;	  end    =    -1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
583	[BUG]  [BUGGY]  end  =(trailer  ==  '0'  ||  trailer  ==  '9')?  -1  :  -1;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  ==  '0'  ||  trailer  ==  '9')?  -1  :  -1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  ==  '0'  ||  trailer  ==  '9')?  -1  :  -1;	  end    =    -1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
584	[BUG]  [BUGGY]  end  =(trailer  <  <  3)?  BYTE_MASK  -  1  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  3)?  BYTE_MASK  -  1  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  3)?  BYTE_MASK  -  1  :  BYTE_MASK;	  end    =(trailer    <    <    1)?    BYTE_MASK    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
585	[BUG]  [BUGGY]  end  =(end  <  <  1)?  BYTE_MASK  :  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  1)?  BYTE_MASK  :  BYTE_MASK  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  1)?  BYTE_MASK  :  BYTE_MASK  +  1;	  end    =(end    <    <    1)?    BYTE_MASK    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
586	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsCII(trailer)+  1;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsCII(trailer)+  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().quoteAsCII(trailer)+  1;	  end    =    JsonStringEncoder.getInstance().quoteAsCII(trailer));    	non-compiled	[CE]  <identifier>  expected	91	None	replace
587	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsCII(start,  trailer));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsCII(start,  trailer));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().quoteAsCII(start,  trailer));	  end    =    JsonStringEncoder.getInstance().quoteAsCII(trailer));    	non-compiled	[CE]  <identifier>  expected	91	None	replace
588	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsCII(end));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsCII(end));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().quoteAsCII(end));	  end    =    JsonStringEncoder.getInstance().quoteAsCII(trailer));    	non-compiled	[CE]  <identifier>  expected	91	None	replace
589	[BUG]  [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(trailer  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(trailer  -  '0')+  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+  trailer.length  +(trailer  -  '0')+  1;	  end    =(length    <    <    3)+    trailer.length    +(trailer    -    '0');    	non-compiled	[CE]  <identifier>  expected	31	None	replace
590	[BUG]  [BUGGY]  end  =(trailer  <  <  3)+  length  +(trailer  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  3)+  length  +(trailer  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  3)+  length  +(trailer  -  '0');	  end    =(length    <    <    3)+    trailer.length    +(trailer    -    '0');    	non-compiled	[CE]  <identifier>  expected	31	None	replace
591	[BUG]  [BUGGY]  end  =(start  <  <  3)+  trailer.length  +(trailer  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(start  <  <  3)+  trailer.length  +(trailer  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(start  <  <  3)+  trailer.length  +(trailer  -  '0');	  end    =(length    <    <    3)+    trailer.length    +(trailer    -    '0');    	non-compiled	[CE]  <identifier>  expected	31	None	replace
592	[BUG]  [BUGGY]  ||  trailer  ==  ':')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer);  }  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  ':')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer);  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	||  trailer  ==  ':')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer);  }	  ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1],    trailer);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
593	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  start);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  start);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  start);	  System.arraycopy(buffer,    offset,    buffer,    0,    end);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
594	[BUG]  [BUGGY]  result  =(result  -  '0')+(byte  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  -  '0')+(byte  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  -  '0')+(byte  -  '0');	  result    =(result    <    <    3)+(byte    -    '0');    	non-compiled	[CE]  <identifier>  expected	38	None	replace
595	[BUG]  [BUGGY]  result  =(result  -  3)+(byte  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  -  3)+(byte  -  '0')+  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  -  3)+(byte  -  '0')+  1;	  result    =(result    <    <    3)+(byte    -    '0');    	non-compiled	[CE]  <identifier>  expected	38	None	replace
596	[BUG]  [BUGGY]  end  =(length  -  1)+  buffer.length;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)+  buffer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)+  buffer.length;	  end    =(length    -    1)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
597	[BUG]  [BUGGY]  end  =(start  -  1)+  trailer.length;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(start  -  1)+  trailer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(start  -  1)+  trailer.length;	  end    =(length    -    1)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
598	[BUG]  [BUGGY]  end  =(trailer  <  <  1)?  BYTE_MASK  :  2;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  1)?  BYTE_MASK  :  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  1)?  BYTE_MASK  :  2;	  end    =(length    <    <    1)?    BYTE_MASK    :    2;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
599	[BUG]  [BUGGY]  End  -=  trailer.length();  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  trailer.length();  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	End  -=  trailer.length();	  end    -=    trailer.length();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
600	[BUG]  [BUGGY]  end  =(length  -  3)+  trailer.length  +(length  -  '0')/(length  -  '7')+  1);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  3)+  trailer.length  +(length  -  '0')/(length  -  '7')+  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  3)+  trailer.length  +(length  -  '0')/(length  -  '7')+  1);	  end    =(length    -    3)+    trailer.length    +(length    -    '0')/(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	122	None	replace
601	[BUG]  [BUGGY]  end  =(length  -  3)+  trailer.length  +(length  -  '0')/(length  -  '7')+  2);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  3)+  trailer.length  +(length  -  '0')/(length  -  '7')+  2);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  3)+  trailer.length  +(length  -  '0')/(length  -  '7')+  2);	  end    =(length    -    3)+    trailer.length    +(length    -    '0')/(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	122	None	replace
602	[BUG]  [BUGGY]  end  =(trailer  &  3)+  length;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  &  3)+  length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  &  3)+  length;	  end    =(length    &    3)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
603	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsIgnored(buffer);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsIgnored(buffer);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().quoteAsIgnored(buffer);	  end    =    JsonStringEncoder.getInstance().quoteAsIgnored(trailer);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
604	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsIgnored(trailer,  start);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsIgnored(trailer,  start);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().quoteAsIgnored(trailer,  start);	  end    =    JsonStringEncoder.getInstance().quoteAsIgnored(trailer);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
605	[BUG]  [BUGGY]  end  =(start  +  1)?  BYTE_MASK  -  1  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(start  +  1)?  BYTE_MASK  -  1  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(start  +  1)?  BYTE_MASK  -  1  :  BYTE_MASK;	  end    =(length    +    1)?    BYTE_MASK    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
606	[BUG]  [BUGGY]  end  =(end  +  1)?  BYTE_MASK  -  1  :  BYTE_SHIFT;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  +  1)?  BYTE_MASK  -  1  :  BYTE_SHIFT;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  +  1)?  BYTE_MASK  -  1  :  BYTE_SHIFT;	  end    =(length    +    1)?    BYTE_MASK    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
607	[BUG]  [BUGGY]  end  =(trailer  <  <  3)+(length  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  3)+(length  -  '0')+  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  3)+(length  -  '0')+  1;	  end    =(trailer    <    <    3)+    length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	32	None	replace
608	[BUG]  [BUGGY]  end  =(trailer  <  <  3)+(length  -  '0'  +  length);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  3)+(length  -  '0'  +  length);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  3)+(length  -  '0'  +  length);	  end    =(trailer    <    <    3)+    length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	32	None	replace
609	[BUG]  [BUGGY]  end  =  trailer.trim();  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.trim();  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.trim();	  end    =    trailer.length()    -    2;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
610	[BUG]  [BUGGY]  end  =(length  -  1)+  buffer.length  +(length  -  '0')+(length  -  '7'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)+  buffer.length  +(length  -  '0')+(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)+  buffer.length  +(length  -  '0')+(length  -  '7'));	  end    =(length    -    1)+    trailer.length    +(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	123	None	replace
611	[BUG]  [BUGGY]  end  =(trailer  -  1)+  trailer.length  +(length  -  '0')+(length  -  '7'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  -  1)+  trailer.length  +(length  -  '0')+(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  -  1)+  trailer.length  +(length  -  '0')+(length  -  '7'));	  end    =(length    -    1)+    trailer.length    +(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	123	None	replace
612	[BUG]  [BUGGY]  Pipeline.this.reportError( "Current  line  not  followed  by  a  ' "+trailer+ ",'  or  ' "+trailer+ "' ");  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Current  line  not  followed  by  a  ' "+trailer+ ",'  or  ' "+trailer+ "' ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Current  line  not  followed  by  a  ' "+trailer+ ",'  or  ' "+trailer+ "' ");	  Pipeline.this.reportError(   "Current    line    not    followed    by    a    '   "+trailer+   "'    or    '   "+trailer+   "'   ");    	non-compiled	[CE]  <identifier>  expected	107	None	replace
613	[BUG]  [BUGGY]  Pipeline.this.reportError( "Current  line  not  followed  by  a  ' "+trailer+ "'  or  ' "+trailer+ ",' ");  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Current  line  not  followed  by  a  ' "+trailer+ "'  or  ' "+trailer+ ",' ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Current  line  not  followed  by  a  ' "+trailer+ "'  or  ' "+trailer+ ",' ");	  Pipeline.this.reportError(   "Current    line    not    followed    by    a    '   "+trailer+   "'    or    '   "+trailer+   "'   ");    	non-compiled	[CE]  <identifier>  expected	107	None	replace
614	[BUG]  [BUGGY]  Pipeline.this.reportError( "Current  line  not  followed  by  a  ' "+trailer+ "'  or  ' "+trailer+ "',  expecting  ' "+trailer+ "' ");  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Current  line  not  followed  by  a  ' "+trailer+ "'  or  ' "+trailer+ "',  expecting  ' "+trailer+ "' ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Current  line  not  followed  by  a  ' "+trailer+ "'  or  ' "+trailer+ "',  expecting  ' "+trailer+ "' ");	  Pipeline.this.reportError(   "Current    line    not    followed    by    a    '   "+trailer+   "'    or    '   "+trailer+   "'   ");    	non-compiled	[CE]  <identifier>  expected	107	None	replace
615	[BUG]  [BUGGY]  Pipeline.this.reportError( "Current  line  not  followed  by  a  ' "+trailer+ "'  or  ' "+trailer+ "'  and  ' "+trailer+ "' ");  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Current  line  not  followed  by  a  ' "+trailer+ "'  or  ' "+trailer+ "'  and  ' "+trailer+ "' ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Current  line  not  followed  by  a  ' "+trailer+ "'  or  ' "+trailer+ "'  and  ' "+trailer+ "' ");	  Pipeline.this.reportError(   "Current    line    not    followed    by    a    '   "+trailer+   "'    or    '   "+trailer+   "'   ");    	non-compiled	[CE]  <identifier>  expected	107	None	replace
616	[BUG]  [BUGGY]  Pipeline.this.report( "Current  line  not  followed  by  a  ' "+trailer+ "'  or  ' "+trailer+ "' ");  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.report( "Current  line  not  followed  by  a  ' "+trailer+ "'  or  ' "+trailer+ "' ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.report( "Current  line  not  followed  by  a  ' "+trailer+ "'  or  ' "+trailer+ "' ");	  Pipeline.this.reportError(   "Current    line    not    followed    by    a    '   "+trailer+   "'    or    '   "+trailer+   "'   ");    	non-compiled	[CE]  <identifier>  expected	107	None	replace
617	[BUG]  [BUGGY]  end  =(trailer  <  <  3)+  trailer.length  +(length  -  1)/(length  -  '7'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  3)+  trailer.length  +(length  -  1)/(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  3)+  trailer.length  +(length  -  1)/(length  -  '7'));	  end    =(length    <    <    3)+    trailer.length    +(length    -    1)/(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	125	None	replace
618	[BUG]  [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  1)/(length  -  '7')+  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  1)/(length  -  '7')+  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+  trailer.length  +(length  -  1)/(length  -  '7')+  1);	  end    =(length    <    <    3)+    trailer.length    +(length    -    1)/(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	125	None	replace
619	[BUG]  [BUGGY]  end  =(length  -  10  +(trailer  -  '0'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  10  +(trailer  -  '0'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  10  +(trailer  -  '0'));	  end    =(length    -    10)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	111	None	replace
620	[BUG]  [BUGGY]  end  =(end  <  <  1)?  2  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  1)?  2  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  1)?  2  :  BYTE_MASK;	  end    =(length    <    <    1)?    2    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
621	[BUG]  [BUGGY]  end  =(start  <  <  3)+(trailer  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(start  <  <  3)+(trailer  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(start  <  <  3)+(trailer  -  '0');	  end    =(length    <    <    3)+(trailer    -    '0');    	non-compiled	[CE]  <identifier>  expected	64	None	replace
622	[BUG]  [BUGGY]  end  =(len  -  3)+(trailer  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(len  -  3)+(trailer  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(len  -  3)+(trailer  -  '0');	  end    =(length    <    <    3)+(trailer    -    '0');    	non-compiled	[CE]  <identifier>  expected	64	None	replace
623	[BUG]  [BUGGY]  end  =(length  <  <  3)+(trailer  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+(trailer  -  '0')+  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+(trailer  -  '0')+  1;	  end    =(length    <    <    3)+(trailer    -    '0');    	non-compiled	[CE]  <identifier>  expected	64	None	replace
624	[BUG]  [BUGGY]  end  =(length  -  '0'  +  length);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0'  +  length);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0'  +  length);	  end    =(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	79	None	replace
625	[BUG]  [BUGGY]  end  =(length  -  '0')+(length  -  '1'  +  length);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+(length  -  '1'  +  length);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+(length  -  '1'  +  length);	  end    =(length    -    '0')+(length    -    '1');    	non-compiled	[CE]  <identifier>  expected	66	None	replace
626	[BUG]  [BUGGY]  end  =(length  -  '0')+(length  -  '1',  start);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+(length  -  '1',  start);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+(length  -  '1',  start);	  end    =(length    -    '0')+(length    -    '1');    	non-compiled	[CE]  <identifier>  expected	66	None	replace
627	[BUG]  [BUGGY]  end  =(length  -  '0')+(length  -  '1'  +  2);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+(length  -  '1'  +  2);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+(length  -  '1'  +  2);	  end    =(length    -    '0')+(length    -    '1');    	non-compiled	[CE]  <identifier>  expected	66	None	replace
628	[BUG]  [BUGGY]  end  =(length  -  3)+  buffer.length  +(length  -  '0')+(length  -  '7'));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  3)+  buffer.length  +(length  -  '0')+(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  3)+  buffer.length  +(length  -  '0')+(length  -  '7'));	  end    =(length    -    3)+    trailer.length    +(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	61	None	replace
629	[BUG]  [BUGGY]  end  =(length  -  3)+  trailer.length  +(length  -  '0')+(length  -  '7')+  2);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  3)+  trailer.length  +(length  -  '0')+(length  -  '7')+  2);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  3)+  trailer.length  +(length  -  '0')+(length  -  '7')+  2);	  end    =(length    -    3)+    trailer.length    +(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	61	None	replace
630	[BUG]  [BUGGY]  end  =(length  <  <  1)?  0x7F  :  1;  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  0x7F  :  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  0x7F  :  1;	  end    =    1;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
631	[BUG]  [BUGGY]  end  =(length  >  0)?  1  :  0;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  >  0)?  1  :  0;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  >  0)?  1  :  0;	  end    =    1;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
632	[BUG]  [BUGGY]  end  =(length  >  0)?  length  :  1;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  >  0)?  length  :  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  >  0)?  length  :  1;	  end    =    1;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
633	[BUG]  [BUGGY]  end  =(length  <  <  1)?  BYTE_MASK  -  1  :  BYTE_MASK  +  2;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  BYTE_MASK  -  1  :  BYTE_MASK  +  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  BYTE_MASK  -  1  :  BYTE_MASK  +  2;	  end    =(length    <    <    1)?    BYTE_MASK    -    1    :    BYTE_MASK    +    1;    	non-compiled	[CE]  <identifier>  expected	72	None	replace
634	[BUG]  [BUGGY]  end  =(length  -  '0')+  trailer.length  +(length  -  '7')-1);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+  trailer.length  +(length  -  '7')-1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+  trailer.length  +(length  -  '7')-1);	  end    =(length    -    '0')+    trailer.length    +(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
635	[BUG]  [BUGGY]  end  =(length  -  '0')+  trailer.length  +(end  -  '7')+  1);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+  trailer.length  +(end  -  '7')+  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+  trailer.length  +(end  -  '7')+  1);	  end    =(length    -    '0')+    trailer.length    +(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
636	[BUG]  [BUGGY]  end  =(length  -  '0')/  trailer.length  +(length  -  '7'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')/  trailer.length  +(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')/  trailer.length  +(length  -  '7'));	  end    =(length    -    '0')+    trailer.length    +(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
637	[BUG]  [BUGGY]  end  =(length  -  start)+  trailer.length-1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  start)+  trailer.length-1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  start)+  trailer.length-1;	  end    =(length    <    <    3)+    trailer.length-1;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
638	[BUG]  [BUGGY]  end  =(length  -  1)+  trailer.length  +(length  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)+  trailer.length  +(length  -  '0')+  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)+  trailer.length  +(length  -  '0')+  1;	  end    =(length    -    1)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	120	None	replace
639	[BUG]  [BUGGY]  end  =(length  -  1)+  trailer.length  +(end  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)+  trailer.length  +(end  -  '0')+  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)+  trailer.length  +(end  -  '0')+  1;	  end    =(length    -    1)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	120	None	replace
640	[BUG]  [BUGGY]  end  =(length  -  1)+  buffer.length  +(length  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)+  buffer.length  +(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)+  buffer.length  +(length  -  '0');	  end    =(length    -    1)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	120	None	replace
641	[BUG]  [BUGGY]  end  =(length  -  '0')+(length  -  '9')+  1);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+(length  -  '9')+  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+(length  -  '9')+  1);	  end    =(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	56	None	replace
642	[BUG]  [BUGGY]  end  =(length  -  '0')+(length  -  '7')-1);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+(length  -  '7')-1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+(length  -  '7')-1);	  end    =(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	56	None	replace
643	[BUG]  [BUGGY]  ||  trailer  ==  ':')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer));  }  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  ':')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer));  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	||  trailer  ==  ':')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer));  }	  ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1],    trailer));    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
644	[BUG]  [BUGGY]  end  =(trailer  <  <  3)+  trailer.length  +(end  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  3)+  trailer.length  +(end  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  3)+  trailer.length  +(end  -  '0');	  end    =(trailer    <    <    3)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	96	None	replace
645	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  end,  buffer,  start,  length);  end  =  0;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  offset,  end,  buffer,  start,  length);  end  =  0;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	System.arraycopy(buffer,  offset,  end,  buffer,  start,  length);  end  =  0;	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    end    =    0;    	non-compiled	[CE]  <identifier>  expected	88	None	replace
646	[BUG]  [BUGGY]  end  =(length  -  '0')+(length  -  '0'  +  1);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+(length  -  '0'  +  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+(length  -  '0'  +  1);	  end    =(length    -    '0')+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	63	None	replace
647	[BUG]  [BUGGY]  end  =(length  -  '0')+(length  -  '0'  +  length);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+(length  -  '0'  +  length);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+(length  -  '0'  +  length);	  end    =(length    -    '0')+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	63	None	replace
648	[BUG]  [BUGGY]  ||  trailer  ==  'n')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  'n')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	||  trailer  ==  'n')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
649	[BUG]  [BUGGY]  end  =(end  <  <  3)+(length  -  '0'  +  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)+(length  -  '0'  +  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)+(length  -  '0'  +  1);	  end    =(end    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	67	None	replace
650	[BUG]  [BUGGY]  end  =(end  <  <  3)+(length  -  '0'  +  length);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)+(length  -  '0'  +  length);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)+(length  -  '0'  +  length);	  end    =(end    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	67	None	replace
651	[BUG]  [BUGGY]  end  =(end  <  <  3)+(length  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)+(length  -  '0')+  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)+(length  -  '0')+  1;	  end    =(end    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	67	None	replace
652	[BUG]  [BUGGY]  end  =(length  <  <  3)+(end  -  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+(end  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+(end  -  '0');	  end    =(end    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	67	None	replace
653	[BUG]  [BUGGY]  end  =  0L  |  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  0L  |  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  0L  |  BYTE_MASK;	  end    =    0L;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
654	[BUG]  [BUGGY]  end  =  0L  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  0L  *  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  0L  *  BYTE_MASK;	  end    =    0L;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
655	[BUG]  [BUGGY]  end  =  0L  +  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  0L  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  0L  +  1;	  end    =    0L;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
656	[BUG]  [BUGGY]  end  =(length  -  start)+  trailer.length  +  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  start)+  trailer.length  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  start)+  trailer.length  +  1;	  end    =(length    <    <    3)+    trailer.length    +    1;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
657	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'  and  ' "+trailer+ "' ");  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'  and  ' "+trailer+ "' ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'  and  ' "+trailer+ "' ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   "'    or    '   "+trailer+   "'   ");    	non-compiled	[CE]  <identifier>  expected	104	None	replace
658	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ ",  ignoring  ' "+trailer+ "'  or  ' "+trailer+ "' ");  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ ",  ignoring  ' "+trailer+ "'  or  ' "+trailer+ "' ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ ",  ignoring  ' "+trailer+ "'  or  ' "+trailer+ "' ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   "'    or    '   "+trailer+   "'   ");    	non-compiled	[CE]  <identifier>  expected	104	None	replace
659	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "' ",  allNUL);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "' ",  allNUL);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "' ",  allNUL);	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   "'    or    '   "+trailer+   "'   ");    	non-compiled	[CE]  <identifier>  expected	104	None	replace
660	[BUG]  [BUGGY]  end  -=  trailer.length  +  2;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length  +  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  -=  trailer.length  +  2;	  end    -=    trailer.length;    	non-compiled	[CE]  <identifier>  expected	102	None	replace
661	[BUG]  [BUGGY]  end  =(length  -  '0')+  trailer.length  +(trailer  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+  trailer.length  +(trailer  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+  trailer.length  +(trailer  -  '0');	  end    =(length    -    '0')+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	30	None	replace
662	[BUG]  [BUGGY]  end  =(length  -  '0')/  trailer.length  +(length  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')/  trailer.length  +(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')/  trailer.length  +(length  -  '0');	  end    =(length    -    '0')+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	30	None	replace
663	[BUG]  [BUGGY]  end  =(length  -  '0')+(trailer  -  '3');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+(trailer  -  '3');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+(trailer  -  '3');	  end    =(length    -    '0')+(length    -    '3');    	non-compiled	[CE]  <identifier>  expected	65	None	replace
664	[BUG]  [BUGGY]  end  =  buffer.length  +  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer.length  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  buffer.length  +  1;	  end    =    buffer.length;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
665	[BUG]  [BUGGY]  end  =  buffer[end-1];  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer[end-1];  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  buffer[end-1];	  end    =    buffer.length;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
666	[BUG]  [BUGGY]  end  =(length  -  1)?  BYTE_MASK  :  4;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)?  BYTE_MASK  :  4;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)?  BYTE_MASK  :  4;	  end    =(length    -    1)?    BYTE_MASK    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
667	[BUG]  [BUGGY]  end  =(end  -  1)?  BYTE_MASK  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  1)?  BYTE_MASK  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  1)?  BYTE_MASK  :  BYTE_MASK;	  end    =(length    -    1)?    BYTE_MASK    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
668	[BUG]  [BUGGY]  end  =(length  >  0)?  length  :  2;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  >  0)?  length  :  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  >  0)?  length  :  2;	  end    =    2;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
669	[BUG]  [BUGGY]  end  =(start  -  1)?  BYTE_MASK  -  1  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(start  -  1)?  BYTE_MASK  -  1  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(start  -  1)?  BYTE_MASK  -  1  :  BYTE_MASK;	  end    =(length    -    1)?    BYTE_MASK    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
670	[BUG]  [BUGGY]  end  =(end  -  1)?  BYTE_MASK  -  1  :  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  1)?  BYTE_MASK  -  1  :  BYTE_MASK  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  1)?  BYTE_MASK  -  1  :  BYTE_MASK  +  1;	  end    =(length    -    1)?    BYTE_MASK    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
671	[BUG]  [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  '0')/(end  -  '7'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  '0')/(end  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+  trailer.length  +(length  -  '0')/(end  -  '7'));	  end    =(end    <    <    3)+    trailer.length    +(length    -    '0')/(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	124	None	replace
672	[BUG]  [BUGGY]  end  =(end  <  <  3)+  trailer.length  +(long)-  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)+  trailer.length  +(long)-  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)+  trailer.length  +(long)-  '0');	  end    =(end    <    <    3)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	33	None	replace
673	[BUG]  [BUGGY]  end  =(end  <  <  3)+  length  +(trailer  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)+  length  +(trailer  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)+  length  +(trailer  -  '0');	  end    =(end    <    <    3)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	33	None	replace
674	[BUG]  [BUGGY]  ||  trailer  ==  ':')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  ':')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	||  trailer  ==  ':')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }	  ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1]);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
675	[BUG]  [BUGGY]  end  =(length  -  3)+  trailer.length  +(length  -  1)+(length  -  '7'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  3)+  trailer.length  +(length  -  1)+(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  3)+  trailer.length  +(length  -  1)+(length  -  '7'));	  end    =(length    <    <    3)+    trailer.length    +(length    -    1)+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	58	None	replace
676	[BUG]  [BUGGY]  end  =(length  -  1  <  <  3)+  trailer.length  +(length  -  1)+(length  -  '7'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1  <  <  3)+  trailer.length  +(length  -  1)+(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1  <  <  3)+  trailer.length  +(length  -  1)+(length  -  '7'));	  end    =(length    <    <    3)+    trailer.length    +(length    -    1)+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	58	None	replace
677	[BUG]  [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  1)+(end  -  '7')+  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  1)+(end  -  '7')+  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+  trailer.length  +(length  -  1)+(end  -  '7')+  1);	  end    =(length    <    <    3)+    trailer.length    +(length    -    1)+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	58	None	replace
678	[BUG]  [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  1)+  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  1)+  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+  trailer.length  +(length  -  1)+  1;	  end    =(length    <    <    3)+    trailer.length    +(length    -    1);    	non-compiled	[CE]  <identifier>  expected	119	None	replace
679	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ ",',  expecting  ' "+trailer+ "',' "+trailer+ ") ");  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ ",',  expecting  ' "+trailer+ "',' "+trailer+ ") ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ ",',  expecting  ' "+trailer+ "',' "+trailer+ ") ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   ",'   "+trailer+   ")   ");    	non-compiled	[CE]  <identifier>  expected	106	None	replace
680	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "',' "+trailer+ "' ") ");  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "',' "+trailer+ "' ") ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "',' "+trailer+ "' ") ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   ",'   "+trailer+   ")   ");    	non-compiled	[CE]  <identifier>  expected	106	None	replace
681	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ ",' "+trailer+ "') ");  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ ",' "+trailer+ "') ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ ",' "+trailer+ "') ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   ",'   "+trailer+   ")   ");    	non-compiled	[CE]  <identifier>  expected	106	None	replace
682	[BUG]  [BUGGY]  end  =  trailer.length  /  2  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  /  2  *  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.length  /  2  *  BYTE_MASK;	  end    =    trailer.length    /    2;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
683	[BUG]  [BUGGY]  end  =  trailer.length  /  2  +  4;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  /  2  +  4;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.length  /  2  +  4;	  end    =    trailer.length    /    2;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
684	[BUG]  [BUGGY]  end  =  trailer.length  /  2  +  3;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  /  2  +  3;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.length  /  2  +  3;	  end    =    trailer.length    /    2;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
685	[BUG]  [BUGGY]  end  =  trailer.length  /  2  *  4;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  /  2  *  4;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.length  /  2  *  4;	  end    =    trailer.length    /    2;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
686	[BUG]  [BUGGY]  end  =(length  <  <  1)?  trailer  -  1  :  0;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  trailer  -  1  :  0;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  trailer  -  1  :  0;	  end    =(length    <    <    1)?    trailer    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
687	[BUG]  [BUGGY]  end  =(trailer  <  <  1)?  start  -  1  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  1)?  start  -  1  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  1)?  start  -  1  :  BYTE_MASK;	  end    =(length    <    <    1)?    trailer    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
688	[BUG]  [BUGGY]  end  =(trailer  <  <  1)?  buffer  -  1  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  1)?  buffer  -  1  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  1)?  buffer  -  1  :  BYTE_MASK;	  end    =(length    <    <    1)?    trailer    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
689	[BUG]  [BUGGY]  end  =(end  <  <  3)+  length  +(length  -  '0')/(length  -  '7'));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)+  length  +(length  -  '0')/(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)+  length  +(length  -  '0')/(length  -  '7'));	  end    =(end    <    <    3)+    trailer.length    +(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	60	None	replace
690	[BUG]  [BUGGY]  end  =(length  -  4)+  trailer.length;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  4)+  trailer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  4)+  trailer.length;	  end    =(length    <    <    4)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	115	None	replace
691	[BUG]  [BUGGY]  end  =(length  <  <  4)+  trailer.length-1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  4)+  trailer.length-1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  4)+  trailer.length-1;	  end    =(length    <    <    4)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	115	None	replace
692	[BUG]  [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  -  start-1;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  -  start-1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.start  =  System.currentTimeMillis()  -  start-1;	  Pipeline.this.start    =    System.currentTimeMillis()    -    start;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
693	[BUG]  [BUGGY]  result  =(result  <  <  3)+(Trailer.byteToIntByte(trailer)-  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(Trailer.byteToIntByte(trailer)-  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  <  <  3)+(Trailer.byteToIntByte(trailer)-  '0');	  result    =(result    <    <    3)+(BYTE_MASK    -    '0');    	non-compiled	[CE]  <identifier>  expected	39	None	replace
694	[BUG]  [BUGGY]  result  =(result  <  <  3)+(BYTE_MASK  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(BYTE_MASK  -  '0')+  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  <  <  3)+(BYTE_MASK  -  '0')+  1;	  result    =(result    <    <    3)+(BYTE_MASK    -    '0');    	non-compiled	[CE]  <identifier>  expected	39	None	replace
695	[BUG]  [BUGGY]  result  =(result  <  <  3)+(Trailer.toByteArray(trailer)-  '0');  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(Trailer.toByteArray(trailer)-  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  <  <  3)+(Trailer.toByteArray(trailer)-  '0');	  result    =(result    <    <    3)+(BYTE_MASK    -    '0');    	non-compiled	[CE]  <identifier>  expected	39	None	replace
696	[BUG]  [BUGGY]  end  =(length  -  '0')+(rentByte  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+(rentByte  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+(rentByte  -  '0');	  end    =(length    -    '0')+(trailer    -    '0');    	non-compiled	[CE]  <identifier>  expected	69	None	replace
697	[BUG]  [BUGGY]  end  =(length  -  '0')/(length  -  '0'  +  1);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')/(length  -  '0'  +  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')/(length  -  '0'  +  1);	  end    =(length    -    '0')/(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	68	None	replace
698	[BUG]  [BUGGY]  end  =(length  -  '0')/(length  -  '0',  length  -  1);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')/(length  -  '0',  length  -  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')/(length  -  '0',  length  -  1);	  end    =(length    -    '0')/(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	68	None	replace
699	[BUG]  [BUGGY]  end  =(length  -  '0')/(length  -  '0',  start);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')/(length  -  '0',  start);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')/(length  -  '0',  start);	  end    =(length    -    '0')/(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	68	None	replace
700	[BUG]  [BUGGY]  end  =(length  -  start)+  trailer.length;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  start)+  trailer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  start)+  trailer.length;	  end    =(length    -    3)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
701	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'.  If(trailer  ==  ' "+trailer+ ")expected  ' "+trailer+  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'.  If(trailer  ==  ' "+trailer+ ")expected  ' "+trailer+  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'.  If(trailer  ==  ' "+trailer+ ")expected  ' "+trailer+	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   "'    or    '   "+trailer+   "'.   ");    	non-compiled	[CE]  <identifier>  expected	105	None	replace
702	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'.  If(trailer  ==  ' "+trailer+)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'.  If(trailer  ==  ' "+trailer+)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'.  If(trailer  ==  ' "+trailer+)  {  throw  new  IllegalStateException( " ");  }	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   "'    or    '   "+trailer+   "'.   ");    	non-compiled	[CE]  <identifier>  expected	105	None	replace
703	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'.  If(trailer  ==  ' "+trailer+ ")expected  ' "+trailer+ "'  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'.  If(trailer  ==  ' "+trailer+ ")expected  ' "+trailer+ "'  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'.  If(trailer  ==  ' "+trailer+ ")expected  ' "+trailer+ "'	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   "'    or    '   "+trailer+   "'.   ");    	non-compiled	[CE]  <identifier>  expected	105	None	replace
704	[BUG]  [BUGGY]  end  =(trailer  <  <  3)+  length  +(length  -  '0')/(length  -  '7'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  3)+  length  +(length  -  '0')/(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  3)+  length  +(length  -  '0')/(length  -  '7'));	  end    =(trailer    <    <    3)+    trailer.length    +(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	59	None	replace
705	[BUG]  [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  +  '0'+  trailer;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  +  '0'+  trailer;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.start  =  System.currentTimeMillis()  +  '0'+  trailer;	  Pipeline.this.start    =    System.currentTimeMillis()    +    '0';    	non-compiled	[CE]  <identifier>  expected	77	None	replace
706	[BUG]  [BUGGY]  End  =  JsonStringEncoder.getInstance().generateJsonString(buffer);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  JsonStringEncoder.getInstance().generateJsonString(buffer);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	End  =  JsonStringEncoder.getInstance().generateJsonString(buffer);	  end    =    JsonStringEncoder.getInstance().generateJsonString(trailer);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
707	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().generateJsonString(buffer,  start,  length);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().generateJsonString(buffer,  start,  length);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().generateJsonString(buffer,  start,  length);	  end    =    JsonStringEncoder.getInstance().generateJsonString(trailer);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
708	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ ",',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "') ");  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ ",',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "') ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ ",',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "') ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   "'    or    '   "+trailer+   "')   ");    	non-compiled	[CE]  <identifier>  expected	108	None	replace
709	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ ",  ignoring  ' "+trailer+ "'  or  ' "+trailer+ "') ");  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ ",  ignoring  ' "+trailer+ "'  or  ' "+trailer+ "') ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ ",  ignoring  ' "+trailer+ "'  or  ' "+trailer+ "') ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   "'    or    '   "+trailer+   "')   ");    	non-compiled	[CE]  <identifier>  expected	108	None	replace
710	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ ",') ");  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ ",') ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ ",') ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   "'    or    '   "+trailer+   "')   ");    	non-compiled	[CE]  <identifier>  expected	108	None	replace
711	[BUG]  [BUGGY]  trailer  =  buffer[start-1];  if  (trailer  ==  0  ||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  trailer  =  buffer[start-1];  if  (trailer  ==  0  ||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	trailer  =  buffer[start-1];  if  (trailer  ==  0  ||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }	  trailer    =    buffer[end-1];    if    (trailer    ==    0    ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
712	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().encodeAsByte(buffer);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().encodeAsByte(buffer);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().encodeAsByte(buffer);	  end    =    JsonStringEncoder.getInstance().encodeAsByte(trailer);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
713	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().encodeAsByte(buffer,  start);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().encodeAsByte(buffer,  start);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().encodeAsByte(buffer,  start);	  end    =    JsonStringEncoder.getInstance().encodeAsByte(trailer);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
714	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().encodeAsByte(buffer,  0,  length);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().encodeAsByte(buffer,  0,  length);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().encodeAsByte(buffer,  0,  length);	  end    =    JsonStringEncoder.getInstance().encodeAsByte(trailer);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
715	[BUG]  [BUGGY]  end  =(trailer  <  <  3)+  end.length;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  3)+  end.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  3)+  end.length;	  end    =(end    <    <    3)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
716	[BUG]  [BUGGY]  end  =(length  +  1)+  trailer.length  +(trailer  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  +  1)+  trailer.length  +(trailer  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  +  1)+  trailer.length  +(trailer  -  '0');	  end    =(length    +    3)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	34	None	replace
717	[BUG]  [BUGGY]  end  =(length  +  3)+  trailer.length  +(end  -  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  +  3)+  trailer.length  +(end  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  +  3)+  trailer.length  +(end  -  '0');	  end    =(length    +    3)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	34	None	replace
718	[BUG]  [BUGGY]  end  =(length  -  4)+  trailer.length  +(end  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  4)+  trailer.length  +(end  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  4)+  trailer.length  +(end  -  '0');	  end    =(length    <    <    3)+    trailer.length    +(end    -    '0');    	non-compiled	[CE]  <identifier>  expected	121	None	replace
719	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( ". ");  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( ". ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	throw  new  IllegalArgumentException( ". ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
720	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  ' "  +  getMessage());  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  ' "  +  getMessage());  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	throw  new  IllegalArgumentException( "Byte  ' "  +  getMessage());	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
721	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  ' "  +  trailer  + "'  must  be  >  ' ");  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  ' "  +  trailer  + "'  must  be  >  ' ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	throw  new  IllegalArgumentException( "Byte  ' "  +  trailer  + "'  must  be  >  ' ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
722	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsBytes(''+  trailer);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsBytes(''+  trailer);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().quoteAsBytes(''+  trailer);	  end    =    JsonStringEncoder.getInstance().quoteAsBytes('    ');    	non-compiled	[CE]  <identifier>  expected	95	None	replace
723	[BUG]  [BUGGY]  End  =  JsonStringEncoder.getInstance().quoteAsBytes('  ');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  JsonStringEncoder.getInstance().quoteAsBytes('  ');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	End  =  JsonStringEncoder.getInstance().quoteAsBytes('  ');	  end    =    JsonStringEncoder.getInstance().quoteAsBytes('    ');    	non-compiled	[CE]  <identifier>  expected	95	None	replace
724	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().encodeAsBytes('  ');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().encodeAsBytes('  ');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().encodeAsBytes('  ');	  end    =    JsonStringEncoder.getInstance().quoteAsBytes('    ');    	non-compiled	[CE]  <identifier>  expected	95	None	replace
725	[BUG]  [BUGGY]  result  =(result  <  <  3)+(trailer  -  '0'));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(trailer  -  '0'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  <  <  3)+(trailer  -  '0'));	  result    =(result    <    <    3)+(BYTE_MASK    -    '0'));    	non-compiled	[CE]  <identifier>  expected	101	None	replace
726	[BUG]  [BUGGY]  result  =(result  -  3)+(BYTE_MASK  -  '0'));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  -  3)+(BYTE_MASK  -  '0'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  -  3)+(BYTE_MASK  -  '0'));	  result    =(result    <    <    3)+(BYTE_MASK    -    '0'));    	non-compiled	[CE]  <identifier>  expected	101	None	replace
727	[BUG]  [BUGGY]  result  =(result  <  <  3)+(Trailer.toByteArray(trailer)-  '0'));  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(Trailer.toByteArray(trailer)-  '0'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  <  <  3)+(Trailer.toByteArray(trailer)-  '0'));	  result    =(result    <    <    3)+(BYTE_MASK    -    '0'));    	non-compiled	[CE]  <identifier>  expected	101	None	replace
728	[BUG]  [BUGGY]  result  =(result  <  <  3)+(TarUtils.getBytes(trailer)-  '0'));  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(TarUtils.getBytes(trailer)-  '0'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  <  <  3)+(TarUtils.getBytes(trailer)-  '0'));	  result    =(result    <    <    3)+(BYTE_MASK    -    '0'));    	non-compiled	[CE]  <identifier>  expected	101	None	replace
729	[BUG]  [BUGGY]  end  =(length  -  '0')+  trailer.length  +(trailer  -  '3');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+  trailer.length  +(trailer  -  '3');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+  trailer.length  +(trailer  -  '3');	  end    =(length    -    '0')+    trailer.length    +(length    -    '3');    	non-compiled	[CE]  <identifier>  expected	35	None	replace
730	[BUG]  [BUGGY]  end  =(length  -  '0')/  trailer.length  +(length  -  '3');  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')/  trailer.length  +(length  -  '3');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')/  trailer.length  +(length  -  '3');	  end    =(length    -    '0')+    trailer.length    +(length    -    '3');    	non-compiled	[CE]  <identifier>  expected	35	None	replace
731	[BUG]  [BUGGY]  end  =(length  -  '0')+  trailer.length  +(length  -  '1');  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+  trailer.length  +(length  -  '1');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+  trailer.length  +(length  -  '1');	  end    =(length    -    '0')+    trailer.length    +(length    -    '3');    	non-compiled	[CE]  <identifier>  expected	35	None	replace
732	[BUG]  [BUGGY]  end  =(trailer  &  3)+  trailer.length  +(length  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  &  3)+  trailer.length  +(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  &  3)+  trailer.length  +(length  -  '0');	  end    =(length    &    3)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	97	None	replace
733	[BUG]  [BUGGY]  end  =(length  &  3)+  trailer.length  +(length  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  &  3)+  trailer.length  +(length  -  '0')+  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  &  3)+  trailer.length  +(length  -  '0')+  1;	  end    =(length    &    3)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	97	None	replace
734	[BUG]  [BUGGY]  end  =(end  -  1)+(trailer  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  1)+(trailer  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  1)+(trailer  -  '0');	  end    =(length    -    1)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	112	None	replace
735	[BUG]  [BUGGY]  end  =(end  -  1)+(length  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  1)+(length  -  '0')+  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  1)+(length  -  '0')+  1;	  end    =(length    -    1)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	112	None	replace
736	[BUG]  [BUGGY]  end  =(length  -  1)+(end  -  '0'  +  1);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)+(end  -  '0'  +  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)+(end  -  '0'  +  1);	  end    =(length    -    1)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	112	None	replace
737	[BUG]  [BUGGY]  end  =(length  +  3)+  trailer.length  +(length  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  +  3)+  trailer.length  +(length  -  '0')+  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  +  3)+  trailer.length  +(length  -  '0')+  1;	  end    =(length    <    <    3)+    trailer.length    +(length    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
738	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().encodeAsByte(buffer,  start,  length);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().encodeAsByte(buffer,  start,  length);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().encodeAsByte(buffer,  start,  length);	  end    =    JsonStringEncoder.getInstance().encodeAsByte(trailer);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
739	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().encodeAsByte(buffer,  end);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().encodeAsByte(buffer,  end);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().encodeAsByte(buffer,  end);	  end    =    JsonStringEncoder.getInstance().encodeAsByte(trailer);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
740	[BUG]  [BUGGY]  end  =  trailer.length  -  1L  +  1;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  -  1L  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.length  -  1L  +  1;	  end    =    trailer.length    -    1L;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
741	[BUG]  [BUGGY]  end  =(end  <  <  3)+  length;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)+  length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)+  length;	  end    =(trailer    <    <    3)+    length;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
742	[BUG]  [BUGGY]  end  =(length  <  <  1)?  8  :  4;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  8  :  4;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  8  :  4;	  end    =(length    <    <    1)?    3    :    4;    	non-compiled	[CE]  <identifier>  expected	114	None	replace
743	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ ",  expecting  ' "+trailer+ ",' "+trailer+ ") ");  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ ",  expecting  ' "+trailer+ ",' "+trailer+ ") ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ ",  expecting  ' "+trailer+ ",' "+trailer+ ") ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   ",'   "+trailer+   ")   ");    	non-compiled	[CE]  <identifier>  expected	106	None	replace
744	[BUG]  [BUGGY]  Pipeline.this.report( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "',' "+trailer+ ") ");  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.report( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "',' "+trailer+ ") ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.report( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "',' "+trailer+ ") ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   ",'   "+trailer+   ")   ");    	non-compiled	[CE]  <identifier>  expected	106	None	replace
745	[BUG]  [BUGGY]  end  =(end  <  <  1)?  trailer  -  1  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  1)?  trailer  -  1  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  1)?  trailer  -  1  :  BYTE_MASK;	  end    =(length    <    <    1)?    trailer    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
746	[BUG]  [BUGGY]  end  =(length  <  <  1)?  trailer  -  1  :  2;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  trailer  -  1  :  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  trailer  -  1  :  2;	  end    =(length    <    <    1)?    trailer    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
747	[BUG]  [BUGGY]  end  =(length  -  '0')*  trailer.length  +(length  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')*  trailer.length  +(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')*  trailer.length  +(length  -  '0');	  end    =(length    -    '0')+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	30	None	replace
748	[BUG]  [BUGGY]  end  =(length  -  1  <  <  3)+  trailer.length  +(length  -  '0')/(length  -  '7'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1  <  <  3)+  trailer.length  +(length  -  '0')/(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1  <  <  3)+  trailer.length  +(length  -  '0')/(length  -  '7'));	  end    =(length    <    <    3)+    trailer.length    +(length    -    '0')/(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	57	None	replace
749	[BUG]  [BUGGY]  end  =(length  *  3)+  trailer.length  +(length  -  '0')+(length  -  '7'));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  *  3)+  trailer.length  +(length  -  '0')+(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  *  3)+  trailer.length  +(length  -  '0')+(length  -  '7'));	  end    =(length    -    3)+    trailer.length    +(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	61	None	replace
750	[BUG]  [BUGGY]  end  =(length  -  2)+  trailer.length  +(length  -  '0')+(length  -  '7'));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  2)+  trailer.length  +(length  -  '0')+(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  2)+  trailer.length  +(length  -  '0')+(length  -  '7'));	  end    =(length    -    3)+    trailer.length    +(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	61	None	replace
751	[BUG]  [BUGGY]  end  =(end  -  1)+  trailer.length  +(length  -  '0')/(length  -  '7'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  1)+  trailer.length  +(length  -  '0')/(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  1)+  trailer.length  +(length  -  '0')/(length  -  '7'));	  end    =(length    -    1)+    trailer.length    +(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	123	None	replace
752	[BUG]  [BUGGY]  End  =(end  -  1)+  trailer.length  +(length  -  '0')/(length  -  '7'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =(end  -  1)+  trailer.length  +(length  -  '0')/(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	End  =(end  -  1)+  trailer.length  +(length  -  '0')/(length  -  '7'));	  end    =(length    -    1)+    trailer.length    +(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	123	None	replace
753	[BUG]  [BUGGY]  end  =(length  +  1)+  trailer.length  +(length  -  '0')/(length  -  '7'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  +  1)+  trailer.length  +(length  -  '0')/(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  +  1)+  trailer.length  +(length  -  '0')/(length  -  '7'));	  end    =(length    -    1)+    trailer.length    +(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	123	None	replace
754	[BUG]  [BUGGY]  end  =(length  *  1)+  trailer.length  +(length  -  '0')+(length  -  '7'));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  *  1)+  trailer.length  +(length  -  '0')+(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  *  1)+  trailer.length  +(length  -  '0')+(length  -  '7'));	  end    =(length    -    1)+    trailer.length    +(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	123	None	replace
755	[BUG]  [BUGGY]  end  =(length  -  1)+  trailer.length  +(end  -  '0')/(length  -  '7'));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)+  trailer.length  +(end  -  '0')/(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)+  trailer.length  +(end  -  '0')/(length  -  '7'));	  end    =(length    -    1)+    trailer.length    +(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	123	None	replace
756	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().encodeAsIgnored(trailer);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().encodeAsIgnored(trailer);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().encodeAsIgnored(trailer);	  end    =    JsonStringEncoder.getInstance().quoteAsIgnored(trailer);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
757	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsIgnored(buffer,  start);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsIgnored(buffer,  start);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().quoteAsIgnored(buffer,  start);	  end    =    JsonStringEncoder.getInstance().quoteAsIgnored(trailer);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
758	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().generateJsonString(byte);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().generateJsonString(byte);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().generateJsonString(byte);	  end    =    JsonStringEncoder.getInstance().generateJsonString(trailer);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
759	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ ",' ");  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ ",' ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ ",' ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   "'    or    '   "+trailer+   "'   ");    	non-compiled	[CE]  <identifier>  expected	104	None	replace
760	[BUG]  [BUGGY]  end  =  trailer.size();  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.size();  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.size();	  end    =    trailer.length()    +    2;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
761	[BUG]  [BUGGY]  ||  trailer  ==  ',')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  ',')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	||  trailer  ==  ',')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }	  ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1]);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
762	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  end);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  end);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	System.arraycopy(buffer,  start,  buffer,  0,  end);	  System.arraycopy(buffer,    offset,    buffer,    0,    end);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
763	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  end);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  end);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  end);	  System.arraycopy(buffer,    offset,    buffer,    0,    end);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
764	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  can  not  be  null. ");  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  can  not  be  null. ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	throw  new  IllegalArgumentException( "Byte  can  not  be  null. ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
765	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  ' "  +  trailer  + "'  has  conflicting  arguments. ");  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  ' "  +  trailer  + "'  has  conflicting  arguments. ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	throw  new  IllegalArgumentException( "Byte  ' "  +  trailer  + "'  has  conflicting  arguments. ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
766	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  ' "  +  trailer  + "'  is  not  supported. ");  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  ' "  +  trailer  + "'  is  not  supported. ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	throw  new  IllegalArgumentException( "Byte  ' "  +  trailer  + "'  is  not  supported. ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
767	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unexpected  length  of  trailer  ' ");  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( "Unexpected  length  of  trailer  ' ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	throw  new  IllegalArgumentException( "Unexpected  length  of  trailer  ' ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
768	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  is  not  supported. ");  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  is  not  supported. ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	throw  new  IllegalArgumentException( "Byte  is  not  supported. ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
769	[BUG]  [BUGGY]  end  -=  trailer.length()  -  2;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length()  -  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  -=  trailer.length()  -  2;	  end    -=    trailer.length();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
770	[BUG]  [BUGGY]  end  =(end  <  <  1)+  trailer.length  +(length  -  '0')+(length  -  '7'));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  1)+  trailer.length  +(length  -  '0')+(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  1)+  trailer.length  +(length  -  '0')+(length  -  '7'));	  end    =(end    <    <    3)+    trailer.length    +(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	60	None	replace
771	[BUG]  [BUGGY]  end  =(end  -  '0')+  trailer.length  +(length  -  '7'));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  '0')+  trailer.length  +(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  '0')+  trailer.length  +(length  -  '7'));	  end    =(length    -    '0')+    trailer.length    +(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
772	[BUG]  [BUGGY]  end  =(length  -  '0')+  trailer.length  +(length  -  '7')+  1;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+  trailer.length  +(length  -  '7')+  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+  trailer.length  +(length  -  '7')+  1;	  end    =(length    -    '0')+    trailer.length    +(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
773	[BUG]  [BUGGY]  end  =(length  -  '0')*  trailer.length  +(length  -  '7'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')*  trailer.length  +(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')*  trailer.length  +(length  -  '7'));	  end    =(length    -    '0')+    trailer.length    +(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
774	[BUG]  [BUGGY]  end  =(end  <  <  6)+  trailer.length;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  6)+  trailer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  6)+  trailer.length;	  end    =(end    <    <    3)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
775	[BUG]  [BUGGY]  end  =(end  <  <  1)?  8  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  1)?  8  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  1)?  8  :  BYTE_MASK;	  end    =(end    <    <    1)?    BYTE_MASK    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
776	[BUG]  [BUGGY]  end  =(end  <  <  1)?  2  :  4;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  1)?  2  :  4;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  1)?  2  :  4;	  end    =(end    <    <    1)?    BYTE_MASK    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
777	[BUG]  [BUGGY]  end  =(length  -  31)+  trailer.length;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  31)+  trailer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  31)+  trailer.length;	  end    =(length    -    3)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
778	[BUG]  [BUGGY]  end  =(end  -  start)+  trailer.length;  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  start)+  trailer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  start)+  trailer.length;	  end    =(length    -    3)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
779	[BUG]  [BUGGY]  end  =(length  <  <  1)?  4  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  4  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  4  :  BYTE_MASK;	  end    =(length    <    <    1)?    2    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
780	[BUG]  [BUGGY]  end  =(end  <  <  1)?  2  :  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  1)?  2  :  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  1)?  2  :  1;	  end    =(length    <    <    1)?    2    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
781	[BUG]  [BUGGY]  end  =(end  -  '0')/(trailer  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  '0')/(trailer  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  '0')/(trailer  -  '0');	  end    =(length    -    '0')+(trailer    -    '0');    	non-compiled	[CE]  <identifier>  expected	69	None	replace
782	[BUG]  [BUGGY]  end  =(start  -  '0')+(trailer  -  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(start  -  '0')+(trailer  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(start  -  '0')+(trailer  -  '0');	  end    =(length    -    '0')+(trailer    -    '0');    	non-compiled	[CE]  <identifier>  expected	69	None	replace
783	[BUG]  [BUGGY]  end  =(trailer  -  '0')/(length  -  '0');  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  -  '0')/(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  -  '0')/(length  -  '0');	  end    =(length    -    '0')+(trailer    -    '0');    	non-compiled	[CE]  <identifier>  expected	69	None	replace
784	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ ".'  or  ' "+trailer+ "') ");  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ ".'  or  ' "+trailer+ "') ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ ".'  or  ' "+trailer+ "') ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   "'    or    '   "+trailer+   "')   ");    	non-compiled	[CE]  <identifier>  expected	108	None	replace
785	[BUG]  [BUGGY]  end  =(end  <  <  1)?  1  :  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  1)?  1  :  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  1)?  1  :  1;	  end    =(length    <    <    1)?    BYTE_MASK    :    1;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
786	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().encodeAsCII(trailer));  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().encodeAsCII(trailer));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().encodeAsCII(trailer));	  end    =    JsonStringEncoder.getInstance().quoteAsCII(trailer));    	non-compiled	[CE]  <identifier>  expected	91	None	replace
787	[BUG]  [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsCII(result));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonStringEncoder.getInstance().quoteAsCII(result));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonStringEncoder.getInstance().quoteAsCII(result));	  end    =    JsonStringEncoder.getInstance().quoteAsCII(trailer));    	non-compiled	[CE]  <identifier>  expected	91	None	replace
788	[BUG]  [BUGGY]  end  =(length  &  BYTE_MASK)+  trailer.length;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  &  BYTE_MASK)+  trailer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  &  BYTE_MASK)+  trailer.length;	  end    =(length    &    3)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
789	[BUG]  [BUGGY]  end  =(length  %  2  <  <  3)+  trailer.length;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  %  2  <  <  3)+  trailer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  %  2  <  <  3)+  trailer.length;	  end    =(length    &    3)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
790	[BUG]  [BUGGY]  end  =(length  +  3)+  trailer.length;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  +  3)+  trailer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  +  3)+  trailer.length;	  end    =(length    &    3)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
791	[BUG]  [BUGGY]  end  =(length  <  <  4)+  trailer.length  +(length  -  1));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  4)+  trailer.length  +(length  -  1));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  4)+  trailer.length  +(length  -  1));	  end    =(length    <    <    3)+    trailer.length    +(length    -    1));    	non-compiled	[CE]  <identifier>  expected	118	None	replace
792	[BUG]  [BUGGY]  end  =(length  -  1)+(end  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)+(end  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)+(end  -  '0');	  end    =(length    -    4)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	110	None	replace
793	[BUG]  [BUGGY]  end  =(start  -  4)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(start  -  4)+(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(start  -  4)+(length  -  '0');	  end    =(length    -    4)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	110	None	replace
794	[BUG]  [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(end  -  1);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(end  -  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+  trailer.length  +(end  -  1);	  end    =(length    <    <    3)+    trailer.length    +(length    -    1);    	non-compiled	[CE]  <identifier>  expected	119	None	replace
795	[BUG]  [BUGGY]  end  =(trailer  <  <  3)+  trailer.length  +(length  -  1)/  '0';  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  3)+  trailer.length  +(length  -  1)/  '0';  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  3)+  trailer.length  +(length  -  1)/  '0';	  end    =(trailer    <    <    3)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	96	None	replace
796	[BUG]  [BUGGY]  end  =(length  -  11)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  11)+(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  11)+(length  -  '0');	  end    =(length    -    10)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	111	None	replace
797	[BUG]  [BUGGY]  end  =(end  -  '0')/(length  -  '7'));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  '0')/(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  '0')/(length  -  '7'));	  end    =(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	56	None	replace
798	[BUG]  [BUGGY]  end  =(end  -  '0')+(length  -  '7'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  '0')+(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  '0')+(length  -  '7'));	  end    =(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	56	None	replace
799	[BUG]  [BUGGY]  end  =(end  -  '0')+(length  -  '7')+  1);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  '0')+(length  -  '7')+  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  '0')+(length  -  '7')+  1);	  end    =(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	56	None	replace
800	[BUG]  [BUGGY]  end  =(length  -  '0')+(end  -  '7')+  1);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+(end  -  '7')+  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+(end  -  '7')+  1);	  end    =(length    -    '0')+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	56	None	replace
801	[BUG]  [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(end  -  '0')/(length  -  '7'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(end  -  '0')/(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+  trailer.length  +(end  -  '0')/(length  -  '7'));	  end    =(end    <    <    3)+    trailer.length    +(length    -    '0')/(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	124	None	replace
802	[BUG]  [BUGGY]  end  =(end  <  <  3)+  trailer.length  +(length  -  2)/(length  -  '7'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)+  trailer.length  +(length  -  2)/(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)+  trailer.length  +(length  -  2)/(length  -  '7'));	  end    =(end    <    <    3)+    trailer.length    +(length    -    '0')/(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	124	None	replace
803	[BUG]  [BUGGY]  end  =(end  -  '0')+(length  -  '3');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  '0')+(length  -  '3');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  '0')+(length  -  '3');	  end    =(length    -    '0')+(length    -    '3');    	non-compiled	[CE]  <identifier>  expected	65	None	replace
804	[BUG]  [BUGGY]  end  =(end  -  '0')/(length  -  '3');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  '0')/(length  -  '3');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  '0')/(length  -  '3');	  end    =(length    -    '0')+(length    -    '3');    	non-compiled	[CE]  <identifier>  expected	65	None	replace
805	[BUG]  [BUGGY]  end  =(length  -  '0')+(end  -  '3');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+(end  -  '3');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+(end  -  '3');	  end    =(length    -    '0')+(length    -    '3');    	non-compiled	[CE]  <identifier>  expected	65	None	replace
806	[BUG]  [BUGGY]  end  =(start  +  length  -  '0')+  trailer.length  +(length  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(start  +  length  -  '0')+  trailer.length  +(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(start  +  length  -  '0')+  trailer.length  +(length  -  '0');	  end    =(length    &    3)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	97	None	replace
807	[BUG]  [BUGGY]  end  =(length  -  4)+  trailer.length  +(length  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  4)+  trailer.length  +(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  4)+  trailer.length  +(length  -  '0');	  end    =(length    &    3)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	97	None	replace
808	[BUG]  [BUGGY]  end  =(length  +  1)?  trailer.length  -  1  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  +  1)?  trailer.length  -  1  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  +  1)?  trailer.length  -  1  :  BYTE_MASK;	  end    =(length    +    1)?    BYTE_MASK    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
809	[BUG]  [BUGGY]  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '/')  {  end--;  }  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '/')  {  end--;  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '/')  {  end--;  }	  trailer    =    buffer[end-1];    if    (trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
810	[BUG]  [BUGGY]  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '-')  {  end--;  }  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '-')  {  end--;  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '-')  {  end--;  }	  trailer    =    buffer[end-1];    if    (trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
811	[BUG]  [BUGGY]  Trailer  <  N,  V>  end  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  =='')  {  end--;  }  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Trailer  <  N,  V>  end  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  =='')  {  end--;  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Trailer  <  N,  V>  end  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  =='')  {  end--;  }	  trailer    =    buffer[end-1];    if    (trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
812	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  -  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(length  -  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  <  <  3)+(length  -  1);	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	36	None	replace
813	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  -  '0'  +  trailer);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(length  -  '0'  +  trailer);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  <  <  3)+(length  -  '0'  +  trailer);	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	36	None	replace
814	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  -  '0',  end);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(length  -  '0',  end);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  <  <  3)+(length  -  '0',  end);	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	36	None	replace
815	[BUG]  [BUGGY]  end  =(end  -  '0')+  trailer.length  +(length  -  '3');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  '0')+  trailer.length  +(length  -  '3');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  '0')+  trailer.length  +(length  -  '3');	  end    =(length    -    '0')+    trailer.length    +(length    -    '3');    	non-compiled	[CE]  <identifier>  expected	35	None	replace
816	[BUG]  [BUGGY]  end  =(length  -  '0')*  trailer.length  +(length  -  '3');  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')*  trailer.length  +(length  -  '3');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')*  trailer.length  +(length  -  '3');	  end    =(length    -    '0')+    trailer.length    +(length    -    '3');    	non-compiled	[CE]  <identifier>  expected	35	None	replace
817	[BUG]  [BUGGY]  end  =(trailer  <  <  3)+  length  +(length  -  1)/  '0';  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  <  <  3)+  length  +(length  -  1)/  '0';  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(trailer  <  <  3)+  length  +(length  -  1)/  '0';	  end    =(trailer    <    <    3)+    length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	32	None	replace
818	[BUG]  [BUGGY]  end  =(end  -  '0')/(end  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  '0')/(end  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  '0')/(end  -  '0');	  end    =(length    -    '0')+(end    -    '0');    	non-compiled	[CE]  <identifier>  expected	80	None	replace
819	[BUG]  [BUGGY]  end  =(end  -  '0')+(byte  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  '0')+(byte  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  '0')+(byte  -  '0');	  end    =(length    -    '0')+(end    -    '0');    	non-compiled	[CE]  <identifier>  expected	80	None	replace
820	[BUG]  [BUGGY]  end  =(length  <  <  1)?  3  :  0;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  3  :  0;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  3  :  0;	  end    =(length    <    <    1)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	117	None	replace
821	[BUG]  [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(trailer  *  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(trailer  *  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+  trailer.length  +(trailer  *  '0');	  end    =(length    <    <    3)+    trailer.length    +(trailer    -    '0');    	non-compiled	[CE]  <identifier>  expected	31	None	replace
822	[BUG]  [BUGGY]  end  =(end  <  <  3)+  trailer.length  +(result  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)+  trailer.length  +(result  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)+  trailer.length  +(result  -  '0');	  end    =(length    <    <    3)+    trailer.length    +(end    -    '0');    	non-compiled	[CE]  <identifier>  expected	121	None	replace
823	[BUG]  [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(end  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(end  -  '0')+  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+  trailer.length  +(end  -  '0')+  1;	  end    =(length    <    <    3)+    trailer.length    +(end    -    '0');    	non-compiled	[CE]  <identifier>  expected	121	None	replace
824	[BUG]  [BUGGY]  ||  trailer  ==  ',')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  ',')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	||  trailer  ==  ',')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
825	[BUG]  [BUGGY]  end  =  trailer.length()  /  2  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  /  2  *  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.length()  /  2  *  BYTE_MASK;	  end    =    trailer.length()    /    2;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
826	[BUG]  [BUGGY]  end  =(length  -  1)?  TELE_MASK  -  1  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)?  TELE_MASK  -  1  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)?  TELE_MASK  -  1  :  BYTE_MASK;	  end    =(length    -    1)?    BYTE_MASK    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
827	[BUG]  [BUGGY]  end  =(length  -  1)?  trailer.length  :  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)?  trailer.length  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)?  trailer.length  :  BYTE_MASK;	  end    =(length    -    1)?    BYTE_MASK    -    1    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
828	[BUG]  [BUGGY]  end  =(end  +  1)+  trailer.length  +(length  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  +  1)+  trailer.length  +(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  +  1)+  trailer.length  +(length  -  '0');	  end    =(length    +    3)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	34	None	replace
829	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Trailer  <  N,  V>  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Trailer  <  N,  V>  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }	  trailer    =    buffer[end-1];    if    (trailer    ==    0    ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
830	[BUG]  [BUGGY]  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }	  trailer    =    buffer[end-1];    if    (trailer    ==    0    ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
831	[BUG]  [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  -  trailer.length;  end--;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  -  trailer.length;  end--;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.start  =  System.currentTimeMillis()  -  trailer.length;  end--;	  Pipeline.this.start    =    System.currentTimeMillis();    end--;    	non-compiled	[CE]  <identifier>  expected	78	None	replace
832	[BUG]  [BUGGY]  end  =(end  -  1)/(length  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  1)/(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  1)/(length  -  '0');	  end    =(length    -    1)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	112	None	replace
833	[BUG]  [BUGGY]  end  =(length  -  1)+(end  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)+(end  -  '0')+  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)+(end  -  '0')+  1;	  end    =(length    -    1)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	112	None	replace
834	[BUG]  [BUGGY]  end  =(length  -  4)+  trailer.length  +(length  -  '0')/(length  -  '7'));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  4)+  trailer.length  +(length  -  '0')/(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  4)+  trailer.length  +(length  -  '0')/(length  -  '7'));	  end    =(length    -    3)+    trailer.length    +(length    -    '0')/(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	122	None	replace
835	[BUG]  [BUGGY]  end  =(length  -  2)+  trailer.length  +(length  -  '0')/(length  -  '7'));  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  2)+  trailer.length  +(length  -  '0')/(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  2)+  trailer.length  +(length  -  '0')/(length  -  '7'));	  end    =(length    -    3)+    trailer.length    +(length    -    '0')/(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	122	None	replace
836	[BUG]  [BUGGY]  end  =(end  <  <  3)+  trailer.length  +(length  -  1)/  '0';  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)+  trailer.length  +(length  -  1)/  '0';  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)+  trailer.length  +(length  -  1)/  '0';	  end    =(end    <    <    3)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	33	None	replace
837	[BUG]  [BUGGY]  end  =(end  <  <  3)+  trailer.length  +(length  -  2);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)+  trailer.length  +(length  -  2);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)+  trailer.length  +(length  -  2);	  end    =(end    <    <    3)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	33	None	replace
838	[BUG]  [BUGGY]  end  =(length  -  1)*  trailer.length;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)*  trailer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)*  trailer.length;	  end    =(length    -    1)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
839	[BUG]  [BUGGY]  end  =(length  -  1)+  trailer.length  +(start  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)+  trailer.length  +(start  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)+  trailer.length  +(start  -  '0');	  end    =(length    -    1)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	120	None	replace
840	[BUG]  [BUGGY]  end  =  trailer.length  /  2  *  length;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  /  2  *  length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.length  /  2  *  length;	  end    =    trailer.length    /    2;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
841	[BUG]  [BUGGY]  end  =(length  -  3)+(end  -  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  3)+(end  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  3)+(end  -  '0');	  end    =(length    -    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	109	None	replace
842	[BUG]  [BUGGY]  end  =(length  -  1  <  <  3)+  trailer.length  +(length  -  '0')+(length  -  '7')+  1);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1  <  <  3)+  trailer.length  +(length  -  '0')+(length  -  '7')+  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1  <  <  3)+  trailer.length  +(length  -  '0')+(length  -  '7')+  1);	  end    =(length    <    <    3)+    trailer.length    +(length    -    '0')+(length    -    '7')+    1);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
843	[BUG]  [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  1)+(length  -  '7')+  1);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  1)+(length  -  '7')+  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+  trailer.length  +(length  -  1)+(length  -  '7')+  1);	  end    =(length    <    <    3)+    trailer.length    +(length    -    '0')+(length    -    '7')+    1);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
844	[BUG]  [BUGGY]  end  -=(length  -  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  -=(length  -  '0');	  end    =(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	79	None	replace
845	[BUG]  [BUGGY]  end  =(length  -  1)/  '0';  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)/  '0';  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)/  '0';	  end    =(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	79	None	replace
846	[BUG]  [BUGGY]  end  =(end  <  <  3)+  trailer.length  +(length  -  '0')/  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)+  trailer.length  +(length  -  '0')/  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)+  trailer.length  +(length  -  '0')/  1;	  end    =(length    <    <    3)+    trailer.length    +(length    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
847	[BUG]  [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  1)/  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+  trailer.length  +(length  -  1)/  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+  trailer.length  +(length  -  1)/  1;	  end    =(length    <    <    3)+    trailer.length    +(length    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
848	[BUG]  [BUGGY]  end  =(length  -  3)+  trailer.length  +(length  -  '0')/  1;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  3)+  trailer.length  +(length  -  '0')/  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  3)+  trailer.length  +(length  -  '0')/  1;	  end    =(length    <    <    3)+    trailer.length    +(length    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
849	[BUG]  [BUGGY]  end  =(length  -  1)?  2  :  4;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)?  2  :  4;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)?  2  :  4;	  end    =(length    -    1)?    BYTE_MASK    :    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
850	[BUG]  [BUGGY]  end  =(length  <  <  1)?  -1  :  1;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  -1  :  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  -1  :  1;	  end    =    -1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
851	[BUG]  [BUGGY]  end  =(end  <  <  1)?  -1  :  1;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  1)?  -1  :  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  1)?  -1  :  1;	  end    =    -1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
852	[BUG]  [BUGGY]  end  -=  -1;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  -1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  -=  -1;	  end    =    -1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
853	[BUG]  [BUGGY]  end  =(length  <  <  1)?  -1  :  -1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  -1  :  -1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  -1  :  -1;	  end    =    -1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
854	[BUG]  [BUGGY]  end  =(end  <  <  3)+(length  -  '0',  length  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)+(length  -  '0',  length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  <  <  3)+(length  -  '0',  length  -  '0');	  end    =(end    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	67	None	replace
855	[BUG]  [BUGGY]  end  =(end  -  '0')/(length  -  '1');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  '0')/(length  -  '1');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(end  -  '0')/(length  -  '1');	  end    =(length    -    '0')+(length    -    '1');    	non-compiled	[CE]  <identifier>  expected	66	None	replace
856	[BUG]  [BUGGY]  end  =(length  -  '0')+(end  -  '1');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  '0')+(end  -  '1');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  '0')+(end  -  '1');	  end    =(length    -    '0')+(length    -    '1');    	non-compiled	[CE]  <identifier>  expected	66	None	replace
857	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  end,  length);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  start,  buffer,  end,  length);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	System.arraycopy(buffer,  start,  buffer,  end,  length);	  System.arraycopy(buffer,    offset,    buffer,    start,    end);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
858	[BUG]  [BUGGY]  end  =(length  <  <  3)+  trailer.length  *  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+  trailer.length  *  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+  trailer.length  *  1;	  end    =(length    <    <    3)+    trailer.length    +    1;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
859	[BUG]  [BUGGY]  end  =(length  <  <  3)+  trailer.length  /  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  3)+  trailer.length  /  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  3)+  trailer.length  /  1;	  end    =(length    <    <    3)+    trailer.length    +    1;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
860	[BUG]  [BUGGY]  Thread.currentThread().interrupt(result);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().interrupt(result);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Thread.currentThread().interrupt(result);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
861	[BUG]  [BUGGY]  end  =  trailer.length  /  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  /  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  trailer.length  /  BYTE_MASK;	  end    =    trailer.length    /    1;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
862	[BUG]  [BUGGY]  end  -=  trailer.length  /  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length  /  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  -=  trailer.length  /  1;	  end    =    trailer.length    /    1;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
863	[BUG]  [BUGGY]  end  -=  length;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  -=  length;	  end    -=    0;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
864	[BUG]  [BUGGY]  end  =(length  +  1)+  trailer.length  +(length  -  '7'));  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  +  1)+  trailer.length  +(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  +  1)+  trailer.length  +(length  -  '7'));	  end    =(length    <    <    3)+    trailer.length    +(length    -    1)+(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	58	None	replace
865	[BUG]  [BUGGY]  end  =(length  -  1)+  trailer.length  +(length  -  1)/(length  -  '7'));  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)+  trailer.length  +(length  -  1)/(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)+  trailer.length  +(length  -  1)/(length  -  '7'));	  end    =(length    <    <    3)+    trailer.length    +(length    -    1)/(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	125	None	replace
866	[BUG]  [BUGGY]  end  =(length  -  1)/(length  -  '7'));  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)/(length  -  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  1)/(length  -  '7'));	  end    =(length    <    <    3)+    trailer.length    +(length    -    1)/(length    -    '7'));    	non-compiled	[CE]  <identifier>  expected	125	None	replace
867	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ ".'  or  ' "+trailer+ ") ");  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ ".'  or  ' "+trailer+ ") ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ ".'  or  ' "+trailer+ ") ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   "'    or    '   "+trailer+   ")   ");    	non-compiled	[CE]  <identifier>  expected	103	None	replace
868	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' ",  trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ ") ");  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' ",  trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ ") ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' ",  trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ ") ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   "'    or    '   "+trailer+   ")   ");    	non-compiled	[CE]  <identifier>  expected	103	None	replace
869	[BUG]  [BUGGY]  Pipeline.this.report( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ ") ");  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.report( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ ") ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.report( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ ") ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   "'    or    '   "+trailer+   ")   ");    	non-compiled	[CE]  <identifier>  expected	103	None	replace
870	[BUG]  [BUGGY]  end  =  JsonEndSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecond  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonEndSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecond  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonEndSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecond	  end    =    2;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
871	[BUG]  [BUGGY]  end  =  JsonEndSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecond  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonEndSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecond  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonEndSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecond	  end    =    2;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
872	[BUG]  [BUGGY]  end  =  JsonEndSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSe  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonEndSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSe  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonEndSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSe	  end    =    2;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
873	[BUG]  [BUGGY]  end  =  JsonEndSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondS  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonEndSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondS  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonEndSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondS	  end    =    2;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
874	[BUG]  [BUGGY]  end  =  JsonEndSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSeparator  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonEndSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSeparator  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonEndSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSeparator	  end    =    2;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
875	[BUG]  [BUGGY]  end  =  JsonEndSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSeparator  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  JsonEndSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSeparator  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  JsonEndSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSecondSeparator	  end    =    2;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
876	[BUG]  [BUGGY]  end  =  TrailerUtils.parseByte(buffer,  offset,  length);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  TrailerUtils.parseByte(buffer,  offset,  length);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  TrailerUtils.parseByte(buffer,  offset,  length);	  end    =    buffer.length;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
877	[BUG]  [BUGGY]  end  =  TrailerUtils.parseByte(buffer,  offset,  length  -  start);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  TrailerUtils.parseByte(buffer,  offset,  length  -  start);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  TrailerUtils.parseByte(buffer,  offset,  length  -  start);	  end    =    buffer.length;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
878	[BUG]  [BUGGY]  end  =  TrailerUtils.parseByte(buffer,  start,  length);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  TrailerUtils.parseByte(buffer,  start,  length);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  TrailerUtils.parseByte(buffer,  start,  length);	  end    =    buffer.length;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
879	[BUG]  [BUGGY]  end  =  TrailerUtils.getLength(buffer,  offset,  length);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  TrailerUtils.getLength(buffer,  offset,  length);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  TrailerUtils.getLength(buffer,  offset,  length);	  end    =    buffer.length;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
880	[BUG]  [BUGGY]  end  -  1;  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  -  1;	  end    =    1;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
881	[BUG]  [BUGGY]  end  =  4;  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  4;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =  4;	  end    =    1;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
882	[BUG]  [BUGGY]  end  =(length  -  2)+  trailer.length  +(length  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  2)+  trailer.length  +(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  -  2)+  trailer.length  +(length  -  '0');	  end    =(length    -    3)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	29	None	replace
883	[BUG]  [BUGGY]  end  =(start  -  3)+  trailer.length  +(length  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(start  -  3)+  trailer.length  +(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(start  -  3)+  trailer.length  +(length  -  '0');	  end    =(length    -    3)+    trailer.length    +(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	29	None	replace
884	[BUG]  [BUGGY]  result  =(result  <  <  3)+(end  -  '0'));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(end  -  '0'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  <  <  3)+(end  -  '0'));	  result    =(result    <    <    3)+(BYTE_MASK    -    '0'));    	non-compiled	[CE]  <identifier>  expected	101	None	replace
885	[BUG]  [BUGGY]  end  =(length  %  BYTE_MASK  <  <  1)?  0  :  BYTE_MASK  -  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  %  BYTE_MASK  <  <  1)?  0  :  BYTE_MASK  -  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  %  BYTE_MASK  <  <  1)?  0  :  BYTE_MASK  -  1;	  end    =(length    <    <    1)?    0    :    BYTE_MASK    -    1;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
886	[BUG]  [BUGGY]  end  =(length  <  <  1)?  0  :  length  -  1;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  1)?  0  :  length  -  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  1)?  0  :  length  -  1;	  end    =(length    <    <    1)?    0    :    BYTE_MASK    -    1;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
887	[BUG]  [BUGGY]  result  =(result  <  <  7)+(byte  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  7)+(byte  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  <  <  7)+(byte  -  '0');	  result    =(result    <    <    3)+(byte    -    '0');    	non-compiled	[CE]  <identifier>  expected	38	None	replace
888	[BUG]  [BUGGY]  result  =(result  <  <  4)+(byte  -  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  4)+(byte  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  <  <  4)+(byte  -  '0');	  result    =(result    <    <    3)+(byte    -    '0');    	non-compiled	[CE]  <identifier>  expected	38	None	replace
889	[BUG]  [BUGGY]  result  =(result  <  <  3)+(end  -  '0');  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(end  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	result  =(result  <  <  3)+(end  -  '0');	  result    =(result    <    <    3)+(byte    -    '0');    	non-compiled	[CE]  <identifier>  expected	38	None	replace
890	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'.  If(trailer  ==  ' "+trailer+ ") ");  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'.  If(trailer  ==  ' "+trailer+ ") ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'.  If(trailer  ==  ' "+trailer+ ") ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   "'    or    '   "+trailer+   "'.   ");    	non-compiled	[CE]  <identifier>  expected	105	None	replace
891	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ ",  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'.  If(trailer!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ ",  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'.  If(trailer!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ ",  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'.  If(trailer!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   "'    or    '   "+trailer+   "'.   ");    	non-compiled	[CE]  <identifier>  expected	105	None	replace
892	[BUG]  [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'.  Try  again. ");  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'.  Try  again. ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.reportError( "Can  not  parse  ' "+trailer+ "',  expecting  ' "+trailer+ "'  or  ' "+trailer+ "'.  Try  again. ");	  Pipeline.this.reportError(   "Can    not    parse    '   "+trailer+   "',    expecting    '   "+trailer+   "'    or    '   "+trailer+   "'.   ");    	non-compiled	[CE]  <identifier>  expected	105	None	replace
893	[BUG]  [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  -  trailer.offset;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  -  trailer.offset;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.start  =  System.currentTimeMillis()  -  trailer.offset;	  Pipeline.this.start    =    System.currentTimeMillis()    -    start;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
894	[BUG]  [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  -  trailer.getStartMillis();  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Pipeline.this.start  =  System.currentTimeMillis()  -  trailer.getStartMillis();  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	Pipeline.this.start  =  System.currentTimeMillis()  -  trailer.getStartMillis();	  Pipeline.this.start    =    System.currentTimeMillis()    -    start;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
895	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  end,  length);  end  =  0;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  start,  buffer,  end,  length);  end  =  0;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	System.arraycopy(buffer,  start,  buffer,  end,  length);  end  =  0;	  System.arraycopy(buffer,    offset,    buffer,    start,    length);    end    =    0;    	non-compiled	[CE]  <identifier>  expected	88	None	replace
896	[BUG]  [BUGGY]  end  =(length  <  <  6)+  trailer.length;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  <  6)+  trailer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	97	97	1	replace	end  =(length  <  <  6)+  trailer.length;	  end    =(length    <    <    4)+    trailer.length;    	non-compiled	[CE]  <identifier>  expected	115	None	replace
