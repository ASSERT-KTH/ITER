bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(buffer[start]  ==  ''  &&  buffer[end-1]  ==  ')  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  ''  &&  buffer[end-1]  ==  ')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  ''  &&  buffer[end-1]  ==  ')  {	  if(buffer[start]    ==''    ||    buffer[end-1]    ==    ')    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
2	[BUG]  [BUGGY]  if(start  <  =  length  &&  buffer[start]  ==  ''  ||  buffer[end-1]  ==  ')  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(start  <  =  length  &&  buffer[start]  ==  ''  ||  buffer[end-1]  ==  ')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(start  <  =  length  &&  buffer[start]  ==  ''  ||  buffer[end-1]  ==  ')  {	  if(buffer[start]    ==''    ||    buffer[end-1]    ==    ')    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
3	[BUG]  [BUGGY]  if(buffer[start]  ==  ''  &&  buffer[end-1]!=  ')  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  ''  &&  buffer[end-1]!=  ')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  ''  &&  buffer[end-1]!=  ')  {	  if(buffer[start]    ==''    ||    buffer[end-1]    ==    ')    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
4	[BUG]  [BUGGY]  if(byte[start]  ==  ''  &&  buffer[end-1]  ==  ')  {  [CE]  illegal  start  of  expression  [FE]                  IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(byte[start]  ==  ''  &&  buffer[end-1]  ==  ')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(byte[start]  ==  ''  &&  buffer[end-1]  ==  ')  {	  if(buffer[start]    ==''    ||    buffer[end-1]    ==    ')    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
5	[BUG]  [BUGGY]  if(start  <  end  ||  buffer[start]  ==  ''  ||  buffer[end-1]  ==  ')  {  [CE]  illegal  start  of  expression  [FE]                    IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(start  <  end  ||  buffer[start]  ==  ''  ||  buffer[end-1]  ==  ')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(start  <  end  ||  buffer[start]  ==  ''  ||  buffer[end-1]  ==  ')  {	  if(buffer[start]    ==''    ||    buffer[end-1]    ==    ')    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
6	[BUG]  [BUGGY]  if(buffer[start]!=  ''  &&  buffer[end-1]  ==  ')  {  [CE]  illegal  start  of  expression  [FE]                      IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]!=  ''  &&  buffer[end-1]  ==  ')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]!=  ''  &&  buffer[end-1]  ==  ')  {	  if(buffer[start]    ==''    ||    buffer[end-1]    ==    ')    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
7	[BUG]  [BUGGY]  if(buffer[start]!=  end)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]!=  end)  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]!=  end)  {	  if(buffer[start]!='')    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
8	[BUG]  [BUGGY]  if(buffer[start]!=  '.')  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]!=  '.')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]!=  '.')  {	  if(buffer[start]!='')    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
9	[BUG]  [BUGGY]  if(buffer[start]  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  '.')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  '.')  {	  if(buffer[start]!='')    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
10	[BUG]  [BUGGY]  if(buffer[start]  ==  ''  &&  end  >  buffer[start-1])  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  ''  &&  end  >  buffer[start-1])  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  ''  &&  end  >  buffer[start-1])  {	  if(buffer[start]    ==''    ||    end    >    buffer[start-1])    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
11	[BUG]  [BUGGY]  if(buffer[start]  ==  ''  &&  end  <  buffer[start-1])  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  ''  &&  end  <  buffer[start-1])  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  ''  &&  end  <  buffer[start-1])  {	  if(buffer[start]    ==''    ||    end    >    buffer[start-1])    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
12	[BUG]  [BUGGY]  if(buffer[start]  ==  ''  ||  end  >=  buffer[start-1])  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  ''  ||  end  >=  buffer[start-1])  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  ''  ||  end  >=  buffer[start-1])  {	  if(buffer[start]    ==''    ||    end    >    buffer[start-1])    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
13	[BUG]  [BUGGY]  if(buffer[start]  ==  ''  ||  end  <  buffer[start-1])  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  ''  ||  end  <  buffer[start-1])  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  ''  ||  end  <  buffer[start-1])  {	  if(buffer[start]    ==''    ||    end    >    buffer[start-1])    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
14	[BUG]  [BUGGY]  if(buffer[start]  ==  ''  ||  end  ==  buffer[start-1])  {  [CE]  illegal  start  of  expression  [FE]                  IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  ''  ||  end  ==  buffer[start-1])  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  ''  ||  end  ==  buffer[start-1])  {	  if(buffer[start]    ==''    ||    end    >    buffer[start-1])    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
15	[BUG]  [BUGGY]  if(buffer[start]  ==  ''  ||  end!=  buffer[start-1])  {  [CE]  illegal  start  of  expression  [FE]                    IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  ''  ||  end!=  buffer[start-1])  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  ''  ||  end!=  buffer[start-1])  {	  if(buffer[start]    ==''    ||    end    >    buffer[start-1])    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
16	[BUG]  [BUGGY]  if(buffer[start]  ==  ''  &&  buffer[start-1]  <  =  end)  {  [CE]  illegal  start  of  expression  [FE]                      IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  ''  &&  buffer[start-1]  <  =  end)  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  ''  &&  buffer[start-1]  <  =  end)  {	  if(buffer[start]    ==''    ||    end    >    buffer[start-1])    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
17	[BUG]  [BUGGY]  if(buffer[start]  ==  ''  &&  buffer[start-1]  ==  '')  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  ''  &&  buffer[start-1]  ==  '')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  ''  &&  buffer[start-1]  ==  '')  {	  if(buffer[start]    ==''    ||    buffer[start-1]    =='')    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
18	[BUG]  [BUGGY]  if(buffer[start]  ==  ''  &&  buffer[start-1]!=  '')  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  ''  &&  buffer[start-1]!=  '')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  ''  &&  buffer[start-1]!=  '')  {	  if(buffer[start]    ==''    ||    buffer[start-1]    =='')    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
19	[BUG]  [BUGGY]  if(start  <  end  ||  buffer[start]  ==  ''  ||  buffer[start-1]  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                  IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(start  <  end  ||  buffer[start]  ==  ''  ||  buffer[start-1]  ==  '')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(start  <  end  ||  buffer[start]  ==  ''  ||  buffer[start-1]  ==  '')  {	  if(buffer[start]    ==''    ||    buffer[start-1]    =='')    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
20	[BUG]  [BUGGY]  if(buffer[end]  ==  ''  ||  buffer[start-1]  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                    IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[end]  ==  ''  ||  buffer[start-1]  ==  '')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[end]  ==  ''  ||  buffer[start-1]  ==  '')  {	  if(buffer[start]    ==''    ||    buffer[start-1]    =='')    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
21	[BUG]  [BUGGY]  if(buffer[start]!=  ''  &&  buffer[start-1]  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                      IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]!=  ''  &&  buffer[start-1]  ==  '')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]!=  ''  &&  buffer[start-1]  ==  '')  {	  if(buffer[start]    ==''    ||    buffer[start-1]    =='')    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
22	[BUG]  [BUGGY]  if(buffer[start]  ==  ''  &&  buffer[start-1]  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  ''  &&  buffer[start-1]  ==  '-')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  ''  &&  buffer[start-1]  ==  '-')  {	  if(buffer[start]    ==''    ||    buffer[start-1]    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
23	[BUG]  [BUGGY]  if(buffer[start]  ==  ''  ||  buffer[end-1]  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  ''  ||  buffer[end-1]  ==  '-')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  ''  ||  buffer[end-1]  ==  '-')  {	  if(buffer[start]    ==''    ||    buffer[start-1]    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
24	[BUG]  [BUGGY]  if(buffer[start]  ==  ''  &&  buffer[start-1]!=  '-')  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  ''  &&  buffer[start-1]!=  '-')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  ''  &&  buffer[start-1]!=  '-')  {	  if(buffer[start]    ==''    ||    buffer[start-1]    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
25	[BUG]  [BUGGY]  if(start  <  end  ||  buffer[start]  ==  ''  ||  buffer[start-1]  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(start  <  end  ||  buffer[start]  ==  ''  ||  buffer[start-1]  ==  '-')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(start  <  end  ||  buffer[start]  ==  ''  ||  buffer[start-1]  ==  '-')  {	  if(buffer[start]    ==''    ||    buffer[start-1]    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
26	[BUG]  [BUGGY]  if(buffer[end]  ==  ''  ||  buffer[end-1]  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                  IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[end]  ==  ''  ||  buffer[end-1]  ==  '-')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[end]  ==  ''  ||  buffer[end-1]  ==  '-')  {	  if(buffer[start]    ==''    ||    buffer[start-1]    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
27	[BUG]  [BUGGY]  if(buffer[start]  ==  ''  &&  buffer[end-1]  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                    IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  ''  &&  buffer[end-1]  ==  '-')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  ''  &&  buffer[end-1]  ==  '-')  {	  if(buffer[start]    ==''    ||    buffer[start-1]    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
28	[BUG]  [BUGGY]  if(buffer[start]!=  ''  &&  buffer[start-1]  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                      IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]!=  ''  &&  buffer[start-1]  ==  '-')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]!=  ''  &&  buffer[start-1]  ==  '-')  {	  if(buffer[start]    ==''    ||    buffer[start-1]    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
29	[BUG]  [BUGGY]  byte[]  buffer  =(byte[])end.clone();  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  byte[]  buffer  =(byte[])end.clone();  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	byte[]  buffer  =(byte[])end.clone();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
30	[BUG]  [BUGGY]  byte[]  buffer  =(byte[])start.clone();  [CE]  illegal  start  of  expression  [FE]                  IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  byte[]  buffer  =(byte[])start.clone();  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	byte[]  buffer  =(byte[])start.clone();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
31	[BUG]  [BUGGY]  byte  currentByte  =  buffer[end-1];  [CE]  illegal  start  of  expression  [FE]                    IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  byte  currentByte  =  buffer[end-1];  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	byte  currentByte  =  buffer[end-1];	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
32	[BUG]  [BUGGY]  byte[]  buffer  =(byte[])this.currentByte.get(start);  [CE]  illegal  start  of  expression  [FE]                      IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  byte[]  buffer  =(byte[])this.currentByte.get(start);  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	byte[]  buffer  =(byte[])this.currentByte.get(start);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
33	[BUG]  [BUGGY]  byte[]  buffer  =(byte[])this.currentByte.clone();  [CE]  illegal  start  of  expression  [FE]                        IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  byte[]  buffer  =(byte[])this.currentByte.clone();  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	byte[]  buffer  =(byte[])this.currentByte.clone();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
34	[BUG]  [BUGGY]  byte[]  buffer  =(byte[])end.get(start);  [CE]  illegal  start  of  expression  [FE]                          IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  byte[]  buffer  =(byte[])end.get(start);  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	byte[]  buffer  =(byte[])end.get(start);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
35	[BUG]  [BUGGY]  byte[]  buffer  =(byte[])this.currentByte;  [CE]  illegal  start  of  expression  [FE]                            IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  byte[]  buffer  =(byte[])this.currentByte;  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	byte[]  buffer  =(byte[])this.currentByte;	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
36	[BUG]  [BUGGY]  if  (start  >=  end  &&  buffer[start]  ==  '')  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if  (start  >=  end  &&  buffer[start]  ==  '')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if  (start  >=  end  &&  buffer[start]  ==  '')  {	  if    (start    >=    end    ||    buffer[start]    =='')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
37	[BUG]  [BUGGY]  if  (end  >=  start  ||  buffer[start]  ==  '')  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if  (end  >=  start  ||  buffer[start]  ==  '')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if  (end  >=  start  ||  buffer[start]  ==  '')  {	  if    (start    >=    end    ||    buffer[start]    =='')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
38	[BUG]  [BUGGY]  if  (start  >=  end  ||  buffer[start-1]  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if  (start  >=  end  ||  buffer[start-1]  ==  '')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if  (start  >=  end  ||  buffer[start-1]  ==  '')  {	  if    (start    >=    end    ||    buffer[start]    =='')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
39	[BUG]  [BUGGY]  if  (start  <  =  end  ||  buffer[start]  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                  IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if  (start  <  =  end  ||  buffer[start]  ==  '')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if  (start  <  =  end  ||  buffer[start]  ==  '')  {	  if    (start    >=    end    ||    buffer[start]    =='')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
40	[BUG]  [BUGGY]  if  (start  >=  end  ||  buffer[start]  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]                    IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if  (start  >=  end  ||  buffer[start]  ==  '.')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if  (start  >=  end  ||  buffer[start]  ==  '.')  {	  if    (start    >=    end    ||    buffer[start]    =='')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
41	[BUG]  [BUGGY]  if(buffer[start]  ==  ''  &&  end  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  ''  &&  end  ==  '-')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  ''  &&  end  ==  '-')  {	  if(buffer[start]    ==''    ||    end    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
42	[BUG]  [BUGGY]  if(buffer[start]!=  ''  &&  end  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]!=  ''  &&  end  ==  '-')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]!=  ''  &&  end  ==  '-')  {	  if(buffer[start]    ==''    ||    end    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
43	[BUG]  [BUGGY]  if(buffer[start]  ==  ''  &&  end!=  '-')  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  ''  &&  end!=  '-')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  ''  &&  end!=  '-')  {	  if(buffer[start]    ==''    ||    end    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
44	[BUG]  [BUGGY]  if(start  <  =  end  ||  buffer[start]  ==  ''  ||  end  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                  IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(start  <  =  end  ||  buffer[start]  ==  ''  ||  end  ==  '-')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(start  <  =  end  ||  buffer[start]  ==  ''  ||  end  ==  '-')  {	  if(buffer[start]    ==''    ||    end    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
45	[BUG]  [BUGGY]  if(start  <  end  ||  buffer[start]  ==  ''  ||  end  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                    IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(start  <  end  ||  buffer[start]  ==  ''  ||  end  ==  '-')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(start  <  end  ||  buffer[start]  ==  ''  ||  end  ==  '-')  {	  if(buffer[start]    ==''    ||    end    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
46	[BUG]  [BUGGY]  if(buffer[start]!=  ''  ||  end  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                      IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]!=  ''  ||  end  ==  '-')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]!=  ''  ||  end  ==  '-')  {	  if(buffer[start]    ==''    ||    end    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
47	[BUG]  [BUGGY]  if(buffer[start]  ==  ''  &&  buffer[end-1]  ==  '')  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  ''  &&  buffer[end-1]  ==  '')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  ''  &&  buffer[end-1]  ==  '')  {	  if(buffer[start]    ==''    ||    buffer[end-1]    =='')    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
48	[BUG]  [BUGGY]  if(buffer[start]  ==  ''  &&  buffer[end-1]!=  '')  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  ''  &&  buffer[end-1]!=  '')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  ''  &&  buffer[end-1]!=  '')  {	  if(buffer[start]    ==''    ||    buffer[end-1]    =='')    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
49	[BUG]  [BUGGY]  if(start  <  =  length  &&  buffer[start]  ==  ''  ||  buffer[end-1]  ==  '')  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(start  <  =  length  &&  buffer[start]  ==  ''  ||  buffer[end-1]  ==  '')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(start  <  =  length  &&  buffer[start]  ==  ''  ||  buffer[end-1]  ==  '')  {	  if(buffer[start]    ==''    ||    buffer[end-1]    =='')    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
50	[BUG]  [BUGGY]  if(byte[start]  ==  ''  ||  buffer[end-1]  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(byte[start]  ==  ''  ||  buffer[end-1]  ==  '')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(byte[start]  ==  ''  ||  buffer[end-1]  ==  '')  {	  if(buffer[start]    ==''    ||    buffer[end-1]    =='')    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
51	[BUG]  [BUGGY]  if(buffer[start]!=  ''  &&  buffer[end-1]  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                  IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]!=  ''  &&  buffer[end-1]  ==  '')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]!=  ''  &&  buffer[end-1]  ==  '')  {	  if(buffer[start]    ==''    ||    buffer[end-1]    =='')    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
52	[BUG]  [BUGGY]  if(byte[start]!=  ''  &&  buffer[end-1]  ==  '')  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(byte[start]!=  ''  &&  buffer[end-1]  ==  '')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(byte[start]!=  ''  &&  buffer[end-1]  ==  '')  {	  if(buffer[start]!=''    ||    buffer[end-1]    =='')    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
53	[BUG]  [BUGGY]  if(byte[start]  ==  ''  &&  buffer[end-1]  ==  '')  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(byte[start]  ==  ''  &&  buffer[end-1]  ==  '')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(byte[start]  ==  ''  &&  buffer[end-1]  ==  '')  {	  if(buffer[start]!=''    ||    buffer[end-1]    =='')    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
54	[BUG]  [BUGGY]  if  (end  <  start  ||  buffer[start]  ==  '')  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if  (end  <  start  ||  buffer[start]  ==  '')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if  (end  <  start  ||  buffer[start]  ==  '')  {	  if    (start    <    end    ||    buffer[start]    =='')    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
55	[BUG]  [BUGGY]  if  (start  <  end  ||  buffer[start-1]  ==  '')  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if  (start  <  end  ||  buffer[start-1]  ==  '')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if  (start  <  end  ||  buffer[start-1]  ==  '')  {	  if    (start    <    end    ||    buffer[start]    =='')    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
56	[BUG]  [BUGGY]  if  (start  <  length  ||  buffer[start]  ==  '')  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if  (start  <  length  ||  buffer[start]  ==  '')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if  (start  <  length  ||  buffer[start]  ==  '')  {	  if    (start    <    end    ||    buffer[start]    =='')    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
57	[BUG]  [BUGGY]  if  (end  <  end  ||  buffer[start]  ==  '')  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if  (end  <  end  ||  buffer[start]  ==  '')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if  (end  <  end  ||  buffer[start]  ==  '')  {	  if    (start    <    end    ||    buffer[start]    =='')    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
58	[BUG]  [BUGGY]  if(start  <  =  length  &&  buffer[start]  ==  ''  ||  end  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(start  <  =  length  &&  buffer[start]  ==  ''  ||  end  ==  '-')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(start  <  =  length  &&  buffer[start]  ==  ''  ||  end  ==  '-')  {	  if(buffer[start]    ==''    ||    end    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
59	[BUG]  [BUGGY]  if(buffer[start]  ==  'e'  ||  end  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  'e'  ||  end  ==  'E')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  'e'  ||  end  ==  'E')  {	  if(buffer[start]    ==''    ||    end    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
60	[BUG]  [BUGGY]  if(buffer[start-1]  ==  ''  ||  end+1  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start-1]  ==  ''  ||  end+1  ==  '-')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start-1]  ==  ''  ||  end+1  ==  '-')  {	  if(buffer[start]    ==''    ||    end    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
61	[BUG]  [BUGGY]  if(buffer[start-1]!=  '')  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start-1]!=  '')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start-1]!=  '')  {	  if(buffer[start]!='')    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
62	[BUG]  [BUGGY]  if(buffer[start]  ==  'e')  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  'e')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  'e')  {	  if(buffer[start]!='')    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
63	[BUG]  [BUGGY]  if(buffer[end]  ==  ''  ||  buffer[start-1]  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[end]  ==  ''  ||  buffer[start-1]  ==  '-')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[end]  ==  ''  ||  buffer[start-1]  ==  '-')  {	  if(buffer[start]    ==''    ||    buffer[start-1]    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
64	[BUG]  [BUGGY]  if(byte[start]  ==  ''  &&  buffer[start-1]  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(byte[start]  ==  ''  &&  buffer[start-1]  ==  '-')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(byte[start]  ==  ''  &&  buffer[start-1]  ==  '-')  {	  if(buffer[start]    ==''    ||    buffer[start-1]    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
65	[BUG]  [BUGGY]  if(start  <  =  length  &&  buffer[start]  ==  ''  ||  buffer[start-1]  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(start  <  =  length  &&  buffer[start]  ==  ''  ||  buffer[start-1]  ==  '-')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(start  <  =  length  &&  buffer[start]  ==  ''  ||  buffer[start-1]  ==  '-')  {	  if(buffer[start]    ==''    ||    buffer[start-1]    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
66	[BUG]  [BUGGY]  if(buffer[start]  ==  ''  &&  buffer[start-1]  ==  'e')  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  ''  &&  buffer[start-1]  ==  'e')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  ''  &&  buffer[start-1]  ==  'e')  {	  if(buffer[start]    ==''    ||    buffer[start-1]    =='')    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
67	[BUG]  [BUGGY]  if(buffer[start]  ==  ''  &&  buffer[start-1]  ==  '/')  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  ''  &&  buffer[start-1]  ==  '/')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  ''  &&  buffer[start-1]  ==  '/')  {	  if(buffer[start]    ==''    ||    buffer[start-1]    =='')    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
68	[BUG]  [BUGGY]  if(buffer[start]  ==  ''  ||  buffer[end-1]  ==  '/')  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  ''  ||  buffer[end-1]  ==  '/')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  ''  ||  buffer[end-1]  ==  '/')  {	  if(buffer[start]    ==''    ||    buffer[end-1]    =='')    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
69	[BUG]  [BUGGY]  if(buffer[start]  ==  ''  ||  buffer[end-1]  ==  'e')  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  ''  ||  buffer[end-1]  ==  'e')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  ''  ||  buffer[end-1]  ==  'e')  {	  if(buffer[start]    ==''    ||    buffer[end-1]    =='')    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
70	[BUG]  [BUGGY]  if(buffer[start]  ==  ''  ||  buffer[end-1]!='')  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  ''  ||  buffer[end-1]!='')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  ''  ||  buffer[end-1]!='')  {	  if(buffer[start]    ==''    ||    end    >    buffer[start-1])    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
71	[BUG]  [BUGGY]  if(buffer[start]  ==  ''  &&  buffer[start-1]!=  end)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  ''  &&  buffer[start-1]!=  end)  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  ''  &&  buffer[start-1]!=  end)  {	  if(buffer[start]    ==''    ||    end    >    buffer[start-1])    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
72	[BUG]  [BUGGY]  if(start  <  =  length  &&  buffer[start]  ==  ''  &&  buffer[end-1]  ==  ')  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(start  <  =  length  &&  buffer[start]  ==  ''  &&  buffer[end-1]  ==  ')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(start  <  =  length  &&  buffer[start]  ==  ''  &&  buffer[end-1]  ==  ')  {	  if(buffer[start]    ==''    ||    buffer[end-1]    ==    ')    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
73	[BUG]  [BUGGY]  if(start  <  =  0  ||  buffer[start-1]  ==  '')  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(start  <  =  0  ||  buffer[start-1]  ==  '')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(start  <  =  0  ||  buffer[start-1]  ==  '')  {	  if(buffer[start]    ==''    ||    buffer[end-1]    ==    ')    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
74	[BUG]  [BUGGY]  if(start  >=  0  ||  buffer[start-1]  ==  '')  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(start  >=  0  ||  buffer[start-1]  ==  '')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(start  >=  0  ||  buffer[start-1]  ==  '')  {	  if(buffer[start]!=''    ||    buffer[end-1]    =='')    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
75	[BUG]  [BUGGY]  byte[]  buffer  =  start.getByteBuffer();  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  byte[]  buffer  =  start.getByteBuffer();  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	byte[]  buffer  =  start.getByteBuffer();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
76	[BUG]  [BUGGY]  end  =  buffer[start-1];  [CE]  illegal  start  of  expression  [FE]                  IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  end  =  buffer[start-1];  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	end  =  buffer[start-1];	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
77	[BUG]  [BUGGY]  ((  byte[])start).reset();  [CE]  illegal  start  of  expression  [FE]                    IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  ((  byte[])start).reset();  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	((  byte[])start).reset();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
78	[BUG]  [BUGGY]  byte[]  buffer  =  start.getByteArray();  [CE]  illegal  start  of  expression  [FE]                      IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  byte[]  buffer  =  start.getByteArray();  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	byte[]  buffer  =  start.getByteArray();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
79	[BUG]  [BUGGY]  if  (start  <  end  &&  buffer[start]  ==  '')  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if  (start  <  end  &&  buffer[start]  ==  '')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if  (start  <  end  &&  buffer[start]  ==  '')  {	  if    (start    <    end    ||    buffer[start]    =='')    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
80	[BUG]  [BUGGY]  if(buffer[start]  ==  ''  ||  buffer[end-1]  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  ''  ||  buffer[end-1]  ==  '.')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  ''  ||  buffer[end-1]  ==  '.')  {	  if(buffer[start]    ==''    ||    buffer[end-1]    =='')    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
81	[BUG]  [BUGGY]  if(buffer[start]  ==  'e'  ||  buffer[end-1]  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  'e'  ||  buffer[end-1]  ==  'E')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  'e'  ||  buffer[end-1]  ==  'E')  {	  if(buffer[start]    ==''    ||    buffer[end-1]    ==    ')    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
82	[BUG]  [BUGGY]  if(buffer[start]  ==  '.'  ||  buffer[end-1]  ==  ')  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  '.'  ||  buffer[end-1]  ==  ')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  '.'  ||  buffer[end-1]  ==  ')  {	  if(buffer[start]    ==''    ||    buffer[end-1]    ==    ')    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
83	[BUG]  [BUGGY]  if(byte[start]  ==  ''  ||  buffer[start-1]  ==  '')  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(byte[start]  ==  ''  ||  buffer[start-1]  ==  '')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(byte[start]  ==  ''  ||  buffer[start-1]  ==  '')  {	  if(buffer[start]    ==''    ||    buffer[start-1]    =='')    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
84	[BUG]  [BUGGY]  if(buffer[start]  ==  'e'  ||  buffer[start-1]  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  'e'  ||  buffer[start-1]  ==  'E')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  'e'  ||  buffer[start-1]  ==  'E')  {	  if(buffer[start]    ==''    ||    buffer[start-1]    =='')    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
85	[BUG]  [BUGGY]  if(buffer[start]  ==  ''  ||  buffer[start-1]  ==  '/')  {  [CE]  illegal  start  of  expression  [FE]                  IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  ''  ||  buffer[start-1]  ==  '/')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  ''  ||  buffer[start-1]  ==  '/')  {	  if(buffer[start]    ==''    ||    buffer[start-1]    =='')    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
86	[BUG]  [BUGGY]  if(buffer[start]  ==  'e'  ||  buffer[start]  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  'e'  ||  buffer[start]  ==  'E')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  'e'  ||  buffer[start]  ==  'E')  {	  if(buffer[start]!='')    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
87	[BUG]  [BUGGY]  if(buffer[start]  ==  'e'  ||  buffer[start]!=  'E')  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  'e'  ||  buffer[start]!=  'E')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  'e'  ||  buffer[start]!=  'E')  {	  if(buffer[start]!='')    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
88	[BUG]  [BUGGY]  if(buffer[start]!=''  ||  buffer[start-1]  =='')  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]!=''  ||  buffer[start-1]  =='')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]!=''  ||  buffer[start-1]  =='')  {	  if(buffer[start]!='')    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
89	[BUG]  [BUGGY]  if(buffer[start]!=''  ||  buffer[end-1]!='')  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]!=''  ||  buffer[end-1]!='')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]!=''  ||  buffer[end-1]!='')  {	  if(buffer[start]!='')    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
90	[BUG]  [BUGGY]  if  (start  ==  end  ||  buffer[start]  ==  '')  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if  (start  ==  end  ||  buffer[start]  ==  '')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if  (start  ==  end  ||  buffer[start]  ==  '')  {	  if    (start    >=    end    ||    buffer[start]    =='')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
91	[BUG]  [BUGGY]  if(buffer[start]  ==  '.'  ||  buffer[end-1]  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  '.'  ||  buffer[end-1]  ==  '-')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  '.'  ||  buffer[end-1]  ==  '-')  {	  if(buffer[start]    ==''    ||    end    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
92	[BUG]  [BUGGY]  if(buffer[start]  ==  ''  &&  buffer[end]  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  ''  &&  buffer[end]  ==  '-')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  ''  &&  buffer[end]  ==  '-')  {	  if(buffer[start]    ==''    ||    end    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
93	[BUG]  [BUGGY]  if(buffer[start]  ==  'e'  ||  buffer[end-1]  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  'e'  ||  buffer[end-1]  ==  '-')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  'e'  ||  buffer[end-1]  ==  '-')  {	  if(buffer[start]    ==''    ||    end    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
94	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  end);  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  end);  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	System.arraycopy(buffer,  start,  buffer,  0,  end);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
95	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  end,  length);  [CE]  illegal  start  of  expression  [FE]                  IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  System.arraycopy(buffer,  start,  buffer,  end,  length);  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	System.arraycopy(buffer,  start,  buffer,  end,  length);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
96	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  start,  end);  [CE]  illegal  start  of  expression  [FE]                    IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  System.arraycopy(buffer,  0,  buffer,  start,  end);  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	System.arraycopy(buffer,  0,  buffer,  start,  end);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
97	[BUG]  [BUGGY]  byte  currentByte  =  buffer[start-1];  [CE]  illegal  start  of  expression  [FE]                      IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  byte  currentByte  =  buffer[start-1];  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	byte  currentByte  =  buffer[start-1];	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
98	[BUG]  [BUGGY]  byte  currentByte  =  getCurrentSecond();  [CE]  illegal  start  of  expression  [FE]                        IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  byte  currentByte  =  getCurrentSecond();  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	byte  currentByte  =  getCurrentSecond();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
99	[BUG]  [BUGGY]  if(byte[start]  ==  ''  ||  buffer[start-1]  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(byte[start]  ==  ''  ||  buffer[start-1]  ==  '-')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(byte[start]  ==  ''  ||  buffer[start-1]  ==  '-')  {	  if(buffer[start]    ==''    ||    buffer[start-1]    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
100	[BUG]  [BUGGY]  if(buffer[start]  ==  '.'  ||  buffer[start-1]  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if(buffer[start]  ==  '.'  ||  buffer[start-1]  ==  '-')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if(buffer[start]  ==  '.'  ||  buffer[start-1]  ==  '-')  {	  if(buffer[start]    ==''    ||    buffer[start-1]    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
101	[BUG]  [BUGGY]  if  (start  <  end  ||  buffer[start]  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]    allNUL  =  false;  break;  }  }  if  (allNUL)  {  return  0L;  }  while  (start  <  end){    [BUGGY]  if  (start  <  end  ||  buffer[start]  ==  '.')  {  [BUGGY]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	78	78	1	replace	if  (start  <  end  ||  buffer[start]  ==  '.')  {	  if    (start    <    end    ||    buffer[start]    =='')    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
