projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69break;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length"+length+"mustbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Lengthof"+length+"mustbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69continue;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length"+length+"mustbeatleast2.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("".equals(length));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Lengthof"+length+"mustbeatleast2.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalStateException("");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Unexpectedlength'"+length+"'mustbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("".equals(i));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("".equals(buffer[i]));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Unexpectedlength'"+length+"'mustbeatleast2.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL){thrownewIllegalStateException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL){return0;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aughtExceptionHandler.throwInternal();
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL||length<=BYTE_MASK){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length'"+length+"'mustbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length"+length+"mustbeatleast2.0");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("Length"+length+"mustbeatleast2.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("Lengthof"+length+"mustbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>0){continue;}else{thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>0){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>0){continue;}else{System.arraycopy(buffer,start,buffer[start,end]);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>0){continue;}else{System.arraycopy(buffer,start,buffer[start+i],0,length);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Unexpectedlength'"+length+"'mustbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("".equals(i));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte_MASKmustbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte-MASKmustbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>0){for(inti=start;i<end;i++){buffer[i]=buffer[i];}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>buffer[i]){for(inti=start;i<end;i++){buffer[i]=buffer[i];}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>buffer[i]){for(inti=start;i<end;i++){buffer[i]=buffer[i].getByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>0){for(inti=start;i<end;i++){buffer[i]=buffer[i].getByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>0){for(inti=start;i<end;i++){buffer[i]=newByteArrayInputStream(buffer[i]);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>buffer[i]){for(inti=start;i<end;i++){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>0){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Lengthof"+length+"mustbeatleast2.0");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("Lengthof"+length+"mustbeatleast2.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("Length"+length+"mustbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length"+length+"mustbeatleast2or2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length"+length+"mustbeatleast2",allNUL);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length"+length+"mustbeatleast2".equals(buffer[i]));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length"+length+"shouldbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL||buffer[i]==''){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL){thrownewIllegalStateException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL||buffer[i]!=''){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL){thrownewIllegalArgumentException("".equals(i));}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>buffer[i]){for(inti=start;i<end;i++){if(buffer[i]==''){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>buffer[i]){for(inti=start;i<end;i++){if(buffer[i]!=''){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69System.arraycopy(buffer,start,buffer,0,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>buffer[i]){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length"+length+"mustbe>2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("BYTE_MASKmustbe>0");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte_MASKshouldnotbenull.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte_MASKmustbe>0");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("ByTE_MASKmustbe>0");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte_MASKmustbe>-1");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte'"+length+"'mustbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte'"+length+"'mustbeatleast2.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte'"+length+"'mustbeatleast2bytes.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte'"+length+"'mustbeatleast2",allNUL);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Lengthof"+length+"mustbeatleast2or2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Lengthof"+length+"mustbe>2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL||buffer[i]==''){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL||buffer[i]!=''){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length==BYTE_MASK){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length==BYTE_MASK){continue;}else{thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("BYTE_MASKmustbe>0");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("".equals(end));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL){for(inti=start;i<end;i++){buffer[i]=buffer[i];}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL){for(inti=start;i<end;i++){buffer[i]=buffer[i].getByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByteArray();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69System.arraycopy(buffer,start,buffer,0,length);return0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length"+length+"mustbeatleast1");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Lengthof"+length+"mustbeatleasttwo.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Lengthof"+length+"mustbeatleast1");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL||end){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL||length<2){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length<BYTE_MASK||length>BYTE_MASK){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length<BYTE_MASK){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL||buffer[start]==''){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL||end>buffer[i]){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Bytelength:"+length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length"+length+"mustbeatleast2".equals(length));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("BYTE_MASKmustbeatleast2.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("BYTE_MASKmustbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byteshouldnotbenull.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byteisnotastringstate.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("BYTE_MASKmustbeatleast2.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("BYTE_MASKmustbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byteisnotanobjectoftype");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte'"+i+"'mustbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte-MASKmustbe>0");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte'"+i+"'mustbeatleast2.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||!allNUL){for(inti=start;i<end;i++){buffer[i]=buffer[i].getByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(!allNUL){for(inti=start;i<end;i++){buffer[i]=buffer[i].getByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(i<length){for(inti=start;i<end;i++){buffer[i]=buffer[i].getByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(i<length){if(!allNUL){for(inti=start;i<end;i++){buffer[i]=buffer[i].getByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(!allNUL&&buffer[i]!=end){for(inti=start;i<end;i++){buffer[i]=buffer[i].getByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69allNUL=true;for(inti=start;i<end;i++){buffer[i]=buffer[i].getByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||!allNUL){buffer[i]=buffer[i].getByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||!allNUL){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL||length==BYTE_MASK){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL){continuefalse;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(!allNUL){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(!allNUL){if(i<length){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aughtExceptionHandler.throwInternalException("");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aughtExceptionHandler.throwAsIOException("");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aughtExceptionHandler.throwInternalizationException("");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aughtExceptionHandler.throwInternal("msg.js.internal.length");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||(i<length&&buffer[i]!=end)){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aughtExceptionHandler.throwUnquotedException("");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aughtExceptionHandler.handleMissingException("");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||(i<length&&buffer[i]!=end)){thrownewIllegalArgumentException("");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aughtExceptionHandler.throwInvalidOctalException("");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||!allNUL){for(inti=start;i<end;i++){buffer[i]=buffer[i];}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(!allNUL){for(inti=start;i<end;i++){buffer[i]=buffer[i];}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69allNUL=true;for(inti=start;i<end;i++){buffer[i]=buffer[i];}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69AllNUL=true;for(inti=start;i<end;i++){buffer[i]=buffer[i];}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(!allNUL&&buffer[i]!=end){for(inti=start;i<end;i++){buffer[i]=buffer[i];}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||!allNUL){for(inti=start;i<end;i++){buffer[i]=BYTE_MASK;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||!allNUL){for(inti=start;i<end;i++){buffer[i]=null;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69try{[Delete]catch(IOExceptionioe){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69try{[Delete]catch(IOExceptionioe){thrownewIllegalArgumentException("".equals(i));}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69try{[Delete]catch(IOExceptionioe){thrownewIllegalArgumentException("").equals(i);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69try{[Delete]catch(IOExceptionioe){thrownewIllegalArgumentException(""+i);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69try{[Delete]catch(IOExceptionioe){thrownewIllegalArgumentException(""+i+"mustbeatleast2");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Unexpectedlength'"+length+"'mustbeatleast2",allNUL);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalStateException("Unexpectedlength'"+length+"'mustbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Unexpectedlength'"+length+"'mustbeatleast2or2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Unexpectedlength'"+length+"'mustbeatleast2or2.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69[Delete]
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aughtExceptionHandler{thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69allowNull(buffer[i]);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aughtExceptionHandler{thrownewIllegalArgumentException("".getMessage());}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length<=BYTE_MASK){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(i<length){if(length<BYTE_MASK){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(i<length){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length<BYTE_MASK||length>BYTE_SIZE){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length<2){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>=BYTE_MASK){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL&&buffer[i]!=''){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(buffer[i]!=''||buffer[i]=='-'){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("ByTE_MASKmustbe>0");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("ByTE_MASKmustbe>0.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("ByTE_MASKmustbe>0",allNUL);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("ByTE_MASKmustbe>1");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byteisnotanobjectoftype.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalStateException("Byteisnotanobjectoftype");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byteisnotanobjectoftype"+i);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byteisnotanobjectoftype:"+i);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byteisnotanobjectoftype"+getClass());
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte_MASKmustbeatleast2.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("Byte_MASKmustbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte_MASKmustbeatleast2or2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte_MASKmustbeatleast2",allNUL);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("ByTE_MASKmustbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte_MASKmustbeatleast2"+length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("Byte'"+i+"'mustbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte'"+i+"'mustbeatleast2or2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length"+length+"mustbe>2or2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length"+length+"mustbe>2.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length"+length+"mustbe>0");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length"+length+"mustbe>2or1");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length"+length+"mustbe>2or3");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69System.arraycopy(buffer,start,buffer,0,length);return0L;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69System.arraycopy(buffer,start,buffer,offset,length);return0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69System.arraycopy(buffer,start,buffer,0,length-start);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69System.arraycopy(buffer,start,buffer,0,end);return0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69System.arraycopy(buffer,i,buffer,0,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(buffer[i]!=''){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL&&buffer[i]!=''){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(buffer[i]!=''||buffer[i]=='.'){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(buffer[i]!=''||buffer[i]!='-'){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(buffer[i]!=''||buffer[i]==''){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length"+length+"mustbeatleast2"+",allNUL);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length"+length+"mustbeatleast2","BYTE_MASK,allNUL);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||!allNUL){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(!allNUL){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(i<length){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length<2){if(!allNUL){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(i<length){if(!allNUL){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length<2){if(!allNUL){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByte();}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(!allNUL&&buffer[i]!=end){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("".trim());
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("".equals(buffer[i]));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("".equals(i));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("".equals(length));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("".equals(end));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("Unexpectedlength'"+length+"'mustbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalStateException("Byteshouldnotbenull.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Bytesshouldnotbenull.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byteshouldnotbenull.Invalidstartofexpression.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byteshouldnotbenull.Invalidstartofoffset.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byteshouldnotbenull.Ifthisisanon-nullvalue.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalStateException("".equals(i));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalStateException("".equals(buffer[i]));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalStateException("".trim());
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalStateException("".getMessage());
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalStateException("".equals(i)]);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||!allNUL){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByteArray();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(!allNUL){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByteArray();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(i<length){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByteArray();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(i<length){if(!allNUL){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByteArray();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69allNUL=true;for(inti=start;i<end;i++){buffer[i]=buffer[i].toByteArray();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||!allNUL){buffer[i]=buffer[i].toByteArray();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(!allNUL){for(inti=start;i<length;i++){buffer[i]=buffer[i].toByteArray();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("Lengthof"+length+"mustbeatleast2.0");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length'"+length+"'mustbeatleast1");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("Length"+length+"mustbeatleast1");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("Length"+length+"mustbeatleast2or2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("Length"+length+"mustbeatleast2of");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||!allNUL){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||!allNUL){thrownewIllegalArgumentException("".equals(i);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||!allNUL){thrownewIllegalArgumentException("".trim());}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byte_MASKmustbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("ByTE_MASKmustbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byte_MASKmustbeatleast2.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("ByTE_MASKmustbeatleast2.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69for(inti=start;i<end;i++){buffer[i]=buffer[i].toByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||length>buffer[i]){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(i<length&&buffer[i]!=end){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(i<length){buffer[i]=buffer[i].toByte();
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(offset<length){buffer[i]=buffer[i].toByte();
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("Length"+length+"mustbeatleast2.0");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length'"+length+"'mustbeatleast2.0");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte-MASKmustbe>0.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("Byte-MASKmustbe>0");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte-MASKmustbe>0",allNUL);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte-MASKmustbe>0or1");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte-MASKmustbe>0:");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length"+length+"mustbeatleast2.".equals(buffer[i]));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length'"+length+"'mustbeatleast2".equals(buffer[i]));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length"+length+"mustbeatleast2"+buffer[i]);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length"+length+"mustbeatleast2"+(buffer[i]<=length));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("Lengthof"+length+"mustbeatleast2",allNUL);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("Lengthof"+length+"mustbeatleast1");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Bytelength:"+i);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Bytelength:"+start);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Bytelength:"+end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Bytelength:"+offset);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("Bytelength:"+length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Bytelength:"+length+"mustbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("Length'"+length+"'mustbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length'"+length+"'mustbeatleast2.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length<2){thrownewIllegalArgumentException("Length'"+length+"'mustbeatleast2");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length'"+length+"'mustbeatleast2or2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length'"+length+"'mustbeatleast2",allNUL);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length'"+length+"'mustbeatleast2or2.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("".equals(length));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Unexpectedlength'"+length+"'tobeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Unexpectedlength'"+length+"'tobeatleast2.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||length>0){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(offset<length){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(i<end){if(length>0){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(i<end){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(offset<length){if(length>0){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(i<length){if(length>0){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("ByTE_MASKmustbeatleast2.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("BYTE_MASKmustbeatleast2.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69allowLength(i){if(length>0){continue;}else{System.arraycopy(buffer,start,buffer[start,end]);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(i>0){continue;}else{System.arraycopy(buffer,start,buffer[start,end]);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||length>0){continue;}else{System.arraycopy(buffer,start,buffer[start,end]);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(i>0){System.arraycopy(buffer,start,buffer[start,end]);}else{System.arraycopy(buffer,0,buffer[start,end]);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(i>0){System.arraycopy(buffer,start,buffer[start,end]);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69allowLength(i){if(length>0){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(i>0){System.arraycopy(buffer,start,buffer[start,end]);}else{System.arraycopy(buffer,start,buffer[start,end]);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69for(inti=start;i<end;i++){if(buffer[i]!=''){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(offset<length){if(length>buffer[i]){for(inti=start;i<end;i++){if(buffer[i]!=''){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(i<end){if(length>buffer[i]){for(inti=start;i<end;i++){if(buffer[i]!=''){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>buffer[i]){for(inti=start;i<end;i++){if(buffer[i]!=''){return0;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(i<length){for(inti=start;i<end;i++){if(buffer[i]!=''){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(offset<length){for(inti=start;i<end;i++){if(buffer[i]!=''){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||length>0){for(inti=start;i<end;i++){buffer[i]=buffer[i];}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(i<length){for(inti=start;i<end;i++){buffer[i]=buffer[i];}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(offset<length){for(inti=start;i<end;i++){buffer[i]=buffer[i];}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(offset<length){if(length>0){for(inti=start;i<end;i++){buffer[i]=buffer[i];}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(i<end){if(length>0){for(inti=start;i<end;i++){buffer[i]=buffer[i];}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(i<end){for(inti=start;i<end;i++){buffer[i]=buffer[i];}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69allowLength(offset,length){for(inti=start;i<end;i++){buffer[i]=buffer[i];}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Invalidstartofexpression:"+i);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte-MASK:"+i);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte_MASKisnotastringvalue.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length<2){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length<2||allNUL){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL||length<2){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length<2||end<2){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length<2||length<2){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length<2||start<2){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(i==BYTE_MASK){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(i==length){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length==1){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length==0){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length==2){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte'"+length+"'mustbeatleast2.",allNUL);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length<=BYTE_MASK){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length<=BYTE_MASK||allNUL){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL&&length<=BYTE_MASK){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length<=BYTE_MASK||length<=BYTE_MASK){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL||length<BYTE_MASK){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL||length==BYTE_MASK){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL||length<=1){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69System.arraycopy(buffer,start,buffer,offset,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69System.arraycopy(buffer,start,buffer,0,length+1);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69System.arraycopy(buffer,start,buffer,0,length-1);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69System.arraycopy(buffer,start,buffer,0,end);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aughtExceptionHandler.throwUnsupportedOctalException("");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aughtExceptionHandler.throwUnsupportedOperationException("");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(buffer[i]==''){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(buffer[i]==''||buffer[i]=='-'){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL&&buffer[i]==''){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(buffer[i]==''||buffer[i]==''){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(buffer[i]==''||buffer[i]=='n'){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Lengthof"+length+"mustbeatleast1.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69for(inti=start;i<end;i++){if(buffer[i]==''){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>0){for(inti=start;i<end;i++){if(buffer[i]==''){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(offset<length){if(length>buffer[i]){for(inti=start;i<end;i++){if(buffer[i]==''){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>buffer[i]){for(inti=start;i<end;i++){if(buffer[i]==''){return0;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(i<length){for(inti=start;i<end;i++){if(buffer[i]==''){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(offset<length){for(inti=start;i<end;i++){if(buffer[i]==''){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69for(inti=start;i<end;i++){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||length>buffer[i]){for(inti=start;i<end;i++){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(offset<length&&buffer[i]!=start){for(inti=start;i<end;i++){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(i<length){for(inti=start;i<end;i++){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69for(inti=start;i<end;i++){thrownewIllegalArgumentException("".);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||length>buffer[i]){for(inti=start;i<end;i++){thrownewIllegalArgumentException("".);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(offset<length&&buffer[i]!=start){for(inti=start;i<end;i++){thrownewIllegalArgumentException("".);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte'"+end+"'mustbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte'"+start+"'mustbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69for(inti=start;i<end;i++){buffer[i]=buffer[i];}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||length>buffer[i]){for(inti=start;i<end;i++){buffer[i]=buffer[i];}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(offset<length&&buffer[i]!=end){for(inti=start;i<end;i++){buffer[i]=buffer[i];}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>buffer[i]){for(inti=start;i<end;i++){buffer[i]=BYTE_MASK;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>buffer[i]){for(inti=start;i<end;i++){buffer[i]=offset;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69allowLength(i){if(length>0){continue;}else{System.arraycopy(buffer,start,buffer[start+i],0,length);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||length>0){continue;}else{System.arraycopy(buffer,start,buffer[start+i],0,length);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||(end<0&&offset+length)>buffer[start+i]){System.arraycopy(buffer,start,buffer[start+i],0,length);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||(end<0&&offset+length)>buffer[start+i]){System.arraycopy(buffer,start,buffer[start+i],0,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69allowLength(i){if(length>0){continue;}else{System.arraycopy(buffer,start,buffer[start+i],1,length);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69allowLength(i){if(length>0){continue;}else{System.arraycopy(buffer,0,buffer[start+i],0,length);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("BYTE_MASKmustbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Unexpectedlength'"+length+"'mustbeatleast2.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Unexpectedlength'"+length+"'mustbeatleast2",allNUL);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Unexpectedlength'"+length+"'mustbeatleast2or2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Unexpectedlength'"+length+"'mustbeatleast2or2.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("ByTE_MASKshouldnotbenull.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("Byte_MASKshouldnotbenull.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte_MASKmustnotbenull.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Bytesshouldnotbenull.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte_MASKshouldnotbenull.Allofthem.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(i==BYTE_MASK){continue;}else{thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||length==BYTE_MASK){continue;}else{thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(i==length){continue;}else{thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(i<length){if(length==BYTE_MASK){continue;}else{thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(i<length){if(length==BYTE_MASK){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(i==end){continue;}else{thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(i==start){continue;}else{thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||!allNUL){thrownewIllegalStateException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||!allNUL){thrownewIllegalStateException("".equals(i);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||!allNUL){thrownewIllegalStateException("".getMessage());}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||!allNUL){thrownewIllegalStateException("".trim());}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte_MASKmustbe>-1",allNUL);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte_MASKmustbe>-1.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("Byte_MASKmustbe>-1");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("ByTE_MASKmustbe>-1");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte_MASKmustbe>-1or1");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Lengthof"+length+"mustbe>0");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Lengthof"+length+"mustbe>2or2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Lengthof"+length+"mustbe>2or1");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Lengthof"+length+"mustbe>2or3");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL){return0;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(i<end){if(allNUL){return0;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||allNUL){return0;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(i<length||length>BYTE_MASK){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length<BYTE_MASK||length>BYTE_MASK||end>BYTE_MASK){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length<=BYTE_MASK||length>BYTE_MASK){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(offset<BYTE_MASK||offset>BYTE_MASK){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length<BYTE_MASK||end>BYTE_MASK){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(start<BYTE_MASK||end>BYTE_MASK){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte'"+end+"'mustbeatleast2bytes.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte'"+start+"'mustbeatleast2bytes.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte'"+length+"'mustbeatleast2bytes.If(length<2){thrownewIllegalArgumentException("Length"+length+"mustbeatleast2bytes.");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte'"+length+"'mustbeatleast2bytes.If(length<BYTE_MASK){thrownewIllegalArgumentException("Byte'"+length+"'mustbeatleast2bytes.");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length"+length+"mustbeatleast2or2.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("Byte_MASKmustbe>0");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte_MASKmustbe>0.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte_MASKmustbe>0",allNUL);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte_MASKmustbe>0:");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length<2){thrownewIllegalStateException("Unexpectedlength'"+length+"'mustbeatleast2.");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalStateException("Unexpectedlength'"+length+"'mustbeatleast2.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Unexpectedlength'"+length+"'mustbeatleast2.0");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Lengthof"+length+"mustbeatleast2or2.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("Lengthof"+length+"mustbeatleast2or2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Lengthof"+length+"mustbeatleast2or3");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69for(inti=start;i<end;i++){buffer[i]=buffer[i].getByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||length>buffer[i]){for(inti=start;i<end;i++){buffer[i]=buffer[i].getByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(i<length&&buffer[i]!=end){for(inti=start;i<end;i++){buffer[i]=buffer[i].getByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(i<length){buffer[i]=buffer[i].getByte();
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(offset<length){buffer[i]=buffer[i].getByte();
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(i<end){buffer[i]=buffer[i].getByte();
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(i<end){if(allNUL){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(i<length){if(allNUL){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL||end){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||allNUL){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL||length<2){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("BYTE_MASKmustbeatleast2or2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(end||allNUL){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL&&end){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(end||end){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL&&end){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL||end){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL||end){thrownewIllegalStateException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("Byte'"+i+"'mustbeatleast2.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Failedtoparsebuffer["+i+","+end+"]");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Failedtoparsebyte["+i+"]");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Failedtoparsebyte["+start+"]");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Failedtoparsebuffer["+i+"]");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Failedtoparsebyte["+i+","+end+"]");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Failedtoparsebuffer["+i+"].");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL&&end>buffer[i]){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL||end<buffer[i]){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL||end==buffer[i]){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL||end>=buffer[i]){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL||end!=buffer[i]){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(end>buffer[i]){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("Length"+length+"mustbeatleast2".equals(length));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Unexpectedlength'"+length+"'forbuffer[i]:"+buffer[i]);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Unexpectedlength'"+length+"':"+buffer[i]);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byte'"+buffer[i]+"'mustbeatleast2.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byte'"+buffer[i]+"'mustbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byte'"+buffer[i]+"'mustbeatleast2",allNUL);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL&&buffer[i]==''){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte-MASKmustbeatleast2.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("Byte-MASKmustbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte-MASKmustbeatleast2or2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte-MASKmustbeatleast2",allNUL);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte-MASKmustbeatleast2of");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("Lengthof"+length+"mustbeatleasttwo.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte'"+end+"'mustbeatleast2.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte'"+start+"'mustbeatleast2.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(i>0){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length<=0){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("Length"+length+"shouldbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length'"+length+"'shouldbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Lengthof"+length+"shouldbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(i<length){for(inti=start;i<end;i++){buffer[i]=newByteArrayInputStream(buffer[i]);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||length>0){for(inti=start;i<end;i++){buffer[i]=newByteArrayInputStream(buffer[i]);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(i<end){if(length>0){for(inti=start;i<end;i++){buffer[i]=newByteArrayInputStream(buffer[i]);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(offset<length){for(inti=start;i<end;i++){buffer[i]=newByteArrayInputStream(buffer[i]);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(offset<length){if(length>0){for(inti=start;i<end;i++){buffer[i]=newByteArrayInputStream(buffer[i]);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(i<length){if(length>0){for(inti=start;i<end;i++){buffer[i]=newByteArrayInputStream(buffer[i]);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(offset<end){if(length>0){for(inti=start;i<end;i++){buffer[i]=newByteArrayInputStream(buffer[i]);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("ByTE_MASKmustbe>0");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byte_MASKmustbe>0");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalStateException("BYTE_MASKmustbe>0");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byteisnotastringstate..");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byteisnotastringstate.Allofthemmustbeatleast2.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byteisnotastringstate.Pleasecheckthattheendofthebuffer[");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byteisnotastringstate.Pleasecheckthattheendofthebuffer["+start+"]doesnotexist.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byteisnotastringstate.Pleasecheckthattheendofthebuffer["+i+"]doesnotexist.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("BYTE_MASKmustbe>0");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||length>0){for(inti=start;i<end;i++){buffer[i]=buffer[i].getByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(offset<length){for(inti=start;i<end;i++){buffer[i]=buffer[i].getByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(i<end){for(inti=start;i<end;i++){buffer[i]=buffer[i].getByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(i<end){if(length>0){for(inti=start;i<end;i++){buffer[i]=buffer[i].getByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(offset<length){if(length>0){for(inti=start;i<end;i++){buffer[i]=buffer[i].getByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(i<length){if(length>0){for(inti=start;i<end;i++){buffer[i]=buffer[i].getByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL&&buffer[start]==''){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL&&buffer[start]!=''){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL&&buffer[start]==''){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(i>start){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>0){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>0){thrownewIllegalStateException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte'"+end+"'mustbeatleast2",allNUL);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte'"+length+"'mustbeatleast2or2",allNUL);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte'"+start+"'mustbeatleast2",allNUL);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length==BYTE_MASK){if(!allNUL){for(inti=start;i<end;i++){buffer[i]=buffer[i].getByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length==BYTE_MASK){for(inti=start;i<end;i++){buffer[i]=buffer[i].getByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length==BYTE_MASK){if(!allNUL){for(inti=start;i<end;i++){buffer[i]=buffer[i].getByte();}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL){for(inti=start;i<length;i++){buffer[i]=buffer[i].getByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(i>start){continue;}else{System.arraycopy(buffer,start,buffer[start,end]);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>0){System.arraycopy(buffer,start,buffer[start,end]);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69allowNonLocal(i){if(length>0){continue;}else{System.arraycopy(buffer,start,buffer[start,end]);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(i>end){continue;}else{System.arraycopy(buffer,start,buffer[start,end]);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69allowNonLocal(i){if(length>0){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(i>start){continue;}else{System.arraycopy(buffer,0,buffer[start,end]);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("ByTE_MASKmustbe>0.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("BYTE_MASKmustbe>0.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(length>buffer[i]){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>buffer[start]){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>buffer[i]||end>buffer[i]){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>buffer[i]||start>=end){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byteisnotastringstate.Wemighthavesideeffectsandcan'tbedepressed.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byteisnotastringstate.Pleasecheckthatthestartofoffsetdoesnotexist.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byteisnotastringstate.Wemighthavesideeffectsandcan'tberemoved");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byteisnotastringstate.Wemighthavesideeffectsandcan'tbedeformed.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byteisnotastringstate.Wemighthavesideeffectsandcan'tberemoved.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException(""+i);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(start>=end){if(length>0){for(inti=start;i<end;i++){buffer[i]=buffer[i].getByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(start<end){if(length>0){for(inti=start;i<end;i++){buffer[i]=buffer[i].getByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>0){for(inti=start;i<end;i++){buffer[i]=buffer[i].getbyte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>0){for(inti=start;i<end;i++){buffer[i]=block[i].getByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte_MASKmustbeatleast1");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte_MASKmustbe>2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length==BYTE_MASK){if(!allNUL){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length==BYTE_MASK){if(!allNUL){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByte();}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length==BYTE_MASK){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length==0){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>BYTE_MASK||length>BYTE_MASK){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>buffer[i]||end>buffer[i]){for(inti=start;i<end;i++){buffer[i]=buffer[i];}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>buffer[start]){for(inti=start;i<end;i++){buffer[i]=buffer[i];}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>buffer[start]){for(inti=start;i<end;i++){buffer[i]=BYTE_MASK;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>buffer[i]){for(inti=start;i<end;i++){buffer[i]=newbyte[offset];}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69allowNonLocal(i){if(length>0){continue;}else{thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aughtExceptionHandler.handleMissingName(buffer,i,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aughtExceptionHandler.handleMalformedException("");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("ByTE_MASKmustbeatleast2or2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("BYTE_MASKmustbeatleast2"+i);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("BYTE_MASKmustbeatleast2"+start);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL&&end>buffer[i]){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL&&start>buffer[i]){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte-MASKmustbe>");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte-MASKmustbe>1");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69tate<NUMBER_INT||allNUL){thrownewIllegalStateException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aught(newIllegalStateException("")){thrownewIllegalStateException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69tate<NUMBER_INT||allNUL){thrownewIllegalStateException(""+i);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69tate<NUMBER_INT||allNUL){thrownewIllegalStateException("".equals(i);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69tate<NUMBER_INT||allNUL){thrownewIllegalStateException("".getMessage());}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69tate<NUMBER_INT||allNUL){thrownewIllegalStateException(".");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length'"+length+"'mustbeatleast2".equals(length));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length"+length+"mustbeatleast2or2".equals(length));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length["+length+"mustbeatleast2".equals(length));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length"+length+"mustbeatleast2".equals(buffer,length));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length"+length+"mustbeatleast2".equals(end));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length["+length+"mustbeatleast1");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length"+length+"mustbeatleast1"+i);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("").equals(buffer[i]);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("").equals(buffer[i]));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException(""+buffer[i]);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException(""+getMessage());
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("".equals(buffer[i],allNUL));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length==BYTE_MASK){for(inti=start;i<end;i++){buffer[i]=buffer[i];}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL){for(inti=start;i<end;i++){buffer[i]=BYTE_MASK;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length==BYTE_MASK){if(!allNUL){for(inti=start;i<end;i++){buffer[i]=buffer[i];}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(start<end){if(length>buffer[i]){for(inti=start;i<end;i++){if(buffer[i]!=''){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>buffer[i]||end>buffer[i]){for(inti=start;i<end;i++){if(buffer[i]!=''){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>buffer[start]){for(inti=start;i<end;i++){if(buffer[i]!=''){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(start<end){if(length>buffer[i]){for(inti=start;i<end;i++){if(buffer[i]!=''){return0
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL&&length<2){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length||allNUL){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL||length<2){thrownewIllegalStateException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("ByTE_MASKmustbeatleast2.0");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("Length["+length+"mustbeatleast2.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(start>=end){if(length>0){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(start<end){if(length>0){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>0){for(inti=start;i<length;i++){buffer[i]=buffer[i].toByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>0){for(inti=start;i<end;i++){buffer[i]=block[i].toByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>0){for(inti=start;i<end;i++){buffer[i]=offset[i].toByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>0){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByte().byteValue();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException(""+i);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("".getMessage());
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("".equals(start));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69allowNonEmpty(i){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aught(IllegalArgumentException.create(buffer,i));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aught(IllegalArgumentException.create(start,i));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aught(IllegalArgumentException.class,"Unknowntype");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aught(newIllegalArgumentException(""));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aught(IllegalArgumentException.create(buffer,i,length));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL&&buffer[start]==''){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(start==end||buffer[start]==''){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("".equals(end));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte_MASKmustbe>'"+start+"'");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte-MASKmustbe>'"+start+"'");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte-MASKmustbe>'"+start+"'.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL||start==end){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL){continuetrue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Lengthof"+length+"mustbeatleasttwo.Mostlikely:");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Lengthof"+length+"mustbeatleasttwo.Mostlikely:"+i);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte_MASKmustbe>1");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte_MASKmustbe>-1"+length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Lengthof"+length+"mustbe>1");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>0){System.arraycopy(buffer,start,buffer[start+i],0,length);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(end>0){System.arraycopy(buffer,start,buffer[start+i],0,length);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(i>start){continue;}else{System.arraycopy(buffer,start,buffer[start+i],0,length);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(end>0){continue;}else{System.arraycopy(buffer,start,buffer[start+i],0,length);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>0){System.arraycopy(buffer,start,buffer[start+i],0,length);}else{System.arraycopy(buffer,start,buffer[start+i],0,length);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(end>0){System.arraycopy(buffer,start,buffer[start+i],0,length);}else{System.arraycopy(buffer,start,buffer[start+i],0,length);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>0){System.arraycopy(buffer,start,buffer[start+i],0,length);return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(start==BYTE_MASK){continue;}else{thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(i<end){if(length==BYTE_MASK){continue;}else{thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL||buffer[i]==''){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length==BYTE_MASK){if(!allNUL){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByteArray();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length==BYTE_MASK){if(!allNUL){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByteArray();}}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length==BYTE_MASK){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByteArray();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length==0){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByteArray();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69System.arraycopy(buffer,start,buffer,0,length-start);return0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69System.arraycopy(buffer,start,buffer,0,length-1);return0;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length'"+length+"'mustbeatleast2or1");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("ByTE_MASKmustbeatleast2or2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("ByTE_MASKmustbeatleast1");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("BYTE_MASKmustbeatleast2or2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte_MASKshouldnotbenull.If(start==start){thrownewIllegalArgumentException("Byte_MASKshouldnotbenull.");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte_MASKshouldnotbenull.If(start==start+i){thrownewIllegalArgumentException("Byte_MASKshouldnotbenull.");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length["+length+"mustbeatleast2".equals(buffer[i]));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length"+length+"mustbeatleast2or2".equals(buffer[i]));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Lengthof"+length+"mustbeatleast2".equals(buffer[i]));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(start>=end){if(length>0){for(inti=start;i<end;i++){buffer[i]=newByteArrayInputStream(buffer[i]);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>0){intstart=offset;for(inti=start;i<end;i++){buffer[i]=newByteArrayInputStream(buffer[i]);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>0){for(inti=offset;i<end;i++){buffer[i]=newByteArrayInputStream(buffer[i]);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>0){for(inti=start;i<end;i++){buffer[i]=ByteArrayInputStream(buffer[i]);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>0){for(inti=start+1;i<end;i++){buffer[i]=newByteArrayInputStream(buffer[i]);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>0){for(inti=start;i<end;i++){buffer[i]=newByteArrayInputStream(buffer[i].getCharset());}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Unexpectedlength'"+length+"'mustbeatleast2or1");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Unexpectedlength'"+length+"'mustbelessthan2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(start||end){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalStateException(""+i);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalStateException("".equalsIgnoreCase(i));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalStateException("",i);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("Length"+length+"mustbe>2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("Length["+length+"mustbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte'"+length+"'mustbeatleast2bytes.If(length==BYTE_MASK){thrownewIllegalArgumentException("Byte'"+length+"'mustbeatleast2bytes.");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte'"+length+"'mustbeatleast2bytes.If(length<=0){thrownewIllegalArgumentException("Byte'"+length+"'mustbeatleast2bytes.");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(start<end){if(length>0){for(inti=start;i<end;i++){buffer[i]=buffer[i];}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(start>=end){if(length>0){for(inti=start;i<end;i++){buffer[i]=buffer[i];}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>0){for(inti=start;i<end;i++){buffer[i]=BYTE_MASK;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(start<end){for(inti=start;i<end;i++){buffer[i]=buffer[i];}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("ByTE_MASKmustbe>");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(!allNUL){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69result|=!allNUL){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(!allNUL){thrownewIllegalArgumentException("".equals(i));}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(start==BYTE_MASK){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(end==BYTE_MASK){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL){return-1;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL){return1;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>BYTE_MASK){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(i<BYTE_MASK){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length<=1){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Lengthof"+length+"mustbeatleast1"+i);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Bytelengthof"+length+"mustbeatleast1");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL&&length<=BYTE_MASK){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL||end<=BYTE_MASK){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte_MASKmustbe>");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byteisnotanobjectoftype"+start);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte-MASKmustbeatleast1");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte-MASKmustbeatleast2"+length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte-MASKmustbeatleast2"+start);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length["+length+"mustbeatleast2or2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length"+length+"mustbeatleast2or3");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aughtExceptionHandler.throwInternal("msg.internal.start");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aughtExceptionHandler.throwInternal("msg.invalid.length");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aughtExceptionHandler.throwInternal(i,length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aughtExceptionHandler.throwIOException("");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(start<end){if(length>buffer[i]){for(inti=start;i<end;i++){if(buffer[i]==''){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>buffer[i]||end>buffer[i]){for(inti=start;i<end;i++){if(buffer[i]==''){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>buffer[start]){for(inti=start;i<end;i++){if(buffer[i]==''){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>buffer[i]||start<end){for(inti=start;i<end;i++){if(buffer[i]==''){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(offset<length){buffer[i]=start;for(inti=start;i<end;i++){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>buffer[i]){for(inti=start;i<end;i++){thrownewIllegalArgumentException("".);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>buffer[i]){for(inti=start+1;i<end;i++){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Unexpectedlength'"+length+"'mustbeatleast2or1");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Unexpectedlength'"+length+"'mustbeatleast2or3");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length"+length+"shouldbeatleast2or2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException(""+end.equals(buffer[i]));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("BYTE_MASK.equals(end));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("".equals(start));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Endofoffset'"+end+"'mustbeatleast1");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Endofoffset'"+start+"'mustbeatleast1");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69result|=!allNUL){thrownewIllegalArgumentException("".equals(i));}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL){thrownewIllegalArgumentException(""+i);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69result|=!allNUL){thrownewIllegalArgumentException(""+i);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL){thrownewIllegalArgumentException(""+i+"mustbeatleast2");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69result|=!allNUL){thrownewIllegalStateException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69allowNonEmpty(start,end){thrownewIllegalStateException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69allowNonEmpty(start,i){thrownewIllegalStateException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69result|=!allNUL){thrownewIllegalStateException("".equals(i);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69result|=!allNUL){thrownewIllegalStateException(".");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69result|=!allNUL){thrownewIllegalStateException("".allNull();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69result|=!allNUL){thrownewIllegalStateException("".equals(start);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length"+length+"mustbeatleast2or2",allNUL);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length"+length+"mustbeatleast2",i);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69System.arraycopy(buffer,start,buffer,0,offset);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length"+length+"mustbe>1");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byteshouldnotbenull.Invalidstartofoffset:"+start);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>buffer[start]){for(inti=start;i<end;i++){buffer[i]=buffer[i].getByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69(int)BYTE_MASK||length>buffer[i]){for(inti=start;i<end;i++){buffer[i]=buffer[i].getByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>buffer[i]){for(inti=start+1;i<end;i++){buffer[i]=buffer[i].getByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>buffer[i]){for(inti=start;i<end;i++){buffer[i]=buffer[i].getbyte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL||buffer[start]==''){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL||buffer[i]==''){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL||buffer[i]!=''){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL){continuetrue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Unexpectedlength'"+length+".'mustbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Unexpectedlength'"+length+",'mustbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length"+length+"mustbeatleast2".equals(offset));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Lengthof"+length+"mustbeatleast2".equals(length));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>0||buffer[start]==''){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>0){continueBYTE_MASK;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aughtExceptionUtils.throwAsIOException("");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aughtExceptionHandler("Unexpectedlength'"+length+"'mustbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aughtExceptionHandler("Unexpectedlength'"+length+"'mustbeintherange["+i+"].");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aughtExceptionHandler("Unexpectedlength'"+length+"'mustbeatleast2",allNUL);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aughtExceptionHandler("Unexpectedlength'"+length+"'mustbeatleast2.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aughtExceptionHandler("Unexpectedlength'"+length+"'mustbeintherange["+offset+"]");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||length>buffer[i]){for(inti=start;i<end;i++){buffer[i]=BYTE_MASK;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||length>0){for(inti=start;i<end;i++){buffer[i]=BYTE_MASK;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(start>=end){for(inti=start;i<end;i++){buffer[i]=buffer[i];}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Unexpectedlength'"+length+".'mustbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Unexpectedlength'"+length+",'mustbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length<BYTE_MASK||length>BYTE_MASK||length>BYTE_BACKSLASH){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length<BYTE_MASK||length>BYTE_MASK||length>BYTE_LONG){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length!=BYTE_MASK){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aughtIfNonArray("{thrownewIllegalStateException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aught(newIllegalStateException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aught(newIllegalStateException("");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aught(newIllegalStateException("").toString()));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aughtIfNonArray("{thrownewIllegalStateException(""));}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aught(newIllegalArgumentException("")).allNUL();
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byteshouldnotbenull.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byteshouldnotbenull!");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byteshouldnotbenull.Allofthem.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byteshouldnotbenull.Allofthemmustbeintherange["+start+"]");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(start<end){for(inti=start;i<end;i++){if(buffer[i]!=''){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>=buffer[i]){for(inti=start;i<end;i++){if(buffer[i]!=''){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Bytelength:"+length+"mustbeatleast2.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byteisnotintherange["+start+","+end+"]");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byteisnotintherange["+start+"]");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byteisnotintherange["+start+","+end+"].");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byteisnotintherange["+end+"]");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Lengthof"+length+"mustbe>2.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL||buffer[i]=='.'){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(buffer[i]==''||buffer[i]=='.'){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL||buffer[start]=='.'){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL||buffer[start]=='/'){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL||buffer[start]==','){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL||length>buffer[i]){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL||end<length){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>buffer[i]){for(inti=start;i<end;i++){buffer[i]=buffer[i].subtract(offset,offset+length);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>buffer[i]||end>buffer[i].getByte()){for(inti=start;i<end;i++){buffer[i]=buffer[i].getByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>buffer[i]){for(inti=start;i<end;i++){buffer[i]=block[i].getByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69allowNonEmpty(start,end){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69allowNonEmpty(start){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69allowNonEmpty(start){thrownewIllegalArgumentException("Length"+length+"mustbeatleast2");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69allowNonEmpty(start,i){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69allowNonEmpty(start,end)){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69allowNonEmpty(start)){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69allowState(!allNUL){thrownewIllegalStateException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69allowSelf("true")){thrownewIllegalStateException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aughtException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aught(newIllegalStateException("")).allNUL();
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL||length<=2){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL||length>buffer[start]){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length<1){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(end<BYTE_MASK){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length<BYTE_MASK){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL){for(inti=start;i<length;i++){buffer[i]=buffer[i].toByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||(end<0)){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL){for(inti=start;i<offset;i++){buffer[i]=buffer[i].toByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>=buffer[i]){for(inti=start;i<end;i++){if(buffer[i]==''){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(start<end){for(inti=start;i<end;i++){if(buffer[i]==''){return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL||buffer[i]!='.'){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL&&buffer[i]!=''){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length"+length+"shouldbeatleast2.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL||length<2){return0;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL||end){return0;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length"+length+"mustbeatleast2"+BYTE_MASK);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byteisnotsupported.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte'"+length+"'isnotsupported.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byteisnotanobjectoftype"+length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>0){System.arraycopy(buffer,start,buffer[start,end]);}else{System.arraycopy(buffer,start,buffer[start,end]);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>0){System.arraycopy(buffer,start,buffer[start,end]);}else{System.arraycopy(buffer,0,buffer[start,end]);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||(end>0&&buffer[start+i]!='.')){continue;}else{System.arraycopy(buffer,start,buffer[start,end]);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>0){System.arraycopy(buffer,start,buffer[start,end]);return0L;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length>0){System.arraycopy(buffer,start,buffer[start,end]);}else{System.arraycopy(buffer,start+1,buffer[start,end]);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Bytemustbeintherange["+start+"]");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Bytecannotparse:"+buffer[i]);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Bytemustbeintherange["+start+","+buffer[i]+"]");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Bytemustbeintherange["+buffer[i]+"]");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byteisnotaninstanceof"+buffer[i]);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length<BYTE_MASK){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByteArray();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL){for(inti=start;i<length;i++){buffer[i]=buffer[i].toByteArray();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL){for(inti=start;i<=end;i++){buffer[i]=buffer[i].toByteArray();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL){for(inti=start;i<offset;i++){buffer[i]=buffer[i].toByteArray();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalStateException("".equals(length));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalStateException("".equals(end));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalStateException("Byteisnotastringstate.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byteisnotastringstate.Tryagain.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byteisnotastringstate.Pleasecheckthatthestartofthebufferdoesnotexist.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byteisnotastringstate.Pleasecheckthatthestartofthebuffer["+start+"]doesnotexist.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aughtInvalidEOF("{thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aught(newIllegalArgumentException("").toString()));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aught(newIllegalArgumentException("");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aught(newIllegalArgumentException("").allNull());
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length<BYTE_MASK){for(inti=start;i<end;i++){buffer[i]=buffer[i].getByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||(end<0)){for(inti=start;i<end;i++){buffer[i]=buffer[i].getByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL){for(inti=start;i<offset;i++){buffer[i]=buffer[i].getByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(start<end){if(length>0){for(inti=start;i<end;i++){buffer[i]=newByteArrayInputStream(buffer[i]);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(start<end){for(inti=start;i<end;i++){buffer[i]=newByteArrayInputStream(buffer[i]);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(start>=end){for(inti=start;i<end;i++){buffer[i]=newByteArrayInputStream(buffer[i]);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length"+length+"mustbeatleast2.0.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL||end>buffer[start]){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL||end>buffer[i]){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL&&i<length){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL&&end<=length){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL||offset>length){continue;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(i>0){continue;}else{System.arraycopy(buffer,start,buffer[start+i],0,length);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(i>0){System.arraycopy(buffer,start,buffer[start+i],0,length);}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||(end>0&&buffer[start+i]!='.')){continue;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||(end>0&&buffer[start+i]!='-')){continue;
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length"+length+"mustbeatleast1.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Bytelength"+length+"mustbeatleast1");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Lengthof"+length+"mustbeatleast2or4");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(start<end){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(start>=end){for(inti=start;i<end;i++){buffer[i]=buffer[i].toByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Lengthof"+length+"mustbeatleast2.0.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(!allNUL){for(inti=start;i<end;i++){buffer[i]=BYTE_MASK;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69||!allNUL){for(inti=start;i<end;i++){buffer[i]=newbyte[length];}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL){for(inti=start;i<end;i++){buffer[i]=newbyte[length];}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aughtExceptionHandler.handleInternal();
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aughtExceptionHandler.throwInternal("Currentexception");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aughtExceptionHandler.throwInternal("msg.internal.length");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aughtExceptionHandler.throwInternal("msg.unknown.length");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byteisnotaninstanceof"+length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("BYTE_MASKisnotanobjectoftype"+length);
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("BYTE_MASKmustbeatleast2or2.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aught(newIllegalArgumentException("").equals(i));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aught(newIllegalArgumentException("").equals(end));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aught(newIllegalArgumentException("").equals(length));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aught(newIllegalArgumentException("").equals(getMessage()));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aught(newIllegalArgumentException("").equals(start));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69aughtException("".equals(i));
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(start<end){if(length>buffer[i]){for(inti=start;i<end;i++){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(offset<length){for(inti=start;i<end;i++){thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(start<end){if(length>buffer[i]){for(inti=start;i<end;i++){thrownewIllegalArgumentException("Length"+length+"mustbeatleast2");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(start<end){for(inti=start;i<end;i++){thrownewIllegalArgumentException("Length"+length+"mustbeatleast2");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Bytes-MASKmustbe>0");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte_MASKshouldnotbeNULL.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byte_MASKshouldnotbenull!");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69while(start<end){for(inti=start;i<end;i++){buffer[i]=buffer[i].getByte();}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Length"+length+"mustbeatleast2or4");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL||buffer[i]=='.'){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL||buffer[i]=='-'){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalStateException("Byte_MASKmustbe>0.");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69thrownewIllegalArgumentException("Byteof"+length+"mustbeatleast1");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69Throwables.thrownewIllegalArgumentException("Lengthof"+length+",endmustbeatleast2");
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(end==BYTE_MASK){continue;}else{thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(length<=BYTE_MASK){continue;}else{thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(start==end){continue;}else{thrownewIllegalArgumentException("");}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL||length){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(!allNUL||end){break;}
projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java69if(allNUL||end<=length){break;}
