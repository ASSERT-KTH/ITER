bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException  [CONTEXT]  public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  [BUGGY]  long  result  =  0L;  [BUGGY]  int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException( "Length   "+length+ "  must  be  at  least  2 ");  }  boolean  allNUL  =  true;  for  (int  i  =  start;  i  <  end;  i++){  if  (buffer[i]  !=  0){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	57	57	1	add	long  result  =  0L;	longresult  =  0;  	compilable	  [FE]  IOException  	1	1	replace
2	[BUG]  [BUGGY]  long  result  =  0L;  [FE]  IOException  [FE]    IOException  [CONTEXT]  public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  [BUGGY]  long  result  =  0L;  [BUGGY]  int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException( "Length   "+length+ "  must  be  at  least  2 ");  }  boolean  allNUL  =  true;  for  (int  i  =  start;  i  <  end;  i++){  if  (buffer[i]  !=  0){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	57	57	1	replace	long  result  =  0L;	longresult  =  0;  	compilable	  [FE]  IOException  	1	1	replace
3	[BUG]  [BUGGY]  result  =  BYTE_MASK;  [CE]  cannot  find  symbol  result  [FE]      IOException  [CONTEXT]  public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  [BUGGY]  result  =  BYTE_MASK;  [BUGGY]  int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException( "Length   "+length+ "  must  be  at  least  2 ");  }  boolean  allNUL  =  true;  for  (int  i  =  start;  i  <  end;  i++){  if  (buffer[i]  !=  0){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	57	57	1	replace	result  =  BYTE_MASK;	longresult  =  0;  	non-compiled	[CE]  cannot  find  symbol  result	1	None	replace
4	[BUG]  [BUGGY]  result  =  0L;  [CE]  cannot  find  symbol  result  [FE]        IOException  [CONTEXT]  public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  [BUGGY]  result  =  0L;  [BUGGY]  int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException( "Length   "+length+ "  must  be  at  least  2 ");  }  boolean  allNUL  =  true;  for  (int  i  =  start;  i  <  end;  i++){  if  (buffer[i]  !=  0){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	57	57	1	replace	result  =  0L;	longresult  =  0;  	non-compiled	[CE]  cannot  find  symbol  result	1	None	replace
5	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  0L  :  BYTE_MASK;  [CE]  illegal  start  of  type  [FE]          IOException  [CONTEXT]  public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  [BUGGY]  long  result  =(length  <  <  1)?  0L  :  BYTE_MASK;  [BUGGY]  int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException( "Length   "+length+ "  must  be  at  least  2 ");  }  boolean  allNUL  =  true;  for  (int  i  =  start;  i  <  end;  i++){  if  (buffer[i]  !=  0){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	57	57	1	replace	long  result  =(length  <  <  1)?  0L  :  BYTE_MASK;	longresult  =  0;  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
6	[BUG]  [BUGGY]  long  result  =(length  <  <  2)?  0L  :  BYTE_MASK;  [CE]  illegal  start  of  type  [FE]            IOException  [CONTEXT]  public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  [BUGGY]  long  result  =(length  <  <  2)?  0L  :  BYTE_MASK;  [BUGGY]  int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException( "Length   "+length+ "  must  be  at  least  2 ");  }  boolean  allNUL  =  true;  for  (int  i  =  start;  i  <  end;  i++){  if  (buffer[i]  !=  0){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	57	57	1	replace	long  result  =(length  <  <  2)?  0L  :  BYTE_MASK;	longresult  =  0;  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
7	[BUG]  [BUGGY]  result  =  1;  [CE]  illegal  start  of  type  [FE]              IOException  [CONTEXT]  public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  [BUGGY]  result  =  1;  [BUGGY]  int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException( "Length   "+length+ "  must  be  at  least  2 ");  }  boolean  allNUL  =  true;  for  (int  i  =  start;  i  <  end;  i++){  if  (buffer[i]  !=  0){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	57	57	1	replace	result  =  1;	longresult  =  0;  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
8	[BUG]  [BUGGY]  result  =  0;  [CE]  illegal  start  of  type  [FE]                IOException  [CONTEXT]  public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  [BUGGY]  result  =  0;  [BUGGY]  int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException( "Length   "+length+ "  must  be  at  least  2 ");  }  boolean  allNUL  =  true;  for  (int  i  =  start;  i  <  end;  i++){  if  (buffer[i]  !=  0){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	57	57	1	replace	result  =  0;	longresult  =  0;  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
9	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]                  IOException  [CONTEXT]  public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  [BUGGY]    [BUGGY]  int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException( "Length   "+length+ "  must  be  at  least  2 ");  }  boolean  allNUL  =  true;  for  (int  i  =  start;  i  <  end;  i++){  if  (buffer[i]  !=  0){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	57	57	1	replace	  	longresult  =  0;  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
10	[BUG]  [BUGGY]  long  result  =  System.currentTimeMillis();  [CE]  illegal  start  of  type  [FE]    IOException  [CONTEXT]  public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  [BUGGY]  long  result  =  System.currentTimeMillis();  [BUGGY]  int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException( "Length   "+length+ "  must  be  at  least  2 ");  }  boolean  allNUL  =  true;  for  (int  i  =  start;  i  <  end;  i++){  if  (buffer[i]  !=  0){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	57	57	1	replace	long  result  =  System.currentTimeMillis();	longresult  =  0;  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
11	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[offset];  [CE]  illegal  start  of  type  [FE]      IOException  [CONTEXT]  public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer[offset];  [BUGGY]  int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException( "Length   "+length+ "  must  be  at  least  2 ");  }  boolean  allNUL  =  true;  for  (int  i  =  start;  i  <  end;  i++){  if  (buffer[i]  !=  0){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	57	57	1	replace	long  result  =(length  <  <  1)?  0L  :  buffer[offset];	longresult  =  0;  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
12	[BUG]  [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer.length;  [CE]  illegal  start  of  type  [FE]        IOException  [CONTEXT]  public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  [BUGGY]  long  result  =(length  <  <  1)?  0L  :  buffer.length;  [BUGGY]  int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException( "Length   "+length+ "  must  be  at  least  2 ");  }  boolean  allNUL  =  true;  for  (int  i  =  start;  i  <  end;  i++){  if  (buffer[i]  !=  0){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	57	57	1	replace	long  result  =(length  <  <  1)?  0L  :  buffer.length;	longresult  =  0;  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
13	[BUG]  [BUGGY]  long  result  =  BYTE_MASK;  [CE]  illegal  start  of  type  [FE]    IOException  [CONTEXT]  public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  [BUGGY]  long  result  =  BYTE_MASK;  [BUGGY]  int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException( "Length   "+length+ "  must  be  at  least  2 ");  }  boolean  allNUL  =  true;  for  (int  i  =  start;  i  <  end;  i++){  if  (buffer[i]  !=  0){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	57	57	1	replace	long  result  =  BYTE_MASK;	longresult  =  0;  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
14	[BUG]  [BUGGY]  long  result  =(length  <  2)?  0L  :  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]      IOException  [CONTEXT]  public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  [BUGGY]  long  result  =(length  <  2)?  0L  :  BYTE_MASK;  [BUGGY]  int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException( "Length   "+length+ "  must  be  at  least  2 ");  }  boolean  allNUL  =  true;  for  (int  i  =  start;  i  <  end;  i++){  if  (buffer[i]  !=  0){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	57	57	1	replace	long  result  =(length  <  2)?  0L  :  BYTE_MASK;	longresult  =  0;  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
15	[BUG]  [BUGGY]  long  result  =(length  <  0)?  0  :  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]        IOException  [CONTEXT]  public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  [BUGGY]  long  result  =(length  <  0)?  0  :  BYTE_MASK;  [BUGGY]  int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException( "Length   "+length+ "  must  be  at  least  2 ");  }  boolean  allNUL  =  true;  for  (int  i  =  start;  i  <  end;  i++){  if  (buffer[i]  !=  0){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	57	57	1	replace	long  result  =(length  <  0)?  0  :  BYTE_MASK;	longresult  =  0;  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
16	[BUG]  [BUGGY]  long  result  =(length  <  1)?  0L  :  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]          IOException  [CONTEXT]  public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  [BUGGY]  long  result  =(length  <  1)?  0L  :  BYTE_MASK;  [BUGGY]  int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException( "Length   "+length+ "  must  be  at  least  2 ");  }  boolean  allNUL  =  true;  for  (int  i  =  start;  i  <  end;  i++){  if  (buffer[i]  !=  0){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	57	57	1	replace	long  result  =(length  <  1)?  0L  :  BYTE_MASK;	longresult  =  0;  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
17	[BUG]  [BUGGY]  long  result  =(length  <  0)?  0L  :  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]            IOException  [CONTEXT]  public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  [BUGGY]  long  result  =(length  <  0)?  0L  :  BYTE_MASK;  [BUGGY]  int  end  =  offset  +  length;  int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException( "Length   "+length+ "  must  be  at  least  2 ");  }  boolean  allNUL  =  true;  for  (int  i  =  start;  i  <  end;  i++){  if  (buffer[i]  !=  0){  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	57	57	1	replace	long  result  =(length  <  0)?  0L  :  BYTE_MASK;	longresult  =  0;  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
