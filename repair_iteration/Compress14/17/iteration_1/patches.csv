bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(trailer  =='')  {  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  =='')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  =='')  {	  if(trailer    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
2	[BUG]  [BUGGY]  if(trailer  ==  '-'  ||  trailer  ==  '+')  {  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  '-'  ||  trailer  ==  '+')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  '-'  ||  trailer  ==  '+')  {	  if(trailer    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
3	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '.')  {  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '.')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  0  ||  trailer  ==  '.')  {	  if(trailer    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
4	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '/')  {  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '/')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  0  ||  trailer  ==  '/')  {	  if(start    ==    0    ||    trailer    =='')    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
5	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  ',')  {  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  0  ||  trailer  ==  ',')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  0  ||  trailer  ==  ',')  {	  if(start    ==    0    ||    trailer    =='')    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
6	[BUG]  [BUGGY]  if(trailer  ==  '0'  ||  trailer  ==  '7')  {  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  '0'  ||  trailer  ==  '7')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  '0'  ||  trailer  ==  '7')  {	  if(trailer    ==    0    ||    trailer    ==    '-')    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
7	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer!=  '-')  {  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  0  ||  trailer!=  '-')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  0  ||  trailer!=  '-')  {	  if(trailer    ==    0    ||    trailer    ==    '-')    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
8	[BUG]  [BUGGY]  if(trailer!=  0  ||  trailer  ==  '-')  {  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer!=  0  ||  trailer  ==  '-')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer!=  0  ||  trailer  ==  '-')  {	  if(trailer    ==    0    ||    trailer    ==    '-')    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
9	[BUG]  [BUGGY]  if(trailer  ==  '0'  ||  trailer  ==  '9')  {  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  '0'  ||  trailer  ==  '9')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  '0'  ||  trailer  ==  '9')  {	  if(trailer    ==    0    ||    trailer    ==    '-')    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
10	[BUG]  [BUGGY]  if(trailer  ==  ''  &&  trailer  ==  '-')  {  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  ''  &&  trailer  ==  '-')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  ''  &&  trailer  ==  '-')  {	  if(trailer    ==''    ||    trailer    ==    '-')    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
11	[BUG]  [BUGGY]  if(trailer  ==  ''  &&  trailer!=  '-')  {  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  ''  &&  trailer!=  '-')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  ''  &&  trailer!=  '-')  {	  if(trailer    ==''    ||    trailer    ==    '-')    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
12	[BUG]  [BUGGY]  if(trailer!=  ''  &&  trailer  ==  '-')  {  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer!=  ''  &&  trailer  ==  '-')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer!=  ''  &&  trailer  ==  '-')  {	  if(trailer    ==''    ||    trailer    ==    '-')    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
13	[BUG]  [BUGGY]  if(trailer  ==  ''  ||  trailer!=  '-')  {  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  ''  ||  trailer!=  '-')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  ''  ||  trailer!=  '-')  {	  if(trailer    ==''    ||    trailer    ==    '-')    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
14	[BUG]  [BUGGY]  if(trailer  ==  '0'  ||  trailer  <  =  '9')  {  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  '0'  ||  trailer  <  =  '9')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  '0'  ||  trailer  <  =  '9')  {	  if(trailer    ==    '0'    &&    trailer    <    =    '9')    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
15	[BUG]  [BUGGY]  if(trailer!=  '0'  &&  trailer  <  =  '9')  {  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer!=  '0'  &&  trailer  <  =  '9')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer!=  '0'  &&  trailer  <  =  '9')  {	  if(trailer    ==    '0'    &&    trailer    <    =    '9')    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
16	[BUG]  [BUGGY]  if(trailer  ==  '0'  &&  trailer  <  =  '9'  ||  trailer  ==  'A'  &&  trailer  <  =  'Z')  {  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  '0'  &&  trailer  <  =  '9'  ||  trailer  ==  'A'  &&  trailer  <  =  'Z')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  '0'  &&  trailer  <  =  '9'  ||  trailer  ==  'A'  &&  trailer  <  =  'Z')  {	  if(trailer    ==    '0'    &&    trailer    <    =    '9')    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
17	[BUG]  [BUGGY]  if(trailer  ==  '0'  &&  trailer  <  =  '9'  ||  trailer  ==  'a'  &&  trailer  <  =  'z')  {  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  '0'  &&  trailer  <  =  '9'  ||  trailer  ==  'a'  &&  trailer  <  =  'z')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  '0'  &&  trailer  <  =  '9'  ||  trailer  ==  'a'  &&  trailer  <  =  'z')  {	  if(trailer    ==    '0'    &&    trailer    <    =    '9')    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
18	[BUG]  [BUGGY]  if(trailer  ==  '0'  &&  trailer  <  =  '9'  ||  trailer  >=  'A'  &&  trailer  <  =  'Z')  {  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  '0'  &&  trailer  <  =  '9'  ||  trailer  >=  'A'  &&  trailer  <  =  'Z')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  '0'  &&  trailer  <  =  '9'  ||  trailer  >=  'A'  &&  trailer  <  =  'Z')  {	  if(trailer    ==    '0'    &&    trailer    <    =    '9')    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
19	[BUG]  [BUGGY]  if(trailer  ==  '0'  &&  trailer  <  =  '9'  ||  trailer  >=  'a'  &&  trailer  <  =  'z')  {  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  '0'  &&  trailer  <  =  '9'  ||  trailer  >=  'a'  &&  trailer  <  =  'z')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  '0'  &&  trailer  <  =  '9'  ||  trailer  >=  'a'  &&  trailer  <  =  'z')  {	  if(trailer    ==    '0'    &&    trailer    <    =    '9')    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
20	[BUG]  [BUGGY]  if(trailer  ==  'n'  ||  trailer!=  'r')  {  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  'n'  ||  trailer!=  'r')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  'n'  ||  trailer!=  'r')  {	  if(trailer    ==    'n'    ||    trailer    ==    'r')    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
21	[BUG]  [BUGGY]  if(trailer!=  'n'  ||  trailer  ==  'r')  {  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer!=  'n'  ||  trailer  ==  'r')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer!=  'n'  ||  trailer  ==  'r')  {	  if(trailer    ==    'n'    ||    trailer    ==    'r')    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
22	[BUG]  [BUGGY]  if(trailer  ==  'N'  ||  trailer  ==  'r')  {  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  'N'  ||  trailer  ==  'r')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  'N'  ||  trailer  ==  'r')  {	  if(trailer    ==    'n'    ||    trailer    ==    'r')    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
23	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer!=  'n')  {  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  0  ||  trailer!=  'n')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  0  ||  trailer!=  'n')  {	  if(trailer    ==    0    ||    trailer    ==    'n')    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
24	[BUG]  [BUGGY]  if(trailer  ==  '0'  &&  trailer!=  '7')  {  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  '0'  &&  trailer!=  '7')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  '0'  &&  trailer!=  '7')  {	  if(trailer!=    0    ||    trailer    =='')    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
25	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer!=  '.')  {  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  0  ||  trailer!=  '.')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  0  ||  trailer!=  '.')  {	  if(trailer    ==    0    ||    trailer!='')    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
26	[BUG]  [BUGGY]  if(trailer  ==  ''  &&  trailer  ==  'n')  {  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  ''  &&  trailer  ==  'n')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  ''  &&  trailer  ==  'n')  {	  if(trailer    ==''    ||    trailer    ==    'n')    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
27	[BUG]  [BUGGY]  if(trailer  ==  ''  &&  trailer!=  'n')  {  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  ''  &&  trailer!=  'n')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  ''  &&  trailer!=  'n')  {	  if(trailer    ==''    ||    trailer    ==    'n')    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
28	[BUG]  [BUGGY]  if(trailer!=  ''  &&  trailer  ==  'n')  {  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer!=  ''  &&  trailer  ==  'n')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer!=  ''  &&  trailer  ==  'n')  {	  if(trailer    ==''    ||    trailer    ==    'n')    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
29	[BUG]  [BUGGY]  if(trailer  ==  ''  ||  trailer!=  'n')  {  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  ''  ||  trailer!=  'n')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  ''  ||  trailer!=  'n')  {	  if(trailer    ==''    ||    trailer    ==    'n')    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
30	[BUG]  [BUGGY]  if(trailer  ==  ''  ||  trailer  ==  'n'  ||  trailer  ==  '-')  {  [CE]  <identifier>  expected  [FE]                        IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  ''  ||  trailer  ==  'n'  ||  trailer  ==  '-')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  ''  ||  trailer  ==  'n'  ||  trailer  ==  '-')  {	  if(trailer    ==''    ||    trailer    ==    'n')    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
31	[BUG]  [BUGGY]  if(trailer  ==  ''  &&  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  ''  &&  trailer  ==  '')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  ''  &&  trailer  ==  '')  {	  if(trailer    ==''    ||    trailer    =='')    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
32	[BUG]  [BUGGY]  if(trailer  ==  ''  &&  trailer!=  '')  {  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  ''  &&  trailer!=  '')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  ''  &&  trailer!=  '')  {	  if(trailer    ==''    ||    trailer    =='')    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
33	[BUG]  [BUGGY]  if(trailer  =='')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  =='')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  =='')  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
34	[BUG]  [BUGGY]  if(trailer  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
35	[BUG]  [BUGGY]  if(trailer  ==''  ||  trailer  =='')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==''  ||  trailer  =='')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==''  ||  trailer  =='')  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
36	[BUG]  [BUGGY]  if(trailer  ==''  ||  trailer  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==''  ||  trailer  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==''  ||  trailer  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
37	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  length);  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  length);  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	System.arraycopy(buffer,  offset,  trailer,  0,  length);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
38	[BUG]  [BUGGY]  if(trailer  ==''  ||  trailer  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==''  ||  trailer  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==''  ||  trailer  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
39	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  end);  [CE]  <identifier>  expected  [FE]                          IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  end);  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	System.arraycopy(buffer,  offset,  trailer,  0,  end);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
40	[BUG]  [BUGGY]  if(trailer  ==  ''  &&  trailer  ==  ':')  {  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  ''  &&  trailer  ==  ':')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  ''  &&  trailer  ==  ':')  {	  if(trailer    ==''    ||    trailer    ==    ':')    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
41	[BUG]  [BUGGY]  if(trailer  ==  ''  &&  trailer!=  ':')  {  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  ''  &&  trailer!=  ':')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  ''  &&  trailer!=  ':')  {	  if(trailer    ==''    ||    trailer    ==    ':')    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
42	[BUG]  [BUGGY]  if(trailer!=  ''  &&  trailer  ==  ':')  {  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer!=  ''  &&  trailer  ==  ':')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer!=  ''  &&  trailer  ==  ':')  {	  if(trailer    ==''    ||    trailer    ==    ':')    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
43	[BUG]  [BUGGY]  if(trailer  ==  ''  ||  trailer!=  ':')  {  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  ''  ||  trailer!=  ':')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  ''  ||  trailer!=  ':')  {	  if(trailer    ==''    ||    trailer    ==    ':')    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
44	[BUG]  [BUGGY]  if(trailer  ==  'r'  ||  trailer  ==  'n')  {  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  'r'  ||  trailer  ==  'n')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  'r'  ||  trailer  ==  'n')  {	  if(trailer    ==    'n'    ||    trailer    ==    'r')    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
45	[BUG]  [BUGGY]  if(trailer  ==  '.'  ||  trailer  ==  'n'  ||  trailer  ==  'r')  {  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  '.'  ||  trailer  ==  'n'  ||  trailer  ==  'r')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  '.'  ||  trailer  ==  'n'  ||  trailer  ==  'r')  {	  if(trailer    ==    'n'    ||    trailer    ==    'r')    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
46	[BUG]  [BUGGY]  if(start  ==  0)  {  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(start  ==  0)  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(start  ==  0)  {	  if(trailer    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
47	[BUG]  [BUGGY]  if(trailer  ==  '0'  &&  trailer!=  '9')  {  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  '0'  &&  trailer!=  '9')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  '0'  &&  trailer!=  '9')  {	  if(trailer    ==    0    ||    trailer    ==    'n')    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
48	[BUG]  [BUGGY]  if(trailer  ==  '.')  {  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  '.')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  '.')  {	  if(trailer!=    0    ||    trailer    =='')    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
49	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  'e')  {  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  0  ||  trailer  ==  'e')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  0  ||  trailer  ==  'e')  {	  if(start    ==    0    ||    trailer    =='')    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
50	[BUG]  [BUGGY]  if(trailer  ==  'e'  ||  trailer  ==  'E')  {  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  'e'  ||  trailer  ==  'E')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  'e'  ||  trailer  ==  'E')  {	  if(trailer    ==''    ||    trailer    ==    'n')    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
51	[BUG]  [BUGGY]  if(trailer  =='')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  =='')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  =='')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
52	[BUG]  [BUGGY]  if(trailer  =='')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  =='')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  =='')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
53	[BUG]  [BUGGY]  if(trailer  =='')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  =='')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  trailer));  }  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  =='')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start,  trailer));  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
54	[BUG]  [BUGGY]  if(trailer  =='')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end-1],  end));  }  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  =='')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end-1],  end));  }  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  =='')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end-1],  end));  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
55	[BUG]  [BUGGY]  if(trailer  ==  '.'  ||  trailer  ==  ':')  {  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  '.'  ||  trailer  ==  ':')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  '.'  ||  trailer  ==  ':')  {	  if(trailer    ==''    ||    trailer    ==    ':')    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
56	[BUG]  [BUGGY]  if(trailer  ==  '-'  ||  trailer  ==  ':')  {  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  '-'  ||  trailer  ==  ':')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  '-'  ||  trailer  ==  ':')  {	  if(trailer    ==''    ||    trailer    ==    ':')    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
57	[BUG]  [BUGGY]  if(trailer  >=  '0'  &&  trailer  <  =  '9')  {  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  >=  '0'  &&  trailer  <  =  '9')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  >=  '0'  &&  trailer  <  =  '9')  {	  if(trailer    ==    '0'    &&    trailer    <    =    '9')    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
58	[BUG]  [BUGGY]  if(trailer  ==  '-'  ||  trailer  =='<  ')  {  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  '-'  ||  trailer  =='<  ')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  '-'  ||  trailer  =='<  ')  {	  if(trailer    ==    0    ||    trailer    ==    '-')    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
59	[BUG]  [BUGGY]  if(trailer  ==  '.'  ||  trailer  ==  'n')  {  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  '.'  ||  trailer  ==  'n')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  '.'  ||  trailer  ==  'n')  {	  if(trailer    ==''    ||    trailer    ==    'n')    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
60	[BUG]  [BUGGY]  if(trailer  ==  ''  ||  trailer  ==  'n'  ||  trailer  ==  'a'  ||  trailer  ==  'a')  {  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  ''  ||  trailer  ==  'n'  ||  trailer  ==  'a'  ||  trailer  ==  'a')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  ''  ||  trailer  ==  'n'  ||  trailer  ==  'a'  ||  trailer  ==  'a')  {	  if(trailer    ==''    ||    trailer    ==    'n')    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
61	[BUG]  [BUGGY]  if(trailer  ==  '.'  ||  trailer  ==  ',')  {  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  '.'  ||  trailer  ==  ',')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  '.'  ||  trailer  ==  ',')  {	  if(trailer    ==''    ||    trailer    =='')    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
62	[BUG]  [BUGGY]  if(trailer  ==  '0'  &&  trailer  ==  '9')  {  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  '0'  &&  trailer  ==  '9')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  '0'  &&  trailer  ==  '9')  {	  if(trailer    ==''    ||    trailer    =='')    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
63	[BUG]  [BUGGY]  if(trailer  ==  '/'  ||  trailer  ==  ':')  {  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  '/'  ||  trailer  ==  ':')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  '/'  ||  trailer  ==  ':')  {	  if(trailer    ==''    ||    trailer    ==    ':')    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
64	[BUG]  [BUGGY]  if(trailer  ==  '.'  &&  trailer  ==  ':')  {  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  '.'  &&  trailer  ==  ':')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  '.'  &&  trailer  ==  ':')  {	  if(trailer    ==''    ||    trailer    ==    ':')    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
65	[BUG]  [BUGGY]  if(trailer  ==  ':'  ||  trailer  ==  ':')  {  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  ':'  ||  trailer  ==  ':')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  ':'  ||  trailer  ==  ':')  {	  if(trailer    ==''    ||    trailer    ==    ':')    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
66	[BUG]  [BUGGY]  if(start  <  =  0  ||  trailer  ==  '')  {  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(start  <  =  0  ||  trailer  ==  '')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(start  <  =  0  ||  trailer  ==  '')  {	  if(start    ==    0    ||    trailer    =='')    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
67	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  'n'  ||  trailer  ==  '-')  {  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  0  ||  trailer  ==  'n'  ||  trailer  ==  '-')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  0  ||  trailer  ==  'n'  ||  trailer  ==  '-')  {	  if(trailer    ==    0    ||    trailer    ==    'n')    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
68	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  'n'  ||  trailer  ==  'a'  ||  trailer  ==  'a')  {  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  0  ||  trailer  ==  'n'  ||  trailer  ==  'a'  ||  trailer  ==  'a')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  0  ||  trailer  ==  'n'  ||  trailer  ==  'a'  ||  trailer  ==  'a')  {	  if(trailer    ==    0    ||    trailer    ==    'n')    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
69	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  'n'  ||  trailer  ==  ':')  {  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  0  ||  trailer  ==  'n'  ||  trailer  ==  ':')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  0  ||  trailer  ==  'n'  ||  trailer  ==  ':')  {	  if(trailer    ==    0    ||    trailer    ==    'n')    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
70	[BUG]  [BUGGY]  if(trailer  ==  '0'  &&  trailer  ==  '7')  {  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  '0'  &&  trailer  ==  '7')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  '0'  &&  trailer  ==  '7')  {	  if(trailer!=    0    ||    trailer    =='')    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
71	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
72	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  =='')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  0  ||  trailer  =='')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  0  ||  trailer  =='')  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
73	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
74	[BUG]  [BUGGY]  if(trailer  ==''  ||  trailer  ==  ',')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==''  ||  trailer  ==  ',')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==''  ||  trailer  ==  ',')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
75	[BUG]  [BUGGY]  if(trailer  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
76	[BUG]  [BUGGY]  if(trailer  ==  'n'  ||  trailer  ==  'r'  ||  trailer  ==  'a'  ||  trailer  ==  'a')  {  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  'n'  ||  trailer  ==  'r'  ||  trailer  ==  'a'  ||  trailer  ==  'a')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  'n'  ||  trailer  ==  'r'  ||  trailer  ==  'a'  ||  trailer  ==  'a')  {	  if(trailer    ==    'n'    ||    trailer    ==    'r')    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
77	[BUG]  [BUGGY]  if(trailer  ==  'n'  ||  trailer  ==  'r'  ||  trailer  ==  'e')  {  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  'n'  ||  trailer  ==  'r'  ||  trailer  ==  'e')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  'n'  ||  trailer  ==  'r'  ||  trailer  ==  'e')  {	  if(trailer    ==    'n'    ||    trailer    ==    'r')    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
78	[BUG]  [BUGGY]  if(trailer  ==  'n'  ||  trailer  ==  'r'  ||  trailer  ==  '-')  {  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  'n'  ||  trailer  ==  'r'  ||  trailer  ==  '-')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  'n'  ||  trailer  ==  'r'  ||  trailer  ==  '-')  {	  if(trailer    ==    'n'    ||    trailer    ==    'r')    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
79	[BUG]  [BUGGY]  if(trailer  ==  'n'  ||  trailer  ==  'r'  ||  trailer  ==  'a'  ||  trailer  ==  'z')  {  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  'n'  ||  trailer  ==  'r'  ||  trailer  ==  'a'  ||  trailer  ==  'z')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  'n'  ||  trailer  ==  'r'  ||  trailer  ==  'a'  ||  trailer  ==  'z')  {	  if(trailer    ==    'n'    ||    trailer    ==    'r')    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
80	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  ':')  {  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  0  ||  trailer  ==  ':')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  0  ||  trailer  ==  ':')  {	  if(trailer    ==    0    ||    trailer    ==    '-')    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
81	[BUG]  [BUGGY]  if(start  ==  0  ||  trailer  ==  '-')  {  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(start  ==  0  ||  trailer  ==  '-')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(start  ==  0  ||  trailer  ==  '-')  {	  if(trailer    ==    0    ||    trailer    ==    '-')    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
82	[BUG]  [BUGGY]  if(trailer!=  '0'  &&  trailer!=  '9')  {  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer!=  '0'  &&  trailer!=  '9')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer!=  '0'  &&  trailer!=  '9')  {	  if(trailer    ==    0    ||    trailer!='')    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
83	[BUG]  [BUGGY]  if(trailer  ==  '.'  ||  trailer  ==  '-')  {  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end-1];    [BUGGY]  if(trailer  ==  '.'  ||  trailer  ==  '-')  {  [BUGGY]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	96	96	1	replace	if(trailer  ==  '.'  ||  trailer  ==  '-')  {	  if(trailer    ==''    ||    trailer    ==    '-')    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
