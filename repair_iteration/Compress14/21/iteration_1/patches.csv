bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(currentByte  ==  '0'  &&  currentByte  <  =  '7')  {  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  ==  '0'  &&  currentByte  <  =  '7')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  ==  '0'  &&  currentByte  <  =  '7')  {	  if(currentByte    ==    '0'    &&    currentByte    >    '7')    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
2	[BUG]  [BUGGY]  if(currentByte  ==  '0'  ||  currentByte  >  '7')  {  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  ==  '0'  ||  currentByte  >  '7')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  ==  '0'  ||  currentByte  >  '7')  {	  if(currentByte    ==    '0'    &&    currentByte    >    '7')    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
3	[BUG]  [BUGGY]  if(currentByte!=  '0'  &&  currentByte  <  =  '7')  {  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte!=  '0'  &&  currentByte  <  =  '7')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte!=  '0'  &&  currentByte  <  =  '7')  {	  if(currentByte    ==    '0'    &&    currentByte    >    '7')    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
4	[BUG]  [BUGGY]  if(currentByte  >=  '0'  &&  currentByte  <  =  '7')  {  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  >=  '0'  &&  currentByte  <  =  '7')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  >=  '0'  &&  currentByte  <  =  '7')  {	  if(currentByte    ==    '0'    &&    currentByte    >    '7')    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
5	[BUG]  [BUGGY]  if(currentByte!=  '0'  ||  currentByte  >  '7')  {  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte!=  '0'  ||  currentByte  >  '7')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte!=  '0'  ||  currentByte  >  '7')  {	  if(currentByte    ==    '0'    &&    currentByte    >    '7')    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
6	[BUG]  [BUGGY]  if(currentByte  >=  '0'  ||  currentByte  >  '7')  {  [CE]  <identifier>  expected  [FE]                        IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  >=  '0'  ||  currentByte  >  '7')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  >=  '0'  ||  currentByte  >  '7')  {	  if(currentByte    ==    '0'    &&    currentByte    >    '7')    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
7	[BUG]  [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '7'  ||  currentByte  <  'a'  ||  currentByte  >  'f')  {  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '7'  ||  currentByte  <  'a'  ||  currentByte  >  'f')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  <  '0'  ||  currentByte  >  '7'  ||  currentByte  <  'a'  ||  currentByte  >  'f')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    >=    'a'    ||    currentByte    >    'f')    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
8	[BUG]  [BUGGY]  if(currentByte  ==  '0'  ||  currentByte  >  '7'  ||  currentByte  >=  'a'  ||  currentByte  >  'f')  {  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  ==  '0'  ||  currentByte  >  '7'  ||  currentByte  >=  'a'  ||  currentByte  >  'f')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  ==  '0'  ||  currentByte  >  '7'  ||  currentByte  >=  'a'  ||  currentByte  >  'f')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    >=    'a'    ||    currentByte    >    'f')    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
9	[BUG]  [BUGGY]  if(currentByte  >=  '0'  ||  currentByte  >  '7'  ||  currentByte  <  'a'  ||  currentByte  >  'f')  {  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  >=  '0'  ||  currentByte  >  '7'  ||  currentByte  <  'a'  ||  currentByte  >  'f')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  >=  '0'  ||  currentByte  >  '7'  ||  currentByte  <  'a'  ||  currentByte  >  'f')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    >=    'a'    ||    currentByte    >    'f')    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
10	[BUG]  [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '7'  ||  currentByte  >  'a'  ||  currentByte  >=  'f')  {  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '7'  ||  currentByte  >  'a'  ||  currentByte  >=  'f')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  <  '0'  ||  currentByte  >  '7'  ||  currentByte  >  'a'  ||  currentByte  >=  'f')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    >=    'a'    ||    currentByte    >    'f')    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
11	[BUG]  [BUGGY]  if(currentByte!=  '0'  ||  currentByte  >  '7'  ||  currentByte  >=  'a'  ||  currentByte  >  'f')  {  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte!=  '0'  ||  currentByte  >  '7'  ||  currentByte  >=  'a'  ||  currentByte  >  'f')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte!=  '0'  ||  currentByte  >  '7'  ||  currentByte  >=  'a'  ||  currentByte  >  'f')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    >=    'a'    ||    currentByte    >    'f')    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
12	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  currentByte,  0,  currentByte.length);  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  System.arraycopy(buffer,  offset,  currentByte,  0,  currentByte.length);  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	System.arraycopy(buffer,  offset,  currentByte,  0,  currentByte.length);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
13	[BUG]  [BUGGY]  if(currentByte!=  null)  {  for(int  i  =  start;  i  <  length;  ++i)  {  currentByte[i]  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte!=  null)  {  for(int  i  =  start;  i  <  length;  ++i)  {  currentByte[i]  =  buffer[i];  }  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte!=  null)  {  for(int  i  =  start;  i  <  length;  ++i)  {  currentByte[i]  =  buffer[i];  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
14	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  currentByte,  0,  currentByte);  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  System.arraycopy(buffer,  offset,  currentByte,  0,  currentByte);  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	System.arraycopy(buffer,  offset,  currentByte,  0,  currentByte);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
15	[BUG]  [BUGGY]  if(currentByte!=  null)  {  for(int  i  =  start;  i  <  length;  ++i)  {  currentByte  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte!=  null)  {  for(int  i  =  start;  i  <  length;  ++i)  {  currentByte  =  buffer[i];  }  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte!=  null)  {  for(int  i  =  start;  i  <  length;  ++i)  {  currentByte  =  buffer[i];  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
16	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  length);  [CE]  <identifier>  expected  [FE]                        IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  length);  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  length);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
17	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  currentByte,  length);  [CE]  <identifier>  expected  [FE]                          IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  currentByte,  length);  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	System.arraycopy(buffer,  offset,  buffer,  end,  currentByte,  length);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
18	[BUG]  [BUGGY]  if(currentByte!=  null)  {  final  int  length  =  currentByte.length;  System.arraycopy(buffer,  offset,  buffer,  start,  length);  }  [CE]  <identifier>  expected  [FE]                            IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte!=  null)  {  final  int  length  =  currentByte.length;  System.arraycopy(buffer,  offset,  buffer,  start,  length);  }  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte!=  null)  {  final  int  length  =  currentByte.length;  System.arraycopy(buffer,  offset,  buffer,  start,  length);  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
19	[BUG]  [BUGGY]  if(currentByte  >=  '0'  ||  currentByte  >  '7'  ||  currentByte  >  'a'  ||  currentByte  >  'f')  {  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  >=  '0'  ||  currentByte  >  '7'  ||  currentByte  >  'a'  ||  currentByte  >  'f')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  >=  '0'  ||  currentByte  >  '7'  ||  currentByte  >  'a'  ||  currentByte  >  'f')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    >    'a'    ||    currentByte    >    'f')    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
20	[BUG]  [BUGGY]  if(currentByte  ==  '0'  ||  currentByte  >  '7'  ||  currentByte  >  'a'  ||  currentByte  >  'f')  {  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  ==  '0'  ||  currentByte  >  '7'  ||  currentByte  >  'a'  ||  currentByte  >  'f')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  ==  '0'  ||  currentByte  >  '7'  ||  currentByte  >  'a'  ||  currentByte  >  'f')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    >    'a'    ||    currentByte    >    'f')    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
21	[BUG]  [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '7'  ||  currentByte  ==  'a'  ||  currentByte  >  'f')  {  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '7'  ||  currentByte  ==  'a'  ||  currentByte  >  'f')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  <  '0'  ||  currentByte  >  '7'  ||  currentByte  ==  'a'  ||  currentByte  >  'f')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    >    'a'    ||    currentByte    >    'f')    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
22	[BUG]  [BUGGY]  if(currentByte  >=  '0'  ||  currentByte  >  '7'  ||  currentByte  >  '9')  {  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  >=  '0'  ||  currentByte  >  '7'  ||  currentByte  >  '9')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  >=  '0'  ||  currentByte  >  '7'  ||  currentByte  >  '9')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    >    '9')    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
23	[BUG]  [BUGGY]  if(currentByte  ==  '0'  ||  currentByte  >  '7'  ||  currentByte  >  '9')  {  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  ==  '0'  ||  currentByte  >  '7'  ||  currentByte  >  '9')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  ==  '0'  ||  currentByte  >  '7'  ||  currentByte  >  '9')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    >    '9')    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
24	[BUG]  [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '7'  ||  currentByte  >=  '9')  {  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '7'  ||  currentByte  >=  '9')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  <  '0'  ||  currentByte  >  '7'  ||  currentByte  >=  '9')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    >    '9')    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
25	[BUG]  [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '7'  ||  currentByte  ==  '9')  {  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '7'  ||  currentByte  ==  '9')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  <  '0'  ||  currentByte  >  '7'  ||  currentByte  ==  '9')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    >    '9')    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
26	[BUG]  [BUGGY]  if(currentByte!=  '0'  ||  currentByte  >  '7'  ||  currentByte  >  '9')  {  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte!=  '0'  ||  currentByte  >  '7'  ||  currentByte  >  '9')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte!=  '0'  ||  currentByte  >  '7'  ||  currentByte  >  '9')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    >    '9')    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
27	[BUG]  [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '7'  &&  currentByte  <  =  '9')  {  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '7'  &&  currentByte  <  =  '9')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  <  '0'  ||  currentByte  >  '7'  &&  currentByte  <  =  '9')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    <    '9')    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
28	[BUG]  [BUGGY]  if(currentByte  >=  '0'  ||  currentByte  >  '7'  ||  currentByte  <  '9')  {  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  >=  '0'  ||  currentByte  >  '7'  ||  currentByte  <  '9')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  >=  '0'  ||  currentByte  >  '7'  ||  currentByte  <  '9')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    <    '9')    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
29	[BUG]  [BUGGY]  if(currentByte  ==  '0'  ||  currentByte  >  '7'  ||  currentByte  <  '9')  {  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  ==  '0'  ||  currentByte  >  '7'  ||  currentByte  <  '9')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  ==  '0'  ||  currentByte  >  '7'  ||  currentByte  <  '9')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    <    '9')    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
30	[BUG]  [BUGGY]  if(currentByte!=  '0'  ||  currentByte  >  '7'  ||  currentByte  <  '9')  {  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte!=  '0'  ||  currentByte  >  '7'  ||  currentByte  <  '9')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte!=  '0'  ||  currentByte  >  '7'  ||  currentByte  <  '9')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    <    '9')    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
31	[BUG]  [BUGGY]  if(currentByte  >=  '0'  ||  currentByte  >  '7'  ||  currentByte  <  =  '9')  {  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  >=  '0'  ||  currentByte  >  '7'  ||  currentByte  <  =  '9')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  >=  '0'  ||  currentByte  >  '7'  ||  currentByte  <  =  '9')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    <    =    '9')    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
32	[BUG]  [BUGGY]  if(currentByte  ==  '0'  ||  currentByte  >  '7'  ||  currentByte  <  =  '9')  {  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  ==  '0'  ||  currentByte  >  '7'  ||  currentByte  <  =  '9')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  ==  '0'  ||  currentByte  >  '7'  ||  currentByte  <  =  '9')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    <    =    '9')    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
33	[BUG]  [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '7'  ||  currentByte  >  'a'  ||  currentByte  >  'z')  {  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '7'  ||  currentByte  >  'a'  ||  currentByte  >  'z')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  <  '0'  ||  currentByte  >  '7'  ||  currentByte  >  'a'  ||  currentByte  >  'z')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    >=    'a'    ||    currentByte    >    'z')    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
34	[BUG]  [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '7'  ||  currentByte  <  'a'  ||  currentByte  >  'z')  {  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '7'  ||  currentByte  <  'a'  ||  currentByte  >  'z')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  <  '0'  ||  currentByte  >  '7'  ||  currentByte  <  'a'  ||  currentByte  >  'z')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    >=    'a'    ||    currentByte    >    'z')    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
35	[BUG]  [BUGGY]  if(currentByte  >=  '0'  ||  currentByte  >  '7'  ||  currentByte  <  'a'  ||  currentByte  >  'z')  {  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  >=  '0'  ||  currentByte  >  '7'  ||  currentByte  <  'a'  ||  currentByte  >  'z')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  >=  '0'  ||  currentByte  >  '7'  ||  currentByte  <  'a'  ||  currentByte  >  'z')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    >=    'a'    ||    currentByte    >    'z')    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
36	[BUG]  [BUGGY]  if(currentByte  ==  '0'  ||  currentByte  >  '7'  ||  currentByte  >=  'a'  ||  currentByte  >  'z')  {  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  ==  '0'  ||  currentByte  >  '7'  ||  currentByte  >=  'a'  ||  currentByte  >  'z')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  ==  '0'  ||  currentByte  >  '7'  ||  currentByte  >=  'a'  ||  currentByte  >  'z')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    >=    'a'    ||    currentByte    >    'z')    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
37	[BUG]  [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '7'  ||  currentByte  >  'a'  ||  currentByte  >=  'z')  {  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '7'  ||  currentByte  >  'a'  ||  currentByte  >=  'z')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  <  '0'  ||  currentByte  >  '7'  ||  currentByte  >  'a'  ||  currentByte  >=  'z')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    >=    'a'    ||    currentByte    >    'z')    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
38	[BUG]  [BUGGY]  if(currentByte!=  '0'  ||  currentByte  >  '7'  ||  currentByte  >=  'a'  ||  currentByte  >  'z')  {  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte!=  '0'  ||  currentByte  >  '7'  ||  currentByte  >=  'a'  ||  currentByte  >  'z')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte!=  '0'  ||  currentByte  >  '7'  ||  currentByte  >=  'a'  ||  currentByte  >  'z')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    >=    'a'    ||    currentByte    >    'z')    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
39	[BUG]  [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  <  =  '9')  {  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  <  =  '9')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  <  =  '9')  {	  if(currentByte    <    '0'    ||    currentByte    >    '9')    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
40	[BUG]  [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  <  'a'  ||  currentByte  >  'z')  {  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  <  'a'  ||  currentByte  >  'z')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  <  'a'  ||  currentByte  >  'z')  {	  if(currentByte    <    '0'    ||    currentByte    >    '9')    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
41	[BUG]  [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  <  'A'  ||  currentByte  >  'Z')  {  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  <  'A'  ||  currentByte  >  'Z')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  <  'A'  ||  currentByte  >  'Z')  {	  if(currentByte    <    '0'    ||    currentByte    >    '9')    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
42	[BUG]  [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  <  '9')  {  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  <  '9')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  <  '9')  {	  if(currentByte    <    '0'    ||    currentByte    >    '9')    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
43	[BUG]  [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  <  'a'  ||  currentByte  >  'f')  {  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  <  'a'  ||  currentByte  >  'f')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  <  'a'  ||  currentByte  >  'f')  {	  if(currentByte    <    '0'    ||    currentByte    >    '9')    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
44	[BUG]  [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  >=  'a'  &&  currentByte  <  =  'z')  {  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  >=  'a'  &&  currentByte  <  =  'z')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  >=  'a'  &&  currentByte  <  =  'z')  {	  if(currentByte    <    '0'    ||    currentByte    >    '9')    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
45	[BUG]  [BUGGY]  if(currentByte  >  '0'  &&  currentByte  <  =  '7')  {  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  >  '0'  &&  currentByte  <  =  '7')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  >  '0'  &&  currentByte  <  =  '7')  {	  if(currentByte    >=    '0'    &&    currentByte    >    '7')    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
46	[BUG]  [BUGGY]  if(currentByte  <  =  '0'  &&  currentByte  >  '7')  {  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  <  =  '0'  &&  currentByte  >  '7')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  <  =  '0'  &&  currentByte  >  '7')  {	  if(currentByte    >=    '0'    &&    currentByte    >    '7')    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
47	[BUG]  [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  >=  'a'  ||  currentByte  >  'z')  {  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  >=  'a'  ||  currentByte  >  'z')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  >=  'a'  ||  currentByte  >  'z')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    >=    'a'    ||    currentByte    >    'z')    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
48	[BUG]  [BUGGY]  if(currentByte  ==  '0'  ||  currentByte  >  '7'  ||  currentByte  <  'a'  ||  currentByte  >  'z')  {  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  ==  '0'  ||  currentByte  >  '7'  ||  currentByte  <  'a'  ||  currentByte  >  'z')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  ==  '0'  ||  currentByte  >  '7'  ||  currentByte  <  'a'  ||  currentByte  >  'z')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    >=    'a'    ||    currentByte    >    'z')    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
49	[BUG]  [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  >  '9')  {  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  >  '9')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  >  '9')  {	  if(currentByte    <    '0'    ||    currentByte    >    '9')    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
50	[BUG]  [BUGGY]  if(currentByte  >=  '0'  &&  currentByte  >  '9')  {  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  >=  '0'  &&  currentByte  >  '9')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  >=  '0'  &&  currentByte  >  '9')  {	  if(currentByte    <    '0'    ||    currentByte    >    '9')    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
51	[BUG]  [BUGGY]  if(currentByte  >  '0'  &&  currentByte  <  =  '9')  {  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  >  '0'  &&  currentByte  <  =  '9')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  >  '0'  &&  currentByte  <  =  '9')  {	  if(currentByte    <    '0'    ||    currentByte    >    '9')    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
52	[BUG]  [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  >=  'a'  ||  currentByte  >  'f')  {  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  >=  'a'  ||  currentByte  >  'f')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  >=  'a'  ||  currentByte  >  'f')  {	  if(currentByte    <    '0'    ||    currentByte    >    '9')    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
53	[BUG]  [BUGGY]  if(currentByte  ==  '0'  &&  currentByte  >  '9')  {  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  ==  '0'  &&  currentByte  >  '9')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  ==  '0'  &&  currentByte  >  '9')  {	  if(currentByte    <    '0'    ||    currentByte    >    '9')    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
54	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  0,  length);  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  0,  length);  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  0,  length);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
55	[BUG]  [BUGGY]  if(currentByte!=  null)  {  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  0,  length);  return  result;  }  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte!=  null)  {  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  0,  length);  return  result;  }  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte!=  null)  {  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  0,  length);  return  result;  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
56	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  length  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  length  -  '0');  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  length  -  '0');	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
57	[BUG]  [BUGGY]  if(currentByte!=  null)  {  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  length);  return  result;  }  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte!=  null)  {  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  length);  return  result;  }  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte!=  null)  {  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  length);  return  result;  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
58	[BUG]  [BUGGY]  if(currentByte!=  null)  {  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  0,  length);  }  [CE]  <identifier>  expected  [FE]                        IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte!=  null)  {  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  0,  length);  }  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte!=  null)  {  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  0,  length);  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
59	[BUG]  [BUGGY]  if(currentByte!=  null)  {  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  0,  length);  continue;  }  [CE]  <identifier>  expected  [FE]                          IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte!=  null)  {  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  0,  length);  continue;  }  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte!=  null)  {  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte,  0,  length);  continue;  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
60	[BUG]  [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  >  'a'  ||  currentByte  >  'f')  {  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  >  'a'  ||  currentByte  >  'f')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  >  'a'  ||  currentByte  >  'f')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    >    'a'    ||    currentByte    >    'f')    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
61	[BUG]  [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '7'  ||  currentByte  >=  'a'  ||  currentByte  >=  'f')  {  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '7'  ||  currentByte  >=  'a'  ||  currentByte  >=  'f')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  <  '0'  ||  currentByte  >  '7'  ||  currentByte  >=  'a'  ||  currentByte  >=  'f')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    >    'a'    ||    currentByte    >    'f')    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
62	[BUG]  [BUGGY]  if(currentByte  ==  '0'  &&  currentByte  <  =  '7'  ||  currentByte  >  'a'  ||  currentByte  >  'f')  {  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  ==  '0'  &&  currentByte  <  =  '7'  ||  currentByte  >  'a'  ||  currentByte  >  'f')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  ==  '0'  &&  currentByte  <  =  '7'  ||  currentByte  >  'a'  ||  currentByte  >  'f')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    >    'a'    ||    currentByte    >    'f')    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
63	[BUG]  [BUGGY]  if(currentByte  >  '0'  ||  currentByte  >  '7'  ||  currentByte  >  '9')  {  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  >  '0'  ||  currentByte  >  '7'  ||  currentByte  >  '9')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  >  '0'  ||  currentByte  >  '7'  ||  currentByte  >  '9')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    <    '9')    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
64	[BUG]  [BUGGY]  if(currentByte  ==  '0'  ||  currentByte  >  '7'  ||  currentByte  <  'a'  ||  currentByte  >  'f')  {  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  ==  '0'  ||  currentByte  >  '7'  ||  currentByte  <  'a'  ||  currentByte  >  'f')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  ==  '0'  ||  currentByte  >  '7'  ||  currentByte  <  'a'  ||  currentByte  >  'f')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    >=    'a'    ||    currentByte    >    'f')    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
65	[BUG]  [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  >  '7')  {  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  >  '7')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  >  '7')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    >    '9')    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
66	[BUG]  [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '8'  ||  currentByte  >  'a'  ||  currentByte  >  'f')  {  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '8'  ||  currentByte  >  'a'  ||  currentByte  >  'f')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  <  '0'  ||  currentByte  >  '8'  ||  currentByte  >  'a'  ||  currentByte  >  'f')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    >    'a'    ||    currentByte    >    'f')    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
67	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length);  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length);  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
68	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  currentByte);  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  currentByte);  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	System.arraycopy(buffer,  offset,  buffer,  end,  currentByte);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
69	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  currentByte);  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  currentByte);  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  currentByte);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
70	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  currentByte);  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length  -  currentByte);  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length  -  currentByte);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
71	[BUG]  [BUGGY]  if(currentByte!=  '0'  &&  currentByte  >  '7')  {  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte!=  '0'  &&  currentByte  >  '7')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte!=  '0'  &&  currentByte  >  '7')  {	  if(currentByte    ==    '0'    &&    currentByte    >    '7')    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
72	[BUG]  [BUGGY]  if(currentByte  <  0  ||  currentByte  >  '7')  {  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  <  0  ||  currentByte  >  '7')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  <  0  ||  currentByte  >  '7')  {	  if(currentByte    ==    '0'    &&    currentByte    >    '7')    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
73	[BUG]  [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '8'  ||  currentByte  >  '9')  {  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '8'  ||  currentByte  >  '9')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  <  '0'  ||  currentByte  >  '8'  ||  currentByte  >  '9')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    >    '9')    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
74	[BUG]  [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  >  '8')  {  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  >  '8')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  >  '8')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    >    '9')    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
75	[BUG]  [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '8'  ||  currentByte  >=  'a'  ||  currentByte  >  'z')  {  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '8'  ||  currentByte  >=  'a'  ||  currentByte  >  'z')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  <  '0'  ||  currentByte  >  '8'  ||  currentByte  >=  'a'  ||  currentByte  >  'z')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    >=    'a'    ||    currentByte    >    'z')    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
76	[BUG]  [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '7'  ||  currentByte  ==  'a'  ||  currentByte  >  'z')  {  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '7'  ||  currentByte  ==  'a'  ||  currentByte  >  'z')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  <  '0'  ||  currentByte  >  '7'  ||  currentByte  ==  'a'  ||  currentByte  >  'z')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    >=    'a'    ||    currentByte    >    'z')    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
77	[BUG]  [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  <  '1')  {  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  <  '1')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  <  '1')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    <    '9')    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
78	[BUG]  [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  <  '0')  {  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  <  '0')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  <  '0'  ||  currentByte  >  '9'  ||  currentByte  <  '0')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    <    '9')    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
79	[BUG]  [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '8'  ||  currentByte  >=  'a'  ||  currentByte  >  'f')  {  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  <  '0'  ||  currentByte  >  '8'  ||  currentByte  >=  'a'  ||  currentByte  >  'f')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  <  '0'  ||  currentByte  >  '8'  ||  currentByte  >=  'a'  ||  currentByte  >  'f')  {	  if(currentByte    <    '0'    ||    currentByte    >    '7'    ||    currentByte    >=    'a'    ||    currentByte    >    'f')    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
80	[BUG]  [BUGGY]  if(currentByte  >  '9'  ||  currentByte  <  '0'  ||  currentByte  >  '9')  {  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]    }  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];      [BUGGY]  if(currentByte  >  '9'  ||  currentByte  <  '0'  ||  currentByte  >  '9')  {  [BUGGY]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	103	103	1	replace	if(currentByte  >  '9'  ||  currentByte  <  '0'  ||  currentByte  >  '9')  {	  if(currentByte    <    '0'    ||    currentByte    >    '9')    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
