bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  result  =(result  -  1)+  (currentByte  -  '0');  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(result  -  1)+  (currentByte  -  '0');  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  1)+  (currentByte  -  '0');	  result    =(result    -    3)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	2	None	replace
2	[BUG]  [BUGGY]  result  =(result  -  3)/(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(result  -  3)/(currentByte  -  '0');  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  3)/(currentByte  -  '0');	  result    =(result    -    3)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	2	None	replace
3	[BUG]  [BUGGY]  result  =(currentByte  -  3)+(result  -  '0');  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(currentByte  -  3)+(result  -  '0');  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  -  3)+(result  -  '0');	  result    =(result    -    3)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	2	None	replace
4	[BUG]  [BUGGY]  result  =(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(currentByte  -  '0');  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  -  '0');	  result    =(result    -    3)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	2	None	replace
5	[BUG]  [BUGGY]  result  =(result  -  3)+(currentByte  >  '0'?  currentByte  :  '0');  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(result  -  3)+(currentByte  >  '0'?  currentByte  :  '0');  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  3)+(currentByte  >  '0'?  currentByte  :  '0');	  result    =(result    -    3)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	2	None	replace
6	[BUG]  [BUGGY]  result  =(currentByte  -  '0')+(result  -  '7');  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(currentByte  -  '0')+(result  -  '7');  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  -  '0')+(result  -  '7');	  result    =(result    -    3)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	2	None	replace
7	[BUG]  [BUGGY]  result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte);  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte);  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte);	  result    =    (result    <    <    3)+(currentByte    >    '0'?    currentByte    -    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
8	[BUG]  [BUGGY]  result  =(currentByte  <  <  3)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte);  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(currentByte  <  <  3)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte);  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  <  <  3)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte);	  result    =    (result    <    <    3)+(currentByte    >    '0'?    currentByte    -    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
9	[BUG]  [BUGGY]  result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  -  1  :  currentByte);  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  -  1  :  currentByte);  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  -  1  :  currentByte);	  result    =    (result    <    <    3)+(currentByte    >    '0'?    currentByte    -    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
10	[BUG]  [BUGGY]  result  =(result  <  <  2)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte);  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(result  <  <  2)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte);  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  2)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte);	  result    =    (result    <    <    3)+(currentByte    >    '0'?    currentByte    -    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
11	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  >=  '0'?  currentByte  -  '0'  :  currentByte);  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(result  <  <  3)+(currentByte  >=  '0'?  currentByte  -  '0'  :  currentByte);  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  3)+(currentByte  >=  '0'?  currentByte  -  '0'  :  currentByte);	  result    =    (result    <    <    3)+(currentByte    >    '0'?    currentByte    -    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
12	[BUG]  [BUGGY]  result  =(result  <  <  1)+  (currentByte  >  '0'?  currentByte  :  '0');  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(result  <  <  1)+  (currentByte  >  '0'?  currentByte  :  '0');  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+  (currentByte  >  '0'?  currentByte  :  '0');	  result    =(result    <    <    1)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	1	None	replace
13	[BUG]  [BUGGY]  result  =(result  +  1)+  (currentByte  -  '0');  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(result  +  1)+  (currentByte  -  '0');  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  +  1)+  (currentByte  -  '0');	  result    =(result    <    <    1)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	1	None	replace
14	[BUG]  [BUGGY]  result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  -  '0'  :  0);  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  -  '0'  :  0);  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  -  '0'  :  0);	  result    =(result    <    <    1)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	1	None	replace
15	[BUG]  [BUGGY]  result  =(result  -  start)/(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(result  -  start)/(currentByte  -  '0');  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  start)/(currentByte  -  '0');	  result    =(result    -    start)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
16	[BUG]  [BUGGY]  result  =(currentByte  -  start)+(result  -  '0');  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(currentByte  -  start)+(result  -  '0');  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  -  start)+(result  -  '0');	  result    =(result    -    start)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
17	[BUG]  [BUGGY]  result  =(result  -  '0')+  (currentByte  -  '0');  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(result  -  '0')+  (currentByte  -  '0');  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  '0')+  (currentByte  -  '0');	  result    =(result    -    start)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
18	[BUG]  [BUGGY]  result  =(start  -  result)+  (currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(start  -  result)+  (currentByte  -  '0');  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(start  -  result)+  (currentByte  -  '0');	  result    =(result    -    start)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
19	[BUG]  [BUGGY]  result  =(end  -  start)+  (currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(end  -  start)+  (currentByte  -  '0');  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(end  -  start)+  (currentByte  -  '0');	  result    =(result    -    start)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
20	[BUG]  [BUGGY]  result  =(result  <  <  1)+(length  -  '0');  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(result  <  <  1)+(length  -  '0');  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(length  -  '0');	  result    =    (result    <    <    1)+(currentByte    -    '0');    //    convert    from    ASCII    //    CheckStyle:MagicNumber    ON    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
21	[BUG]  [BUGGY]  result  =(result  <  <  1)+(currentByte  *  '0');  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(result  <  <  1)+(currentByte  *  '0');  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(currentByte  *  '0');	  result    =    (result    <    <    1)+(currentByte    -    '0');    //    convert    from    ASCII    //    CheckStyle:MagicNumber    ON    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
22	[BUG]  [BUGGY]  result  =(result  <  <  1)+(currentByte  +  '0');  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(result  <  <  1)+(currentByte  +  '0');  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(currentByte  +  '0');	  result    =    (result    <    <    1)+(currentByte    -    '0');    //    convert    from    ASCII    //    CheckStyle:MagicNumber    ON    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
23	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0');  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  3)+(currentByte  -  '0');	  result    =(currentByte    <    <    3)+    (result    -    '0');    	non-compiled	[CE]  <identifier>  expected	3	None	replace
24	[BUG]  [BUGGY]  result  =(result  -  '0');  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(result  -  '0');  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  '0');	  result    =(currentByte    <    <    3)+    (result    -    '0');    	non-compiled	[CE]  <identifier>  expected	3	None	replace
25	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0')+  1;  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  3)+(currentByte  -  '0')+  1;	  result    =(currentByte    <    <    3)+    (result    -    '0');    	non-compiled	[CE]  <identifier>  expected	3	None	replace
26	[BUG]  [BUGGY]  result  =(result  -  '0')+(currentByte  -  '7');  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(result  -  '0')+(currentByte  -  '7');  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  '0')+(currentByte  -  '7');	  result    =(currentByte    <    <    3)+    (result    -    '0');    	non-compiled	[CE]  <identifier>  expected	3	None	replace
27	[BUG]  [BUGGY]  result  =(currentByte  <  <  3)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(currentByte  <  <  3)+(length  -  '0');  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  <  <  3)+(length  -  '0');	  result    =(currentByte    <    <    3)+    (result    -    '0');    	non-compiled	[CE]  <identifier>  expected	3	None	replace
28	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte);  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte);  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
29	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsIOctal(currentByte);  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsIOctal(currentByte);  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsIOctal(currentByte);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
30	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsByte(currentByte);  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsByte(currentByte);  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsByte(currentByte);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
31	[BUG]  [BUGGY]  result  +=  length;  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  +=  length;  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  +=  length;	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
32	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsIOctal(currentByte));  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsIOctal(currentByte));  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsIOctal(currentByte));	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
33	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOCtal(currentByte);  [CE]  <identifier>  expected  [FE]                        IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOCtal(currentByte);  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOCtal(currentByte);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
34	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsIOException(currentByte);  [CE]  <identifier>  expected  [FE]                          IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsIOException(currentByte);  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsIOException(currentByte);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
35	[BUG]  [BUGGY]  result  =(result  *  3)+  (currentByte  -  '0');  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(result  *  3)+  (currentByte  -  '0');  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  *  3)+  (currentByte  -  '0');	  result    =(result    -    3)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	2	None	replace
36	[BUG]  [BUGGY]  result  =(result  -  3)+(currentByte  *  '0');  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(result  -  3)+(currentByte  *  '0');  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  3)+(currentByte  *  '0');	  result    =(result    -    3)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	2	None	replace
37	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  -  '0');  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(result  <  <  3)+(length  -  '0');  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  3)+(length  -  '0');	  result    =(currentByte    <    <    3)+    (result    -    '0');    	non-compiled	[CE]  <identifier>  expected	3	None	replace
38	[BUG]  [BUGGY]  result  =(result  <  <  3)+(end  -  '0');  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(result  <  <  3)+(end  -  '0');  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  3)+(end  -  '0');	  result    =(currentByte    <    <    3)+    (result    -    '0');    	non-compiled	[CE]  <identifier>  expected	3	None	replace
39	[BUG]  [BUGGY]  result  =(result  -  start)+  (length  -  '0');  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(result  -  start)+  (length  -  '0');  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  start)+  (length  -  '0');	  result    =(result    -    start)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
40	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte  +  1);  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(result  <  <  3)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte  +  1);  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  3)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte  +  1);	  result    =    (result    <    <    3)+(currentByte    >    '0'?    currentByte    -    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
41	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOCR(currentByte);  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOCR(currentByte);  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOCR(currentByte);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
42	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOException( " ");  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOException( " ");  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOException( " ");	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
43	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOJSC(currentByte);  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOJSC(currentByte);  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOJSC(currentByte);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
44	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(result);  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(result);  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOctal(result);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
45	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(buffer,  start,  length);  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(buffer,  start,  length);  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOctal(buffer,  start,  length);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
46	[BUG]  [BUGGY]  result  =(result  <  <  3)/(result  -  '0');  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(result  <  <  3)/(result  -  '0');  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  3)/(result  -  '0');	  result    =(currentByte    <    <    3)+    (result    -    '0');    	non-compiled	[CE]  <identifier>  expected	3	None	replace
47	[BUG]  [BUGGY]  result  =(result  <  <  4)+(result  -  '0');  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(result  <  <  4)+(result  -  '0');  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  4)+(result  -  '0');	  result    =(currentByte    <    <    3)+    (result    -    '0');    	non-compiled	[CE]  <identifier>  expected	3	None	replace
48	[BUG]  [BUGGY]  result  =(result  <  <  1)/(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(result  <  <  1)/(currentByte  -  '0');  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)/(currentByte  -  '0');	  result    =(result    <    <    1)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	1	None	replace
49	[BUG]  [BUGGY]  result  =(result  -  3)+(currentByte  >  '0'?  '0'  :  currentByte);  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(result  -  3)+(currentByte  >  '0'?  '0'  :  currentByte);  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  3)+(currentByte  >  '0'?  '0'  :  currentByte);	  result    =(result    -    3)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	2	None	replace
50	[BUG]  [BUGGY]  result  =(result  -  3)+(currentByte  <  '0'  ||  currentByte  >  '7');  [CE]  <identifier>  expected  [FE]            IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(result  -  3)+(currentByte  <  '0'  ||  currentByte  >  '7');  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  3)+(currentByte  <  '0'  ||  currentByte  >  '7');	  result    =(result    -    3)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	2	None	replace
51	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(currentByte);  [CE]  <identifier>  expected  [FE]              IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(currentByte);  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsByte(currentByte);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
52	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsString(currentByte);  [CE]  <identifier>  expected  [FE]                IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsString(currentByte);  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsString(currentByte);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
53	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(result, "UTF-8 ");  [CE]  <identifier>  expected  [FE]                  IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(result, "UTF-8 ");  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsString(result, "UTF-8 ");	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
54	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsStream(currentByte);  [CE]  <identifier>  expected  [FE]                    IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsStream(currentByte);  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsStream(currentByte);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
55	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  result,  0,  currentByte);  [CE]  <identifier>  expected  [FE]                      IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  System.arraycopy(buffer,  offset,  result,  0,  currentByte);  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	System.arraycopy(buffer,  offset,  result,  0,  currentByte);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
56	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(currentByte);  [CE]  <identifier>  expected  [FE]                        IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(currentByte);  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsObject(currentByte);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
57	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsMessage(currentByte);  [CE]  <identifier>  expected  [FE]                          IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsMessage(currentByte);  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsMessage(currentByte);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
58	[BUG]  [BUGGY]  result  =(result  <  <  1)+(length  -  '0');  //  convert  from  ASCII  //  CheckStyle:MagicNumber  ON  }  [CE]  <identifier>  expected  [FE]        IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(result  <  <  1)+(length  -  '0');  //  convert  from  ASCII  //  CheckStyle:MagicNumber  ON  }  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(length  -  '0');  //  convert  from  ASCII  //  CheckStyle:MagicNumber  ON  }	  result    =    (result    <    <    1)+(currentByte    -    '0');    //    convert    from    ASCII    //    CheckStyle:MagicNumber    ON    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
59	[BUG]  [BUGGY]  result  =(result  -  currentByte)/(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]          IOException    [CONTEXT]    end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }    [BUGGY]  result  =(result  -  currentByte)/(currentByte  -  '0');  [BUGGY]      }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  currentByte)/(currentByte  -  '0');	  result    =(result    -    start)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
