bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(currentByte,  trailer);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(currentByte,  trailer);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsByte(currentByte,  trailer);	  result    =    JsonStringEncoder.getInstance().encodeAsByte(currentByte);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
2	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(currentByte  +  1);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(currentByte  +  1);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsByte(currentByte  +  1);	  result    =    JsonStringEncoder.getInstance().encodeAsByte(currentByte);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
3	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(buffer,  start);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(buffer,  start);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsByte(buffer,  start);	  result    =    JsonStringEncoder.getInstance().encodeAsByte(currentByte);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
4	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(buffer,  currentByte);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(buffer,  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsByte(buffer,  currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsByte(currentByte);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
5	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(currentByte)+  1;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(currentByte)+  1;  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsByte(currentByte)+  1;	  result    =    JsonStringEncoder.getInstance().encodeAsByte(currentByte);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
6	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsISOControl(currentByte);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsISOControl(currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsISOControl(currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsByte(currentByte);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
7	[BUG]  [BUGGY]  result  =(currentByte  -  result)/(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  -  result)/(currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  -  result)/(currentByte  -  '0');	  result    =(result    -    currentByte)/(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	59	None	replace
8	[BUG]  [BUGGY]  result  =(result  -  '0')/(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  '0')/(currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  '0')/(currentByte  -  '0');	  result    =(result    -    currentByte)/(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	59	None	replace
9	[BUG]  [BUGGY]  result  =(result  -  currentByte)/(currentByte  *  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  currentByte)/(currentByte  *  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  currentByte)/(currentByte  *  '0');	  result    =(result    -    currentByte)/(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	59	None	replace
10	[BUG]  [BUGGY]  result  =(result  -  currentByte)/(length  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  currentByte)/(length  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  currentByte)/(length  -  '0');	  result    =(result    -    currentByte)/(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	59	None	replace
11	[BUG]  [BUGGY]  result  =(result  -  1)/(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  1)/(currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  1)/(currentByte  -  '0');	  result    =(result    -    currentByte)/(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	59	None	replace
12	[BUG]  [BUGGY]  result  =(end  -  currentByte)/(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(end  -  currentByte)/(currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(end  -  currentByte)/(currentByte  -  '0');	  result    =(result    -    currentByte)/(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	59	None	replace
13	[BUG]  [BUGGY]  result  =(result  <  <  1)+(currentByte  >=  '0'?  currentByte  -  '0'  :  currentByte);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+(currentByte  >=  '0'?  currentByte  -  '0'  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(currentByte  >=  '0'?  currentByte  -  '0'  :  currentByte);	  result    =(result    <    <    1)+(currentByte    >    '0'?    currentByte    -    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
14	[BUG]  [BUGGY]  result  =(result  <  <  1)+(currentByte  ==  '0'?  currentByte  -  '0'  :  currentByte);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+(currentByte  ==  '0'?  currentByte  -  '0'  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(currentByte  ==  '0'?  currentByte  -  '0'  :  currentByte);	  result    =(result    <    <    1)+(currentByte    >    '0'?    currentByte    -    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
15	[BUG]  [BUGGY]  result  =(result  <  <  1)+(length  >  '0'?  currentByte  -  '0'  :  currentByte);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+(length  >  '0'?  currentByte  -  '0'  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(length  >  '0'?  currentByte  -  '0'  :  currentByte);	  result    =(result    <    <    1)+(currentByte    >    '0'?    currentByte    -    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
16	[BUG]  [BUGGY]  result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  *  '0'  :  currentByte);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  *  '0'  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  *  '0'  :  currentByte);	  result    =(result    <    <    1)+(currentByte    >    '0'?    currentByte    -    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
17	[BUG]  [BUGGY]  result  =(result  <  <  1)/(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)/(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)/(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte);	  result    =(result    <    <    1)+(currentByte    >    '0'?    currentByte    -    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
18	[BUG]  [BUGGY]  result  =(currentByte  <  <  1)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  <  <  1)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  <  <  1)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte);	  result    =(result    <    <    1)+(currentByte    >    '0'?    currentByte    -    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
19	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsIOctal(currentByte,  length));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsIOctal(currentByte,  length));  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsIOctal(currentByte,  length));	  result    =    JsonStringEncoder.getInstance().quoteAsIOctal(currentByte));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
20	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsIOctal(currentByte,  trailer));  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsIOctal(currentByte,  trailer));  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsIOctal(currentByte,  trailer));	  result    =    JsonStringEncoder.getInstance().quoteAsIOctal(currentByte));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
21	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsIOctal(currentByte,  start));  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsIOctal(currentByte,  start));  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsIOctal(currentByte,  start));	  result    =    JsonStringEncoder.getInstance().quoteAsIOctal(currentByte));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
22	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().parseAsIOctal(currentByte));  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().parseAsIOctal(currentByte));  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().parseAsIOctal(currentByte));	  result    =    JsonStringEncoder.getInstance().quoteAsIOctal(currentByte));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
23	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsIOctal(currentByte,  end));  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsIOctal(currentByte,  end));  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsIOctal(currentByte,  end));	  result    =    JsonStringEncoder.getInstance().quoteAsIOctal(currentByte));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
24	[BUG]  [BUGGY]  result  =(result  <  <  1)/(currentByte  *  '0');  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)/(currentByte  *  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)/(currentByte  *  '0');	  result    =(result    <    <    1)/(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	48	None	replace
25	[BUG]  [BUGGY]  result  =(result  <  <  1)/(currentByte  +  '0');  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)/(currentByte  +  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)/(currentByte  +  '0');	  result    =(result    <    <    1)/(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	48	None	replace
26	[BUG]  [BUGGY]  result  =(currentByte  <  <  1)/(result  -  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  <  <  1)/(result  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  <  <  1)/(result  -  '0');	  result    =(result    <    <    1)/(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	48	None	replace
27	[BUG]  [BUGGY]  result  =(result  <  <  1)/(currentByte  -  '0',  length);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)/(currentByte  -  '0',  length);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)/(currentByte  -  '0',  length);	  result    =(result    <    <    1)/(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	48	None	replace
28	[BUG]  [BUGGY]  result  =(result  <  <  1)/(currentByte  >  '0'?  currentByte  :  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)/(currentByte  >  '0'?  currentByte  :  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)/(currentByte  >  '0'?  currentByte  :  '0');	  result    =(result    <    <    1)/(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	48	None	replace
29	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeOctal(currentByte);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeOctal(currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeOctal(currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsIOctal(result);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
30	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte,  result);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte,  result);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte,  result);	  result    =    JsonStringEncoder.getInstance().encodeAsIOctal(result);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
31	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOctal(currentByte);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOctal(currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsOctal(currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsIOctal(result);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
32	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(this,  currentByte);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(this,  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOctal(this,  currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsIOctal(result);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
33	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeByte(currentByte);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeByte(currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeByte(currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsIOctal(result);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
34	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(streamByte);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(streamByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOctal(streamByte);	  result    =    JsonStringEncoder.getInstance().encodeAsIOctal(result);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
35	[BUG]  [BUGGY]  result  =(result  -  '0')+(end  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  '0')+(end  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  '0')+(end  -  '0');	  result    =(result    <    <    3)+(end    -    '0');    	non-compiled	[CE]  <identifier>  expected	38	None	replace
36	[BUG]  [BUGGY]  result  =(result  -  3)+(end  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  3)+(end  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  3)+(end  -  '0');	  result    =(result    <    <    3)+(end    -    '0');    	non-compiled	[CE]  <identifier>  expected	38	None	replace
37	[BUG]  [BUGGY]  result  =(end  <  <  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(end  <  <  3)+(currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(end  <  <  3)+(currentByte  -  '0');	  result    =(result    <    <    3)+(end    -    '0');    	non-compiled	[CE]  <identifier>  expected	38	None	replace
38	[BUG]  [BUGGY]  result  =(result  <  <  1)+(end  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+(end  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(end  -  '0');	  result    =(result    <    <    3)+(end    -    '0');    	non-compiled	[CE]  <identifier>  expected	38	None	replace
39	[BUG]  [BUGGY]  result  =(end  <  <  3)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(end  <  <  3)+(result  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(end  <  <  3)+(result  -  '0');	  result    =(result    <    <    3)+(end    -    '0');    	non-compiled	[CE]  <identifier>  expected	38	None	replace
40	[BUG]  [BUGGY]  result  =(result  +  3)+(end  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  +  3)+(end  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  +  3)+(end  -  '0');	  result    =(result    <    <    3)+(end    -    '0');    	non-compiled	[CE]  <identifier>  expected	38	None	replace
41	[BUG]  [BUGGY]  result  =(currentByte  <  '0'  ||  currentByte  >  '7');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  <  '0'  ||  currentByte  >  '7');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  <  '0'  ||  currentByte  >  '7');	  result    =(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	4	None	replace
42	[BUG]  [BUGGY]  result  =(currentByte  >  '0'?  currentByte  :  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  >  '0'?  currentByte  :  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  >  '0'?  currentByte  :  '0');	  result    =(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	4	None	replace
43	[BUG]  [BUGGY]  result  =(currentByte  <  '0'  ||  currentByte  >  '7')?(currentByte  +  '0'):(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  <  '0'  ||  currentByte  >  '7')?(currentByte  +  '0'):(currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  <  '0'  ||  currentByte  >  '7')?(currentByte  +  '0'):(currentByte  -  '0');	  result    =(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	4	None	replace
44	[BUG]  [BUGGY]  result  =(currentByte  <  '0'  ||  currentByte  >  '7')?(result  -  '0'):(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  <  '0'  ||  currentByte  >  '7')?(result  -  '0'):(currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  <  '0'  ||  currentByte  >  '7')?(result  -  '0'):(currentByte  -  '0');	  result    =(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	4	None	replace
45	[BUG]  [BUGGY]  result  =(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte);	  result    =(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	4	None	replace
46	[BUG]  [BUGGY]  result  =(currentByte  <  '0'  ||  currentByte  >  '7')?(currentByte  -  '0'):(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  <  '0'  ||  currentByte  >  '7')?(currentByte  -  '0'):(currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  <  '0'  ||  currentByte  >  '7')?(currentByte  -  '0'):(currentByte  -  '0');	  result    =(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	4	None	replace
47	[BUG]  [BUGGY]  result  =(length  -  start)+(result  -  '0');  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(length  -  start)+(result  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(length  -  start)+(result  -  '0');	  result    =(result    -    start)+    (length    -    '0');    	non-compiled	[CE]  <identifier>  expected	39	None	replace
48	[BUG]  [BUGGY]  result  =(result  -  start)/(length  -  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  start)/(length  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  start)/(length  -  '0');	  result    =(result    -    start)+    (length    -    '0');    	non-compiled	[CE]  <identifier>  expected	39	None	replace
49	[BUG]  [BUGGY]  result  =(result  -  '0')+  (length  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  '0')+  (length  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  '0')+  (length  -  '0');	  result    =(result    -    start)+    (length    -    '0');    	non-compiled	[CE]  <identifier>  expected	39	None	replace
50	[BUG]  [BUGGY]  result  =(result  -  offset)+  (length  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  offset)+  (length  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  offset)+  (length  -  '0');	  result    =(result    -    start)+    (length    -    '0');    	non-compiled	[CE]  <identifier>  expected	39	None	replace
51	[BUG]  [BUGGY]  result  =(start  -  result)+  (length  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(start  -  result)+  (length  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(start  -  result)+  (length  -  '0');	  result    =(result    -    start)+    (length    -    '0');    	non-compiled	[CE]  <identifier>  expected	39	None	replace
52	[BUG]  [BUGGY]  result  =(end  -  start)+  (length  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(end  -  start)+  (length  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(end  -  start)+  (length  -  '0');	  result    =(result    -    start)+    (length    -    '0');    	non-compiled	[CE]  <identifier>  expected	39	None	replace
53	[BUG]  [BUGGY]  result  =(result  +  1)/(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  +  1)/(currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  +  1)/(currentByte  -  '0');	  result    =(result    +    1)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	13	None	replace
54	[BUG]  [BUGGY]  result  =(result  +  1)+(currentByte  >  '0'?  currentByte  :  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  +  1)+(currentByte  >  '0'?  currentByte  :  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  +  1)+(currentByte  >  '0'?  currentByte  :  '0');	  result    =(result    +    1)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	13	None	replace
55	[BUG]  [BUGGY]  result  =(result  +  1)+  (currentByte  *  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  +  1)+  (currentByte  *  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  +  1)+  (currentByte  *  '0');	  result    =(result    +    1)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	13	None	replace
56	[BUG]  [BUGGY]  result  =(result  /  1)+  (currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  /  1)+  (currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  /  1)+  (currentByte  -  '0');	  result    =(result    +    1)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	13	None	replace
57	[BUG]  [BUGGY]  result  =(result  <  <  1)+(currentByte  >=  '0'?  currentByte  -  '0'  :  0);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+(currentByte  >=  '0'?  currentByte  -  '0'  :  0);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(currentByte  >=  '0'?  currentByte  -  '0'  :  0);	  result    =(result    <    <    1)+(currentByte    >    '0'?    currentByte    -    '0'    :    0);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
58	[BUG]  [BUGGY]  result  =(result  <  <  1)+(length  >  '0'?  currentByte  -  '0'  :  0);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+(length  >  '0'?  currentByte  -  '0'  :  0);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(length  >  '0'?  currentByte  -  '0'  :  0);	  result    =(result    <    <    1)+(currentByte    >    '0'?    currentByte    -    '0'    :    0);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
59	[BUG]  [BUGGY]  result  =(result  <  <  1)+(currentByte  ==  '0'?  currentByte  -  '0'  :  0);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+(currentByte  ==  '0'?  currentByte  -  '0'  :  0);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(currentByte  ==  '0'?  currentByte  -  '0'  :  0);	  result    =(result    <    <    1)+(currentByte    >    '0'?    currentByte    -    '0'    :    0);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
60	[BUG]  [BUGGY]  result  =(result  <  <  1)/(currentByte  >  '0'?  currentByte  -  '0'  :  0);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)/(currentByte  >  '0'?  currentByte  -  '0'  :  0);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)/(currentByte  >  '0'?  currentByte  -  '0'  :  0);	  result    =(result    <    <    1)+(currentByte    >    '0'?    currentByte    -    '0'    :    0);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
61	[BUG]  [BUGGY]  result  =(result  <  <  1)+(currentByte!=  '0'?  currentByte  -  '0'  :  0);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+(currentByte!=  '0'?  currentByte  -  '0'  :  0);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(currentByte!=  '0'?  currentByte  -  '0'  :  0);	  result    =(result    <    <    1)+(currentByte    >    '0'?    currentByte    -    '0'    :    0);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
62	[BUG]  [BUGGY]  result  =(result  -  '0'  +  length);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  '0'  +  length);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  '0'  +  length);	  result    =(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	24	None	replace
63	[BUG]  [BUGGY]  result  =(result  -  '0'  ||  currentByte  >  '7');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  '0'  ||  currentByte  >  '7');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  '0'  ||  currentByte  >  '7');	  result    =(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	24	None	replace
64	[BUG]  [BUGGY]  result  =(result  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  '0')+  1;  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  '0')+  1;	  result    =(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	24	None	replace
65	[BUG]  [BUGGY]  result  =(end  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(end  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(end  -  '0');	  result    =(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	24	None	replace
66	[BUG]  [BUGGY]  result  =(length  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(length  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(length  -  '0');	  result    =(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	24	None	replace
67	[BUG]  [BUGGY]  result  =(result  -  '0'  +  1);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  '0'  +  1);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  '0'  +  1);	  result    =(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	24	None	replace
68	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(currentByte,   "UTF-8 ");  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(currentByte,   "UTF-8 ");  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsString(currentByte,   "UTF-8 ");	  result    =    JsonStringEncoder.getInstance().encodeAsString(result,   "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	53	None	replace
69	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(buffer,  start,  length);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(buffer,  start,  length);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsString(buffer,  start,  length);	  result    =    JsonStringEncoder.getInstance().encodeAsString(result,   "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	53	None	replace
70	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(currentByte, ",UTF-8 ");  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(currentByte, ",UTF-8 ");  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsString(currentByte, ",UTF-8 ");	  result    =    JsonStringEncoder.getInstance().encodeAsString(result,   "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	53	None	replace
71	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(buffer,  start,   "UTF-8 ");  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(buffer,  start,   "UTF-8 ");  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsString(buffer,  start,   "UTF-8 ");	  result    =    JsonStringEncoder.getInstance().encodeAsString(result,   "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	53	None	replace
72	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(buffer,  0,  currentByte);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(buffer,  0,  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsString(buffer,  0,  currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsString(result,   "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	53	None	replace
73	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(currentByte,  this.UTF-8 ");  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(currentByte,  this.UTF-8 ");  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsString(currentByte,  this.UTF-8 ");	  result    =    JsonStringEncoder.getInstance().encodeAsString(result,   "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	53	None	replace
74	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(buffer,  offset,  length);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(buffer,  offset,  length);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOctal(buffer,  offset,  length);	  result    =    JsonStringEncoder.getInstance().encodeAsIOctal(buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
75	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte,  buffer,  start,  length);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte,  buffer,  start,  length);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte,  buffer,  start,  length);	  result    =    JsonStringEncoder.getInstance().encodeAsIOctal(buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
76	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte,  start,  length);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte,  start,  length);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte,  start,  length);	  result    =    JsonStringEncoder.getInstance().encodeAsIOctal(buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
77	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(result,  buffer,  start,  length);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(result,  buffer,  start,  length);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOctal(result,  buffer,  start,  length);	  result    =    JsonStringEncoder.getInstance().encodeAsIOctal(buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
78	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(buffer,  start,  length,  currentByte);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(buffer,  start,  length,  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOctal(buffer,  start,  length,  currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsIOctal(buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
79	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(t,  buffer,  start,  length);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(t,  buffer,  start,  length);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOctal(t,  buffer,  start,  length);	  result    =    JsonStringEncoder.getInstance().encodeAsIOctal(buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
80	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length);  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsOctal(buffer,  offset,  length);	  result    =    JsonStringEncoder.getInstance().encodeAsIOctal(buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
81	[BUG]  [BUGGY]  result  =(result  -  1)+(currentByte  +  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  1)+(currentByte  +  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  1)+(currentByte  +  '0');	  result    =(result    <    <    1)+(currentByte    +    '0');    	non-compiled	[CE]  <identifier>  expected	22	None	replace
82	[BUG]  [BUGGY]  result  =(result  +  1)+(currentByte  +  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  +  1)+(currentByte  +  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  +  1)+(currentByte  +  '0');	  result    =(result    <    <    1)+(currentByte    +    '0');    	non-compiled	[CE]  <identifier>  expected	22	None	replace
83	[BUG]  [BUGGY]  result  =(result  /  1)+(currentByte  +  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  /  1)+(currentByte  +  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  /  1)+(currentByte  +  '0');	  result    =(result    <    <    1)+(currentByte    +    '0');    	non-compiled	[CE]  <identifier>  expected	22	None	replace
84	[BUG]  [BUGGY]  result  =(result  &  1)+(currentByte  +  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  &  1)+(currentByte  +  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  &  1)+(currentByte  +  '0');	  result    =(result    <    <    1)+(currentByte    +    '0');    	non-compiled	[CE]  <identifier>  expected	22	None	replace
85	[BUG]  [BUGGY]  result  =(result  <  <  1)+(currentByte  +  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+(currentByte  +  1);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(currentByte  +  1);	  result    =(result    <    <    1)+(currentByte    +    '0');    	non-compiled	[CE]  <identifier>  expected	22	None	replace
86	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOCtal(currentByte,  trailer);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOCtal(currentByte,  trailer);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOCtal(currentByte,  trailer);	  result    =    JsonStringEncoder.getInstance().encodeAsIOCtal(currentByte);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
87	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOCtal(currentByte,  trailer);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOCtal(currentByte,  trailer);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsOCtal(currentByte,  trailer);	  result    =    JsonStringEncoder.getInstance().encodeAsIOCtal(currentByte);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
88	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOCtal(currentByte);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOCtal(currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsOCtal(currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsIOCtal(currentByte);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
89	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsSOCIontal(currentByte);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsSOCIontal(currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsSOCIontal(currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsIOCtal(currentByte);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
90	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsEOF(currentByte);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsEOF(currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsEOF(currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsIOCtal(currentByte);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
91	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(currentByte,  trailer);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(currentByte,  trailer);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsObject(currentByte,  trailer);	  result    =    JsonStringEncoder.getInstance().encodeAsObject(currentByte);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
92	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsNumber(currentByte);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsNumber(currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsNumber(currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsObject(currentByte);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
93	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsLocal(currentByte);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsLocal(currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsLocal(currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsObject(currentByte);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
94	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(currentByte  +  1);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(currentByte  +  1);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsObject(currentByte  +  1);	  result    =    JsonStringEncoder.getInstance().encodeAsObject(currentByte);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
95	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(currentByte)+  1;  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(currentByte)+  1;  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsObject(currentByte)+  1;	  result    =    JsonStringEncoder.getInstance().encodeAsObject(currentByte);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
96	[BUG]  [BUGGY]  result  =(result  <  <  1)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+(result  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(result  -  '0');	  result    =(result    <    <    4)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	47	None	replace
97	[BUG]  [BUGGY]  result  =(result  <  <  4)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  4)+(currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  4)+(currentByte  -  '0');	  result    =(result    <    <    4)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	47	None	replace
98	[BUG]  [BUGGY]  result  =(result  <  <  3)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  3)+(result  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  3)+(result  -  '0');	  result    =(result    <    <    4)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	47	None	replace
99	[BUG]  [BUGGY]  result  =(result  <  <  6)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  6)+(result  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  6)+(result  -  '0');	  result    =(result    <    <    4)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	47	None	replace
100	[BUG]  [BUGGY]  result  =(result  -  '0')/(currentByte  -  '7');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  '0')/(currentByte  -  '7');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  '0')/(currentByte  -  '7');	  result    =(result    -    '0')+(currentByte    -    '7');    	non-compiled	[CE]  <identifier>  expected	26	None	replace
101	[BUG]  [BUGGY]  result  =(currentByte  -  '0')+(currentByte  -  '7');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  -  '0')+(currentByte  -  '7');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  -  '0')+(currentByte  -  '7');	  result    =(result    -    '0')+(currentByte    -    '7');    	non-compiled	[CE]  <identifier>  expected	26	None	replace
102	[BUG]  [BUGGY]  result  =(result  -  '0')+(currentByte  +  '7');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  '0')+(currentByte  +  '7');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  '0')+(currentByte  +  '7');	  result    =(result    -    '0')+(currentByte    -    '7');    	non-compiled	[CE]  <identifier>  expected	26	None	replace
103	[BUG]  [BUGGY]  result  =(result  -  '0')+(currentByte  *  '7');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  '0')+(currentByte  *  '7');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  '0')+(currentByte  *  '7');	  result    =(result    -    '0')+(currentByte    -    '7');    	non-compiled	[CE]  <identifier>  expected	26	None	replace
104	[BUG]  [BUGGY]  result  =(result  -  '0')+(currentByte  -  '9');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  '0')+(currentByte  -  '9');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  '0')+(currentByte  -  '9');	  result    =(result    -    '0')+(currentByte    -    '7');    	non-compiled	[CE]  <identifier>  expected	26	None	replace
105	[BUG]  [BUGGY]  result  =(result  <  <  1)+  (currentByte  >=  '0'?  currentByte  :  '0');  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+  (currentByte  >=  '0'?  currentByte  :  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+  (currentByte  >=  '0'?  currentByte  :  '0');	  result    =(result    <    <    1)+    (currentByte    >    '0'?    currentByte    :    '0');    	non-compiled	[CE]  <identifier>  expected	12	None	replace
106	[BUG]  [BUGGY]  result  =(result  <  <  1)+  (length  >  '0'?  currentByte  :  '0');  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+  (length  >  '0'?  currentByte  :  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+  (length  >  '0'?  currentByte  :  '0');	  result    =(result    <    <    1)+    (currentByte    >    '0'?    currentByte    :    '0');    	non-compiled	[CE]  <identifier>  expected	12	None	replace
107	[BUG]  [BUGGY]  result  =(result  <  <  1)+  (currentByte  ==  '0'?  currentByte  :  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+  (currentByte  ==  '0'?  currentByte  :  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+  (currentByte  ==  '0'?  currentByte  :  '0');	  result    =(result    <    <    1)+    (currentByte    >    '0'?    currentByte    :    '0');    	non-compiled	[CE]  <identifier>  expected	12	None	replace
108	[BUG]  [BUGGY]  result  =(result  <  <  1)+  (currentByte  >  '0'?  currentByte  :  '9');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+  (currentByte  >  '0'?  currentByte  :  '9');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+  (currentByte  >  '0'?  currentByte  :  '9');	  result    =(result    <    <    1)+    (currentByte    >    '0'?    currentByte    :    '0');    	non-compiled	[CE]  <identifier>  expected	12	None	replace
109	[BUG]  [BUGGY]  result  =(currentByte  <  <  1)+  (currentByte  >  '0'?  currentByte  :  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  <  <  1)+  (currentByte  >  '0'?  currentByte  :  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  <  <  1)+  (currentByte  >  '0'?  currentByte  :  '0');	  result    =(result    <    <    1)+    (currentByte    >    '0'?    currentByte    :    '0');    	non-compiled	[CE]  <identifier>  expected	12	None	replace
110	[BUG]  [BUGGY]  result  =(result  <  <  1)+  (currentByte  >>  '0'?  currentByte  :  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+  (currentByte  >>  '0'?  currentByte  :  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+  (currentByte  >>  '0'?  currentByte  :  '0');	  result    =(result    <    <    1)+    (currentByte    >    '0'?    currentByte    :    '0');    	non-compiled	[CE]  <identifier>  expected	12	None	replace
111	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsIOException(currentByte,  length);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsIOException(currentByte,  length);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsIOException(currentByte,  length);	  result    =    JsonStringEncoder.getInstance().quoteAsIOException(currentByte);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
112	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsIOException(currentByte,  trailer);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsIOException(currentByte,  trailer);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsIOException(currentByte,  trailer);	  result    =    JsonStringEncoder.getInstance().quoteAsIOException(currentByte);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
113	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().parseAsIOException(currentByte);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().parseAsIOException(currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().parseAsIOException(currentByte);	  result    =    JsonStringEncoder.getInstance().quoteAsIOException(currentByte);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
114	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsIOException(currentByte,  end);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsIOException(currentByte,  end);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsIOException(currentByte,  end);	  result    =    JsonStringEncoder.getInstance().quoteAsIOException(currentByte);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
115	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsIOException(currentByte,  start);  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsIOException(currentByte,  start);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsIOException(currentByte,  start);	  result    =    JsonStringEncoder.getInstance().quoteAsIOException(currentByte);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
116	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsIOException(currentByte,  currentByte);  [CE]  <identifier>  expected  [FE]                                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsIOException(currentByte,  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsIOException(currentByte,  currentByte);	  result    =    JsonStringEncoder.getInstance().quoteAsIOException(currentByte);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
117	[BUG]  [BUGGY]  result  +=  length  -  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  +=  length  -  1;  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  +=  length  -  1;	  result    +=    length;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
118	[BUG]  [BUGGY]  result  -=  length;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  -=  length;  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  -=  length;	  result    +=    length;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
119	[BUG]  [BUGGY]  result  +=  currentByte;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  +=  currentByte;  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  +=  currentByte;	  result    +=    length;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
120	[BUG]  [BUGGY]  result  +=  1;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  +=  1;  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  +=  1;	  result    +=    length;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
121	[BUG]  [BUGGY]  result  +=  currentByte.length;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  +=  currentByte.length;  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  +=  currentByte.length;	  result    +=    length;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
122	[BUG]  [BUGGY]  result  +=  length  /  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  +=  length  /  BYTE_MASK;  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  +=  length  /  BYTE_MASK;	  result    +=    length;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
123	[BUG]  [BUGGY]  result  +=  length  +  1;  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  +=  length  +  1;  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  +=  length  +  1;	  result    +=    length;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
124	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOException( "n ");  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOException( "n ");  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOException( "n ");	  result    =    JsonStringEncoder.getInstance().encodeAsIOException(   "   ");    	non-compiled	[CE]  <identifier>  expected	42	None	replace
125	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOException( ", ");  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOException( ", ");  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOException( ", ");	  result    =    JsonStringEncoder.getInstance().encodeAsIOException(   "   ");    	non-compiled	[CE]  <identifier>  expected	42	None	replace
126	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOException( "currentByte: "  +  currentByte);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOException( "currentByte: "  +  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOException( "currentByte: "  +  currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsIOException(   "   ");    	non-compiled	[CE]  <identifier>  expected	42	None	replace
127	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOException( "' ");  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOException( "' ");  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOException( "' ");	  result    =    JsonStringEncoder.getInstance().encodeAsIOException(   "   ");    	non-compiled	[CE]  <identifier>  expected	42	None	replace
128	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOException( "currentByte  is  null. ");  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOException( "currentByte  is  null. ");  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOException( "currentByte  is  null. ");	  result    =    JsonStringEncoder.getInstance().encodeAsIOException(   "   ");    	non-compiled	[CE]  <identifier>  expected	42	None	replace
129	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOException( "currentByte  is  not  a  string  value ");  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOException( "currentByte  is  not  a  string  value ");  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOException( "currentByte  is  not  a  string  value ");	  result    =    JsonStringEncoder.getInstance().encodeAsIOException(   "   ");    	non-compiled	[CE]  <identifier>  expected	42	None	replace
130	[BUG]  [BUGGY]  result  =(result  -  1)+(currentByte  <  '0'  ||  currentByte  >  '7');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  1)+(currentByte  <  '0'  ||  currentByte  >  '7');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  1)+(currentByte  <  '0'  ||  currentByte  >  '7');	  result    =(result    -    3)+(currentByte    <    '0'    ||    currentByte    >    '7');    	non-compiled	[CE]  <identifier>  expected	50	None	replace
131	[BUG]  [BUGGY]  result  =(result  -  start)+(currentByte  <  '0'  ||  currentByte  >  '7');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  start)+(currentByte  <  '0'  ||  currentByte  >  '7');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  start)+(currentByte  <  '0'  ||  currentByte  >  '7');	  result    =(result    -    3)+(currentByte    <    '0'    ||    currentByte    >    '7');    	non-compiled	[CE]  <identifier>  expected	50	None	replace
132	[BUG]  [BUGGY]  result  =(result  -  1  +(currentByte  <  '0'  ||  currentByte  >  '7');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  1  +(currentByte  <  '0'  ||  currentByte  >  '7');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  1  +(currentByte  <  '0'  ||  currentByte  >  '7');	  result    =(result    -    3)+(currentByte    <    '0'    ||    currentByte    >    '7');    	non-compiled	[CE]  <identifier>  expected	50	None	replace
133	[BUG]  [BUGGY]  result  =(result  *  3)+(currentByte  <  '0'  ||  currentByte  >  '7');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  *  3)+(currentByte  <  '0'  ||  currentByte  >  '7');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  *  3)+(currentByte  <  '0'  ||  currentByte  >  '7');	  result    =(result    -    3)+(currentByte    <    '0'    ||    currentByte    >    '7');    	non-compiled	[CE]  <identifier>  expected	50	None	replace
134	[BUG]  [BUGGY]  result  =(currentByte  -  3)+(currentByte  <  '0'  ||  currentByte  >  '7');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  -  3)+(currentByte  <  '0'  ||  currentByte  >  '7');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  -  3)+(currentByte  <  '0'  ||  currentByte  >  '7');	  result    =(result    -    3)+(currentByte    <    '0'    ||    currentByte    >    '7');    	non-compiled	[CE]  <identifier>  expected	50	None	replace
135	[BUG]  [BUGGY]  result  =(result  -  31)+(currentByte  <  '0'  ||  currentByte  >  '7');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  31)+(currentByte  <  '0'  ||  currentByte  >  '7');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  31)+(currentByte  <  '0'  ||  currentByte  >  '7');	  result    =(result    -    3)+(currentByte    <    '0'    ||    currentByte    >    '7');    	non-compiled	[CE]  <identifier>  expected	50	None	replace
136	[BUG]  [BUGGY]  result  =(result  -  2)+(currentByte  <  '0'  ||  currentByte  >  '7');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  2)+(currentByte  <  '0'  ||  currentByte  >  '7');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  2)+(currentByte  <  '0'  ||  currentByte  >  '7');	  result    =(result    -    3)+(currentByte    <    '0'    ||    currentByte    >    '7');    	non-compiled	[CE]  <identifier>  expected	50	None	replace
137	[BUG]  [BUGGY]  result  =(result  -  1)+(currentByte  >  '0'?  currentByte  :  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  1)+(currentByte  >  '0'?  currentByte  :  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  1)+(currentByte  >  '0'?  currentByte  :  '0');	  result    =(result    -    3)+(currentByte    >    '0'?    currentByte    :    '0');    	non-compiled	[CE]  <identifier>  expected	5	None	replace
138	[BUG]  [BUGGY]  result  =(result  -  1  +(currentByte  >  '0'?  currentByte  :  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  1  +(currentByte  >  '0'?  currentByte  :  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  1  +(currentByte  >  '0'?  currentByte  :  '0');	  result    =(result    -    3)+(currentByte    >    '0'?    currentByte    :    '0');    	non-compiled	[CE]  <identifier>  expected	5	None	replace
139	[BUG]  [BUGGY]  result  =(result  *  3)+(currentByte  >  '0'?  currentByte  :  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  *  3)+(currentByte  >  '0'?  currentByte  :  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  *  3)+(currentByte  >  '0'?  currentByte  :  '0');	  result    =(result    -    3)+(currentByte    >    '0'?    currentByte    :    '0');    	non-compiled	[CE]  <identifier>  expected	5	None	replace
140	[BUG]  [BUGGY]  result  =(result  -  start)+(currentByte  >  '0'?  currentByte  :  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  start)+(currentByte  >  '0'?  currentByte  :  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  start)+(currentByte  >  '0'?  currentByte  :  '0');	  result    =(result    -    3)+(currentByte    >    '0'?    currentByte    :    '0');    	non-compiled	[CE]  <identifier>  expected	5	None	replace
141	[BUG]  [BUGGY]  result  =(result  /  3)+(currentByte  >  '0'?  currentByte  :  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  /  3)+(currentByte  >  '0'?  currentByte  :  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  /  3)+(currentByte  >  '0'?  currentByte  :  '0');	  result    =(result    -    3)+(currentByte    >    '0'?    currentByte    :    '0');    	non-compiled	[CE]  <identifier>  expected	5	None	replace
142	[BUG]  [BUGGY]  result  =(result  -  1  +(currentByte  >  '0'?  currentByte  :  '0'));  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  1  +(currentByte  >  '0'?  currentByte  :  '0'));  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  1  +(currentByte  >  '0'?  currentByte  :  '0'));	  result    =(result    -    3)+(currentByte    >    '0'?    currentByte    :    '0');    	non-compiled	[CE]  <identifier>  expected	5	None	replace
143	[BUG]  [BUGGY]  result  =(currentByte  -  3)+(currentByte  >  '0'?  currentByte  :  '0');  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  -  3)+(currentByte  >  '0'?  currentByte  :  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  -  3)+(currentByte  >  '0'?  currentByte  :  '0');	  result    =(result    -    3)+(currentByte    >    '0'?    currentByte    :    '0');    	non-compiled	[CE]  <identifier>  expected	5	None	replace
144	[BUG]  [BUGGY]  result  =(result  -  1)+(length  -  '0');  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  1)+(length  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  1)+(length  -  '0');	  result    =(result    <    <    1)+(length    -    '0');    //    convert    from    ASCII    //    CheckStyle:MagicNumber    ON    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
145	[BUG]  [BUGGY]  result  =(result  <  <  1)+(length  -  1);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+(length  -  1);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(length  -  1);	  result    =(result    <    <    1)+(length    -    '0');    //    convert    from    ASCII    //    CheckStyle:MagicNumber    ON    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
146	[BUG]  [BUGGY]  result  =(length  -  1)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(length  -  1)+(result  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(length  -  1)+(result  -  '0');	  result    =(result    <    <    1)+(length    -    '0');    //    convert    from    ASCII    //    CheckStyle:MagicNumber    ON    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
147	[BUG]  [BUGGY]  result  =(result  +  1)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  +  1)+(length  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  +  1)+(length  -  '0');	  result    =(result    <    <    1)+(length    -    '0');    //    convert    from    ASCII    //    CheckStyle:MagicNumber    ON    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
148	[BUG]  [BUGGY]  result  =(result  /  1)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  /  1)+(length  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  /  1)+(length  -  '0');	  result    =(result    <    <    1)+(length    -    '0');    //    convert    from    ASCII    //    CheckStyle:MagicNumber    ON    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
149	[BUG]  [BUGGY]  result  =(result  -  1)+(length  -  '0');  //  convert  from  ASCII  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  1)+(length  -  '0');  //  convert  from  ASCII  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  1)+(length  -  '0');  //  convert  from  ASCII	  result    =(result    <    <    1)+(length    -    '0');    //    convert    from    ASCII    //    CheckStyle:MagicNumber    ON    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
150	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte,  trailer);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte,  trailer);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte,  trailer);	  result    =    JsonStringEncoder.getInstance().encodeAsIOctal(currentByte);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
151	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte,  buffer[start]);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte,  buffer[start]);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte,  buffer[start]);	  result    =    JsonStringEncoder.getInstance().encodeAsIOctal(currentByte);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
152	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte,  currentByte);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte,  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte,  currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsIOctal(currentByte);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
153	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte,  length);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte,  length);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte,  length);	  result    =    JsonStringEncoder.getInstance().encodeAsIOctal(currentByte);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
154	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte,  buffer);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte,  buffer);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte,  buffer);	  result    =    JsonStringEncoder.getInstance().encodeAsIOctal(currentByte);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
155	[BUG]  [BUGGY]  result  =(currentByte  <  <  3)+(currentByte  >=  '0'?  currentByte  -  '0'  :  currentByte);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  <  <  3)+(currentByte  >=  '0'?  currentByte  -  '0'  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  <  <  3)+(currentByte  >=  '0'?  currentByte  -  '0'  :  currentByte);	  result    =(currentByte    <    <    3)+(currentByte    >    '0'?    currentByte    -    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
156	[BUG]  [BUGGY]  result  =(currentByte  <  <  3)+(currentByte  ==  '0'?  currentByte  -  '0'  :  currentByte);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  <  <  3)+(currentByte  ==  '0'?  currentByte  -  '0'  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  <  <  3)+(currentByte  ==  '0'?  currentByte  -  '0'  :  currentByte);	  result    =(currentByte    <    <    3)+(currentByte    >    '0'?    currentByte    -    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
157	[BUG]  [BUGGY]  result  =(currentByte  <  <  1)+(currentByte  >  '0'?  currentByte  -  1  :  currentByte);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  <  <  1)+(currentByte  >  '0'?  currentByte  -  1  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  <  <  1)+(currentByte  >  '0'?  currentByte  -  1  :  currentByte);	  result    =(currentByte    <    <    3)+(currentByte    >    '0'?    currentByte    -    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
158	[BUG]  [BUGGY]  result  =(currentByte  <  <  3)+(currentByte  >  '0'?  currentByte  *  '0'  :  currentByte);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  <  <  3)+(currentByte  >  '0'?  currentByte  *  '0'  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  <  <  3)+(currentByte  >  '0'?  currentByte  *  '0'  :  currentByte);	  result    =(currentByte    <    <    3)+(currentByte    >    '0'?    currentByte    -    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
159	[BUG]  [BUGGY]  result  =(currentByte  <  <  2)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  <  <  2)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  <  <  2)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte);	  result    =(currentByte    <    <    3)+(currentByte    >    '0'?    currentByte    -    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
160	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsMessage(currentByte,  trailer);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsMessage(currentByte,  trailer);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsMessage(currentByte,  trailer);	  result    =    JsonStringEncoder.getInstance().encodeAsMessage(currentByte);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
161	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsMessage(buffer,  start,  currentByte);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsMessage(buffer,  start,  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsMessage(buffer,  start,  currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsMessage(currentByte);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
162	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsMessage(buffer,  start,  length);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsMessage(buffer,  start,  length);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsMessage(buffer,  start,  length);	  result    =    JsonStringEncoder.getInstance().encodeAsMessage(currentByte);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
163	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsMessage(buffer,  start);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsMessage(buffer,  start);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsMessage(buffer,  start);	  result    =    JsonStringEncoder.getInstance().encodeAsMessage(currentByte);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
164	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsMessage(buffer,  start,  end);  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsMessage(buffer,  start,  end);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsMessage(buffer,  start,  end);	  result    =    JsonStringEncoder.getInstance().encodeAsMessage(currentByte);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
165	[BUG]  [BUGGY]  result  =(start  -  start)+  (currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(start  -  start)+  (currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(start  -  start)+  (currentByte  -  '0');	  result    =(start    -    result)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	18	None	replace
166	[BUG]  [BUGGY]  result  =(currentByte  -  start)+(start  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  -  start)+(start  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  -  start)+(start  -  '0');	  result    =(start    -    result)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	18	None	replace
167	[BUG]  [BUGGY]  result  =(end  -  currentByte)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(end  -  currentByte)+(currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(end  -  currentByte)+(currentByte  -  '0');	  result    =(start    -    result)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	18	None	replace
168	[BUG]  [BUGGY]  result  =(result  <  <  1)+(currentByte  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+(currentByte  -  '0')+  1;  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(currentByte  -  '0')+  1;	  result    =(result    <    <    3)+(currentByte    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
169	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0')/  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0')/  1;  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  3)+(currentByte  -  '0')/  1;	  result    =(result    <    <    3)+(currentByte    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
170	[BUG]  [BUGGY]  result  =(currentByte  <  <  3)+(currentByte  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  <  <  3)+(currentByte  -  '0')+  1;  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  <  <  3)+(currentByte  -  '0')+  1;	  result    =(result    <    <    3)+(currentByte    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
171	[BUG]  [BUGGY]  result  =(result  <  <  2)+(currentByte  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  2)+(currentByte  -  '0')+  1;  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  2)+(currentByte  -  '0')+  1;	  result    =(result    <    <    3)+(currentByte    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
172	[BUG]  [BUGGY]  result  =(result  -  '0')+(currentByte  -  '7')+  1;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  '0')+(currentByte  -  '7')+  1;  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  '0')+(currentByte  -  '7')+  1;	  result    =(result    <    <    3)+(currentByte    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
173	[BUG]  [BUGGY]  result  =(result  /  3)+(currentByte  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  /  3)+(currentByte  -  '0')+  1;  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  /  3)+(currentByte  -  '0')+  1;	  result    =(result    <    <    3)+(currentByte    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
174	[BUG]  [BUGGY]  result  =(result  -  3)+(currentByte  -  '0')/  1;  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  3)+(currentByte  -  '0')/  1;  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  3)+(currentByte  -  '0')/  1;	  result    =(result    <    <    3)+(currentByte    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
175	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsIOctal(currentByte,  trailer);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsIOctal(currentByte,  trailer);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsIOctal(currentByte,  trailer);	  result    =    JsonStringEncoder.getInstance().quoteAsIOctal(currentByte);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
176	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsIOctal(currentByte,  length);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsIOctal(currentByte,  length);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsIOctal(currentByte,  length);	  result    =    JsonStringEncoder.getInstance().quoteAsIOctal(currentByte);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
177	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().parseAsIOctal(currentByte);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().parseAsIOctal(currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().parseAsIOctal(currentByte);	  result    =    JsonStringEncoder.getInstance().quoteAsIOctal(currentByte);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
178	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsIOctal(currentByte,  start);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsIOctal(currentByte,  start);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsIOctal(currentByte,  start);	  result    =    JsonStringEncoder.getInstance().quoteAsIOctal(currentByte);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
179	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsIOctal(currentByte)+  1;  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsIOctal(currentByte)+  1;  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsIOctal(currentByte)+  1;	  result    =    JsonStringEncoder.getInstance().quoteAsIOctal(currentByte);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
180	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsIOctal(currentByte,  end);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsIOctal(currentByte,  end);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsIOctal(currentByte,  end);	  result    =    JsonStringEncoder.getInstance().quoteAsIOctal(currentByte);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
181	[BUG]  [BUGGY]  result  =(currentByte  -  '0')/(result  -  '7');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  -  '0')/(result  -  '7');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  -  '0')/(result  -  '7');	  result    =(currentByte    -    '0')+(result    -    '7');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
182	[BUG]  [BUGGY]  result  =(currentByte  -  '0')+(length  -  '7');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  -  '0')+(length  -  '7');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  -  '0')+(length  -  '7');	  result    =(currentByte    -    '0')+(result    -    '7');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
183	[BUG]  [BUGGY]  result  =(result  -  '0')/(result  -  '7');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  '0')/(result  -  '7');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  '0')/(result  -  '7');	  result    =(currentByte    -    '0')+(result    -    '7');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
184	[BUG]  [BUGGY]  result  =(end  -  '0')+(currentByte  -  '7');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(end  -  '0')+(currentByte  -  '7');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(end  -  '0')+(currentByte  -  '7');	  result    =(currentByte    -    '0')+(result    -    '7');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
185	[BUG]  [BUGGY]  result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte  +  1);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte  +  1);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte  +  1);	  result    =(result    <    <    3)+(currentByte    >    '0'?    currentByte    -    '0'    :    currentByte    +    1);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
186	[BUG]  [BUGGY]  result  =(currentByte  <  <  3)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte  +  1);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  <  <  3)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte  +  1);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  <  <  3)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte  +  1);	  result    =(result    <    <    3)+(currentByte    >    '0'?    currentByte    -    '0'    :    currentByte    +    1);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
187	[BUG]  [BUGGY]  result  =(result  <  <  2)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte  +  1);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  2)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte  +  1);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  2)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte  +  1);	  result    =(result    <    <    3)+(currentByte    >    '0'?    currentByte    -    '0'    :    currentByte    +    1);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
188	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  >=  '0'?  currentByte  -  '0'  :  currentByte  +  1);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  3)+(currentByte  >=  '0'?  currentByte  -  '0'  :  currentByte  +  1);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  3)+(currentByte  >=  '0'?  currentByte  -  '0'  :  currentByte  +  1);	  result    =(result    <    <    3)+(currentByte    >    '0'?    currentByte    -    '0'    :    currentByte    +    1);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
189	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  >  '0'?  currentByte  *  '0'  :  currentByte  +  1);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  3)+(currentByte  >  '0'?  currentByte  *  '0'  :  currentByte  +  1);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  3)+(currentByte  >  '0'?  currentByte  *  '0'  :  currentByte  +  1);	  result    =(result    <    <    3)+(currentByte    >    '0'?    currentByte    -    '0'    :    currentByte    +    1);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
190	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  ==  '0'?  currentByte  -  '0'  :  currentByte  +  1);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  3)+(currentByte  ==  '0'?  currentByte  -  '0'  :  currentByte  +  1);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  3)+(currentByte  ==  '0'?  currentByte  -  '0'  :  currentByte  +  1);	  result    =(result    <    <    3)+(currentByte    >    '0'?    currentByte    -    '0'    :    currentByte    +    1);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
191	[BUG]  [BUGGY]  result  =(result  -  1)+(currentByte  *  '0');  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  1)+(currentByte  *  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  1)+(currentByte  *  '0');	  result    =(result    <    <    1)+(currentByte    *    '0');    	non-compiled	[CE]  <identifier>  expected	21	None	replace
192	[BUG]  [BUGGY]  result  =(result  <  <  1)+(currentByte  *  '0'  +  length);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+(currentByte  *  '0'  +  length);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(currentByte  *  '0'  +  length);	  result    =(result    <    <    1)+(currentByte    *    '0');    	non-compiled	[CE]  <identifier>  expected	21	None	replace
193	[BUG]  [BUGGY]  result  =(result  /  1)+(currentByte  *  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  /  1)+(currentByte  *  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  /  1)+(currentByte  *  '0');	  result    =(result    <    <    1)+(currentByte    *    '0');    	non-compiled	[CE]  <identifier>  expected	21	None	replace
194	[BUG]  [BUGGY]  result  =(result  <  <  1)+(currentByte  *  '0'  ||  currentByte  >  '7');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+(currentByte  *  '0'  ||  currentByte  >  '7');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(currentByte  *  '0'  ||  currentByte  >  '7');	  result    =(result    <    <    1)+(currentByte    *    '0');    	non-compiled	[CE]  <identifier>  expected	21	None	replace
195	[BUG]  [BUGGY]  result  =(result  <  <  1)+(length  *  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+(length  *  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(length  *  '0');	  result    =(result    <    <    1)+(currentByte    *    '0');    	non-compiled	[CE]  <identifier>  expected	21	None	replace
196	[BUG]  [BUGGY]  result  =(result  /  3)+(currentByte  *  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  /  3)+(currentByte  *  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  /  3)+(currentByte  *  '0');	  result    =(result    -    3)+(currentByte    *    '0');    	non-compiled	[CE]  <identifier>  expected	36	None	replace
197	[BUG]  [BUGGY]  result  =(result  *  3)+(currentByte  *  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  *  3)+(currentByte  *  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  *  3)+(currentByte  *  '0');	  result    =(result    -    3)+(currentByte    *    '0');    	non-compiled	[CE]  <identifier>  expected	36	None	replace
198	[BUG]  [BUGGY]  result  =(currentByte  -  3)+(result  *  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  -  3)+(result  *  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  -  3)+(result  *  '0');	  result    =(result    -    3)+(currentByte    *    '0');    	non-compiled	[CE]  <identifier>  expected	36	None	replace
199	[BUG]  [BUGGY]  result  =(result  -  start)+(currentByte  *  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  start)+(currentByte  *  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  start)+(currentByte  *  '0');	  result    =(result    -    3)+(currentByte    *    '0');    	non-compiled	[CE]  <identifier>  expected	36	None	replace
200	[BUG]  [BUGGY]  result  =(end  -  3)+(currentByte  *  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(end  -  3)+(currentByte  *  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(end  -  3)+(currentByte  *  '0');	  result    =(result    -    3)+(currentByte    *    '0');    	non-compiled	[CE]  <identifier>  expected	36	None	replace
201	[BUG]  [BUGGY]  result  =(start  -  3)+(currentByte  *  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(start  -  3)+(currentByte  *  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(start  -  3)+(currentByte  *  '0');	  result    =(result    -    3)+(currentByte    *    '0');    	non-compiled	[CE]  <identifier>  expected	36	None	replace
202	[BUG]  [BUGGY]  result  =(currentByte  -  3)/(result  -  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  -  3)/(result  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  -  3)/(result  -  '0');	  result    =(result    -    3)/(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	2	None	replace
203	[BUG]  [BUGGY]  result  =(end  -  3)/(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(end  -  3)/(currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(end  -  3)/(currentByte  -  '0');	  result    =(result    -    3)/(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	2	None	replace
204	[BUG]  [BUGGY]  result  =(result  *  3)/(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  *  3)/(currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  *  3)/(currentByte  -  '0');	  result    =(result    -    3)/(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	2	None	replace
205	[BUG]  [BUGGY]  result  =(start  -  3)/(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(start  -  3)/(currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(start  -  3)/(currentByte  -  '0');	  result    =(result    -    3)/(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	2	None	replace
206	[BUG]  [BUGGY]  result  =(result  /  3)/(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  /  3)/(currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  /  3)/(currentByte  -  '0');	  result    =(result    -    3)/(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	2	None	replace
207	[BUG]  [BUGGY]  result  =(length  -  3)/(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(length  -  3)/(currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(length  -  3)/(currentByte  -  '0');	  result    =(result    -    3)/(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	2	None	replace
208	[BUG]  [BUGGY]  result  =(result  -  currentByte)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  currentByte)+(currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  currentByte)+(currentByte  -  '0');	  result    =(currentByte    -    start)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	16	None	replace
209	[BUG]  [BUGGY]  result  =(currentByte  -  '0')+(length  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  -  '0')+(length  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  -  '0')+(length  -  '0');	  result    =(currentByte    -    start)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	16	None	replace
210	[BUG]  [BUGGY]  result  =(start  -  currentByte)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(start  -  currentByte)+(result  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(start  -  currentByte)+(result  -  '0');	  result    =(currentByte    -    start)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	16	None	replace
211	[BUG]  [BUGGY]  result  =(result  -  currentByte)+(end  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  currentByte)+(end  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  currentByte)+(end  -  '0');	  result    =(currentByte    -    start)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	16	None	replace
212	[BUG]  [BUGGY]  result  =(currentByte  -  start)/(result  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  -  start)/(result  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  -  start)/(result  -  '0');	  result    =(currentByte    -    start)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	16	None	replace
213	[BUG]  [BUGGY]  result  =(currentByte  *  3)+(result  -  '0');  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  *  3)+(result  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  *  3)+(result  -  '0');	  result    =(result    *    3)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	35	None	replace
214	[BUG]  [BUGGY]  result  =(result  *  7)+  (currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  *  7)+  (currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  *  7)+  (currentByte  -  '0');	  result    =(result    *    3)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	35	None	replace
215	[BUG]  [BUGGY]  result  =(result  /  3)+  (currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  /  3)+  (currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  /  3)+  (currentByte  -  '0');	  result    =(result    *    3)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	35	None	replace
216	[BUG]  [BUGGY]  result  =(result  *  6)+  (currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  *  6)+  (currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  *  6)+  (currentByte  -  '0');	  result    =(result    *    3)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	35	None	replace
217	[BUG]  [BUGGY]  result  =(currentByte  -  1)+(result  -  '0');  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  -  1)+(result  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  -  1)+(result  -  '0');	  result    =(result    -    1)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	1	None	replace
218	[BUG]  [BUGGY]  result  =(result  -  1)+  (currentByte  <  <  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  1)+  (currentByte  <  <  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  1)+  (currentByte  <  <  '0');	  result    =(result    -    1)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	1	None	replace
219	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsStream(currentByte,  trailer);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsStream(currentByte,  trailer);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsStream(currentByte,  trailer);	  result    =    JsonStringEncoder.getInstance().encodeAsStream(currentByte);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
220	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsStream(buffer,  start);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsStream(buffer,  start);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsStream(buffer,  start);	  result    =    JsonStringEncoder.getInstance().encodeAsStream(currentByte);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
221	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsStream(stream);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsStream(stream);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsStream(stream);	  result    =    JsonStringEncoder.getInstance().encodeAsStream(currentByte);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
222	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsStream(buffer,  currentByte);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsStream(buffer,  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsStream(buffer,  currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsStream(currentByte);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
223	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOCharacter(currentByte);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOCharacter(currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOCharacter(currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsStream(currentByte);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
224	[BUG]  [BUGGY]  result  =(currentByte  -  '0')+(result  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  -  '0')+(result  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  -  '0')+(result  -  '0');	  result    =(result    -    '0')+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	17	None	replace
225	[BUG]  [BUGGY]  result  =(result  -  '0')+  (currentByte  +  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  '0')+  (currentByte  +  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  '0')+  (currentByte  +  '0');	  result    =(result    -    '0')+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	17	None	replace
226	[BUG]  [BUGGY]  result  =(result  -  '0')+  (currentByte  *  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  '0')+  (currentByte  *  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  '0')+  (currentByte  *  '0');	  result    =(result    -    '0')+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	17	None	replace
227	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOCR(currentByte,  trailer);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOCR(currentByte,  trailer);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOCR(currentByte,  trailer);	  result    =    JsonStringEncoder.getInstance().encodeAsIOCR(currentByte);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
228	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOCR(currentByte,  currentByte);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOCR(currentByte,  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOCR(currentByte,  currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsIOCR(currentByte);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
229	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOCR(currentByte,  buffer);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOCR(currentByte,  buffer);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOCR(currentByte,  buffer);	  result    =    JsonStringEncoder.getInstance().encodeAsIOCR(currentByte);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
230	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOCR(currentByte,  buffer[start]);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOCR(currentByte,  buffer[start]);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOCR(currentByte,  buffer[start]);	  result    =    JsonStringEncoder.getInstance().encodeAsIOCR(currentByte);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
231	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOCR(currentByte  +  1);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOCR(currentByte  +  1);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOCR(currentByte  +  1);	  result    =    JsonStringEncoder.getInstance().encodeAsIOCR(currentByte);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
232	[BUG]  [BUGGY]  result  =(result  -  3)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  3)+(length  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  3)+(length  -  '0');	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	37	None	replace
233	[BUG]  [BUGGY]  result  =(length  <  <  3)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(length  <  <  3)+(result  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(length  <  <  3)+(result  -  '0');	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	37	None	replace
234	[BUG]  [BUGGY]  result  =(length  <  <  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(length  <  <  3)+(currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(length  <  <  3)+(currentByte  -  '0');	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	37	None	replace
235	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  -  1);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  3)+(length  -  1);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  3)+(length  -  1);	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	37	None	replace
236	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsByte(currentByte,  trailer);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsByte(currentByte,  trailer);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsByte(currentByte,  trailer);	  result    =    JsonStringEncoder.getInstance().quoteAsByte(currentByte);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
237	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsByte(currentByte)+  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsByte(currentByte)+  1;  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsByte(currentByte)+  1;	  result    =    JsonStringEncoder.getInstance().quoteAsByte(currentByte);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
238	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsByte(currentByte,  length);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsByte(currentByte,  length);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsByte(currentByte,  length);	  result    =    JsonStringEncoder.getInstance().quoteAsByte(currentByte);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
239	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsByte(currentByte  +  1);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsByte(currentByte  +  1);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsByte(currentByte  +  1);	  result    =    JsonStringEncoder.getInstance().quoteAsByte(currentByte);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
240	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().parseAsByte(currentByte);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().parseAsByte(currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().parseAsByte(currentByte);	  result    =    JsonStringEncoder.getInstance().quoteAsByte(currentByte);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
241	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsByte(currentByte,  start);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsByte(currentByte,  start);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsByte(currentByte,  start);	  result    =    JsonStringEncoder.getInstance().quoteAsByte(currentByte);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
242	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  currentByte);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  currentByte);	  System.arraycopy(buffer,    offset,    result,    0,    currentByte);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
243	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  0,  currentByte);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  0,  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  0,  currentByte);	  System.arraycopy(buffer,    offset,    result,    0,    currentByte);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
244	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  0,  currentByte);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  end,  0,  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	System.arraycopy(buffer,  offset,  buffer,  end,  0,  currentByte);	  System.arraycopy(buffer,    offset,    result,    0,    currentByte);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
245	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  currentByte);	  System.arraycopy(buffer,    offset,    result,    0,    currentByte);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
246	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  result,  0,  currentByte);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  System.arraycopy(buffer,  start,  result,  0,  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	System.arraycopy(buffer,  start,  result,  0,  currentByte);	  System.arraycopy(buffer,    offset,    result,    0,    currentByte);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
247	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  currentByte,  0,  result);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  System.arraycopy(buffer,  offset,  currentByte,  0,  result);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	System.arraycopy(buffer,  offset,  currentByte,  0,  result);	  System.arraycopy(buffer,    offset,    result,    0,    currentByte);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
248	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  currentByte,  0,  length);  [CE]  <identifier>  expected  [FE]                                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  System.arraycopy(buffer,  offset,  currentByte,  0,  length);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	System.arraycopy(buffer,  offset,  currentByte,  0,  length);	  System.arraycopy(buffer,    offset,    result,    0,    currentByte);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
249	[BUG]  [BUGGY]  result  =(result  <  <  3)/(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  3)/(currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  3)/(currentByte  -  '0');	  result    =(result    <    <    3)/(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	46	None	replace
250	[BUG]  [BUGGY]  result  =(result  -  '0')/(length  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  '0')/(length  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  '0')/(length  -  '0');	  result    =(result    <    <    3)/(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	46	None	replace
251	[BUG]  [BUGGY]  result  =(result  <  <  7)/(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  7)/(currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  7)/(currentByte  -  '0');	  result    =(result    <    <    3)/(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	46	None	replace
252	[BUG]  [BUGGY]  result  =(result  <  <  4)/(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  4)/(currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  4)/(currentByte  -  '0');	  result    =(result    <    <    3)/(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	46	None	replace
253	[BUG]  [BUGGY]  result  =(result  <  <  1)/(result  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)/(result  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)/(result  -  '0');	  result    =(result    <    <    3)/(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	46	None	replace
254	[BUG]  [BUGGY]  result  =(length  <  <  1)+(result  -  '0');  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(length  <  <  1)+(result  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(length  <  <  1)+(result  -  '0');	  result    =(result    <    <    1)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	20	None	replace
255	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  >  '0'?  currentByte  :  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  3)+(currentByte  >  '0'?  currentByte  :  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  3)+(currentByte  >  '0'?  currentByte  :  '0');	  result    =(result    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	23	None	replace
256	[BUG]  [BUGGY]  result  =(result  <  <  2)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  2)+(currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  2)+(currentByte  -  '0');	  result    =(result    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	23	None	replace
257	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  *  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  3)+(currentByte  *  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  3)+(currentByte  *  '0');	  result    =(result    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	23	None	replace
258	[BUG]  [BUGGY]  result  =(result  <  <  1)+(currentByte  >>  '0'?  currentByte  -  '0'  :  currentByte);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+(currentByte  >>  '0'?  currentByte  -  '0'  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(currentByte  >>  '0'?  currentByte  -  '0'  :  currentByte);	  result    =(result    <    <    3)+(currentByte    >=    '0'?    currentByte    -    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
259	[BUG]  [BUGGY]  result  =(result  <  <  1)+(currentByte  >=  '0'?  currentByte  -  1  :  currentByte);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+(currentByte  >=  '0'?  currentByte  -  1  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(currentByte  >=  '0'?  currentByte  -  1  :  currentByte);	  result    =(result    <    <    3)+(currentByte    >=    '0'?    currentByte    -    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
260	[BUG]  [BUGGY]  result  =(result  <  <  2)+(currentByte  >=  '0'?  currentByte  -  '0'  :  currentByte);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  2)+(currentByte  >=  '0'?  currentByte  -  '0'  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  2)+(currentByte  >=  '0'?  currentByte  -  '0'  :  currentByte);	  result    =(result    <    <    3)+(currentByte    >=    '0'?    currentByte    -    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
261	[BUG]  [BUGGY]  result  =(result  <  <  1)+(currentByte  >>  '0'?  currentByte  -  1  :  currentByte);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+(currentByte  >>  '0'?  currentByte  -  1  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(currentByte  >>  '0'?  currentByte  -  1  :  currentByte);	  result    =(result    <    <    3)+(currentByte    >=    '0'?    currentByte    -    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
262	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOJSC(currentByte,  trailer);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOJSC(currentByte,  trailer);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOJSC(currentByte,  trailer);	  result    =    JsonStringEncoder.getInstance().encodeAsIOJSC(currentByte);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
263	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOSC(currentByte,  trailer);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOSC(currentByte,  trailer);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOSC(currentByte,  trailer);	  result    =    JsonStringEncoder.getInstance().encodeAsIOJSC(currentByte);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
264	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOJSC(currentByte,  currentByte);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOJSC(currentByte,  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOJSC(currentByte,  currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsIOJSC(currentByte);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
265	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOJSC(currentByte,  buffer);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOJSC(currentByte,  buffer);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOJSC(currentByte,  buffer);	  result    =    JsonStringEncoder.getInstance().encodeAsIOJSC(currentByte);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
266	[BUG]  [BUGGY]  result  =(currentByte  -  3)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  -  3)+(length  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  -  3)+(length  -  '0');	  result    =(currentByte    -    3)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	3	None	replace
267	[BUG]  [BUGGY]  result  =(currentByte  -  7)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  -  7)+(result  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  -  7)+(result  -  '0');	  result    =(currentByte    -    3)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	3	None	replace
268	[BUG]  [BUGGY]  result  =(currentByte  -  6)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  -  6)+(result  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  -  6)+(result  -  '0');	  result    =(currentByte    -    3)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	3	None	replace
269	[BUG]  [BUGGY]  result  =(result  <  <  6)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  6)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  6)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte);	  result    =(result    <    <    2)+(currentByte    >    '0'?    currentByte    -    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
270	[BUG]  [BUGGY]  result  =(result  <  <  8)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  8)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  8)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte);	  result    =(result    <    <    2)+(currentByte    >    '0'?    currentByte    -    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
271	[BUG]  [BUGGY]  result  =(result  <  <  7)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  7)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  7)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte);	  result    =(result    <    <    2)+(currentByte    >    '0'?    currentByte    -    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
272	[BUG]  [BUGGY]  result  =(result  <  <  4)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  4)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  4)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte);	  result    =(result    <    <    2)+(currentByte    >    '0'?    currentByte    -    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
273	[BUG]  [BUGGY]  result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  -  1  :  0);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  -  1  :  0);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  -  1  :  0);	  result    =(result    <    <    1)+(currentByte    >    '0'?    currentByte    -    1    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
274	[BUG]  [BUGGY]  result  =(result  <  <  1)+(currentByte  ==  '0'?  currentByte  -  1  :  currentByte);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+(currentByte  ==  '0'?  currentByte  -  1  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(currentByte  ==  '0'?  currentByte  -  1  :  currentByte);	  result    =(result    <    <    1)+(currentByte    >    '0'?    currentByte    -    1    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
275	[BUG]  [BUGGY]  result  =(currentByte  <  <  1)+(currentByte  >  '0'?  currentByte  -  1  :  '7');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  <  <  1)+(currentByte  >  '0'?  currentByte  -  1  :  '7');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  <  <  1)+(currentByte  >  '0'?  currentByte  -  1  :  '7');	  result    =(result    <    <    1)+(currentByte    >    '0'?    currentByte    -    1    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
276	[BUG]  [BUGGY]  result  =(result  <  <  1)+(length  >  '0'?  currentByte  -  1  :  currentByte);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+(length  >  '0'?  currentByte  -  1  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(length  >  '0'?  currentByte  -  1  :  currentByte);	  result    =(result    <    <    1)+(currentByte    >    '0'?    currentByte    -    1    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
277	[BUG]  [BUGGY]  result  =(result  <  <  1)/(currentByte  >  '0'?  currentByte  -  1  :  currentByte);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)/(currentByte  >  '0'?  currentByte  -  1  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)/(currentByte  >  '0'?  currentByte  -  1  :  currentByte);	  result    =(result    <    <    1)+(currentByte    >    '0'?    currentByte    -    1    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
278	[BUG]  [BUGGY]  result  =(end  -  start)/(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(end  -  start)/(currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(end  -  start)/(currentByte  -  '0');	  result    =(end    -    start)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	19	None	replace
279	[BUG]  [BUGGY]  result  =(currentByte  -  end)+(end  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  -  end)+(end  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  -  end)+(end  -  '0');	  result    =(end    -    start)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	19	None	replace
280	[BUG]  [BUGGY]  result  =(start  -  end)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(start  -  end)+(currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(start  -  end)+(currentByte  -  '0');	  result    =(end    -    start)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	19	None	replace
281	[BUG]  [BUGGY]  result  =(currentByte  -  start)+(end  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  -  start)+(end  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  -  start)+(end  -  '0');	  result    =(end    -    start)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	19	None	replace
282	[BUG]  [BUGGY]  result  =(currentByte  <  <  3)+(length  -  1);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  <  <  3)+(length  -  1);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  <  <  3)+(length  -  1);	  result    =(currentByte    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	27	None	replace
283	[BUG]  [BUGGY]  result  =(currentByte  <  <  3)+(length  -  '0'  +  1);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  <  <  3)+(length  -  '0'  +  1);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  <  <  3)+(length  -  '0'  +  1);	  result    =(currentByte    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	27	None	replace
284	[BUG]  [BUGGY]  result  =(currentByte  <  <  1)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  <  <  1)+(length  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  <  <  1)+(length  -  '0');	  result    =(currentByte    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	27	None	replace
285	[BUG]  [BUGGY]  result  =(currentByte  <  <  7)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  <  <  7)+(length  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  <  <  7)+(length  -  '0');	  result    =(currentByte    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	27	None	replace
286	[BUG]  [BUGGY]  result  =(currentByte  <  <  3)+(end  -  '0');  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  <  <  3)+(end  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  <  <  3)+(end  -  '0');	  result    =(currentByte    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	27	None	replace
287	[BUG]  [BUGGY]  result  =(result  -  start)/(currentByte  *  '0');  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  start)/(currentByte  *  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  start)/(currentByte  *  '0');	  result    =(result    -    start)/(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	15	None	replace
288	[BUG]  [BUGGY]  result  =(start  -  result)/(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(start  -  result)/(currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(start  -  result)/(currentByte  -  '0');	  result    =(result    -    start)/(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	15	None	replace
289	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsString(currentByte,  trailer);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsString(currentByte,  trailer);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsString(currentByte,  trailer);	  result    =    JsonStringEncoder.getInstance().quoteAsString(currentByte);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
290	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsLong(currentByte);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsLong(currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsLong(currentByte);	  result    =    JsonStringEncoder.getInstance().quoteAsString(currentByte);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
291	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsString(currentByte)+  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsString(currentByte)+  1;  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsString(currentByte)+  1;	  result    =    JsonStringEncoder.getInstance().quoteAsString(currentByte);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
292	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsString(currentByte,  length);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsString(currentByte,  length);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsString(currentByte,  length);	  result    =    JsonStringEncoder.getInstance().quoteAsString(currentByte);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
293	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().parseAsString(currentByte);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().parseAsString(currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().parseAsString(currentByte);	  result    =    JsonStringEncoder.getInstance().quoteAsString(currentByte);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
294	[BUG]  [BUGGY]  result  =(result  -  1)+(currentByte  >  '0'?  '0'  :  currentByte);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  1)+(currentByte  >  '0'?  '0'  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  1)+(currentByte  >  '0'?  '0'  :  currentByte);	  result    =(result    -    3)+(currentByte    >    '0'?    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
295	[BUG]  [BUGGY]  result  =(result  -  1  +(currentByte  >  '0'?  '0'  :  currentByte);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  1  +(currentByte  >  '0'?  '0'  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  1  +(currentByte  >  '0'?  '0'  :  currentByte);	  result    =(result    -    3)+(currentByte    >    '0'?    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
296	[BUG]  [BUGGY]  result  =(result  *  3)+(currentByte  >  '0'?  '0'  :  currentByte);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  *  3)+(currentByte  >  '0'?  '0'  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  *  3)+(currentByte  >  '0'?  '0'  :  currentByte);	  result    =(result    -    3)+(currentByte    >    '0'?    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
297	[BUG]  [BUGGY]  result  =(result  -  start)+(currentByte  >  '0'?  '0'  :  currentByte);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  start)+(currentByte  >  '0'?  '0'  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  start)+(currentByte  >  '0'?  '0'  :  currentByte);	  result    =(result    -    3)+(currentByte    >    '0'?    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
298	[BUG]  [BUGGY]  result  =(result  /  3)+(currentByte  >  '0'?  '0'  :  currentByte);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  /  3)+(currentByte  >  '0'?  '0'  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  /  3)+(currentByte  >  '0'?  '0'  :  currentByte);	  result    =(result    -    3)+(currentByte    >    '0'?    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
299	[BUG]  [BUGGY]  result  =(result  -  2)+(currentByte  >  '0'?  '0'  :  currentByte);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  2)+(currentByte  >  '0'?  '0'  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  2)+(currentByte  >  '0'?  '0'  :  currentByte);	  result    =(result    -    3)+(currentByte    >    '0'?    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
300	[BUG]  [BUGGY]  result  =(currentByte  -  3)+(currentByte  >  '0'?  '0'  :  currentByte);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  -  3)+(currentByte  >  '0'?  '0'  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  -  3)+(currentByte  >  '0'?  '0'  :  currentByte);	  result    =(result    -    3)+(currentByte    >    '0'?    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
301	[BUG]  [BUGGY]  result  =(result  *  currentByte)/(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  *  currentByte)/(currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  *  currentByte)/(currentByte  -  '0');	  result    =(result    -    currentByte)/(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	59	None	replace
302	[BUG]  [BUGGY]  result  =(length  -  currentByte)/(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(length  -  currentByte)/(currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(length  -  currentByte)/(currentByte  -  '0');	  result    =(result    -    currentByte)/(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	59	None	replace
303	[BUG]  [BUGGY]  result  =(result  -  start)+(currentByte  +  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  start)+(currentByte  +  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  start)+(currentByte  +  '0');	  result    =(result    <    <    1)+(currentByte    +    '0');    	non-compiled	[CE]  <identifier>  expected	22	None	replace
304	[BUG]  [BUGGY]  result  =(result  %  1)+(currentByte  +  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  %  1)+(currentByte  +  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  %  1)+(currentByte  +  '0');	  result    =(result    <    <    1)+(currentByte    +    '0');    	non-compiled	[CE]  <identifier>  expected	22	None	replace
305	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsMessage(currentByte,  start);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsMessage(currentByte,  start);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsMessage(currentByte,  start);	  result    =    JsonStringEncoder.getInstance().encodeAsMessage(currentByte);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
306	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsMessage(currentByte,  buffer);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsMessage(currentByte,  buffer);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsMessage(currentByte,  buffer);	  result    =    JsonStringEncoder.getInstance().encodeAsMessage(currentByte);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
307	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsMessage(buffer);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsMessage(buffer);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsMessage(buffer);	  result    =    JsonStringEncoder.getInstance().encodeAsMessage(currentByte);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
308	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsMessage(buffer,  end);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsMessage(buffer,  end);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsMessage(buffer,  end);	  result    =    JsonStringEncoder.getInstance().encodeAsMessage(currentByte);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
309	[BUG]  [BUGGY]  result  =(result  -  start)/(result  -  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  start)/(result  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  start)/(result  -  '0');	  result    =(currentByte    -    start)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	16	None	replace
310	[BUG]  [BUGGY]  result  =(currentByte  -  '0')+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  -  '0')+(currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  -  '0')+(currentByte  -  '0');	  result    =(currentByte    -    start)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	16	None	replace
311	[BUG]  [BUGGY]  result  =(result  *  2  +  (currentByte  -  '0');  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  *  2  +  (currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  *  2  +  (currentByte  -  '0');	  result    =(result    *    3)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	35	None	replace
312	[BUG]  [BUGGY]  result  =(result  *  3)+(currentByte  <  '0'  ||  currentByte  >  '7')?  1  :  0;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  *  3)+(currentByte  <  '0'  ||  currentByte  >  '7')?  1  :  0;  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  *  3)+(currentByte  <  '0'  ||  currentByte  >  '7')?  1  :  0;	  result    =(result    *    3)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	35	None	replace
313	[BUG]  [BUGGY]  result  =(result  -  start)+(end  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  start)+(end  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  start)+(end  -  '0');	  result    =(result    <    <    3)+(end    -    '0');    	non-compiled	[CE]  <identifier>  expected	38	None	replace
314	[BUG]  [BUGGY]  result  =(result  -  3)+(end  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  3)+(end  -  '0')+  1;  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  3)+(end  -  '0')+  1;	  result    =(result    <    <    3)+(end    -    '0');    	non-compiled	[CE]  <identifier>  expected	38	None	replace
315	[BUG]  [BUGGY]  result  =(result  -  start)+(currentByte  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  start)+(currentByte  -  '0')+  1;  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  start)+(currentByte  -  '0')+  1;	  result    =(result    <    <    3)+(currentByte    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
316	[BUG]  [BUGGY]  result  =(result  -  1)+(currentByte  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  1)+(currentByte  -  '0')+  1;  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  1)+(currentByte  -  '0')+  1;	  result    =(result    <    <    3)+(currentByte    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
317	[BUG]  [BUGGY]  result  =(result  -  offset)+(currentByte  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  offset)+(currentByte  -  '0')+  1;  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  offset)+(currentByte  -  '0')+  1;	  result    =(result    <    <    3)+(currentByte    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
318	[BUG]  [BUGGY]  result  =(result  -  '0')+(currentByte  -  '1');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  '0')+(currentByte  -  '1');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  '0')+(currentByte  -  '1');	  result    =(currentByte    -    3)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	3	None	replace
319	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte));  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte));  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte));	  result    =    JsonStringEncoder.getInstance().quoteAsIOctal(currentByte));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
320	[BUG]  [BUGGY]  result  =(result  -  offset)+(currentByte  >  '0'?  '0'  :  currentByte);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  offset)+(currentByte  >  '0'?  '0'  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  offset)+(currentByte  >  '0'?  '0'  :  currentByte);	  result    =(result    -    3)+(currentByte    >    '0'?    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
321	[BUG]  [BUGGY]  result  =(result  -  1)+(currentByte  >  '0'?  '0'  :  end);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  1)+(currentByte  >  '0'?  '0'  :  end);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  1)+(currentByte  >  '0'?  '0'  :  end);	  result    =(result    -    3)+(currentByte    >    '0'?    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
322	[BUG]  [BUGGY]  result  =(result  -  3)+(length  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  3)+(length  -  '0')+  1;  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  3)+(length  -  '0')+  1;	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	37	None	replace
323	[BUG]  [BUGGY]  result  =(result  -  start)+(length  -  '0'  +  length);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  start)+(length  -  '0'  +  length);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  start)+(length  -  '0'  +  length);	  result    =(result    -    start)+    (length    -    '0');    	non-compiled	[CE]  <identifier>  expected	39	None	replace
324	[BUG]  [BUGGY]  result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  +  '0'  :  0);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  +  '0'  :  0);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  +  '0'  :  0);	  result    =(result    <    <    1)+(currentByte    >    '0'?    currentByte    -    '0'    :    0);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
325	[BUG]  [BUGGY]  result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  *  '0'  :  0);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  *  '0'  :  0);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  *  '0'  :  0);	  result    =(result    <    <    1)+(currentByte    >    '0'?    currentByte    -    '0'    :    0);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
326	[BUG]  [BUGGY]  result  =(result  -  1]  +(currentByte  >  '0'?  currentByte  :  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  1]  +(currentByte  >  '0'?  currentByte  :  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  1]  +(currentByte  >  '0'?  currentByte  :  '0');	  result    =(result    -    3)+(currentByte    >    '0'?    currentByte    :    '0');    	non-compiled	[CE]  <identifier>  expected	5	None	replace
327	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte,  start);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte,  start);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte,  start);	  result    =    JsonStringEncoder.getInstance().encodeAsIOctal(currentByte);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
328	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(buffer,  start);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(buffer,  start);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOctal(buffer,  start);	  result    =    JsonStringEncoder.getInstance().encodeAsIOctal(currentByte);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
329	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte,  end);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte,  end);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte,  end);	  result    =    JsonStringEncoder.getInstance().encodeAsIOctal(currentByte);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
330	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsStream(buffer);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsStream(buffer);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsStream(buffer);	  result    =    JsonStringEncoder.getInstance().encodeAsStream(currentByte);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
331	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsStream(stream,  currentByte);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsStream(stream,  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsStream(stream,  currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsStream(currentByte);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
332	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOException( " ",  currentByte);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOException( " ",  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOException( " ",  currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsIOException(   "   ");    	non-compiled	[CE]  <identifier>  expected	42	None	replace
333	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOException( "Result: ");  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOException( "Result: ");  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOException( "Result: ");	  result    =    JsonStringEncoder.getInstance().encodeAsIOException(   "   ");    	non-compiled	[CE]  <identifier>  expected	42	None	replace
334	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOException( "msg.js.internal.length ");  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOException( "msg.js.internal.length ");  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOException( "msg.js.internal.length ");	  result    =    JsonStringEncoder.getInstance().encodeAsIOException(   "   ");    	non-compiled	[CE]  <identifier>  expected	42	None	replace
335	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOException( "msg.js.invalid.length ");  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOException( "msg.js.invalid.length ");  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOException( "msg.js.invalid.length ");	  result    =    JsonStringEncoder.getInstance().encodeAsIOException(   "   ");    	non-compiled	[CE]  <identifier>  expected	42	None	replace
336	[BUG]  [BUGGY]  result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  +  1  :  currentByte);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  +  1  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  +  1  :  currentByte);	  result    =(result    <    <    1)+(currentByte    >    '0'?    currentByte    -    1    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
337	[BUG]  [BUGGY]  result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  -  1  :  '7');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  -  1  :  '7');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  -  1  :  '7');	  result    =(result    <    <    1)+(currentByte    >    '0'?    currentByte    -    1    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
338	[BUG]  [BUGGY]  result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  -  1  :  byteValue);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  -  1  :  byteValue);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  -  1  :  byteValue);	  result    =(result    <    <    1)+(currentByte    >    '0'?    currentByte    -    1    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
339	[BUG]  [BUGGY]  result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  *  1.0  :  currentByte);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  *  1.0  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  *  1.0  :  currentByte);	  result    =(result    <    <    1)+(currentByte    >    '0'?    currentByte    -    1    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
340	[BUG]  [BUGGY]  result  =(result  -  offset)+(currentByte  <  '0'  ||  currentByte  >  '7');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  offset)+(currentByte  <  '0'  ||  currentByte  >  '7');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  offset)+(currentByte  <  '0'  ||  currentByte  >  '7');	  result    =(result    -    3)+(currentByte    <    '0'    ||    currentByte    >    '7');    	non-compiled	[CE]  <identifier>  expected	50	None	replace
341	[BUG]  [BUGGY]  result  =(start  -  3)+(currentByte  <  '0'  ||  currentByte  >  '7');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(start  -  3)+(currentByte  <  '0'  ||  currentByte  >  '7');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(start  -  3)+(currentByte  <  '0'  ||  currentByte  >  '7');	  result    =(result    -    3)+(currentByte    <    '0'    ||    currentByte    >    '7');    	non-compiled	[CE]  <identifier>  expected	50	None	replace
342	[BUG]  [BUGGY]  result  =(result  *  -1  +  (currentByte  -  '0');  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  *  -1  +  (currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  *  -1  +  (currentByte  -  '0');	  result    =(result    +    1)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	13	None	replace
343	[BUG]  [BUGGY]  result  =(result  *  10)+  (currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  *  10)+  (currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  *  10)+  (currentByte  -  '0');	  result    =(result    +    1)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	13	None	replace
344	[BUG]  [BUGGY]  result  =(result  +  1)+(currentByte  <  '0'  ||  currentByte  >  '7')?  1  :  0;  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  +  1)+(currentByte  <  '0'  ||  currentByte  >  '7')?  1  :  0;  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  +  1)+(currentByte  <  '0'  ||  currentByte  >  '7')?  1  :  0;	  result    =(result    +    1)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	13	None	replace
345	[BUG]  [BUGGY]  result  =(result  -  '0')/(result  -  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  '0')/(result  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  '0')/(result  -  '0');	  result    =(result    <    <    3)/(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	46	None	replace
346	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsByte(currentByte,  buffer);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsByte(currentByte,  buffer);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsByte(currentByte,  buffer);	  result    =    JsonStringEncoder.getInstance().quoteAsByte(currentByte);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
347	[BUG]  [BUGGY]  result  =(result  -  '0')+(end  -  '7');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  '0')+(end  -  '7');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  '0')+(end  -  '7');	  result    =(currentByte    -    '0')+(result    -    '7');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
348	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(buffer,  start,  end);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(buffer,  start,  end);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOctal(buffer,  start,  end);	  result    =    JsonStringEncoder.getInstance().encodeAsIOctal(buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
349	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(buffer,  offset,  start,  length);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(buffer,  offset,  start,  length);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOctal(buffer,  offset,  start,  length);	  result    =    JsonStringEncoder.getInstance().encodeAsIOctal(buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
350	[BUG]  [BUGGY]  result  +=  start;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  +=  start;  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  +=  start;	  result    +=    length;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
351	[BUG]  [BUGGY]  result  +=  offset;  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  +=  offset;  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  +=  offset;	  result    +=    length;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
352	[BUG]  [BUGGY]  result  =(result  *  result)+  (currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  *  result)+  (currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  *  result)+  (currentByte  -  '0');	  result    =(start    -    result)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	18	None	replace
353	[BUG]  [BUGGY]  result  =(currentByte  -  '0')/(result  -  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  -  '0')/(result  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  -  '0')/(result  -  '0');	  result    =(result    -    3)/(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	2	None	replace
354	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  >  '0'?  currentByte  -  '0'  :  0);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  3)+(currentByte  >  '0'?  currentByte  -  '0'  :  0);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  3)+(currentByte  >  '0'?  currentByte  -  '0'  :  0);	  result    =(result    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	23	None	replace
355	[BUG]  [BUGGY]  result  =(result  <  <  7)+(currentByte  >=  '0'?  currentByte  -  '0'  :  currentByte);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  7)+(currentByte  >=  '0'?  currentByte  -  '0'  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  7)+(currentByte  >=  '0'?  currentByte  -  '0'  :  currentByte);	  result    =(result    <    <    3)+(currentByte    >=    '0'?    currentByte    -    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
356	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsString(currentByte,  start);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsString(currentByte,  start);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsString(currentByte,  start);	  result    =    JsonStringEncoder.getInstance().quoteAsString(currentByte);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
357	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(currentByte);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsString(currentByte);	  result    =    JsonStringEncoder.getInstance().quoteAsString(currentByte);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
358	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsString(currentByte,  buffer);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsString(currentByte,  buffer);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsString(currentByte,  buffer);	  result    =    JsonStringEncoder.getInstance().quoteAsString(currentByte);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
359	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOJSC(currentByte,  start);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOJSC(currentByte,  start);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOJSC(currentByte,  start);	  result    =    JsonStringEncoder.getInstance().encodeAsIOJSC(currentByte);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
360	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOJSC(currentByte,  end);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOJSC(currentByte,  end);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOJSC(currentByte,  end);	  result    =    JsonStringEncoder.getInstance().encodeAsIOJSC(currentByte);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
361	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOJSC(buffer,  start);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOJSC(buffer,  start);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOJSC(buffer,  start);	  result    =    JsonStringEncoder.getInstance().encodeAsIOJSC(currentByte);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
362	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOJSC(currentByte,  length);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOJSC(currentByte,  length);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOJSC(currentByte,  length);	  result    =    JsonStringEncoder.getInstance().encodeAsIOJSC(currentByte);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
363	[BUG]  [BUGGY]  result  =(result  -  1  +(length  -  '0'));  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  1  +(length  -  '0'));  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  1  +(length  -  '0'));	  result    =(result    <    <    1)+(length    -    '0');    //    convert    from    ASCII    //    CheckStyle:MagicNumber    ON    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
364	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(buffer,  start,  currentByte);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(buffer,  start,  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsString(buffer,  start,  currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsString(result,   "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	53	None	replace
365	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(buffer,  start,  end);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(buffer,  start,  end);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsString(buffer,  start,  end);	  result    =    JsonStringEncoder.getInstance().encodeAsString(result,   "UTF-8   ");    	non-compiled	[CE]  <identifier>  expected	53	None	replace
366	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(buffer,  start);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(buffer,  start);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsObject(buffer,  start);	  result    =    JsonStringEncoder.getInstance().encodeAsObject(currentByte);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
367	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(result);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(result);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsObject(result);	  result    =    JsonStringEncoder.getInstance().encodeAsObject(currentByte);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
368	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(currentByte,  buffer);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(currentByte,  buffer);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsObject(currentByte,  buffer);	  result    =    JsonStringEncoder.getInstance().encodeAsObject(currentByte);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
369	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(currentByte,  start);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(currentByte,  start);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsObject(currentByte,  start);	  result    =    JsonStringEncoder.getInstance().encodeAsObject(currentByte);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
370	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(buffer);  [CE]  <identifier>  expected  [FE]                                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(buffer);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsObject(buffer);	  result    =    JsonStringEncoder.getInstance().encodeAsObject(currentByte);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
371	[BUG]  [BUGGY]  result  =(result  <  <  1)+  (currentByte  >  '0'?  currentByte  :  '0')+  1;  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+  (currentByte  >  '0'?  currentByte  :  '0')+  1;  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+  (currentByte  >  '0'?  currentByte  :  '0')+  1;	  result    =(result    <    <    1)+    (currentByte    >    '0'?    currentByte    :    '0');    	non-compiled	[CE]  <identifier>  expected	12	None	replace
372	[BUG]  [BUGGY]  result  =(result  <  <  1)+  (currentByte  >  '0'?  currentByte  +  '0'  :  '0');  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+  (currentByte  >  '0'?  currentByte  +  '0'  :  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+  (currentByte  >  '0'?  currentByte  +  '0'  :  '0');	  result    =(result    <    <    1)+    (currentByte    >    '0'?    currentByte    :    '0');    	non-compiled	[CE]  <identifier>  expected	12	None	replace
373	[BUG]  [BUGGY]  result  =(currentByte  <  '0'  ||  currentByte  >  '7')?  1  :(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  <  '0'  ||  currentByte  >  '7')?  1  :(currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  <  '0'  ||  currentByte  >  '7')?  1  :(currentByte  -  '0');	  result    =(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	4	None	replace
374	[BUG]  [BUGGY]  result  =(currentByte  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  -  '0')+  1;  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  -  '0')+  1;	  result    =(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	4	None	replace
375	[BUG]  [BUGGY]  result  =(currentByte  <  '0'  ||  currentByte  >  '7')?  end  :(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  <  '0'  ||  currentByte  >  '7')?  end  :(currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  <  '0'  ||  currentByte  >  '7')?  end  :(currentByte  -  '0');	  result    =(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	4	None	replace
376	[BUG]  [BUGGY]  result  =(result  -  1  +(currentByte  *  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  1  +(currentByte  *  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  1  +(currentByte  *  '0');	  result    =(result    -    3)+(currentByte    *    '0');    	non-compiled	[CE]  <identifier>  expected	36	None	replace
377	[BUG]  [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  currentByte);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  System.arraycopy(buffer,  start,  buffer,  0,  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	System.arraycopy(buffer,  start,  buffer,  0,  currentByte);	  System.arraycopy(buffer,    offset,    result,    0,    currentByte);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
378	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  end,  buffer,  0,  currentByte);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  System.arraycopy(buffer,  offset,  end,  buffer,  0,  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	System.arraycopy(buffer,  offset,  end,  buffer,  0,  currentByte);	  System.arraycopy(buffer,    offset,    result,    0,    currentByte);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
379	[BUG]  [BUGGY]  result  =(result  %  1)+(currentByte  *  '0');  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  %  1)+(currentByte  *  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  %  1)+(currentByte  *  '0');	  result    =(result    <    <    1)+(currentByte    *    '0');    	non-compiled	[CE]  <identifier>  expected	21	None	replace
380	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOCtal(currentByte,  start);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOCtal(currentByte,  start);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsOCtal(currentByte,  start);	  result    =    JsonStringEncoder.getInstance().encodeAsIOCtal(currentByte);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
381	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOCtal(currentByte,  buffer);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsOCtal(currentByte,  buffer);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsOCtal(currentByte,  buffer);	  result    =    JsonStringEncoder.getInstance().encodeAsIOCtal(currentByte);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
382	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(start,  currentByte);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(start,  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsByte(start,  currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsByte(currentByte);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
383	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(currentByte,  start);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(currentByte,  start);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsByte(currentByte,  start);	  result    =    JsonStringEncoder.getInstance().encodeAsByte(currentByte);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
384	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(result);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(result);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsByte(result);	  result    =    JsonStringEncoder.getInstance().encodeAsByte(currentByte);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
385	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(buffer);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(buffer);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsByte(buffer);	  result    =    JsonStringEncoder.getInstance().encodeAsByte(currentByte);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
386	[BUG]  [BUGGY]  result  =(end  -  start)+(currentByte  *  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(end  -  start)+(currentByte  *  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(end  -  start)+(currentByte  *  '0');	  result    =(end    -    start)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	19	None	replace
387	[BUG]  [BUGGY]  result  =(result  -  offset)/(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  offset)/(currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  offset)/(currentByte  -  '0');	  result    =(result    -    start)/(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	15	None	replace
388	[BUG]  [BUGGY]  result  =(result  -  start)/(currentByte  +  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  start)/(currentByte  +  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  start)/(currentByte  +  '0');	  result    =(result    -    start)/(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	15	None	replace
389	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOException(currentByte);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOException(currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOException(currentByte);	  result    =    JsonStringEncoder.getInstance().quoteAsIOException(currentByte);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
390	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().reportCodeChange();  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().reportCodeChange();  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().reportCodeChange();	  result    =    JsonStringEncoder.getInstance().quoteAsIOException(currentByte);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
391	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().parse(currentByte);  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().parse(currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().parse(currentByte);	  result    =    JsonStringEncoder.getInstance().quoteAsIOException(currentByte);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
392	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(buffer);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(buffer);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOctal(buffer);	  result    =    JsonStringEncoder.getInstance().encodeAsIOctal(result);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
393	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(result,  currentByte);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(result,  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOctal(result,  currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsIOctal(result);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
394	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(result,  start);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(result,  start);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOctal(result,  start);	  result    =    JsonStringEncoder.getInstance().encodeAsIOctal(result);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
395	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(buffer,  start,  currentByte);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(buffer,  start,  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOctal(buffer,  start,  currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsIOctal(result);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
396	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(buffer,  end);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(buffer,  end);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOctal(buffer,  end);	  result    =    JsonStringEncoder.getInstance().encodeAsIOctal(result);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
397	[BUG]  [BUGGY]  result  =(result  -  '0')+(result  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  '0')+(result  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  '0')+(result  -  '0');	  result    =(result    <    <    4)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	47	None	replace
398	[BUG]  [BUGGY]  result  =(result  -  start)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  start)+(result  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  start)+(result  -  '0');	  result    =(result    <    <    4)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	47	None	replace
399	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOCR(currentByte,  start);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOCR(currentByte,  start);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOCR(currentByte,  start);	  result    =    JsonStringEncoder.getInstance().encodeAsIOCR(currentByte);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
400	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOCR(currentByte,  end);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOCR(currentByte,  end);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOCR(currentByte,  end);	  result    =    JsonStringEncoder.getInstance().encodeAsIOCR(currentByte);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
401	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOCR(currentByte,  length);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOCR(currentByte,  length);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOCR(currentByte,  length);	  result    =    JsonStringEncoder.getInstance().encodeAsIOCR(currentByte);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
402	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOCR(buffer,  start);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOCR(buffer,  start);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOCR(buffer,  start);	  result    =    JsonStringEncoder.getInstance().encodeAsIOCR(currentByte);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
403	[BUG]  [BUGGY]  result  =(result  <  <  1)/(currentByte  -  '0')+  1;  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)/(currentByte  -  '0')+  1;  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)/(currentByte  -  '0')+  1;	  result    =(result    <    <    1)/(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	48	None	replace
404	[BUG]  [BUGGY]  result  =(result  <  <  1)/(currentByte  -  '0'  +  length);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)/(currentByte  -  '0'  +  length);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)/(currentByte  -  '0'  +  length);	  result    =(result    <    <    1)/(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	48	None	replace
405	[BUG]  [BUGGY]  result  =(result  *  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  *  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  *  '0');	  result    =(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	24	None	replace
406	[BUG]  [BUGGY]  result  =(result  <  <  4)+(currentByte  -  '0')+  1;  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  4)+(currentByte  -  '0')+  1;  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  4)+(currentByte  -  '0')+  1;	  result    =(result    <    <    3)+(currentByte    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
407	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  *  '0')+  1;  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  3)+(currentByte  *  '0')+  1;  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  3)+(currentByte  *  '0')+  1;	  result    =(result    <    <    3)+(currentByte    -    '0')+    1;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
408	[BUG]  [BUGGY]  result  =(result  -  1)+  (end  -  '0');  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  1)+  (end  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  1)+  (end  -  '0');	  result    =(result    -    1)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	1	None	replace
409	[BUG]  [BUGGY]  result  =(result  *  '0')+(currentByte  -  '7');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  *  '0')+(currentByte  -  '7');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  *  '0')+(currentByte  -  '7');	  result    =(result    -    '0')+(currentByte    -    '7');    	non-compiled	[CE]  <identifier>  expected	26	None	replace
410	[BUG]  [BUGGY]  result  =(result  -  '0')+(length  -  '7');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  '0')+(length  -  '7');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  '0')+(length  -  '7');	  result    =(result    -    '0')+(currentByte    -    '7');    	non-compiled	[CE]  <identifier>  expected	26	None	replace
411	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().parseAsIOException(buffer,  start,  length);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().parseAsIOException(buffer,  start,  length);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().parseAsIOException(buffer,  start,  length);	  result    =    JsonStringEncoder.getInstance().quoteAsIOException(currentByte);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
412	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().parseByte(currentByte);  [CE]  <identifier>  expected  [FE]                                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().parseByte(currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().parseByte(currentByte);	  result    =    JsonStringEncoder.getInstance().quoteAsIOException(currentByte);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
413	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsIOException( " ");  [CE]  <identifier>  expected  [FE]                                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsIOException( " ");  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsIOException( " ");	  result    =    JsonStringEncoder.getInstance().quoteAsIOException(currentByte);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
414	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encode(currentByte);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encode(currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encode(currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsIOctal(result);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
415	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsString(buffer,  start);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsString(buffer,  start);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsString(buffer,  start);	  result    =    JsonStringEncoder.getInstance().quoteAsString(currentByte);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
416	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().parseAsString(buffer,  start,  length);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().parseAsString(buffer,  start,  length);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().parseAsString(buffer,  start,  length);	  result    =    JsonStringEncoder.getInstance().quoteAsString(currentByte);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
417	[BUG]  [BUGGY]  result  =(result  >=  3)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte  +  1);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  >=  3)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte  +  1);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  >=  3)+(currentByte  >  '0'?  currentByte  -  '0'  :  currentByte  +  1);	  result    =(result    <    <    3)+(currentByte    >    '0'?    currentByte    -    '0'    :    currentByte    +    1);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
418	[BUG]  [BUGGY]  result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  -  1  :  currentByte  +  1);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  -  1  :  currentByte  +  1);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  -  1  :  currentByte  +  1);	  result    =(result    <    <    3)+(currentByte    >    '0'?    currentByte    -    '0'    :    currentByte    +    1);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
419	[BUG]  [BUGGY]  result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  *  '0'  :  currentByte  +  1);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  *  '0'  :  currentByte  +  1);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(currentByte  >  '0'?  currentByte  *  '0'  :  currentByte  +  1);	  result    =(result    <    <    3)+(currentByte    >    '0'?    currentByte    -    '0'    :    currentByte    +    1);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
420	[BUG]  [BUGGY]  result  =(result  <  <  6)+(currentByte  *  '0');  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  6)+(currentByte  *  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  6)+(currentByte  *  '0');	  result    =(result    <    <    1)+(currentByte    *    '0');    	non-compiled	[CE]  <identifier>  expected	21	None	replace
421	[BUG]  [BUGGY]  result  =(result  <  <  4)+(currentByte  *  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  4)+(currentByte  *  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  4)+(currentByte  *  '0');	  result    =(result    <    <    1)+(currentByte    *    '0');    	non-compiled	[CE]  <identifier>  expected	21	None	replace
422	[BUG]  [BUGGY]  result  =(result  +  3)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  +  3)+(currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  +  3)+(currentByte  -  '0');	  result    =(result    +    1)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	13	None	replace
423	[BUG]  [BUGGY]  result  =(result  *  1).append((  currentByte  -  '0'));  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  *  1).append((  currentByte  -  '0'));  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  *  1).append((  currentByte  -  '0'));	  result    =(result    +    1)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	13	None	replace
424	[BUG]  [BUGGY]  result  =(result  -  '0')+(start  -  '7');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  '0')+(start  -  '7');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  '0')+(start  -  '7');	  result    =(currentByte    -    '0')+(result    -    '7');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
425	[BUG]  [BUGGY]  result  =(end  -  '0')+(result  -  '7');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(end  -  '0')+(result  -  '7');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(end  -  '0')+(result  -  '7');	  result    =(currentByte    -    '0')+(result    -    '7');    	non-compiled	[CE]  <identifier>  expected	6	None	replace
426	[BUG]  [BUGGY]  result  =(end  -  '0')+  (currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(end  -  '0')+  (currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(end  -  '0')+  (currentByte  -  '0');	  result    =(result    -    '0')+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	17	None	replace
427	[BUG]  [BUGGY]  result  =(result  *  '0')+  (currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  *  '0')+  (currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  *  '0')+  (currentByte  -  '0');	  result    =(result    -    '0')+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	17	None	replace
428	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsByte(buffer,  start);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsByte(buffer,  start);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().quoteAsByte(buffer,  start);	  result    =    JsonStringEncoder.getInstance().quoteAsByte(currentByte);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
429	[BUG]  [BUGGY]  result  =(result  +  3)+(currentByte  *  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  +  3)+(currentByte  *  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  +  3)+(currentByte  *  '0');	  result    =(result    -    3)+(currentByte    *    '0');    	non-compiled	[CE]  <identifier>  expected	36	None	replace
430	[BUG]  [BUGGY]  result  =(result  >  3)+(currentByte  >  '0'?  '0'  :  currentByte);  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  >  3)+(currentByte  >  '0'?  '0'  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  >  3)+(currentByte  >  '0'?  '0'  :  currentByte);	  result    =(result    -    3)+(currentByte    >    '0'?    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
431	[BUG]  [BUGGY]  result  =(result  -  1  ||(currentByte  >  '0'?  '0'  :  currentByte);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  1  ||(currentByte  >  '0'?  '0'  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  1  ||(currentByte  >  '0'?  '0'  :  currentByte);	  result    =(result    -    3)+(currentByte    >    '0'?    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
432	[BUG]  [BUGGY]  result  +=  length  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  +=  length  *  BYTE_MASK;  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  +=  length  *  BYTE_MASK;	  result    +=    length;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
433	[BUG]  [BUGGY]  result  +=  length  -(currentByte  *  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  +=  length  -(currentByte  *  BYTE_MASK);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  +=  length  -(currentByte  *  BYTE_MASK);	  result    +=    length;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
434	[BUG]  [BUGGY]  result  =(result  <  <  1)+(currentByte  >  '0'?  buffer.length  -  '0'  :  0);  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+(currentByte  >  '0'?  buffer.length  -  '0'  :  0);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(currentByte  >  '0'?  buffer.length  -  '0'  :  0);	  result    =(result    <    <    1)+(currentByte    >    '0'?    currentByte    -    '0'    :    0);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
435	[BUG]  [BUGGY]  result  =(result  <  <  3)/(length  -  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  3)/(length  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  3)/(length  -  '0');	  result    =(result    <    <    3)/(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	46	None	replace
436	[BUG]  [BUGGY]  result  =(result  <  <  4)/(result  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  4)/(result  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  4)/(result  -  '0');	  result    =(result    <    <    3)/(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	46	None	replace
437	[BUG]  [BUGGY]  result  -=(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  -=(currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  -=(currentByte  -  '0');	  result    =(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	4	None	replace
438	[BUG]  [BUGGY]  result  =(currentByte  -  '0'  ||  currentByte  >  '7');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(currentByte  -  '0'  ||  currentByte  >  '7');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(currentByte  -  '0'  ||  currentByte  >  '7');	  result    =(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	4	None	replace
439	[BUG]  [BUGGY]  result  =(this.currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(this.currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(this.currentByte  -  '0');	  result    =(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	4	None	replace
440	[BUG]  [BUGGY]  result  =(result  <  <  1)/(length  -  '0');  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)/(length  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)/(length  -  '0');	  result    =(result    <    <    1)/(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	48	None	replace
441	[BUG]  [BUGGY]  result  =(result  <  <  1)/(end  -  '0');  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)/(end  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)/(end  -  '0');	  result    =(result    <    <    1)/(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	48	None	replace
442	[BUG]  [BUGGY]  result  =(result  <  <  1)+(length  +  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+(length  +  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(length  +  '0');	  result    =(result    <    <    1)+(currentByte    +    '0');    	non-compiled	[CE]  <identifier>  expected	22	None	replace
443	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  +  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  3)+(currentByte  +  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  3)+(currentByte  +  '0');	  result    =(result    <    <    1)+(currentByte    +    '0');    	non-compiled	[CE]  <identifier>  expected	22	None	replace
444	[BUG]  [BUGGY]  System.arraycopy(currentByte,  offset,  buffer,  0,  currentByte);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  System.arraycopy(currentByte,  offset,  buffer,  0,  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	System.arraycopy(currentByte,  offset,  buffer,  0,  currentByte);	  System.arraycopy(buffer,    offset,    result,    0,    currentByte);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
445	[BUG]  [BUGGY]  result  =(result  -  1)+(length  -  '0');  //  convert  from  ASCII  //  CheckStyle:MagicNumber  ON  }  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  1)+(length  -  '0');  //  convert  from  ASCII  //  CheckStyle:MagicNumber  ON  }  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  1)+(length  -  '0');  //  convert  from  ASCII  //  CheckStyle:MagicNumber  ON  }	  result    =(result    <    <    1)+(length    -    '0');    //    convert    from    ASCII    //    CheckStyle:MagicNumber    ON    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
446	[BUG]  [BUGGY]  result  =(result  &  1)+(length  -  '0');  //  convert  from  ASCII  //  CheckStyle:MagicNumber  ON  }  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  &  1)+(length  -  '0');  //  convert  from  ASCII  //  CheckStyle:MagicNumber  ON  }  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  &  1)+(length  -  '0');  //  convert  from  ASCII  //  CheckStyle:MagicNumber  ON  }	  result    =(result    <    <    1)+(length    -    '0');    //    convert    from    ASCII    //    CheckStyle:MagicNumber    ON    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
447	[BUG]  [BUGGY]  result  =(result  -  1)+(length  -  '0');  //  convert  from  ASCII  *  CheckStyle:MagicNumber  ON  }  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  1)+(length  -  '0');  //  convert  from  ASCII  *  CheckStyle:MagicNumber  ON  }  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  1)+(length  -  '0');  //  convert  from  ASCII  *  CheckStyle:MagicNumber  ON  }	  result    =(result    <    <    1)+(length    -    '0');    //    convert    from    ASCII    //    CheckStyle:MagicNumber    ON    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
448	[BUG]  [BUGGY]  result  =(result  /  1)+(length  -  '0');  //  convert  from  ASCII  //  CheckStyle:MagicNumber  ON  }  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  /  1)+(length  -  '0');  //  convert  from  ASCII  //  CheckStyle:MagicNumber  ON  }  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  /  1)+(length  -  '0');  //  convert  from  ASCII  //  CheckStyle:MagicNumber  ON  }	  result    =(result    <    <    1)+(length    -    '0');    //    convert    from    ASCII    //    CheckStyle:MagicNumber    ON    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
449	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOException( "Byte  must  be  in  the  range  [ "  +  start  + "] ");  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOException( "Byte  must  be  in  the  range  [ "  +  start  + "] ");  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOException( "Byte  must  be  in  the  range  [ "  +  start  + "] ");	  result    =    JsonStringEncoder.getInstance().encodeAsIOException(   "   ");    	non-compiled	[CE]  <identifier>  expected	42	None	replace
450	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ");  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ");  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOException( "Byte  must  be  in  the  range  [ "  +  getClass().getName()  + "] ");	  result    =    JsonStringEncoder.getInstance().encodeAsIOException(   "   ");    	non-compiled	[CE]  <identifier>  expected	42	None	replace
451	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOException( "Byte  is  not  supported. ");  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOException( "Byte  is  not  supported. ");  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOException( "Byte  is  not  supported. ");	  result    =    JsonStringEncoder.getInstance().encodeAsIOException(   "   ");    	non-compiled	[CE]  <identifier>  expected	42	None	replace
452	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOException( "msg.unterminated.character ");  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOException( "msg.unterminated.character ");  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOException( "msg.unterminated.character ");	  result    =    JsonStringEncoder.getInstance().encodeAsIOException(   "   ");    	non-compiled	[CE]  <identifier>  expected	42	None	replace
453	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  ==  '0'?  currentByte  -  '0'  :  currentByte);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  3)+(currentByte  ==  '0'?  currentByte  -  '0'  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  3)+(currentByte  ==  '0'?  currentByte  -  '0'  :  currentByte);	  result    =(result    <    <    3)+(currentByte    >=    '0'?    currentByte    -    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
454	[BUG]  [BUGGY]  result  =(result  <  <  3)/(end  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  3)/(end  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  3)/(end  -  '0');	  result    =(result    <    <    3)+(end    -    '0');    	non-compiled	[CE]  <identifier>  expected	38	None	replace
455	[BUG]  [BUGGY]  result  =(result  <  <  3)+(end  -  1);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  3)+(end  -  1);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  3)+(end  -  1);	  result    =(result    <    <    3)+(end    -    '0');    	non-compiled	[CE]  <identifier>  expected	38	None	replace
456	[BUG]  [BUGGY]  result  =(result  <  <  1)+(end  -  1);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+(end  -  1);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(end  -  1);	  result    =(result    <    <    3)+(end    -    '0');    	non-compiled	[CE]  <identifier>  expected	38	None	replace
457	[BUG]  [BUGGY]  result  =(result  -  start)/(end  -  '0');  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  start)/(end  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  start)/(end  -  '0');	  result    =(result    -    start)/(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	15	None	replace
458	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().decodeAsMessage(buffer,  start,  length);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().decodeAsMessage(buffer,  start,  length);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().decodeAsMessage(buffer,  start,  length);	  result    =    JsonStringEncoder.getInstance().encodeAsMessage(currentByte);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
459	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().decodeAsObject(currentByte,  trailer);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().decodeAsObject(currentByte,  trailer);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().decodeAsObject(currentByte,  trailer);	  result    =    JsonStringEncoder.getInstance().encodeAsObject(currentByte);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
460	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(this.  trailer);  [CE]  <identifier>  expected  [FE]                              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsObject(this.  trailer);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsObject(this.  trailer);	  result    =    JsonStringEncoder.getInstance().encodeAsObject(currentByte);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
461	[BUG]  [BUGGY]  result  =(result  <  <  1)+(currentByte  >  '0'?  buffer.length  -  '0'  :  currentByte);  [CE]  <identifier>  expected  [FE]            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+(currentByte  >  '0'?  buffer.length  -  '0'  :  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(currentByte  >  '0'?  buffer.length  -  '0'  :  currentByte);	  result    =(result    <    <    1)+(currentByte    >    '0'?    currentByte    -    '0'    :    currentByte);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
462	[BUG]  [BUGGY]  result  =(result  <  <  7)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  7)+(length  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  7)+(length  -  '0');	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	37	None	replace
463	[BUG]  [BUGGY]  result  =(result  <  <  6)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  6)+(length  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  6)+(length  -  '0');	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	37	None	replace
464	[BUG]  [BUGGY]  result  =(result  -  3)+(start  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  3)+(start  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  3)+(start  -  '0');	  result    =(currentByte    -    3)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	3	None	replace
465	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte,  buffer,  length);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte,  buffer,  length);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOctal(currentByte,  buffer,  length);	  result    =    JsonStringEncoder.getInstance().encodeAsIOctal(buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
466	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(result,  start,  length);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOctal(result,  start,  length);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOctal(result,  start,  length);	  result    =    JsonStringEncoder.getInstance().encodeAsIOctal(buffer,    start,    length);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
467	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOJSC(currentByte  +  1);  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsIOJSC(currentByte  +  1);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsIOJSC(currentByte  +  1);	  result    =    JsonStringEncoder.getInstance().encodeAsIOJSC(currentByte);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
468	[BUG]  [BUGGY]  result  =(result  >  3)+(currentByte  <  '0'  ||  currentByte  >  '7');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  >  3)+(currentByte  <  '0'  ||  currentByte  >  '7');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  >  3)+(currentByte  <  '0'  ||  currentByte  >  '7');	  result    =(result    -    3)+(currentByte    <    '0'    ||    currentByte    >    '7');    	non-compiled	[CE]  <identifier>  expected	50	None	replace
469	[BUG]  [BUGGY]  result  =(result  +  3)+(currentByte  <  '0'  ||  currentByte  >  '7');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  +  3)+(currentByte  <  '0'  ||  currentByte  >  '7');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  +  3)+(currentByte  <  '0'  ||  currentByte  >  '7');	  result    =(result    -    3)+(currentByte    <    '0'    ||    currentByte    >    '7');    	non-compiled	[CE]  <identifier>  expected	50	None	replace
470	[BUG]  [BUGGY]  result  =(result  <  >  3)+(currentByte  <  '0'  ||  currentByte  >  '7');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  >  3)+(currentByte  <  '0'  ||  currentByte  >  '7');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  >  3)+(currentByte  <  '0'  ||  currentByte  >  '7');	  result    =(result    -    3)+(currentByte    <    '0'    ||    currentByte    >    '7');    	non-compiled	[CE]  <identifier>  expected	50	None	replace
471	[BUG]  [BUGGY]  result  =(end  -  offset)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(end  -  offset)+(currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(end  -  offset)+(currentByte  -  '0');	  result    =(end    -    start)+    (currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	19	None	replace
472	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsStream(buffer,  start,  length);  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsStream(buffer,  start,  length);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsStream(buffer,  start,  length);	  result    =    JsonStringEncoder.getInstance().encodeAsStream(currentByte);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
473	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsStream(buffer,  start,  end);  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsStream(buffer,  start,  end);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsStream(buffer,  start,  end);	  result    =    JsonStringEncoder.getInstance().encodeAsStream(currentByte);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
474	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsStream(buffer,  start,  currentByte);  [CE]  <identifier>  expected  [FE]                            IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsStream(buffer,  start,  currentByte);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsStream(buffer,  start,  currentByte);	  result    =    JsonStringEncoder.getInstance().encodeAsStream(currentByte);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
475	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(buffer,  end);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsByte(buffer,  end);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().encodeAsByte(buffer,  end);	  result    =    JsonStringEncoder.getInstance().encodeAsByte(currentByte);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
476	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().decodeAsByte(currentByte,  trailer);  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =  JsonStringEncoder.getInstance().decodeAsByte(currentByte,  trailer);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =  JsonStringEncoder.getInstance().decodeAsByte(currentByte,  trailer);	  result    =    JsonStringEncoder.getInstance().encodeAsByte(currentByte);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
477	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  >  '0'?  currentByte  -  '0'  :  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  3)+(currentByte  >  '0'?  currentByte  -  '0'  :  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  3)+(currentByte  >  '0'?  currentByte  -  '0'  :  '0');	  result    =(result    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	23	None	replace
478	[BUG]  [BUGGY]  result  =(result  <  <  7)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  7)+(currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  7)+(currentByte  -  '0');	  result    =(result    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	23	None	replace
479	[BUG]  [BUGGY]  result  =(result  <  <  6)+(currentByte  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  6)+(currentByte  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  6)+(currentByte  -  '0');	  result    =(result    <    <    3)+(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	23	None	replace
480	[BUG]  [BUGGY]  result  =(result  -  3)/(currentByte  *  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  3)/(currentByte  *  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  3)/(currentByte  *  '0');	  result    =(result    -    3)/(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	2	None	replace
481	[BUG]  [BUGGY]  result  =(result  >  3)+(currentByte  >  '0'?  currentByte  :  '0');  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  >  3)+(currentByte  >  '0'?  currentByte  :  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  >  3)+(currentByte  >  '0'?  currentByte  :  '0');	  result    =(result    -    3)+(currentByte    >    '0'?    currentByte    :    '0');    	non-compiled	[CE]  <identifier>  expected	5	None	replace
482	[BUG]  [BUGGY]  result  =(result  >  0)+(currentByte  >  '0'?  currentByte  :  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  >  0)+(currentByte  >  '0'?  currentByte  :  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  >  0)+(currentByte  >  '0'?  currentByte  :  '0');	  result    =(result    -    3)+(currentByte    >    '0'?    currentByte    :    '0');    	non-compiled	[CE]  <identifier>  expected	5	None	replace
483	[BUG]  [BUGGY]  result  =(result  +  3)+(currentByte  >  '0'?  currentByte  :  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  +  3)+(currentByte  >  '0'?  currentByte  :  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  +  3)+(currentByte  >  '0'?  currentByte  :  '0');	  result    =(result    -    3)+(currentByte    >    '0'?    currentByte    :    '0');    	non-compiled	[CE]  <identifier>  expected	5	None	replace
484	[BUG]  [BUGGY]  result  =(end  <  <  3)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(end  <  <  3)+(length  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(end  <  <  3)+(length  -  '0');	  result    =(currentByte    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	27	None	replace
485	[BUG]  [BUGGY]  result  =(result  <  <  4)+(length  -  '0');  [CE]  <identifier>  expected  [FE]                          IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  4)+(length  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  4)+(length  -  '0');	  result    =(currentByte    <    <    3)+(length    -    '0');    	non-compiled	[CE]  <identifier>  expected	27	None	replace
486	[BUG]  [BUGGY]  result  =(result  -  currentByte)/(end  -  '0');  [CE]  <identifier>  expected  [FE]              IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  currentByte)/(end  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  currentByte)/(end  -  '0');	  result    =(result    -    currentByte)/(currentByte    -    '0');    	non-compiled	[CE]  <identifier>  expected	59	None	replace
487	[BUG]  [BUGGY]  result  =(result  <  <  1)+(result  -  1);  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  1)+(result  -  1);  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  1)+(result  -  1);	  result    =(result    <    <    4)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	47	None	replace
488	[BUG]  [BUGGY]  result  =(result  <  <  7)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  <  <  7)+(result  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  <  <  7)+(result  -  '0');	  result    =(result    <    <    4)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	47	None	replace
489	[BUG]  [BUGGY]  result  =(result  -  '0'  ||  result  >  '7');  [CE]  <identifier>  expected  [FE]                  IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(result  -  '0'  ||  result  >  '7');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(result  -  '0'  ||  result  >  '7');	  result    =(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	24	None	replace
490	[BUG]  [BUGGY]  result  =(end  -  start)+(result  -  '0');  [CE]  <identifier>  expected  [FE]                IOException      [CONTEXT]      end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }      [BUGGY]  result  =(end  -  start)+(result  -  '0');  [BUGGY]        }  return  result;  }  [CLASS]  TarUtils  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  allNUL  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress14/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	107	109	1	replace	result  =(end  -  start)+(result  -  '0');	  result    =(currentByte    -    start)+(result    -    '0');    	non-compiled	[CE]  <identifier>  expected	16	None	replace
