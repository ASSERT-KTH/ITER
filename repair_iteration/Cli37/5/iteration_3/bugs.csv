bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  cmd  =  option.getOption(currentToken);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  option.getOption(currentToken);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  option.getOption(currentToken);	  Option    cmd    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
2	[BUG]  [BUGGY]  else  if(token!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-   "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-   "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-   "))  {  return  false;  }	  else    if(token!=    null    ||    getLongPrefix(token)!=    null    &&!token.startsWith(   "-       "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
3	[BUG]  [BUGGY]  else  if(token  ==  null  ||!token.startsWith( "-   "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token  ==  null  ||!token.startsWith( "-   "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token  ==  null  ||!token.startsWith( "-   "))  {  return  true;  }	  else    if(token    ==    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
4	[BUG]  [BUGGY]  else  if(token!=  null  ||  token.startsWith( "-   "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token!=  null  ||  token.startsWith( "-   "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token!=  null  ||  token.startsWith( "-   "))  {  return  true;  }	  else    if(token!=    null    &&    token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
5	[BUG]  [BUGGY]  else  if(token!=  null  &&  token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token!=  null  &&  token.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token!=  null  &&  token.startsWith( "- "))  {  return  false;  }	  else    if(token!=    null    &&    token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
6	[BUG]  [BUGGY]  else  if(token  ==  null  &&  getLongPrefix(token)!=  null  &&!token.endsWith( "-   "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token  ==  null  &&  getLongPrefix(token)!=  null  &&!token.endsWith( "-   "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token  ==  null  &&  getLongPrefix(token)!=  null  &&!token.endsWith( "-   "))  {  return  true;  }	  else    if(token    ==    null    ||    getLongPrefix(token)!=    null    &&!token.endsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
7	[BUG]  [BUGGY]  else  if(token!=  null  &&  getLongPrefix(token)!=  null  &&!token.endsWith( "-   "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token!=  null  &&  getLongPrefix(token)!=  null  &&!token.endsWith( "-   "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token!=  null  &&  getLongPrefix(token)!=  null  &&!token.endsWith( "-   "))  {  return  true;  }	  else    if(token    ==    null    ||    getLongPrefix(token)!=    null    &&!token.endsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
8	[BUG]  [BUGGY]  Option  option  =  options.getOption(pos);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(pos);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  option  =  options.getOption(pos);	  Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
9	[BUG]  [BUGGY]  Option  option  =  options.getOption(currentToken);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(currentToken);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  option  =  options.getOption(currentToken);	  Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
10	[BUG]  [BUGGY]  Option  option  =  options.getOption(t);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(t);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  option  =  options.getOption(t);	  Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
11	[BUG]  [BUGGY]  else  if(token  ==  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-   "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token  ==  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-   "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token  ==  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-   "))  {  return  false;  }	  else    if(token    ==    null    ||    getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
12	[BUG]  [BUGGY]  else  if(token!=  null  ||!token.startsWith( "-   "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token!=  null  ||!token.startsWith( "-   "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token!=  null  ||!token.startsWith( "-   "))  {  return  true;  }	  else    if(token!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
13	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(token,  pos);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  currentOption.getOption(token,  pos);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  currentOption.getOption(token,  pos);	  Option    cmd    =    currentOption.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
14	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(pos);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  currentOption.getOption(pos);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  currentOption.getOption(pos);	  Option    cmd    =    currentOption.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
15	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(option);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  currentOption.getOption(option);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  currentOption.getOption(option);	  Option    cmd    =    currentOption.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
16	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(token)/  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(token)/  1;  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  options.getOption(token)/  1;	  Option    cmd    =    options.getOption(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
17	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(token)+  2;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(token)+  2;  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  options.getOption(token)+  2;	  Option    cmd    =    options.getOption(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
18	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(token)+  pos;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(token)+  pos;  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  options.getOption(token)+  pos;	  Option    cmd    =    options.getOption(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
19	[BUG]  [BUGGY]  else  if(token  ==  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-   "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token  ==  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-   "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token  ==  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-   "))  {  return  true;  }	  else    if(token    ==    null    ||    getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
20	[BUG]  [BUGGY]  else  if(token!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-   "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-   "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-   "))  {  return  true;  }	  else    if(token    ==    null    ||    getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
21	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(token);  if(cmd  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(token);  if(cmd  ==  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  options.getOption(token);  if(cmd  ==  null)  {  return  false;  }	  Option    cmd    =    options.getOption(token);    if(cmd!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
22	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(pos,  token,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(pos,  token,  expectedOpts);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  options.getOption(pos,  token,  expectedOpts);	  Option    cmd    =    options.getOption(pos,    token);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
23	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(pos,  token,  value);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(pos,  token,  value);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  options.getOption(pos,  token,  value);	  Option    cmd    =    options.getOption(pos,    token);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
24	[BUG]  [BUGGY]  else  if(token.startsWith( "- ")||  token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token.startsWith( "- ")||  token.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token.startsWith( "- ")||  token.startsWith( "- "))  {  return  false;  }	  else    if(token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
25	[BUG]  [BUGGY]  option  cmd  =  options.getOption(token,  pos);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  option  cmd  =  options.getOption(token,  pos);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	option  cmd  =  options.getOption(token,  pos);	  option    cmd    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
26	[BUG]  [BUGGY]  option  cmd  =  options.getOption(pos);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  option  cmd  =  options.getOption(pos);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	option  cmd  =  options.getOption(pos);	  option    cmd    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
27	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  token);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(t,  token);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  options.getOption(t,  token);	  Option    cmd    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
28	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(pos,  t);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(pos,  t);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  options.getOption(pos,  t);	  Option    cmd    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
29	[BUG]  [BUGGY]  else  if(getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }	  else    if(getPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
30	[BUG]  [BUGGY]  else  if(getPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(getPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(getPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }	  else    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
31	[BUG]  [BUGGY]  else  if(token!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token!=  null  &&!token.startsWith( "-- "))  {  return  true;  }	  else    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
32	[BUG]  [BUGGY]  else  if(getLongPrefix(token)  ==  null  &&!token.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(getLongPrefix(token)  ==  null  &&!token.startsWith( "-- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(getLongPrefix(token)  ==  null  &&!token.startsWith( "-- "))  {  return  true;  }	  else    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
33	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(token  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(token  +  1);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  options.getOption(token  +  1);	  Option    cmd    =    options.getOption(pos    +    1);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
34	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(pos  +  1  -  token);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(pos  +  1  -  token);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  options.getOption(pos  +  1  -  token);	  Option    cmd    =    options.getOption(pos    +    1);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
35	[BUG]  [BUGGY]  if(options!=  null)  {  Option  cmd  =  options.getOption(pos);  if(cmd!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  if(options!=  null)  {  Option  cmd  =  options.getOption(pos);  if(cmd!=  null)  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	if(options!=  null)  {  Option  cmd  =  options.getOption(pos);  if(cmd!=  null)  {  return  true;  }	  Option    cmd    =    options.getOption(pos);    if(cmd!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
36	[BUG]  [BUGGY]  else  if(token!=  null  &&!token.endsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token!=  null  &&!token.endsWith( "-- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token!=  null  &&!token.endsWith( "-- "))  {  return  true;  }	  else    if(token!=    null    &&!token.endsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
37	[BUG]  [BUGGY]  else  if(token!=  null  ||!token.endsWith( "-   "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token!=  null  ||!token.endsWith( "-   "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token!=  null  ||!token.endsWith( "-   "))  {  return  true;  }	  else    if(token!=    null    &&!token.endsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
38	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getParent();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  currentOption.getParent();  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  currentOption.getParent();	  Option    cmd    =    currentOption.getOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
39	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(token,  pos  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(token,  pos  +  1);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  options.getOption(token,  pos  +  1);	  Option    cmd    =    options.getOption(token,    pos);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
40	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(token,  value);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(token,  value);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  options.getOption(token,  value);	  Option    cmd    =    options.getOption(token,    pos);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
41	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(token,  getLongPrefix(pos));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(token,  getLongPrefix(pos));  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  options.getOption(token,  getLongPrefix(pos));	  Option    cmd    =    options.getOption(token,    pos);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
42	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(token,  pos,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(token,  pos,  expectedOpts);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  options.getOption(token,  pos,  expectedOpts);	  Option    cmd    =    options.getOption(token,    pos);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
43	[BUG]  [BUGGY]  else  if(token.startsWith( "- ")||  token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token.startsWith( "- ")||  token.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token.startsWith( "- ")||  token.startsWith( "- "))  {  return  true;  }	  else    if(token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
44	[BUG]  [BUGGY]  else  if(token  ==  null  &&  getLongPrefix(token)!=  null  &&!token.endsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token  ==  null  &&  getLongPrefix(token)!=  null  &&!token.endsWith( "-- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token  ==  null  &&  getLongPrefix(token)!=  null  &&!token.endsWith( "-- "))  {  return  true;  }	  else    if(token    ==    null    ||    getLongPrefix(token)!=    null    &&!token.endsWith(   "--   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
45	[BUG]  [BUGGY]  else  if(token!=  null  &&  getLongPrefix(token)!=  null  &&!token.endsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token!=  null  &&  getLongPrefix(token)!=  null  &&!token.endsWith( "-- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token!=  null  &&  getLongPrefix(token)!=  null  &&!token.endsWith( "-- "))  {  return  true;  }	  else    if(token    ==    null    ||    getLongPrefix(token)!=    null    &&!token.endsWith(   "--   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
46	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(pos);  if(cmd  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(pos);  if(cmd  ==  null)  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  options.getOption(pos);  if(cmd  ==  null)  {  return  true;  }	  Option    cmd    =    options.getOption(opt);    if(cmd    ==    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
47	[BUG]  [BUGGY]  else  if(token!=  null  ||!token.startsWith( "-   "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token!=  null  ||!token.startsWith( "-   "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token!=  null  ||!token.startsWith( "-   "))  {  return  false;  }	  else    if(token!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
48	[BUG]  [BUGGY]  if(options!=  null)  {  Option  cmd  =  options.getOption(pos);  if(cmd!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  if(options!=  null)  {  Option  cmd  =  options.getOption(pos);  if(cmd!=  null)  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	if(options!=  null)  {  Option  cmd  =  options.getOption(pos);  if(cmd!=  null)  {  return  false;  }	  Option    cmd    =    options.getOption(pos);    if(cmd!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
49	[BUG]  [BUGGY]  if(options!=  null)  {  Option  cmd  =  options.getOption(pos);  if(cmd  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  if(options!=  null)  {  Option  cmd  =  options.getOption(pos);  if(cmd  ==  null)  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	if(options!=  null)  {  Option  cmd  =  options.getOption(pos);  if(cmd  ==  null)  {  return  false;  }	  Option    cmd    =    options.getOption(pos);    if(cmd!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
50	[BUG]  [BUGGY]  Option  cmd  =  option.getOption(currentOption);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  option.getOption(currentOption);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  option.getOption(currentOption);	  Option    cmd    =    options.getOption(currentOption);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
51	[BUG]  [BUGGY]  else  if(token!=  null  ||  getLongPrefix(token)  ==  null  &&!token.startsWith( "-   "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token!=  null  ||  getLongPrefix(token)  ==  null  &&!token.startsWith( "-   "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token!=  null  ||  getLongPrefix(token)  ==  null  &&!token.startsWith( "-   "))  {  return  false;  }	  else    if(getLongPrefix(token)    ==    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
52	[BUG]  [BUGGY]  else  if(getLongPrefix(token)  ==  null  &&!token.startsWith( "-- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(getLongPrefix(token)  ==  null  &&!token.startsWith( "-- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(getLongPrefix(token)  ==  null  &&!token.startsWith( "-- "))  {  return  false;  }	  else    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
53	[BUG]  [BUGGY]  else  if(token!=  null  &&!token.startsWith( "-- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token!=  null  &&!token.startsWith( "-- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token!=  null  &&!token.startsWith( "-- "))  {  return  false;  }	  else    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
54	[BUG]  [BUGGY]  else  if(token.startsWith( "- ")&&  token.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token.startsWith( "- ")&&  token.startsWith( "-- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token.startsWith( "- ")&&  token.startsWith( "-- "))  {  return  true;  }	  else    if(token.startsWith(   "-   ")||    token.startsWith(   "--   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
55	[BUG]  [BUGGY]  else  if(token.startsWith( "- ")||  token.startsWith( "-- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token.startsWith( "- ")||  token.startsWith( "-- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token.startsWith( "- ")||  token.startsWith( "-- "))  {  return  false;  }	  else    if(token.startsWith(   "-   ")||    token.startsWith(   "--   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
56	[BUG]  [BUGGY]  else  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- ")||  token.startsWith( "--   "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- ")||  token.startsWith( "--   "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(getLongPrefix(token)!=  null  &&!token.startsWith( "- ")||  token.startsWith( "--   "))  {  return  true;  }	  else    if(token.startsWith(   "-   ")||    token.startsWith(   "--   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
57	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  pos);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(token,  pos);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  option  =  options.getOption(token,  pos);	  Option    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
58	[BUG]  [BUGGY]  Option  option  =  options.getOption(token)+  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(token)+  1;  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  option  =  options.getOption(token)+  1;	  Option    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
59	[BUG]  [BUGGY]  else  if(token.endsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token.endsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token.endsWith( "- "))  {  return  false;  }	  else    if(token.endsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
60	[BUG]  [BUGGY]  else  if(token.endsWith( "- ")||  token.endsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token.endsWith( "- ")||  token.endsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token.endsWith( "- ")||  token.endsWith( "- "))  {  return  true;  }	  else    if(token.endsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
61	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(value,  pos);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(value,  pos);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  options.getOption(value,  pos);	  Option    cmd    =    options.getOption(token,    pos);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
62	[BUG]  [BUGGY]  else  if(!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(!token.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(!token.startsWith( "- "))  {  return  true;  }	  else    if(token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
63	[BUG]  [BUGGY]  else  if(option  ==  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(option  ==  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(option  ==  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  false;  }	  else    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
64	[BUG]  [BUGGY]  else  if(!token.endsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(!token.endsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(!token.endsWith( "- "))  {  return  true;  }	  else    if(token.endsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
65	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(currentToken  +  1);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  options.getOption(currentToken  +  1);	  Option    cmd    =    options.getOption(pos    +    1);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
66	[BUG]  [BUGGY]  else  if(token  ==  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token  ==  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token  ==  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }	  else    if(token    ==    null    ||    getLongPrefix(token)!=    null    &&!token.endsWith(   "--   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
67	[BUG]  [BUGGY]  else  if(!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(!token.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(!token.startsWith( "- "))  {  return  false;  }	  else    if(token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
68	[BUG]  [BUGGY]  Option  option  =  options.getOption(option);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(option);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  option  =  options.getOption(option);	  Option    option    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
69	[BUG]  [BUGGY]  else  if(token.startsWith( "- ")||  token.startsWith( "--))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token.startsWith( "- ")||  token.startsWith( "--))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token.startsWith( "- ")||  token.startsWith( "--))  {  return  true;  }	  else    if(token.startsWith(   "-   ")||    token.startsWith(   "--   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
70	[BUG]  [BUGGY]  else  if(!token.startsWith( "- ")&&  token.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(!token.startsWith( "- ")&&  token.startsWith( "-- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(!token.startsWith( "- ")&&  token.startsWith( "-- "))  {  return  true;  }	  else    if(token.startsWith(   "-   ")||    token.startsWith(   "--   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
71	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(value,  token);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(value,  token);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  options.getOption(value,  token);	  Option    cmd    =    options.getOption(pos,    token);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
72	[BUG]  [BUGGY]  else  if(token!=  null  &&  token.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token!=  null  &&  token.startsWith( "-- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token!=  null  &&  token.startsWith( "-- "))  {  return  true;  }	  else    if(token!=    null    &&    token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
73	[BUG]  [BUGGY]  else  if(token  ==  null  &&  token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token  ==  null  &&  token.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token  ==  null  &&  token.startsWith( "- "))  {  return  true;  }	  else    if(token!=    null    &&    token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
74	[BUG]  [BUGGY]  else  if(option  ==  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(option  ==  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(option  ==  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }	  else    if(getLongPrefix(token)    ==    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
75	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(token)-  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(token)-  1;  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  options.getOption(token)-  1;	  Option    cmd    =    options.getOption(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
76	[BUG]  [BUGGY]  else  if(token!=  null  &&!token.equals( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token!=  null  &&!token.equals( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token!=  null  &&!token.equals( "- "))  {  return  false;  }	  else    if(token!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
77	[BUG]  [BUGGY]  else  if(token!=  null  &&!token.endsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token!=  null  &&!token.endsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token!=  null  &&!token.endsWith( "- "))  {  return  false;  }	  else    if(token!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
78	[BUG]  [BUGGY]  else  if(getPrefix(token)  ==  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(getPrefix(token)  ==  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(getPrefix(token)  ==  null  &&!token.startsWith( "- "))  {  return  true;  }	  else    if(getPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
79	[BUG]  [BUGGY]  else  if(token!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }	  else    if(token!=    null    ||    getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
80	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(opt,  token);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(opt,  token);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  options.getOption(opt,  token);	  Option    cmd    =    options.getOption(pos,    token);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
81	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(opt,  pos);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(opt,  pos);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  options.getOption(opt,  pos);	  Option    cmd    =    options.getOption(token,    pos);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
82	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(option,  pos);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(option,  pos);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  options.getOption(option,  pos);	  Option    cmd    =    options.getOption(token,    pos);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
83	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(token);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  currentOption  =  options.getOption(token);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  currentOption  =  options.getOption(token);	  Option    cmd    =    options.getOption(currentOption);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
84	[BUG]  [BUGGY]  else  if(token!=  null  &&  token.startsWith( "- ")||  token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token!=  null  &&  token.startsWith( "- ")||  token.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token!=  null  &&  token.startsWith( "- ")||  token.startsWith( "- "))  {  return  true;  }	  else    if(token!=    null    &&    token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
85	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t);  if(cmd!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(t);  if(cmd!=  null)  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  options.getOption(t);  if(cmd!=  null)  {  return  false;  }	  Option    cmd    =    options.getOption(pos);    if(cmd!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
86	[BUG]  [BUGGY]  option  cmd  =  options.getOption(option);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  option  cmd  =  options.getOption(option);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	option  cmd  =  options.getOption(option);	  option    cmd    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
87	[BUG]  [BUGGY]  option  cmd  =  options.getOption(opt);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  option  cmd  =  options.getOption(opt);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	option  cmd  =  options.getOption(opt);	  option    cmd    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
88	[BUG]  [BUGGY]  else  if(token.startsWith( "- ")&&  token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token.startsWith( "- ")&&  token.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token.startsWith( "- ")&&  token.startsWith( "- "))  {  return  false;  }	  else    if(token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
89	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  pos);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  Option  cmd  =  options.getOption(t,  pos);  [BUGGY]      return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  options.getOption(t,  pos);	  Option    cmd    =    options.getOption(t);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
90	[BUG]  [BUGGY]  else  if(token  ==  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token  ==  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token  ==  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  false;  }	  else    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "--   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
91	[BUG]  [BUGGY]  else  if(token!=  null  &&!token.equals( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token!=  null  &&!token.equals( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token!=  null  &&!token.equals( "- "))  {  return  true;  }	  else    if(token!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
92	[BUG]  [BUGGY]  else  if(token.startsWith( "- ")&&  token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token.startsWith( "- ")&&  token.startsWith( "- "))  {  return  true;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token.startsWith( "- ")&&  token.startsWith( "- "))  {  return  true;  }	  else    if(token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
93	[BUG]  [BUGGY]  else  if(token  ==  null  &&!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token  ==  null  &&!token.startsWith( "- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token  ==  null  &&!token.startsWith( "- "))  {  return  false;  }	  else    if(token!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
94	[BUG]  [BUGGY]  else  if(token!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( ".- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  return  true;  }      [BUGGY]  else  if(token!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( ".- "))  {  return  false;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token!=  null  &&  getLongPrefix(token)!=  null  &&!token.startsWith( ".- "))  {  return  false;  }	  else    if(token!=    null    ||    getLongPrefix(token)!=    null    &&!token.startsWith(   "-       "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
