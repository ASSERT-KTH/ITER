bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(token);  if(cmd  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  Option  cmd  =  options.getOption(token);  if(cmd  ==  null)  {  return  true;  }  [BUGGY]    return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  options.getOption(token);  if(cmd  ==  null)  {  return  true;  }	      Option    cmd    =    options.getOption(option);    if(cmd!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
2	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(token);  if(cmd!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  Option  cmd  =  options.getOption(token);  if(cmd!=  null)  {  return  false;  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  options.getOption(token);  if(cmd!=  null)  {  return  false;  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
3	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  Option  cmd  =  options.getOption(currentToken);  [BUGGY]    return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  options.getOption(currentToken);	      Option    cmd    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
4	[BUG]  [BUGGY]  option  cmd  =  options.getOption(token);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  option  cmd  =  options.getOption(token);  [BUGGY]    return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	option  cmd  =  options.getOption(token);	      Option    cmd    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
5	[BUG]  [BUGGY]  else  if(token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  else  if(token.startsWith( "- "))  {  return  true;  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token.startsWith( "- "))  {  return  true;  }	  else    if(getLongPrefix(token)!=    null    &&!token.endsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
6	[BUG]  [BUGGY]  else  if(token!=  null  &&!token.endsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  else  if(token!=  null  &&!token.endsWith( "- "))  {  return  true;  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token!=  null  &&!token.endsWith( "- "))  {  return  true;  }	  else    if(getLongPrefix(token)!=    null    &&!token.endsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
7	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(pos);  if(cmd!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  Option  cmd  =  options.getOption(pos);  if(cmd!=  null)  {  return  false;  }  [BUGGY]    return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  options.getOption(pos);  if(cmd!=  null)  {  return  false;  }	      Option    cmd    =    options.getOption(opt);    if(cmd!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
8	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(opt);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  Option  cmd  =  currentOption.getOption(opt);  [BUGGY]    return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  currentOption.getOption(opt);	      Option    cmd    =    option.getOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
9	[BUG]  [BUGGY]  else  if(token!=  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "-   "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  else  if(token!=  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "-   "))  {  return  false;  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token!=  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "-   "))  {  return  false;  }	  else    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
10	[BUG]  [BUGGY]  else  if(getLongPrefix(token)  ==  null  &&!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  else  if(getLongPrefix(token)  ==  null  &&!token.startsWith( "- "))  {  return  false;  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(getLongPrefix(token)  ==  null  &&!token.startsWith( "- "))  {  return  false;  }	  else    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
11	[BUG]  [BUGGY]  else  if(token!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  else  if(token!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token!=  null  &&!token.startsWith( "- "))  {  return  false;  }	  else    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
12	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(pos);  if(cmd!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  Option  cmd  =  options.getOption(pos);  if(cmd!=  null)  {  return  true;  }  [BUGGY]    return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  options.getOption(pos);  if(cmd!=  null)  {  return  true;  }	      Option    cmd    =    options.getOption(opt);    if(cmd!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
13	[BUG]  [BUGGY]  else  if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  else  if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  false;  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  false;  }	  return    true;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
14	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  Option  cmd  =  options.getOption(t);  [BUGGY]    return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  options.getOption(t);	      Option    cmd    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
15	[BUG]  [BUGGY]  else  if(token!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  else  if(token!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token!=  null  &&!token.startsWith( "- "))  {  return  true;  }	  else    if(getLongPrefix(token)    ==    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
16	[BUG]  [BUGGY]  else  if(token  ==  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  else  if(token  ==  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token  ==  null  &&!token.startsWith( "- "))  {  return  true;  }	  else    if(getLongPrefix(token)    ==    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
17	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(token,  pos);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  Option  cmd  =  options.getOption(token,  pos);  [BUGGY]    return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  options.getOption(token,  pos);	      Option    cmd    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
18	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(token)+  1;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  Option  cmd  =  options.getOption(token)+  1;  [BUGGY]    return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  options.getOption(token)+  1;	      Option    cmd    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
19	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(pos  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  Option  cmd  =  options.getOption(pos  +  1);  [BUGGY]    return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  options.getOption(pos  +  1);	      Option    cmd    =    options.getOption(pos);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
20	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(pos,  token);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  Option  cmd  =  options.getOption(pos,  token);  [BUGGY]    return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  options.getOption(pos,  token);	      Option    cmd    =    options.getOption(pos);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
21	[BUG]  [BUGGY]  else  if(getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  else  if(getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(getPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }	  else    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
22	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(token);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  Option  cmd  =  currentOption.getOption(token);  [BUGGY]    return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  currentOption.getOption(token);	      Option    cmd    =    option.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
23	[BUG]  [BUGGY]  Option  cmd  =  option.getOption(pos);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  Option  cmd  =  option.getOption(pos);  [BUGGY]    return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  option.getOption(pos);	      Option    cmd    =    option.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
24	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentOption);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  Option  cmd  =  options.getOption(currentOption);  [BUGGY]    return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  options.getOption(currentOption);	      Option    cmd    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
25	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t);  if(cmd!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  Option  cmd  =  options.getOption(t);  if(cmd!=  null)  {  return  true;  }  [BUGGY]    return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  options.getOption(t);  if(cmd!=  null)  {  return  true;  }	      Option    cmd    =    options.getOption(token);    if(cmd!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
26	[BUG]  [BUGGY]  else  if(token  ==  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  else  if(token  ==  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token  ==  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }	  else    if(getLongPrefix(token)    ==    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
27	[BUG]  [BUGGY]  else  if(token.endsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  else  if(token.endsWith( "- "))  {  return  true;  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token.endsWith( "- "))  {  return  true;  }	  else    if(getLongPrefix(token)!=    null    &&!token.endsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
28	[BUG]  [BUGGY]  else  if(token.startsWith( "- ")||  token.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  else  if(token.startsWith( "- ")||  token.startsWith( "-- "))  {  return  true;  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token.startsWith( "- ")||  token.startsWith( "-- "))  {  return  true;  }	  else    if(getLongPrefix(token)!=    null    &&!token.endsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
29	[BUG]  [BUGGY]  else  if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  else  if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(getLongPrefix(token)!=  null  &&!token.startsWith( "-- "))  {  return  true;  }	  return    true;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
30	[BUG]  [BUGGY]  else  if(token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  else  if(token.startsWith( "- "))  {  return  false;  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token.startsWith( "- "))  {  return  false;  }	  else    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
31	[BUG]  [BUGGY]  else  if(token!=  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  else  if(token!=  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token!=  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  true;  }	  else    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
32	[BUG]  [BUGGY]  else  if(token!=  null  &&  token.startsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  else  if(token!=  null  &&  token.startsWith( "- "))  {  return  true;  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token!=  null  &&  token.startsWith( "- "))  {  return  true;  }	  else    if(getLongPrefix(token)    ==    null    &&!token.startsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
33	[BUG]  [BUGGY]  Option  option  =  options.getOption(token);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  Option  option  =  options.getOption(token);  [BUGGY]    return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  option  =  options.getOption(token);	      Option    cmd    =    option.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
34	[BUG]  [BUGGY]  else  if(token  ==  null  ||  getLongPrefix(token)!=  null  &&!token.endsWith( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  else  if(token  ==  null  ||  getLongPrefix(token)!=  null  &&!token.endsWith( "- "))  {  return  true;  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token  ==  null  ||  getLongPrefix(token)!=  null  &&!token.endsWith( "- "))  {  return  true;  }	  else    if(getLongPrefix(token)!=    null    &&!token.endsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
35	[BUG]  [BUGGY]  else  if(token  ==  null  ||  getLongPrefix(token)!=  null  &&!token.endsWith( "-- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  else  if(token  ==  null  ||  getLongPrefix(token)!=  null  &&!token.endsWith( "-- "))  {  return  true;  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token  ==  null  ||  getLongPrefix(token)!=  null  &&!token.endsWith( "-- "))  {  return  true;  }	  else    if(getLongPrefix(token)!=    null    &&!token.endsWith(   "-   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
36	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(opt);  if(cmd  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  Option  cmd  =  options.getOption(opt);  if(cmd  ==  null)  {  return  true;  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  cmd  =  options.getOption(opt);  if(cmd  ==  null)  {  return  true;  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
37	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  Option  option  =  options.getOption(opt);  [BUGGY]    return  false;  }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	Option  option  =  options.getOption(opt);	      Option    cmd    =    options.getOption(opt);    if(cmd!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
38	[BUG]  [BUGGY]  else  if(token  ==  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  return  true;  }    [BUGGY]  else  if(token  ==  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  t  token  value  int  pos  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	333	333	1	replace	else  if(token  ==  null  ||  getLongPrefix(token)!=  null  &&!token.startsWith( "- "))  {  return  false;  }	  else    if(getLongPrefix(token)!=    null    &&!token.startsWith(   "-   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
