bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  properties.propertyNames();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {    [BUGGY]  Enumeration  <?>  expectedOpts  =  properties.propertyNames();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Enumeration  <?>  expectedOpts  =  properties.propertyNames();	      Enumeration    <?>    expectedOpts    =    properties.elements();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
2	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  this.properties.elements();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {    [BUGGY]  Enumeration  <?>  expectedOpts  =  this.properties.elements();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Enumeration  <?>  expectedOpts  =  this.properties.elements();	      Enumeration    <?>    expectedOpts    =    properties.elements();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
3	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  properties.propertyOpts();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    {    [BUGGY]  Enumeration  <?>  expectedOpts  =  properties.propertyOpts();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Enumeration  <?>  expectedOpts  =  properties.propertyOpts();	      Enumeration    <?>    expectedOpts    =    properties.elements();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
4	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  currentOption.elements();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    {    [BUGGY]  Enumeration  <?>  expectedOpts  =  currentOption.elements();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Enumeration  <?>  expectedOpts  =  currentOption.elements();	      Enumeration    <?>    expectedOpts    =    properties.elements();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
5	[BUG]  [BUGGY]  List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.keySet());  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    {    [BUGGY]  List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.keySet());  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.keySet());	      List    <    Properties>    expectedOpts    =    new    ArrayList    <    Properties>(properties.values());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
6	[BUG]  [BUGGY]  Set  <  Properties>  expectedOpts  =  new  HashSet  <  Properties>(properties.values());  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    {    [BUGGY]  Set  <  Properties>  expectedOpts  =  new  HashSet  <  Properties>(properties.values());  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Set  <  Properties>  expectedOpts  =  new  HashSet  <  Properties>(properties.values());	      List    <    Properties>    expectedOpts    =    new    ArrayList    <    Properties>(properties.values());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
7	[BUG]  [BUGGY]  Set  <  Object>  expectedOpts  =  new  HashSet  <  Object>(properties.values());  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {    [BUGGY]  Set  <  Object>  expectedOpts  =  new  HashSet  <  Object>(properties.values());  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Set  <  Object>  expectedOpts  =  new  HashSet  <  Object>(properties.values());	      List    <    Object>    expectedOpts    =    new    ArrayList    <    Object>(properties.values());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
8	[BUG]  [BUGGY]  List  <  Object>  expectedOpts  =  new  LinkedList  <  Object>();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {    [BUGGY]  List  <  Object>  expectedOpts  =  new  LinkedList  <  Object>();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  Object>  expectedOpts  =  new  LinkedList  <  Object>();	      List    <    Object>    expectedOpts    =    new    ArrayList    <    Object>();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
9	[BUG]  [BUGGY]  List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(1);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {    [BUGGY]  List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(1);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(1);	      List    <    Object>    expectedOpts    =    new    ArrayList    <    Object>();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
10	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  properties.isEmpty())  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    {    [BUGGY]  if(expectedOpts  ==  null  ||  properties.isEmpty())  {  [BUGGY]    {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(expectedOpts  ==  null  ||  properties.isEmpty())  {	  if(properties    ==    null    ||    expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
11	[BUG]  [BUGGY]  if(properties!=  null  ||  expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {    [BUGGY]  if(properties!=  null  ||  expectedOpts.isEmpty())  {  [BUGGY]    {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(properties!=  null  ||  expectedOpts.isEmpty())  {	  if(properties    ==    null    ||    expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
12	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  property.isEmpty())  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {    [BUGGY]  if(expectedOpts  ==  null  ||  property.isEmpty())  {  [BUGGY]    {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(expectedOpts  ==  null  ||  property.isEmpty())  {	  if(properties    ==    null    ||    expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
13	[BUG]  [BUGGY]  List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.size()  -  1);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    {    [BUGGY]  List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.size()  -  1);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.size()  -  1);	      List    <    Object>    expectedOpts    =    new    ArrayList    <    Object>(properties.size());    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
14	[BUG]  [BUGGY]  List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.size()  +  1);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {    [BUGGY]  List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.size()  +  1);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.size()  +  1);	      List    <    Object>    expectedOpts    =    new    ArrayList    <    Object>(properties.size());    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
15	[BUG]  [BUGGY]  Set  <  Object>  expectedOpts  =  new  HashSet  <  Object>(properties.size());  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {    [BUGGY]  Set  <  Object>  expectedOpts  =  new  HashSet  <  Object>(properties.size());  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Set  <  Object>  expectedOpts  =  new  HashSet  <  Object>(properties.size());	      List    <    Object>    expectedOpts    =    new    ArrayList    <    Object>(properties.size());    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
16	[BUG]  [BUGGY]  List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size()  -  1);  expectedOpts.addAll(expectedOpts);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {    [BUGGY]  List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size()  -  1);  expectedOpts.addAll(expectedOpts);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size()  -  1);  expectedOpts.addAll(expectedOpts);	      List    <    Properties>    expectedOpts    =    new    ArrayList    <    Properties>(properties.size());    expectedOpts.addAll(expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
17	[BUG]  [BUGGY]  Set  <  Properties>  expectedOpts  =  new  HashSet  <  Properties>(properties.size());  expectedOpts.addAll(expectedOpts);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {    [BUGGY]  Set  <  Properties>  expectedOpts  =  new  HashSet  <  Properties>(properties.size());  expectedOpts.addAll(expectedOpts);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Set  <  Properties>  expectedOpts  =  new  HashSet  <  Properties>(properties.size());  expectedOpts.addAll(expectedOpts);	      List    <    Properties>    expectedOpts    =    new    ArrayList    <    Properties>(properties.size());    expectedOpts.addAll(expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
18	[BUG]  [BUGGY]  ArrayList  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size());  expectedOpts.addAll(expectedOpts);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {    [BUGGY]  ArrayList  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size());  expectedOpts.addAll(expectedOpts);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	ArrayList  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size());  expectedOpts.addAll(expectedOpts);	      List    <    Properties>    expectedOpts    =    new    ArrayList    <    Properties>(properties.size());    expectedOpts.addAll(expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
19	[BUG]  [BUGGY]  if(properties  ==  null  ||  expectedOpts  ==  null)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  expectedOpts  ==  null)  {  [BUGGY]    {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(properties  ==  null  ||  expectedOpts  ==  null)  {	  if(properties    ==    null    ||    expectedOpts!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
20	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  properties  ==  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {    [BUGGY]  if(expectedOpts  ==  null  ||  properties  ==  null)  {  [BUGGY]    {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(expectedOpts  ==  null  ||  properties  ==  null)  {	  if(properties    ==    null    ||    expectedOpts!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
21	[BUG]  [BUGGY]  if(properties!=  null  ||  expectedOpts  ==  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {    [BUGGY]  if(properties!=  null  ||  expectedOpts  ==  null)  {  [BUGGY]    {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(properties!=  null  ||  expectedOpts  ==  null)  {	  if(properties    ==    null    ||    expectedOpts!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
22	[BUG]  [BUGGY]  Set  <  Object>  expectedOpts  =  new  HashSet  <  Object>(properties.keySet());  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    {    [BUGGY]  Set  <  Object>  expectedOpts  =  new  HashSet  <  Object>(properties.keySet());  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Set  <  Object>  expectedOpts  =  new  HashSet  <  Object>(properties.keySet());	      List    <    Object>    expectedOpts    =    new    ArrayList    <    Object>(properties.keySet());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
23	[BUG]  [BUGGY]  List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size()  -  1);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    {    [BUGGY]  List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size()  -  1);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size()  -  1);	      List    <    Properties>    expectedOpts    =    new    ArrayList    <    Properties>(properties.size());    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
24	[BUG]  [BUGGY]  List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size()  -  2);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {    [BUGGY]  List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size()  -  2);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size()  -  2);	      List    <    Properties>    expectedOpts    =    new    ArrayList    <    Properties>(properties.size());    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
25	[BUG]  [BUGGY]  Set  <  Properties>  expectedOpts  =  new  HashSet  <  Properties>(properties.size());  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {    [BUGGY]  Set  <  Properties>  expectedOpts  =  new  HashSet  <  Properties>(properties.size());  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Set  <  Properties>  expectedOpts  =  new  HashSet  <  Properties>(properties.size());	      List    <    Properties>    expectedOpts    =    new    ArrayList    <    Properties>(properties.size());    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
26	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  properties.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {    [BUGGY]  if(expectedOpts  ==  null  ||  properties.size()  ==  0)  {  [BUGGY]    {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(expectedOpts  ==  null  ||  properties.size()  ==  0)  {	  if(properties    ==    null    ||    expectedOpts.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
27	[BUG]  [BUGGY]  if(properties  ==  null  ||  expectedOpts.size()!=  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  expectedOpts.size()!=  0)  {  [BUGGY]    {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(properties  ==  null  ||  expectedOpts.size()!=  0)  {	  if(properties    ==    null    ||    expectedOpts.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
28	[BUG]  [BUGGY]  if(property  ==  null  ||  expectedOpts.contains(property))  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    {    [BUGGY]  if(property  ==  null  ||  expectedOpts.contains(property))  {  [BUGGY]    {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(property  ==  null  ||  expectedOpts.contains(property))  {	  if(properties    ==    null    ||    expectedOpts.contains(property))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
29	[BUG]  [BUGGY]  if(properties!=  null  ||  expectedOpts.contains(property))  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {    [BUGGY]  if(properties!=  null  ||  expectedOpts.contains(property))  {  [BUGGY]    {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(properties!=  null  ||  expectedOpts.contains(property))  {	  if(properties    ==    null    ||    expectedOpts.contains(property))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
30	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  properties.contains(property))  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {    [BUGGY]  if(expectedOpts  ==  null  ||  properties.contains(property))  {  [BUGGY]    {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(expectedOpts  ==  null  ||  properties.contains(property))  {	  if(properties    ==    null    ||    expectedOpts.contains(property))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
31	[BUG]  [BUGGY]  List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size()  -  1);  expectedOpts.addAll(properties.values());  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {    [BUGGY]  List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size()  -  1);  expectedOpts.addAll(properties.values());  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size()  -  1);  expectedOpts.addAll(properties.values());	      List    <    Properties>    expectedOpts    =    new    ArrayList    <    Properties>(properties.size());    expectedOpts.addAll(properties.values());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
32	[BUG]  [BUGGY]  ArrayList  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size());  expectedOpts.addAll(properties.values());  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    {    [BUGGY]  ArrayList  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size());  expectedOpts.addAll(properties.values());  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	ArrayList  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size());  expectedOpts.addAll(properties.values());	      List    <    Properties>    expectedOpts    =    new    ArrayList    <    Properties>(properties.size());    expectedOpts.addAll(properties.values());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
33	[BUG]  [BUGGY]  Set  <  Properties>  expectedOpts  =  new  HashSet  <  Properties>(properties.size());  expectedOpts.addAll(properties.values());  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    {    [BUGGY]  Set  <  Properties>  expectedOpts  =  new  HashSet  <  Properties>(properties.size());  expectedOpts.addAll(properties.values());  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Set  <  Properties>  expectedOpts  =  new  HashSet  <  Properties>(properties.size());  expectedOpts.addAll(properties.values());	      List    <    Properties>    expectedOpts    =    new    ArrayList    <    Properties>(properties.size());    expectedOpts.addAll(properties.values());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
34	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(option);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {    [BUGGY]  OptionGroup  group  =  options.getGroup(option);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	OptionGroup  group  =  options.getGroup(option);	      OptionGroup    group    =    options.getOptionGroup(option);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
35	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {    [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	OptionGroup  group  =  options.getOptionGroup(opt);	      OptionGroup    group    =    options.getOptionGroup(option);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
36	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(option);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {    [BUGGY]  Option  group  =  options.getOptionGroup(option);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Option  group  =  options.getOptionGroup(option);	      OptionGroup    group    =    options.getOptionGroup(option);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
37	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(options);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    {    [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(options);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  String>  expectedOpts  =  Lists.newArrayList(options);	      List    <    String>    expectedOpts    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
38	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(argument);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {    [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(argument);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  String>  expectedOpts  =  Lists.newArrayList(argument);	      List    <    String>    expectedOpts    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
39	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties,  currentToken);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {    [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties,  currentToken);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  String>  expectedOpts  =  Lists.newArrayList(properties,  currentToken);	      List    <    String>    expectedOpts    =    Lists.newArrayList(properties);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
40	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    {    [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties,  expectedOpts);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  String>  expectedOpts  =  Lists.newArrayList(properties,  expectedOpts);	      List    <    String>    expectedOpts    =    Lists.newArrayList(properties);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
41	[BUG]  [BUGGY]  Property[]  expectedOpts  =  new  Property[properties.size()  ];  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {    [BUGGY]  Property[]  expectedOpts  =  new  Property[properties.size()  ];  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Property[]  expectedOpts  =  new  Property[properties.size()  ];	      Property[]    expectedOpts    =    new    Property[expectedOpts.size()    ];    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
42	[BUG]  [BUGGY]  Property[]  expectedOpts  =  new  Property[compiler.expectedOpts.size()  ];  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {    [BUGGY]  Property[]  expectedOpts  =  new  Property[compiler.expectedOpts.size()  ];  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Property[]  expectedOpts  =  new  Property[compiler.expectedOpts.size()  ];	      Property[]    expectedOpts    =    new    Property[expectedOpts.size()    ];    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
43	[BUG]  [BUGGY]  Property[]  expectedOpts  =  new  Property[this.expectedOpts.size()  ];  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    {    [BUGGY]  Property[]  expectedOpts  =  new  Property[this.expectedOpts.size()  ];  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Property[]  expectedOpts  =  new  Property[this.expectedOpts.size()  ];	      Property[]    expectedOpts    =    new    Property[expectedOpts.size()    ];    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
44	[BUG]  [BUGGY]  if(properties!=  null  ||  expectedOpts.contains(propertyName))  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {    [BUGGY]  if(properties!=  null  ||  expectedOpts.contains(propertyName))  {  [BUGGY]    {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(properties!=  null  ||  expectedOpts.contains(propertyName))  {	  if(properties    ==    null    ||    expectedOpts.contains(propertyName))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
45	[BUG]  [BUGGY]  if(propertyName  ==  null  ||  expectedOpts.contains(propertyName))  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {    [BUGGY]  if(propertyName  ==  null  ||  expectedOpts.contains(propertyName))  {  [BUGGY]    {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(propertyName  ==  null  ||  expectedOpts.contains(propertyName))  {	  if(properties    ==    null    ||    expectedOpts.contains(propertyName))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
46	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  properties.contains(propertyName))  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {    [BUGGY]  if(expectedOpts  ==  null  ||  properties.contains(propertyName))  {  [BUGGY]    {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(expectedOpts  ==  null  ||  properties.contains(propertyName))  {	  if(properties    ==    null    ||    expectedOpts.contains(propertyName))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
47	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  this.properties.properties();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {    [BUGGY]  Enumeration  <?>  expectedOpts  =  this.properties.properties();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Enumeration  <?>  expectedOpts  =  this.properties.properties();	      Enumeration    <?>    expectedOpts    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
48	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  currentOption.properties();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    {    [BUGGY]  Enumeration  <?>  expectedOpts  =  currentOption.properties();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Enumeration  <?>  expectedOpts  =  currentOption.properties();	      Enumeration    <?>    expectedOpts    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
49	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  new  ArrayList  <  Object>(properties.properties());  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    {    [BUGGY]  Enumeration  <?>  expectedOpts  =  new  ArrayList  <  Object>(properties.properties());  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Enumeration  <?>  expectedOpts  =  new  ArrayList  <  Object>(properties.properties());	      Enumeration    <?>    expectedOpts    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
50	[BUG]  [BUGGY]  if(expectedOpts!=  null  ||  properties.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {    [BUGGY]  if(expectedOpts!=  null  ||  properties.size()  ==  0)  {  [BUGGY]    {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(expectedOpts!=  null  ||  properties.size()  ==  0)  {	  if(properties!=    null    ||    expectedOpts.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
51	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  property  ==  null)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {    [BUGGY]  if(expectedOpts  ==  null  ||  property  ==  null)  {  [BUGGY]    {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(expectedOpts  ==  null  ||  property  ==  null)  {	  if(properties    ==    null    ||    expectedOpts!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
52	[BUG]  [BUGGY]  ArrayList  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.keySet());  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    {    [BUGGY]  ArrayList  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.keySet());  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	ArrayList  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.keySet());	      List    <    Object>    expectedOpts    =    new    ArrayList    <    Object>(properties.keySet());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
53	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties.values());  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {    [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties.values());  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  String>  expectedOpts  =  Lists.newArrayList(properties.values());	      List    <    String>    expectedOpts    =    Lists.newArrayList(properties);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
54	[BUG]  [BUGGY]  if(expectedOpts!=  null  ||  property.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {    [BUGGY]  if(expectedOpts!=  null  ||  property.size()  ==  0)  {  [BUGGY]    {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(expectedOpts!=  null  ||  property.size()  ==  0)  {	  if(properties!=    null    ||    expectedOpts.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
55	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  new  ArrayList  <  Object>();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {    [BUGGY]  Enumeration  <?>  expectedOpts  =  new  ArrayList  <  Object>();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Enumeration  <?>  expectedOpts  =  new  ArrayList  <  Object>();	      Enumeration    <?>    expectedOpts    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
56	[BUG]  [BUGGY]  ArrayList  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.values());  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {    [BUGGY]  ArrayList  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.values());  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	ArrayList  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.values());	      List    <    Object>    expectedOpts    =    new    ArrayList    <    Object>(properties.values());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
57	[BUG]  [BUGGY]  List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size()  +  1);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    {    [BUGGY]  List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size()  +  1);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size()  +  1);	      List    <    Properties>    expectedOpts    =    new    ArrayList    <    Properties>(properties.size());    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
58	[BUG]  [BUGGY]  ArrayList  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.values());  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    {    [BUGGY]  ArrayList  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.values());  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	ArrayList  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.values());	      List    <    Properties>    expectedOpts    =    new    ArrayList    <    Properties>(properties.values());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
59	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  props.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {    [BUGGY]  if(expectedOpts  ==  null  ||  props.size()  ==  0)  {  [BUGGY]    {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(expectedOpts  ==  null  ||  props.size()  ==  0)  {	  if(properties    ==    null    ||    expectedOpts.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
60	[BUG]  [BUGGY]  if(properties!=  null)  {  List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size());  expectedOpts.addAll(properties.values());  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {    [BUGGY]  if(properties!=  null)  {  List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size());  expectedOpts.addAll(properties.values());  }  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(properties!=  null)  {  List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size());  expectedOpts.addAll(properties.values());  }	      List    <    Properties>    expectedOpts    =    new    ArrayList    <    Properties>(properties.size());    expectedOpts.addAll(properties.values());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
61	[BUG]  [BUGGY]  ArrayList  <  Object>  expectedOpts  =  new  ArrayList  <  Object>();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {    [BUGGY]  ArrayList  <  Object>  expectedOpts  =  new  ArrayList  <  Object>();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	ArrayList  <  Object>  expectedOpts  =  new  ArrayList  <  Object>();	      List    <    Object>    expectedOpts    =    new    ArrayList    <    Object>();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
62	[BUG]  [BUGGY]  Set  <  Object>  expectedOpts  =  new  HashSet  <  Object>();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {    [BUGGY]  Set  <  Object>  expectedOpts  =  new  HashSet  <  Object>();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Set  <  Object>  expectedOpts  =  new  HashSet  <  Object>();	      List    <    Object>    expectedOpts    =    new    ArrayList    <    Object>();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
63	[BUG]  [BUGGY]  Property[]  expectedOpts  =  new  Property[opts.size()  ];  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {    [BUGGY]  Property[]  expectedOpts  =  new  Property[opts.size()  ];  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Property[]  expectedOpts  =  new  Property[opts.size()  ];	      Property[]    expectedOpts    =    new    Property[expectedOpts.size()    ];    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
64	[BUG]  [BUGGY]  Property[]  expectedOpts  =  new  Property[type.size()  ];  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {    [BUGGY]  Property[]  expectedOpts  =  new  Property[type.size()  ];  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Property[]  expectedOpts  =  new  Property[type.size()  ];	      Property[]    expectedOpts    =    new    Property[expectedOpts.size()    ];    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
65	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(currentToken);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    {    [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(currentToken);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  String>  expectedOpts  =  Lists.newArrayList(currentToken);	      List    <    String>    expectedOpts    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
66	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newLinkedList();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {    [BUGGY]  List  <  String>  expectedOpts  =  Lists.newLinkedList();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  String>  expectedOpts  =  Lists.newLinkedList();	      List    <    String>    expectedOpts    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
67	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(option,  value);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {    [BUGGY]  OptionGroup  group  =  options.getOptionGroup(option,  value);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	OptionGroup  group  =  options.getOptionGroup(option,  value);	      OptionGroup    group    =    options.getOptionGroup(option);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
68	[BUG]  [BUGGY]  List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(size());  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {    [BUGGY]  List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(size());  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(size());	      List    <    Object>    expectedOpts    =    new    ArrayList    <    Object>();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
69	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayListWithCapacity(properties.size());  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    {    [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayListWithCapacity(properties.size());  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  String>  expectedOpts  =  Lists.newArrayListWithCapacity(properties.size());	      List    <    String>    expectedOpts    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
70	[BUG]  [BUGGY]  if(properties!=  null  ||  expectedOpts!=  null)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {    [BUGGY]  if(properties!=  null  ||  expectedOpts!=  null)  {  [BUGGY]    {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(properties!=  null  ||  expectedOpts!=  null)  {	  if(properties    ==    null    ||    expectedOpts!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
71	[BUG]  [BUGGY]  if(properties  ==  null  ||  expectedOpts.contains(property)||  expectedOpts.contains(property))  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  expectedOpts.contains(property)||  expectedOpts.contains(property))  {  [BUGGY]    {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(properties  ==  null  ||  expectedOpts.contains(property)||  expectedOpts.contains(property))  {	  if(properties    ==    null    ||    expectedOpts.contains(property))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
72	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.propertyNames().size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    {    [BUGGY]  if(properties!=  null  ||  properties.propertyNames().size()  ==  0)  {  [BUGGY]    {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(properties!=  null  ||  properties.propertyNames().size()  ==  0)  {	  if(properties!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
73	[BUG]  [BUGGY]  List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.size()  -  2);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    {    [BUGGY]  List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.size()  -  2);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.size()  -  2);	      List    <    Object>    expectedOpts    =    new    ArrayList    <    Object>(properties.size());    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
74	[BUG]  [BUGGY]  ArrayList  <  String>  expectedOpts  =  Lists.newArrayList(properties);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    {    [BUGGY]  ArrayList  <  String>  expectedOpts  =  Lists.newArrayList(properties);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	ArrayList  <  String>  expectedOpts  =  Lists.newArrayList(properties);	      List    <    String>    expectedOpts    =    Lists.newArrayList(properties);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
75	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(option)+  1;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    {    [BUGGY]  OptionGroup  group  =  options.getOptionGroup(option)+  1;  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	OptionGroup  group  =  options.getOptionGroup(option)+  1;	      OptionGroup    group    =    options.getOptionGroup(option);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
76	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(option,  currentToken);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    {    [BUGGY]  OptionGroup  group  =  options.getOptionGroup(option,  currentToken);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	OptionGroup  group  =  options.getOptionGroup(option,  currentToken);	      OptionGroup    group    =    options.getOptionGroup(option);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
