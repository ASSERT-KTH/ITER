bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size());  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  {  [BUGGY]    List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size());  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	    List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size());		non-compiled	[CE]  illegal  start  of  type	57	None	add
2	[BUG]  [BUGGY]    List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size());  expectedOpts.addAll(expectedOpts);  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  {  [BUGGY]    List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size());  expectedOpts.addAll(expectedOpts);  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	    List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size());  expectedOpts.addAll(expectedOpts);		non-compiled	[CE]  illegal  start  of  type	57	None	add
3	[BUG]  [BUGGY]    Property[]  expectedOpts  =  new  Property[expectedOpts.size()  ];  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  {  [BUGGY]    Property[]  expectedOpts  =  new  Property[expectedOpts.size()  ];  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	    Property[]  expectedOpts  =  new  Property[expectedOpts.size()  ];		non-compiled	[CE]  illegal  start  of  type	57	None	add
4	[BUG]  [BUGGY]    List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size());  expectedOpts.addAll(properties.values());  [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]  {  [BUGGY]    List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size());  expectedOpts.addAll(properties.values());  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	    List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size());  expectedOpts.addAll(properties.values());		non-compiled	[CE]  illegal  start  of  type	57	None	add
5	[BUG]  [BUGGY]    List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.values());  [CE]  illegal  start  of  type  [FE]            AssertionError  [CONTEXT]  {  [BUGGY]    List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.values());  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	    List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.values());		non-compiled	[CE]  illegal  start  of  type	57	None	add
6	[BUG]  [BUGGY]  if(properties!=  null)  {  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  {  [BUGGY]  if(properties!=  null)  {  [BUGGY]  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(properties!=  null)  {	if  (properties  ==  null)  {  	non-compiled	[CE]  illegal  start  of  type	56	None	replace
7	[BUG]  [BUGGY]  if(properties  ==  null  ||  expectedOpts.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  {  [BUGGY]  if(properties  ==  null  ||  expectedOpts.size()  ==  0)  {  [BUGGY]  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(properties  ==  null  ||  expectedOpts.size()  ==  0)  {	if  (properties  ==  null)  {  	non-compiled	[CE]  illegal  start  of  type	56	None	replace
8	[BUG]  [BUGGY]  if(properties!=  null  ||  expectedOpts.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  {  [BUGGY]  if(properties!=  null  ||  expectedOpts.size()  ==  0)  {  [BUGGY]  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(properties!=  null  ||  expectedOpts.size()  ==  0)  {	if  (properties  ==  null)  {  	non-compiled	[CE]  illegal  start  of  type	56	None	replace
9	[BUG]  [BUGGY]    List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.size());  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  {  [BUGGY]    List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.size());  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	    List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.size());		non-compiled	[CE]  illegal  start  of  type	57	None	add
10	[BUG]  [BUGGY]    List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.values());  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  {  [BUGGY]    List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.values());  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	    List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.values());		non-compiled	[CE]  illegal  start  of  type	57	None	add
11	[BUG]  [BUGGY]    List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>();  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  {  [BUGGY]    List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>();  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	    List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>();		non-compiled	[CE]  illegal  start  of  type	57	None	add
12	[BUG]  [BUGGY]    Enumeration  <?>  expectedOpts  =  properties.properties();  [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]  {  [BUGGY]    Enumeration  <?>  expectedOpts  =  properties.properties();  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	    Enumeration  <?>  expectedOpts  =  properties.properties();		non-compiled	[CE]  illegal  start  of  type	57	None	add
13	[BUG]  [BUGGY]    List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.keySet());  [CE]  illegal  start  of  type  [FE]            AssertionError  [CONTEXT]  {  [BUGGY]    List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.keySet());  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	    List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.keySet());		non-compiled	[CE]  illegal  start  of  type	57	None	add
14	[BUG]  [BUGGY]  if(properties  ==  null  ||  expectedOpts.contains(property))  {  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  {  [BUGGY]  if(properties  ==  null  ||  expectedOpts.contains(property))  {  [BUGGY]  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(properties  ==  null  ||  expectedOpts.contains(property))  {	if  (properties  ==  null)  {  	non-compiled	[CE]  illegal  start  of  type	56	None	replace
15	[BUG]  [BUGGY]  if(properties  ==  null  ||  expectedOpts.contains(propertyName))  {  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  {  [BUGGY]  if(properties  ==  null  ||  expectedOpts.contains(propertyName))  {  [BUGGY]  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(properties  ==  null  ||  expectedOpts.contains(propertyName))  {	if  (properties  ==  null)  {  	non-compiled	[CE]  illegal  start  of  type	56	None	replace
16	[BUG]  [BUGGY]  if(properties  ==  null  ||  expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  {  [BUGGY]  if(properties  ==  null  ||  expectedOpts.isEmpty())  {  [BUGGY]  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(properties  ==  null  ||  expectedOpts.isEmpty())  {	if  (properties  ==  null)  {  	non-compiled	[CE]  illegal  start  of  type	56	None	replace
17	[BUG]  [BUGGY]  if(properties  ==  null  ||  expectedOpts!=  null)  {  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  {  [BUGGY]  if(properties  ==  null  ||  expectedOpts!=  null)  {  [BUGGY]  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(properties  ==  null  ||  expectedOpts!=  null)  {	if  (properties  ==  null)  {  	non-compiled	[CE]  illegal  start  of  type	56	None	replace
18	[BUG]  [BUGGY]    List  <  String>  expectedOpts  =  Lists.newArrayList();  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  {  [BUGGY]    List  <  String>  expectedOpts  =  Lists.newArrayList();  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	    List  <  String>  expectedOpts  =  Lists.newArrayList();		non-compiled	[CE]  illegal  start  of  type	57	None	add
19	[BUG]  [BUGGY]    OptionGroup  group  =  options.getOptionGroup(option);  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  {  [BUGGY]    OptionGroup  group  =  options.getOptionGroup(option);  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	    OptionGroup  group  =  options.getOptionGroup(option);		non-compiled	[CE]  illegal  start  of  type	57	None	add
20	[BUG]  [BUGGY]    Enumeration  <?>  expectedOpts  =  properties.elements();  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  {  [BUGGY]    Enumeration  <?>  expectedOpts  =  properties.elements();  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	    Enumeration  <?>  expectedOpts  =  properties.elements();		non-compiled	[CE]  illegal  start  of  type	57	None	add
21	[BUG]  [BUGGY]    List  <  String>  expectedOpts  =  Lists.newArrayList(properties);  [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]  {  [BUGGY]    List  <  String>  expectedOpts  =  Lists.newArrayList(properties);  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	    List  <  String>  expectedOpts  =  Lists.newArrayList(properties);		non-compiled	[CE]  illegal  start  of  type	57	None	add
