bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  expectedOpts  ==  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  if(expectedOpts  ==  null  ||  expectedOpts  ==  null)  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(expectedOpts  ==  null  ||  expectedOpts  ==  null)  {	  if(expectedOpts    ==    null    ||    properties    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
2	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  properties!=  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  if(expectedOpts  ==  null  ||  properties!=  null)  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(expectedOpts  ==  null  ||  properties!=  null)  {	  if(expectedOpts    ==    null    ||    properties    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
3	[BUG]  [BUGGY]  if(propertyName!=  null  ||  expectedOpts.contains(propertyName))  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  if(propertyName!=  null  ||  expectedOpts.contains(propertyName))  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(propertyName!=  null  ||  expectedOpts.contains(propertyName))  {	  if(properties!=    null    ||    expectedOpts.contains(propertyName))    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
4	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(options,  options);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(options,  options);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  String>  expectedOpts  =  Lists.newArrayList(options,  options);	  List    <    String>    expectedOpts    =    Lists.newArrayList(options);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
5	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  expectedOpts.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  if(expectedOpts  ==  null  ||  expectedOpts.size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(expectedOpts  ==  null  ||  expectedOpts.size()  ==  0)  {	  if(expectedOpts    ==    null    ||    properties.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
6	[BUG]  [BUGGY]  if(this.expectedOpts  ==  null  ||  expectedOpts.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  if(this.expectedOpts  ==  null  ||  expectedOpts.size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(this.expectedOpts  ==  null  ||  expectedOpts.size()  ==  0)  {	  if(expectedOpts    ==    null    ||    properties.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
7	[BUG]  [BUGGY]  Property[]  expectedOpts  =  new  Property[this.expectedOpts.size()  +  1];  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  Property[]  expectedOpts  =  new  Property[this.expectedOpts.size()  +  1];  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Property[]  expectedOpts  =  new  Property[this.expectedOpts.size()  +  1];	  Property[]    expectedOpts    =    new    Property[this.expectedOpts.size()    ];    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
8	[BUG]  [BUGGY]  List  <  Property>  expectedOpts  =  new  ArrayList(this.expectedOpts.size()  ];  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {      [BUGGY]  List  <  Property>  expectedOpts  =  new  ArrayList(this.expectedOpts.size()  ];  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  Property>  expectedOpts  =  new  ArrayList(this.expectedOpts.size()  ];	  Property[]    expectedOpts    =    new    Property[this.expectedOpts.size()    ];    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
9	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  new  LinkedList  <  Object>();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Enumeration  <?>  expectedOpts  =  new  LinkedList  <  Object>();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Enumeration  <?>  expectedOpts  =  new  LinkedList  <  Object>();	  Enumeration    <?>    expectedOpts    =    new    ArrayList    <    Object>();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
10	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  new  ArrayList  <  Object>(0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  Enumeration  <?>  expectedOpts  =  new  ArrayList  <  Object>(0);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Enumeration  <?>  expectedOpts  =  new  ArrayList  <  Object>(0);	  Enumeration    <?>    expectedOpts    =    new    ArrayList    <    Object>();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
11	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  new  ArrayList  <  Object>(1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {      [BUGGY]  Enumeration  <?>  expectedOpts  =  new  ArrayList  <  Object>(1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Enumeration  <?>  expectedOpts  =  new  ArrayList  <  Object>(1);	  Enumeration    <?>    expectedOpts    =    new    ArrayList    <    Object>();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
12	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  propertyName.contains(propertyName))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  if(expectedOpts  ==  null  ||  propertyName.contains(propertyName))  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(expectedOpts  ==  null  ||  propertyName.contains(propertyName))  {	  if(propertyName    ==    null    ||    expectedOpts.contains(propertyName))    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
13	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties,  selected);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties,  selected);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  String>  expectedOpts  =  Lists.newArrayList(properties,  selected);	  List    <    String>    expectedOpts    =    Lists.newArrayList(properties,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
14	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties,  props);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {      [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties,  props);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  String>  expectedOpts  =  Lists.newArrayList(properties,  props);	  List    <    String>    expectedOpts    =    Lists.newArrayList(properties,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
15	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(option,  value,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(option,  value,  expectedOpts);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	OptionGroup  group  =  options.getOptionGroup(option,  value,  expectedOpts);	  OptionGroup    group    =    options.getOptionGroup(option,    value);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
16	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(option,  value  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(option,  value  -  1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	OptionGroup  group  =  options.getOptionGroup(option,  value  -  1);	  OptionGroup    group    =    options.getOptionGroup(option,    value);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
17	[BUG]  [BUGGY]  List  <  Properties>  expectedOpts  =  new  LinkedList  <  Properties>(properties.size());  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  List  <  Properties>  expectedOpts  =  new  LinkedList  <  Properties>(properties.size());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  Properties>  expectedOpts  =  new  LinkedList  <  Properties>(properties.size());	  List    <    Properties>    expectedOpts    =    new    ArrayList    <    Properties>(properties.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
18	[BUG]  [BUGGY]  ArrayList  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  ArrayList  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	ArrayList  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size());	  List    <    Properties>    expectedOpts    =    new    ArrayList    <    Properties>(properties.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
19	[BUG]  [BUGGY]  if(property  ==  null  ||  expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  if(property  ==  null  ||  expectedOpts.isEmpty())  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(property  ==  null  ||  expectedOpts.isEmpty())  {	  if(expectedOpts    ==    null    ||    property.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
20	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  if(expectedOpts  ==  null  ||  expectedOpts.isEmpty())  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(expectedOpts  ==  null  ||  expectedOpts.isEmpty())  {	  if(expectedOpts    ==    null    ||    property.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
21	[BUG]  [BUGGY]  if(this.expectedOpts  ==  null  ||  expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  if(this.expectedOpts  ==  null  ||  expectedOpts.isEmpty())  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(this.expectedOpts  ==  null  ||  expectedOpts.isEmpty())  {	  if(expectedOpts    ==    null    ||    property.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
22	[BUG]  [BUGGY]  if(value  ==  null  ||  expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {      [BUGGY]  if(value  ==  null  ||  expectedOpts.isEmpty())  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(value  ==  null  ||  expectedOpts.isEmpty())  {	  if(expectedOpts    ==    null    ||    property.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
23	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  currentToken.properties();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  Enumeration  <?>  expectedOpts  =  currentToken.properties();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Enumeration  <?>  expectedOpts  =  currentToken.properties();	  Enumeration    <?>    expectedOpts    =    currentOption.properties();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
24	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  options.properties();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {      [BUGGY]  Enumeration  <?>  expectedOpts  =  options.properties();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Enumeration  <?>  expectedOpts  =  options.properties();	  Enumeration    <?>    expectedOpts    =    currentOption.properties();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
25	[BUG]  [BUGGY]  Property[]  expectedOpts  =  new  Property[group.size()  ];  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Property[]  expectedOpts  =  new  Property[group.size()  ];  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Property[]  expectedOpts  =  new  Property[group.size()  ];	  Property[]    expectedOpts    =    new    Property[type.size()    ];    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
26	[BUG]  [BUGGY]  Property[]  expectedOpts  =  new  Property[type.size()  +  1];  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  Property[]  expectedOpts  =  new  Property[type.size()  +  1];  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Property[]  expectedOpts  =  new  Property[type.size()  +  1];	  Property[]    expectedOpts    =    new    Property[type.size()    ];    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
27	[BUG]  [BUGGY]  Set  <  Properties>  expectedOpts  =  new  HashSet  <  Properties>(properties.keySet());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  Set  <  Properties>  expectedOpts  =  new  HashSet  <  Properties>(properties.keySet());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Set  <  Properties>  expectedOpts  =  new  HashSet  <  Properties>(properties.keySet());	  List    <    Properties>    expectedOpts    =    new    ArrayList    <    Properties>(properties.keySet());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
28	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  property  ==  null  ||  expectedOpts.contains(property))  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  if(expectedOpts  ==  null  ||  property  ==  null  ||  expectedOpts.contains(property))  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(expectedOpts  ==  null  ||  property  ==  null  ||  expectedOpts.contains(property))  {	  if(property    ==    null    ||    expectedOpts.contains(property))    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
29	[BUG]  [BUGGY]  if(property!=  null  ||  expectedOpts.contains(property))  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  if(property!=  null  ||  expectedOpts.contains(property))  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(property!=  null  ||  expectedOpts.contains(property))  {	  if(property    ==    null    ||    expectedOpts.contains(property))    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
30	[BUG]  [BUGGY]  Set  <  Object>  expectedOpts  =  new  TreeSet  <  Object>(properties.values());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  Set  <  Object>  expectedOpts  =  new  TreeSet  <  Object>(properties.values());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Set  <  Object>  expectedOpts  =  new  TreeSet  <  Object>(properties.values());	  Set    <    Object>    expectedOpts    =    new    HashSet    <    Object>(properties.values());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
31	[BUG]  [BUGGY]  ArrayList  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.size());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  ArrayList  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.size());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	ArrayList  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.size());	  List    <    Object>    expectedOpts    =    new    ArrayList    <    Object>(properties.size()    +    1);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
32	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  currentToken.elements();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {      [BUGGY]  Enumeration  <?>  expectedOpts  =  currentToken.elements();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Enumeration  <?>  expectedOpts  =  currentToken.elements();	  Enumeration    <?>    expectedOpts    =    currentOption.elements();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
33	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  options.elements();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      {      [BUGGY]  Enumeration  <?>  expectedOpts  =  options.elements();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Enumeration  <?>  expectedOpts  =  options.elements();	  Enumeration    <?>    expectedOpts    =    currentOption.elements();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
34	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  currentOption.propertyNames();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  Enumeration  <?>  expectedOpts  =  currentOption.propertyNames();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Enumeration  <?>  expectedOpts  =  currentOption.propertyNames();	  Enumeration    <?>    expectedOpts    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
35	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  this.properties.propertyNames();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Enumeration  <?>  expectedOpts  =  this.properties.propertyNames();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Enumeration  <?>  expectedOpts  =  this.properties.propertyNames();	  Enumeration    <?>    expectedOpts    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
36	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  new  ArrayList  <  Object>(properties.propertyNames());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  Enumeration  <?>  expectedOpts  =  new  ArrayList  <  Object>(properties.propertyNames());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Enumeration  <?>  expectedOpts  =  new  ArrayList  <  Object>(properties.propertyNames());	  Enumeration    <?>    expectedOpts    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
37	[BUG]  [BUGGY]  List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(propers.size());  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(propers.size());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(propers.size());	  List    <    Properties>    expectedOpts    =    new    ArrayList    <    Properties>(properties.size()    +    1);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
38	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties.propertyNames());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties.propertyNames());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  String>  expectedOpts  =  Lists.newArrayList(properties.propertyNames());	  List    <    String>    expectedOpts    =    Lists.newArrayList(properties.values());    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
39	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties.values(),  values);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties.values(),  values);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  String>  expectedOpts  =  Lists.newArrayList(properties.values(),  values);	  List    <    String>    expectedOpts    =    Lists.newArrayList(properties.values());    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
40	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties.keySet());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {      [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties.keySet());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  String>  expectedOpts  =  Lists.newArrayList(properties.keySet());	  List    <    String>    expectedOpts    =    Lists.newArrayList(properties.values());    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
41	[BUG]  [BUGGY]  Set  <  Object>  expectedOpts  =  new  HashSet  <  Object>(properties.size()  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  Set  <  Object>  expectedOpts  =  new  HashSet  <  Object>(properties.size()  -  1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Set  <  Object>  expectedOpts  =  new  HashSet  <  Object>(properties.size()  -  1);	  Set    <    Object>    expectedOpts    =    new    HashSet    <    Object>(properties.size());    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
42	[BUG]  [BUGGY]  Set  <  Object>  expectedOpts  =  new  TreeSet  <  Object>(properties.size());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Set  <  Object>  expectedOpts  =  new  TreeSet  <  Object>(properties.size());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Set  <  Object>  expectedOpts  =  new  TreeSet  <  Object>(properties.size());	  Set    <    Object>    expectedOpts    =    new    HashSet    <    Object>(properties.size());    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
43	[BUG]  [BUGGY]  Set  <  Properties>  expectedOpts  =  new  LinkedHashSet  <  Properties>(properties.size());  expectedOpts.addAll(properties.values());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Set  <  Properties>  expectedOpts  =  new  LinkedHashSet  <  Properties>(properties.size());  expectedOpts.addAll(properties.values());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Set  <  Properties>  expectedOpts  =  new  LinkedHashSet  <  Properties>(properties.size());  expectedOpts.addAll(properties.values());	  if(properties!=    null)    {    List    <    Properties>    expectedOpts    =    new    ArrayList    <    Properties>(properties.size());    expectedOpts.addAll(properties.values());    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
44	[BUG]  [BUGGY]  Property[]  expectedOpts  =  new  Property[properties.size()  ];  expectedOpts.addAll(properties.values());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  Property[]  expectedOpts  =  new  Property[properties.size()  ];  expectedOpts.addAll(properties.values());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Property[]  expectedOpts  =  new  Property[properties.size()  ];  expectedOpts.addAll(properties.values());	  if(properties!=    null)    {    List    <    Properties>    expectedOpts    =    new    ArrayList    <    Properties>(properties.size());    expectedOpts.addAll(properties.values());    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
45	[BUG]  [BUGGY]  ArrayList  <  String>  expectedOpts  =  Lists.newArrayList();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  expectedOpts  =  Lists.newArrayList();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	ArrayList  <  String>  expectedOpts  =  Lists.newArrayList();	  ArrayList    <    String>    expectedOpts    =    Lists.newArrayList(properties);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
46	[BUG]  [BUGGY]  if(props  ==  null  ||  expectedOpts.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  if(props  ==  null  ||  expectedOpts.size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(props  ==  null  ||  expectedOpts.size()  ==  0)  {	  if(expectedOpts    ==    null    ||    props.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
47	[BUG]  [BUGGY]  if(props!=  null  ||  expectedOpts.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  if(props!=  null  ||  expectedOpts.size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(props!=  null  ||  expectedOpts.size()  ==  0)  {	  if(expectedOpts    ==    null    ||    props.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
48	[BUG]  [BUGGY]  if(property  ==  null  ||  expectedOpts.contains(property)||  expectedOpts.contains(property))  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  if(property  ==  null  ||  expectedOpts.contains(property)||  expectedOpts.contains(property))  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(property  ==  null  ||  expectedOpts.contains(property)||  expectedOpts.contains(property))  {	  if(properties    ==    null    ||    expectedOpts.contains(property)||    expectedOpts.contains(property))    {    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
49	[BUG]  [BUGGY]  if(properties!=  null  ||  expectedOpts.contains(property)||  expectedOpts.contains(property))  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  expectedOpts.contains(property)||  expectedOpts.contains(property))  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(properties!=  null  ||  expectedOpts.contains(property)||  expectedOpts.contains(property))  {	  if(properties    ==    null    ||    expectedOpts.contains(property)||    expectedOpts.contains(property))    {    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
50	[BUG]  [BUGGY]  if(properties  ==  null  ||  expectedOpts.contains(property)||  properties.contains(property))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  expectedOpts.contains(property)||  properties.contains(property))  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(properties  ==  null  ||  expectedOpts.contains(property)||  properties.contains(property))  {	  if(properties    ==    null    ||    expectedOpts.contains(property)||    expectedOpts.contains(property))    {    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
51	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(option)+  1L;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(option)+  1L;  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	OptionGroup  group  =  options.getOptionGroup(option)+  1L;	  OptionGroup    group    =    options.getOptionGroup(option)+    1;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
52	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(option)/  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(option)/  1;  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	OptionGroup  group  =  options.getOptionGroup(option)/  1;	  OptionGroup    group    =    options.getOptionGroup(option)+    1;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
53	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(option)+  2;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(option)+  2;  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	OptionGroup  group  =  options.getOptionGroup(option)+  2;	  OptionGroup    group    =    options.getOptionGroup(option)+    1;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
54	[BUG]  [BUGGY]  Option  group  =  options.getGroup(option);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Option  group  =  options.getGroup(option);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Option  group  =  options.getGroup(option);	  Option    group    =    options.getOptionGroup(option);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
55	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(opt);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  Option  group  =  options.getOptionGroup(opt);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Option  group  =  options.getOptionGroup(opt);	  Option    group    =    options.getOptionGroup(option);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
56	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(option)+  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {      [BUGGY]  Option  group  =  options.getOptionGroup(option)+  1;  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Option  group  =  options.getOptionGroup(option)+  1;	  Option    group    =    options.getOptionGroup(option);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
57	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  properties.size()!=  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  if(expectedOpts  ==  null  ||  properties.size()!=  0)  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(expectedOpts  ==  null  ||  properties.size()!=  0)  {	  if(properties    ==    null    ||    expectedOpts.size()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
58	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(properties  ==  null  ||  properties.propertyNames().size()  ==  0)  {	  if(properties!=    null    ||    properties.propertyNames().size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
59	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().size()!=  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().size()!=  0)  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(properties  ==  null  ||  properties.propertyNames().size()!=  0)  {	  if(properties!=    null    ||    properties.propertyNames().size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
60	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  properties.propertyNames().size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  if(propertyNames  ==  null  ||  properties.propertyNames().size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(propertyNames  ==  null  ||  properties.propertyNames().size()  ==  0)  {	  if(properties!=    null    ||    properties.propertyNames().size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
61	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayListWithCapacity(properties.size()  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayListWithCapacity(properties.size()  -  1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  String>  expectedOpts  =  Lists.newArrayListWithCapacity(properties.size()  -  1);	  List    <    String>    expectedOpts    =    Lists.newArrayListWithCapacity(properties.size());    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
62	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties.size()  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties.size()  -  1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  String>  expectedOpts  =  Lists.newArrayList(properties.size()  -  1);	  List    <    String>    expectedOpts    =    Lists.newArrayListWithCapacity(properties.size());    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
63	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayListWithCapacity(properties.size()  -  2);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayListWithCapacity(properties.size()  -  2);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  String>  expectedOpts  =  Lists.newArrayListWithCapacity(properties.size()  -  2);	  List    <    String>    expectedOpts    =    Lists.newArrayListWithCapacity(properties.size());    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
64	[BUG]  [BUGGY]  if(property!=  null  ||  expectedOpts.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  if(property!=  null  ||  expectedOpts.size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(property!=  null  ||  expectedOpts.size()  ==  0)  {	  if(expectedOpts!=    null    ||    property.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
65	[BUG]  [BUGGY]  if(property  ==  null  ||  expectedOpts.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  if(property  ==  null  ||  expectedOpts.size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(property  ==  null  ||  expectedOpts.size()  ==  0)  {	  if(expectedOpts!=    null    ||    property.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
66	[BUG]  [BUGGY]  if(expectedOpts!=  null  ||  expectedOpts.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  if(expectedOpts!=  null  ||  expectedOpts.size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(expectedOpts!=  null  ||  expectedOpts.size()  ==  0)  {	  if(expectedOpts!=    null    ||    property.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
67	[BUG]  [BUGGY]  List  <  Object>  expectedOpts  =  new  LinkedList  <  Object>(properties.size());  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  List  <  Object>  expectedOpts  =  new  LinkedList  <  Object>(properties.size());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  Object>  expectedOpts  =  new  LinkedList  <  Object>(properties.size());	  List    <    Object>    expectedOpts    =    new    ArrayList    <    Object>(properties.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
68	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  this.properties.values();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Enumeration  <?>  expectedOpts  =  this.properties.values();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Enumeration  <?>  expectedOpts  =  this.properties.values();	  Enumeration    <?>    expectedOpts    =    this.properties.properties();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
69	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(arguments);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(arguments);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  String>  expectedOpts  =  Lists.newArrayList(arguments);	  List    <    String>    expectedOpts    =    Lists.newArrayList(currentToken);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
70	[BUG]  [BUGGY]  if(property  ==  null  ||  expectedOpts  ==  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  if(property  ==  null  ||  expectedOpts  ==  null)  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(property  ==  null  ||  expectedOpts  ==  null)  {	  if(expectedOpts    ==    null    ||    property    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
71	[BUG]  [BUGGY]  if(this.expectedOpts  ==  null  ||  expectedOpts  ==  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  if(this.expectedOpts  ==  null  ||  expectedOpts  ==  null)  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(this.expectedOpts  ==  null  ||  expectedOpts  ==  null)  {	  if(expectedOpts    ==    null    ||    property    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
72	[BUG]  [BUGGY]  if(expectedOpts!=  null  ||  properties.isEmpty())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  if(expectedOpts!=  null  ||  properties.isEmpty())  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(expectedOpts!=  null  ||  properties.isEmpty())  {	  if(properties!=    null    ||    expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
73	[BUG]  [BUGGY]  if(expectedOpts!=  null  ||  property.isEmpty())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  if(expectedOpts!=  null  ||  property.isEmpty())  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(expectedOpts!=  null  ||  property.isEmpty())  {	  if(properties!=    null    ||    expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
74	[BUG]  [BUGGY]  ArrayList  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size()  -  1);  expectedOpts.addAll(properties.values());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  ArrayList  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size()  -  1);  expectedOpts.addAll(properties.values());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	ArrayList  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size()  -  1);  expectedOpts.addAll(properties.values());	  ArrayList    <    Properties>    expectedOpts    =    new    ArrayList    <    Properties>(properties.size());    expectedOpts.addAll(properties.values());    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
75	[BUG]  [BUGGY]  Set  <  Properties>  expectedOpts  =  new  HashSet  <  Properties>(properties.size()  -  1);  expectedOpts.addAll(properties.values());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {      [BUGGY]  Set  <  Properties>  expectedOpts  =  new  HashSet  <  Properties>(properties.size()  -  1);  expectedOpts.addAll(properties.values());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Set  <  Properties>  expectedOpts  =  new  HashSet  <  Properties>(properties.size()  -  1);  expectedOpts.addAll(properties.values());	  Set    <    Properties>    expectedOpts    =    new    HashSet    <    Properties>(properties.size());    expectedOpts.addAll(properties.values());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
76	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(argument,  value);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(argument,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  String>  expectedOpts  =  Lists.newArrayList(argument,  value);	  List    <    String>    expectedOpts    =    Lists.newArrayList(argument);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
77	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  expectedOpts  ==  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  if(propertyNames  ==  null  ||  expectedOpts  ==  null)  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(propertyNames  ==  null  ||  expectedOpts  ==  null)  {	  if(properties!=    null    ||    expectedOpts    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
78	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties,  currentToken,  value);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties,  currentToken,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  String>  expectedOpts  =  Lists.newArrayList(properties,  currentToken,  value);	  List    <    String>    expectedOpts    =    Lists.newArrayList(properties,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
79	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties,  argument);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties,  argument);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  String>  expectedOpts  =  Lists.newArrayList(properties,  argument);	  List    <    String>    expectedOpts    =    Lists.newArrayList(properties,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
80	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties,  arguments);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {      [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties,  arguments);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  String>  expectedOpts  =  Lists.newArrayList(properties,  arguments);	  List    <    String>    expectedOpts    =    Lists.newArrayList(properties,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
81	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties,  option);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      {      [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties,  option);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  String>  expectedOpts  =  Lists.newArrayList(properties,  option);	  List    <    String>    expectedOpts    =    Lists.newArrayList(properties,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
82	[BUG]  [BUGGY]  Set  <  Object>  expectedOpts  =  new  TreeSet  <  Object>();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Set  <  Object>  expectedOpts  =  new  TreeSet  <  Object>();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Set  <  Object>  expectedOpts  =  new  TreeSet  <  Object>();	  Set    <    Object>    expectedOpts    =    new    HashSet    <    Object>();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
83	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  new  ArrayList  <  Object>(properties.values());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {      [BUGGY]  Enumeration  <?>  expectedOpts  =  new  ArrayList  <  Object>(properties.values());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Enumeration  <?>  expectedOpts  =  new  ArrayList  <  Object>(properties.values());	  Enumeration    <?>    expectedOpts    =    new    ArrayList    <    Object>(properties.properties());    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
84	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  new  LinkedList  <  Object>(properties.properties());  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      {      [BUGGY]  Enumeration  <?>  expectedOpts  =  new  LinkedList  <  Object>(properties.properties());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Enumeration  <?>  expectedOpts  =  new  LinkedList  <  Object>(properties.properties());	  Enumeration    <?>    expectedOpts    =    new    ArrayList    <    Object>(properties.properties());    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
85	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  new  ArrayList  <  Object>(properties.keySet());  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      {      [BUGGY]  Enumeration  <?>  expectedOpts  =  new  ArrayList  <  Object>(properties.keySet());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Enumeration  <?>  expectedOpts  =  new  ArrayList  <  Object>(properties.keySet());	  Enumeration    <?>    expectedOpts    =    new    ArrayList    <    Object>(properties.properties());    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
86	[BUG]  [BUGGY]  Property[]  expectedOpts  =  new  Property[compiler.expectedOpts.size()  +  1];  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Property[]  expectedOpts  =  new  Property[compiler.expectedOpts.size()  +  1];  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Property[]  expectedOpts  =  new  Property[compiler.expectedOpts.size()  +  1];	  Property[]    expectedOpts    =    new    Property[compiler.expectedOpts.size()    ];    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
87	[BUG]  [BUGGY]  List  <  Property>  expectedOpts  =  new  ArrayList(compiler.expectedOpts.size()  ];  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  List  <  Property>  expectedOpts  =  new  ArrayList(compiler.expectedOpts.size()  ];  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  Property>  expectedOpts  =  new  ArrayList(compiler.expectedOpts.size()  ];	  Property[]    expectedOpts    =    new    Property[compiler.expectedOpts.size()    ];    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
88	[BUG]  [BUGGY]  Property[]  expectedOpts  =  new  Property[options.size()  ];  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  Property[]  expectedOpts  =  new  Property[options.size()  ];  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Property[]  expectedOpts  =  new  Property[options.size()  ];	  Property[]    expectedOpts    =    new    Property[opts.size()    ];    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
89	[BUG]  [BUGGY]  Property[]  expectedOpts  =  new  Property[opts.size()  +  1];  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Property[]  expectedOpts  =  new  Property[opts.size()  +  1];  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Property[]  expectedOpts  =  new  Property[opts.size()  +  1];	  Property[]    expectedOpts    =    new    Property[opts.size()    ];    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
90	[BUG]  [BUGGY]  List  <  Property>  expectedOpts  =  new  ArrayList(opts.size()  ];  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  List  <  Property>  expectedOpts  =  new  ArrayList(opts.size()  ];  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  Property>  expectedOpts  =  new  ArrayList(opts.size()  ];	  Property[]    expectedOpts    =    new    Property[opts.size()    ];    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
91	[BUG]  [BUGGY]  Property[]  expectedOpts  =  new  Property[properties.size()  +  1];  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  Property[]  expectedOpts  =  new  Property[properties.size()  +  1];  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Property[]  expectedOpts  =  new  Property[properties.size()  +  1];	  Property[]    expectedOpts    =    new    Property[properties.size()    ];    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
92	[BUG]  [BUGGY]  List  <  Property>  expectedOpts  =  new  ArrayList(properties.size()  ];  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  List  <  Property>  expectedOpts  =  new  ArrayList(properties.size()  ];  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  Property>  expectedOpts  =  new  ArrayList(properties.size()  ];	  Property[]    expectedOpts    =    new    Property[properties.size()    ];    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
93	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentToken,  option);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentToken,  option);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	OptionGroup  group  =  options.getOptionGroup(currentToken,  option);	  OptionGroup    group    =    options.getOptionGroup(option,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
94	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt,  currentToken);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt,  currentToken);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	OptionGroup  group  =  options.getOptionGroup(opt,  currentToken);	  OptionGroup    group    =    options.getOptionGroup(option,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
95	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(option,  currentToken,  value);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(option,  currentToken,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	OptionGroup  group  =  options.getOptionGroup(option,  currentToken,  value);	  OptionGroup    group    =    options.getOptionGroup(option,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
96	[BUG]  [BUGGY]  Set  <  Properties>  expectedOpts  =  new  HashSet  <  Properties>(properties.size()  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  Set  <  Properties>  expectedOpts  =  new  HashSet  <  Properties>(properties.size()  -  1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Set  <  Properties>  expectedOpts  =  new  HashSet  <  Properties>(properties.size()  -  1);	  Set    <    Properties>    expectedOpts    =    new    HashSet    <    Properties>(properties.size());    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
97	[BUG]  [BUGGY]  Set  <  Properties>  expectedOpts  =  new  LinkedHashSet  <  Properties>(properties.size());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Set  <  Properties>  expectedOpts  =  new  LinkedHashSet  <  Properties>(properties.size());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Set  <  Properties>  expectedOpts  =  new  LinkedHashSet  <  Properties>(properties.size());	  Set    <    Properties>    expectedOpts    =    new    HashSet    <    Properties>(properties.size());    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
98	[BUG]  [BUGGY]  Set  <  Properties>  expectedOpts  =  new  LinkedHashSet  <  Properties>(properties.values());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {      [BUGGY]  Set  <  Properties>  expectedOpts  =  new  LinkedHashSet  <  Properties>(properties.values());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Set  <  Properties>  expectedOpts  =  new  LinkedHashSet  <  Properties>(properties.values());	  Set    <    Properties>    expectedOpts    =    new    HashSet    <    Properties>(properties.values());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
99	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt,  value);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(opt,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	OptionGroup  group  =  options.getOptionGroup(opt,  value);	  OptionGroup    group    =    options.getOptionGroup(opt);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
100	[BUG]  [BUGGY]  List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(2);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(2);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(2);	  List    <    Object>    expectedOpts    =    new    ArrayList    <    Object>(1);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
101	[BUG]  [BUGGY]  List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(0);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(0);	  List    <    Object>    expectedOpts    =    new    ArrayList    <    Object>(1);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
102	[BUG]  [BUGGY]  List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(4);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {      [BUGGY]  List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(4);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(4);	  List    <    Object>    expectedOpts    =    new    ArrayList    <    Object>(1);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
103	[BUG]  [BUGGY]  Set  <  Properties>  expectedOpts  =  new  HashSet  <  Properties>(properties.size()  -  1);  expectedOpts.addAll(expectedOpts);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  Set  <  Properties>  expectedOpts  =  new  HashSet  <  Properties>(properties.size()  -  1);  expectedOpts.addAll(expectedOpts);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Set  <  Properties>  expectedOpts  =  new  HashSet  <  Properties>(properties.size()  -  1);  expectedOpts.addAll(expectedOpts);	  Set    <    Properties>    expectedOpts    =    new    HashSet    <    Properties>(properties.size());    expectedOpts.addAll(expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
104	[BUG]  [BUGGY]  Set  <  Properties>  expectedOpts  =  new  LinkedHashSet  <  Properties>(properties.size());  expectedOpts.addAll(expectedOpts);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Set  <  Properties>  expectedOpts  =  new  LinkedHashSet  <  Properties>(properties.size());  expectedOpts.addAll(expectedOpts);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Set  <  Properties>  expectedOpts  =  new  LinkedHashSet  <  Properties>(properties.size());  expectedOpts.addAll(expectedOpts);	  Set    <    Properties>    expectedOpts    =    new    HashSet    <    Properties>(properties.size());    expectedOpts.addAll(expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
105	[BUG]  [BUGGY]  List  <  Properties>  expectedOpts  =  new  LinkedList  <  Properties>(properties.size());  expectedOpts.addAll(properties.values());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  List  <  Properties>  expectedOpts  =  new  LinkedList  <  Properties>(properties.size());  expectedOpts.addAll(properties.values());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  Properties>  expectedOpts  =  new  LinkedList  <  Properties>(properties.size());  expectedOpts.addAll(properties.values());	  List    <    Properties>    expectedOpts    =    new    ArrayList    <    Properties>(properties.size()    -    1);    expectedOpts.addAll(properties.values());    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
106	[BUG]  [BUGGY]  List  <  Properties>  expectedOpts  =  new  LinkedList  <  Properties>(properties.size());  expectedOpts.addAll(expectedOpts);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  List  <  Properties>  expectedOpts  =  new  LinkedList  <  Properties>(properties.size());  expectedOpts.addAll(expectedOpts);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  Properties>  expectedOpts  =  new  LinkedList  <  Properties>(properties.size());  expectedOpts.addAll(expectedOpts);	  List    <    Properties>    expectedOpts    =    new    ArrayList    <    Properties>(properties.size()    -    1);    expectedOpts.addAll(expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
107	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(currentOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  OptionGroup  group  =  options.getGroup(currentOption);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	OptionGroup  group  =  options.getGroup(currentOption);	  OptionGroup    group    =    options.getGroup(option);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
108	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(opt);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  OptionGroup  group  =  options.getGroup(opt);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	OptionGroup  group  =  options.getGroup(opt);	  OptionGroup    group    =    options.getGroup(option);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
109	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newHashSet();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  List  <  String>  expectedOpts  =  Lists.newHashSet();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  String>  expectedOpts  =  Lists.newHashSet();	  List    <    String>    expectedOpts    =    Lists.newLinkedList();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
110	[BUG]  [BUGGY]  Set  <  String>  expectedOpts  =  Lists.newHashSet();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  Set  <  String>  expectedOpts  =  Lists.newHashSet();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Set  <  String>  expectedOpts  =  Lists.newHashSet();	  List    <    String>    expectedOpts    =    Lists.newLinkedList();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
111	[BUG]  [BUGGY]  List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(size()  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(size()  -  1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(size()  -  1);	  List    <    Object>    expectedOpts    =    new    ArrayList    <    Object>(size());    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
112	[BUG]  [BUGGY]  List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(size()  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(size()  +  1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(size()  +  1);	  List    <    Object>    expectedOpts    =    new    ArrayList    <    Object>(size());    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
113	[BUG]  [BUGGY]  Set  <  Object>  expectedOpts  =  new  HashSet  <  Object>(size());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  Set  <  Object>  expectedOpts  =  new  HashSet  <  Object>(size());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Set  <  Object>  expectedOpts  =  new  HashSet  <  Object>(size());	  List    <    Object>    expectedOpts    =    new    ArrayList    <    Object>(size());    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
114	[BUG]  [BUGGY]  ArrayList  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.keySet());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  ArrayList  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.keySet());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	ArrayList  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.keySet());	  ArrayList    <    Properties>    expectedOpts    =    new    ArrayList    <    Properties>(properties.values());    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
115	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  currentOption.propertyOpts();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  Enumeration  <?>  expectedOpts  =  currentOption.propertyOpts();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Enumeration  <?>  expectedOpts  =  currentOption.propertyOpts();	  Enumeration    <?>    expectedOpts    =    properties.propertyOpts();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
116	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  this.properties.propertyOpts();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {      [BUGGY]  Enumeration  <?>  expectedOpts  =  this.properties.propertyOpts();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Enumeration  <?>  expectedOpts  =  this.properties.propertyOpts();	  Enumeration    <?>    expectedOpts    =    properties.propertyOpts();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
117	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  properties.propertyOpts(currentToken);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      {      [BUGGY]  Enumeration  <?>  expectedOpts  =  properties.propertyOpts(currentToken);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Enumeration  <?>  expectedOpts  =  properties.propertyOpts(currentToken);	  Enumeration    <?>    expectedOpts    =    properties.propertyOpts();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
118	[BUG]  [BUGGY]  ArrayList  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size()  -  1);  expectedOpts.addAll(expectedOpts);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  ArrayList  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size()  -  1);  expectedOpts.addAll(expectedOpts);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	ArrayList  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size()  -  1);  expectedOpts.addAll(expectedOpts);	  ArrayList    <    Properties>    expectedOpts    =    new    ArrayList    <    Properties>(properties.size());    expectedOpts.addAll(expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
119	[BUG]  [BUGGY]  if(value  ==  null  ||  expectedOpts.contains(propertyName))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  if(value  ==  null  ||  expectedOpts.contains(propertyName))  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(value  ==  null  ||  expectedOpts.contains(propertyName))  {	  if(expectedOpts    ==    null    ||    properties.contains(propertyName))    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
120	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  this.properties.keySet();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Enumeration  <?>  expectedOpts  =  this.properties.keySet();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Enumeration  <?>  expectedOpts  =  this.properties.keySet();	  Enumeration    <?>    expectedOpts    =    this.properties.elements();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
121	[BUG]  [BUGGY]  List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(propers.size());  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(propers.size());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(propers.size());	  List    <    Object>    expectedOpts    =    new    ArrayList    <    Object>(properties.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
122	[BUG]  [BUGGY]  Properties[]  expectedOpts  =  new  Property[this.expectedOpts.size()  ];  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  Properties[]  expectedOpts  =  new  Property[this.expectedOpts.size()  ];  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Properties[]  expectedOpts  =  new  Property[this.expectedOpts.size()  ];	  Property[]    expectedOpts    =    new    Property[this.expectedOpts.size()    ];    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
123	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  currentOption.getOpts();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {      [BUGGY]  Enumeration  <?>  expectedOpts  =  currentOption.getOpts();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Enumeration  <?>  expectedOpts  =  currentOption.getOpts();	  Enumeration    <?>    expectedOpts    =    currentOption.elements();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
124	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(option,  argument);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(option,  argument);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	OptionGroup  group  =  options.getOptionGroup(option,  argument);	  OptionGroup    group    =    options.getOptionGroup(option,    value);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
125	[BUG]  [BUGGY]  if(value  ==  null  ||  expectedOpts  ==  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  if(value  ==  null  ||  expectedOpts  ==  null)  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(value  ==  null  ||  expectedOpts  ==  null)  {	  if(expectedOpts    ==    null    ||    property    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
126	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentToken);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentToken);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	OptionGroup  group  =  options.getOptionGroup(currentToken);	  OptionGroup    group    =    options.getOptionGroup(option,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
127	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties,  currentOption);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties,  currentOption);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  String>  expectedOpts  =  Lists.newArrayList(properties,  currentOption);	  List    <    String>    expectedOpts    =    Lists.newArrayList(properties,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
128	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties,  options);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {      [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties,  options);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  String>  expectedOpts  =  Lists.newArrayList(properties,  options);	  List    <    String>    expectedOpts    =    Lists.newArrayList(properties,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
129	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  expectedOpts.contains(property)||  properties.contains(property))  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  if(expectedOpts  ==  null  ||  expectedOpts.contains(property)||  properties.contains(property))  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(expectedOpts  ==  null  ||  expectedOpts.contains(property)||  properties.contains(property))  {	  if(properties    ==    null    ||    expectedOpts.contains(property)||    expectedOpts.contains(property))    {    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
130	[BUG]  [BUGGY]  Properties[]  expectedOpts  =  new  Property[compiler.expectedOpts.size()  ];  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Properties[]  expectedOpts  =  new  Property[compiler.expectedOpts.size()  ];  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Properties[]  expectedOpts  =  new  Property[compiler.expectedOpts.size()  ];	  Property[]    expectedOpts    =    new    Property[compiler.expectedOpts.size()    ];    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
131	[BUG]  [BUGGY]  if(propertyNames!=  null  ||  properties.propertyNames().size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  if(propertyNames!=  null  ||  properties.propertyNames().size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(propertyNames!=  null  ||  properties.propertyNames().size()  ==  0)  {	  if(properties!=    null    ||    properties.propertyNames().size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
132	[BUG]  [BUGGY]  ArrayList  <  String>  expectedOpts  =  Lists.newArrayList(currentToken);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  expectedOpts  =  Lists.newArrayList(currentToken);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	ArrayList  <  String>  expectedOpts  =  Lists.newArrayList(currentToken);	  List    <    String>    expectedOpts    =    Lists.newArrayList(currentToken);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
133	[BUG]  [BUGGY]  if(expectedOpts!=  null  ||  properties!=  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  if(expectedOpts!=  null  ||  properties!=  null)  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(expectedOpts!=  null  ||  properties!=  null)  {	  if(properties!=    null    ||    expectedOpts    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
134	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(value);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  String>  expectedOpts  =  Lists.newArrayList(value);	  List    <    String>    expectedOpts    =    Lists.newArrayList(argument);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
135	[BUG]  [BUGGY]  Properties[]  expectedOpts  =  new  Property[properties.size()  ];  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  Properties[]  expectedOpts  =  new  Property[properties.size()  ];  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Properties[]  expectedOpts  =  new  Property[properties.size()  ];	  Property[]    expectedOpts    =    new    Property[properties.size()    ];    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
136	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(option)+  1  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(option)+  1  +  1;  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	OptionGroup  group  =  options.getOptionGroup(option)+  1  +  1;	  OptionGroup    group    =    options.getOptionGroup(option)+    1;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
137	[BUG]  [BUGGY]  Properties[]  expectedOpts  =  new  Property[opts.size()  ];  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  Properties[]  expectedOpts  =  new  Property[opts.size()  ];  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Properties[]  expectedOpts  =  new  Property[opts.size()  ];	  Property[]    expectedOpts    =    new    Property[opts.size()    ];    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
138	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  property.contains(property))  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  if(expectedOpts  ==  null  ||  property.contains(property))  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(expectedOpts  ==  null  ||  property.contains(property))  {	  if(property    ==    null    ||    expectedOpts.contains(property))    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
139	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayListWithCapacity(properties.size()  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayListWithCapacity(properties.size()  +  1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  String>  expectedOpts  =  Lists.newArrayListWithCapacity(properties.size()  +  1);	  List    <    String>    expectedOpts    =    Lists.newArrayListWithCapacity(properties.size());    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
140	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  expectedOpts.contains(property))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  if(expectedOpts  ==  null  ||  expectedOpts.contains(property))  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(expectedOpts  ==  null  ||  expectedOpts.contains(property))  {	  if(expectedOpts    ==    null    ||    properties.contains(property))    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
141	[BUG]  [BUGGY]  if(value  ==  null  ||  expectedOpts.contains(property))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  if(value  ==  null  ||  expectedOpts.contains(property))  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(value  ==  null  ||  expectedOpts.contains(property))  {	  if(expectedOpts    ==    null    ||    properties.contains(property))    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
142	[BUG]  [BUGGY]  if(property  ==  null  ||  expectedOpts.contains(propertyName))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  if(property  ==  null  ||  expectedOpts.contains(propertyName))  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(property  ==  null  ||  expectedOpts.contains(propertyName))  {	  if(expectedOpts    ==    null    ||    properties.contains(propertyName))    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
143	[BUG]  [BUGGY]  if(expectedOpts!=  null  ||  propertyNames!=  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  if(expectedOpts!=  null  ||  propertyNames!=  null)  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(expectedOpts!=  null  ||  propertyNames!=  null)  {	  if(properties!=    null    ||    expectedOpts!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
144	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  props.size()!=  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  if(expectedOpts  ==  null  ||  props.size()!=  0)  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(expectedOpts  ==  null  ||  props.size()!=  0)  {	  if(properties    ==    null    ||    expectedOpts.size()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
145	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(option,  value);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Option  group  =  options.getOptionGroup(option,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Option  group  =  options.getOptionGroup(option,  value);	  Option    group    =    options.getOptionGroup(option);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
146	[BUG]  [BUGGY]  if(this.expectedOpts!=  null  ||  expectedOpts.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  if(this.expectedOpts!=  null  ||  expectedOpts.size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(this.expectedOpts!=  null  ||  expectedOpts.size()  ==  0)  {	  if(expectedOpts!=    null    ||    property.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
147	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties.values(),  currentToken);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties.values(),  currentToken);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  String>  expectedOpts  =  Lists.newArrayList(properties.values(),  currentToken);	  List    <    String>    expectedOpts    =    Lists.newArrayList(properties.values());    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
148	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(options,  value);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(options,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  String>  expectedOpts  =  Lists.newArrayList(options,  value);	  List    <    String>    expectedOpts    =    Lists.newArrayList(options);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
149	[BUG]  [BUGGY]  List  <  Object>  expectedOpts  =  new  java.util.ArrayList  <  Object>();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  List  <  Object>  expectedOpts  =  new  java.util.ArrayList  <  Object>();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  Object>  expectedOpts  =  new  java.util.ArrayList  <  Object>();	  List    <    Object>    expectedOpts    =    new    LinkedList    <    Object>();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
150	[BUG]  [BUGGY]  if(properties!=  null)  {  List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size());  expectedOpts.addAll(expectedOpts);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  if(properties!=  null)  {  List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size());  expectedOpts.addAll(expectedOpts);  }  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(properties!=  null)  {  List  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size());  expectedOpts.addAll(expectedOpts);  }	  List    <    Properties>    expectedOpts    =    new    ArrayList    <    Properties>(properties.size()    -    1);    expectedOpts.addAll(expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
151	[BUG]  [BUGGY]  if(value  ==  null  ||  expectedOpts.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  if(value  ==  null  ||  expectedOpts.size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(value  ==  null  ||  expectedOpts.size()  ==  0)  {	  if(expectedOpts    ==    null    ||    properties.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
152	[BUG]  [BUGGY]  if(options  ==  null  ||  expectedOpts.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  if(options  ==  null  ||  expectedOpts.size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(options  ==  null  ||  expectedOpts.size()  ==  0)  {	  if(expectedOpts    ==    null    ||    properties.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
153	[BUG]  [BUGGY]  List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(8);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(8);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(8);	  List    <    Object>    expectedOpts    =    new    ArrayList    <    Object>(1);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
154	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newHashList();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  List  <  String>  expectedOpts  =  Lists.newHashList();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  String>  expectedOpts  =  Lists.newHashList();	  List    <    String>    expectedOpts    =    Lists.newLinkedList();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
155	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  currentOption.values();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  Enumeration  <?>  expectedOpts  =  currentOption.values();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Enumeration  <?>  expectedOpts  =  currentOption.values();	  Enumeration    <?>    expectedOpts    =    currentOption.properties();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
156	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  propertyName  ==  null  ||  expectedOpts.contains(propertyName))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  if(expectedOpts  ==  null  ||  propertyName  ==  null  ||  expectedOpts.contains(propertyName))  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(expectedOpts  ==  null  ||  propertyName  ==  null  ||  expectedOpts.contains(propertyName))  {	  if(propertyName    ==    null    ||    expectedOpts.contains(propertyName))    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
157	[BUG]  [BUGGY]  Property[]  expectedOpts  =  new  Property[compiler.expectedOpts.size()  >  0  ];  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Property[]  expectedOpts  =  new  Property[compiler.expectedOpts.size()  >  0  ];  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Property[]  expectedOpts  =  new  Property[compiler.expectedOpts.size()  >  0  ];	  Property[]    expectedOpts    =    new    Property[compiler.expectedOpts.size()    ];    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
158	[BUG]  [BUGGY]  if(properties!=  null  &&  properties.propertyNames().size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  if(properties!=  null  &&  properties.propertyNames().size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(properties!=  null  &&  properties.propertyNames().size()  ==  0)  {	  if(properties!=    null    ||    properties.propertyNames().size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
159	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(option)-  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(option)-  1;  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	OptionGroup  group  =  options.getOptionGroup(option)-  1;	  OptionGroup    group    =    options.getOptionGroup(option)+    1;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
160	[BUG]  [BUGGY]  if(properties!=  null  ||  expectedOpts.size()!=  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  expectedOpts.size()!=  0)  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(properties!=  null  ||  expectedOpts.size()!=  0)  {	  if(properties    ==    null    ||    expectedOpts.size()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
161	[BUG]  [BUGGY]  Property[]  expectedOpts  =  new  Property[this.expectedOpts.size()  -  1];  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  Property[]  expectedOpts  =  new  Property[this.expectedOpts.size()  -  1];  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Property[]  expectedOpts  =  new  Property[this.expectedOpts.size()  -  1];	  Property[]    expectedOpts    =    new    Property[this.expectedOpts.size()    ];    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
162	[BUG]  [BUGGY]  List  <  Properties>  expectedOpts  =  new  LinkedList  <  Properties>(properties.values());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {      [BUGGY]  List  <  Properties>  expectedOpts  =  new  LinkedList  <  Properties>(properties.values());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  Properties>  expectedOpts  =  new  LinkedList  <  Properties>(properties.values());	  Set    <    Properties>    expectedOpts    =    new    HashSet    <    Properties>(properties.values());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
163	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties,  currentToken  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties,  currentToken  +  1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  String>  expectedOpts  =  Lists.newArrayList(properties,  currentToken  +  1);	  List    <    String>    expectedOpts    =    Lists.newArrayList(properties,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
164	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(currentToken  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(currentToken  +  1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  String>  expectedOpts  =  Lists.newArrayList(currentToken  +  1);	  List    <    String>    expectedOpts    =    Lists.newArrayList(currentToken);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
165	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  currentOption.properties().iterator().next();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  Enumeration  <?>  expectedOpts  =  currentOption.properties().iterator().next();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Enumeration  <?>  expectedOpts  =  currentOption.properties().iterator().next();	  Enumeration    <?>    expectedOpts    =    currentOption.properties();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
166	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  this.currentOption.properties();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {      [BUGGY]  Enumeration  <?>  expectedOpts  =  this.currentOption.properties();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Enumeration  <?>  expectedOpts  =  this.currentOption.properties();	  Enumeration    <?>    expectedOpts    =    currentOption.properties();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
167	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties,  preferredOpts);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties,  preferredOpts);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  String>  expectedOpts  =  Lists.newArrayList(properties,  preferredOpts);	  List    <    String>    expectedOpts    =    Lists.newArrayList(properties,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
168	[BUG]  [BUGGY]  Set  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.size());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  Set  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.size());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Set  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(properties.size());	  List    <    Object>    expectedOpts    =    new    ArrayList    <    Object>(properties.size()    +    1);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
169	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(option)+  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  OptionGroup  group  =  options.getGroup(option)+  1;  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	OptionGroup  group  =  options.getGroup(option)+  1;	  OptionGroup    group    =    options.getGroup(option);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
170	[BUG]  [BUGGY]  List  <  Object>  expectedOpts  =  new  LinkedList  <  Object>(properties.values());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  List  <  Object>  expectedOpts  =  new  LinkedList  <  Object>(properties.values());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  Object>  expectedOpts  =  new  LinkedList  <  Object>(properties.values());	  Set    <    Object>    expectedOpts    =    new    HashSet    <    Object>(properties.values());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
171	[BUG]  [BUGGY]  Option  group  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Option  group  =  options.getOption(option);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Option  group  =  options.getOption(option);	  Option    group    =    options.getOptionGroup(option);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
172	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  types.propertyOpts();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      {      [BUGGY]  Enumeration  <?>  expectedOpts  =  types.propertyOpts();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Enumeration  <?>  expectedOpts  =  types.propertyOpts();	  Enumeration    <?>    expectedOpts    =    properties.propertyOpts();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
173	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  currentToken.propertyNames();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  Enumeration  <?>  expectedOpts  =  currentToken.propertyNames();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Enumeration  <?>  expectedOpts  =  currentToken.propertyNames();	  Enumeration    <?>    expectedOpts    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
174	[BUG]  [BUGGY]  if(properties!=  null  &&  expectedOpts.contains(propertyName))  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  if(properties!=  null  &&  expectedOpts.contains(propertyName))  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(properties!=  null  &&  expectedOpts.contains(propertyName))  {	  if(properties!=    null    ||    expectedOpts.contains(propertyName))    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
175	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  currentOption.properties.elements();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      {      [BUGGY]  Enumeration  <?>  expectedOpts  =  currentOption.properties.elements();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Enumeration  <?>  expectedOpts  =  currentOption.properties.elements();	  Enumeration    <?>    expectedOpts    =    currentOption.elements();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
176	[BUG]  [BUGGY]  ArrayList  <  String>  expectedOpts  =  Lists.newArrayList(properties,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  expectedOpts  =  Lists.newArrayList(properties,  expectedOpts);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	ArrayList  <  String>  expectedOpts  =  Lists.newArrayList(properties,  expectedOpts);	  ArrayList    <    String>    expectedOpts    =    Lists.newArrayList(properties);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
177	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  expectedOpts!=  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  if(propertyNames  ==  null  ||  expectedOpts!=  null)  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(propertyNames  ==  null  ||  expectedOpts!=  null)  {	  if(properties!=    null    ||    expectedOpts!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
178	[BUG]  [BUGGY]  List  <  Property>  expectedOpts  =  new  ArrayList  <  Property>[opts.size()  ];  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  List  <  Property>  expectedOpts  =  new  ArrayList  <  Property>[opts.size()  ];  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  Property>  expectedOpts  =  new  ArrayList  <  Property>[opts.size()  ];	  Property[]    expectedOpts    =    new    Property[opts.size()    ];    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
179	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties.values(),  value);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(properties.values(),  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  String>  expectedOpts  =  Lists.newArrayList(properties.values(),  value);	  List    <    String>    expectedOpts    =    Lists.newArrayList(properties.values());    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
180	[BUG]  [BUGGY]  if(properties!=  null  &&  expectedOpts.contains(property))  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  if(properties!=  null  &&  expectedOpts.contains(property))  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(properties!=  null  &&  expectedOpts.contains(property))  {	  if(properties!=    null    ||    expectedOpts.contains(property))    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
181	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  expectedToken  ==  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  if(expectedOpts  ==  null  ||  expectedToken  ==  null)  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(expectedOpts  ==  null  ||  expectedToken  ==  null)  {	  if(expectedOpts    ==    null    ||    property    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
182	[BUG]  [BUGGY]  List  <  Property>  expectedOpts  =  new  ArrayList  <  Property>[properties.size()  ];  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  List  <  Property>  expectedOpts  =  new  ArrayList  <  Property>[properties.size()  ];  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  Property>  expectedOpts  =  new  ArrayList  <  Property>[properties.size()  ];	  Property[]    expectedOpts    =    new    Property[properties.size()    ];    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
183	[BUG]  [BUGGY]  if(properties!=  null  &&  expectedOpts.isEmpty())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  if(properties!=  null  &&  expectedOpts.isEmpty())  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(properties!=  null  &&  expectedOpts.isEmpty())  {	  if(properties!=    null    ||    expectedOpts.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
184	[BUG]  [BUGGY]  if(expectedOpts  ==  null  ||  property.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  if(expectedOpts  ==  null  ||  property.size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(expectedOpts  ==  null  ||  property.size()  ==  0)  {	  if(expectedOpts!=    null    ||    property.size()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
185	[BUG]  [BUGGY]  ArrayList  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(size()  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      {      [BUGGY]  ArrayList  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(size()  -  1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	ArrayList  <  Object>  expectedOpts  =  new  ArrayList  <  Object>(size()  -  1);	  List    <    Object>    expectedOpts    =    new    ArrayList    <    Object>(size());    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
186	[BUG]  [BUGGY]  Set  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size());  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  Set  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Set  <  Properties>  expectedOpts  =  new  ArrayList  <  Properties>(properties.size());	  List    <    Properties>    expectedOpts    =    new    ArrayList    <    Properties>(properties.size()    +    1);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
187	[BUG]  [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(argument.toString());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      {      [BUGGY]  List  <  String>  expectedOpts  =  Lists.newArrayList(argument.toString());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	List  <  String>  expectedOpts  =  Lists.newArrayList(argument.toString());	  List    <    String>    expectedOpts    =    Lists.newArrayList(argument);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
188	[BUG]  [BUGGY]  if(properties  ==  null  ||  expectedOpts.contains(property)&&  expectedOpts.contains(property))  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  expectedOpts.contains(property)&&  expectedOpts.contains(property))  {  [BUGGY]      {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	if(properties  ==  null  ||  expectedOpts.contains(property)&&  expectedOpts.contains(property))  {	  if(properties    ==    null    ||    expectedOpts.contains(property)||    expectedOpts.contains(property))    {    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
189	[BUG]  [BUGGY]  Enumeration  <?>  expectedOpts  =  properties.properties.elements();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Enumeration  <?>  expectedOpts  =  properties.properties.elements();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Enumeration  <?>  expectedOpts  =  properties.properties.elements();	  Enumeration    <?>    expectedOpts    =    this.properties.elements();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
190	[BUG]  [BUGGY]  Set  <  Properties>  expectedOpts  =  new  TreeSet  <  Properties>(properties.size());  expectedOpts.addAll(properties.values());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      {      [BUGGY]  Set  <  Properties>  expectedOpts  =  new  TreeSet  <  Properties>(properties.size());  expectedOpts.addAll(properties.values());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration<?>  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  Option  opt  =  options.getOption(option);  if  (opt  ==  null)  [CLASS]  DefaultParser  [METHOD]  handleProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Enumeration  e  OptionGroup  group  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  option  value  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	142	143	1	replace	Set  <  Properties>  expectedOpts  =  new  TreeSet  <  Properties>(properties.size());  expectedOpts.addAll(properties.values());	  if(properties!=    null)    {    List    <    Properties>    expectedOpts    =    new    ArrayList    <    Properties>(properties.size());    expectedOpts.addAll(properties.values());    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
