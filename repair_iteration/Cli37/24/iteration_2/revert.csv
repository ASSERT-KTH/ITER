projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=options.parseOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=options.getOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125checkRequiredArgs();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(!stopAtNonOption){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkRequiredArgs();}else{thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkRequiredArgs();}else{cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkRequiredArgs();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkRequiredArgs();}else{cmd.append("n");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(arguments[0],arguments[1]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd!=null){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(!skipParsing){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd==null){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(argument,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getOptionGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optiongroup=options.getOptionGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125options.add(cmd);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getOptionGroup(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd==null){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd==null){checkRequiredParser();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Context.checkState(stopAtNonOption){checkRequiredArgs();}else{cmd.append("n");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Context.checkState(stopAtNonOption){checkRequiredArgs();}else{cmd.append("null");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Context.checkState(stopAtNonOption){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=currentOption.parseOption(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parseOption(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentToken.parseOption(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getOption(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optiongroup=options.getOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125parsing){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125pendingParsing){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){CheckRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupcmd=options.getOptionGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(arguments[0]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd!=null){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(!stopAtNonOption){checkRequiredArguments();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=currentOption.getOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=options.getOptionGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption("cmd");
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getGroup(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getGroup(arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getGroup(currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(arguments[0],arguments[1],stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(arguments[0],arguments[1]+1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parseOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption)?){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption)>0){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption)){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd!=null){checkRequiredParsers();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(currentToken,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd==null){handleRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd==null){checkRequiredParsers();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optiongroup=options.getOptionGroup(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(arguments[0],arguments[2]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optiongroup=options.getOption("group");
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkProperties();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption&&cmd!=null){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(!stopAtNonOption){checkProperties();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption){checkRequiredArgs();}else{cmd.append("null");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption){checkRequiredArgs();}else{cmd.append("n");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption){checkRequiredArgs();}else{cmd.append("no-params");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption){checkRequiredArgs();}else{cmd.append("no");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125parsing=stopAtNonOption?getRequiredArgs():null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125parsing=stopAtNonOption?skipParsing:null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getGroup(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=currentOption.parseOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parseOption(arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOptionGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(argument,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(argument,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125[Delete]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125aughtExceptionHandler.handleMissing(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125aughtExceptionHandler.handleError(msg);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd!=null){handleProperties(properties);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(arguments[0],arguments[1],currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){handleRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkRequiredParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptioncurrentOption=options.parseOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptioncurrentOption=options.parseOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptioncurrentToken=options.parseOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption)){checkRequiredArgs();}else{cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption){checkRequiredArgs();}else{cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125pendingParsing=stopAtNonOption?checkRequiredArgs():null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getOptionGroup(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd==null||cmd.length()==0){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(currentToken,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption)){checkRequiredArgs();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkProperties();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkParsing();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(argument,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){handleProperties(properties);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){handleRequiredOptions(properties);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){handleRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){handleProperties(cmd);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(!stopAtNonOption){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptioncurrentToken=currentOption.parseOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptioncurrentToken=options.parseOption(argument,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptioncurrentToken=options.parseOption(argument,cmd);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=optionGroup.parseOption(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=optionGroup.parseOption(currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption){handleProperties(properties);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,currentOption){checkRequiredArgs();}else{cmd.append("no");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption)&&!skipParsing){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption){handleProperties(properties);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,skipParsing)){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,currentOption)){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption)){checkProperties();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125parsing){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125parsing){checkRequiredParsers();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125parse){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,currentOption){checkRequiredArgs();}else{cmd.append("no-params");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,skipParsing)?){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptioncurrentOption=options.parseOption(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptioncurrentOption=options.parseOption(argument,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptioncurrentOption=options.parseOption(argument,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getOptionGroup(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getOptionGroup(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getOptionGroup(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=group.parseOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=group.parseOption(argument,options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parseOption(argument,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,currentOption)){checkRequiredArgs();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,currentToken)){checkRequiredArgs();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,group)){checkRequiredArgs();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Context.checkState(cmd==null||cmd.length()==0){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd!=null||cmd.length()==0){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd==null||cmd.length()!=0){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=options.parseOption(currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=currentOption.parseOption(arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optiongroup=options.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optiongroup=options.getOption(currentToken,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optiongroup=options.getOption(currentToken,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125options.add(currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125options.add(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125options.add(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125options.add(arguments[0],arguments[1]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption)>1){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption)>0){checkProperties();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,skipParsing)>0){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentToken.parseOption(argument,options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentToken.parseOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parseOption(argument,options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(currentToken,argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125aughtExceptionHandler.handleError(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){aughtExceptionHandler.handleError(msg);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentToken.parse(argument,options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(currentToken,argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parse(argument,options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentToken.parse(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getOption(argument,options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentToken.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentToken.getOption(argument,options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(currentToken,argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125While(stopAtNonOption){CheckRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125While(stopAtNonOption&&cmd!=null){CheckRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125While(stopAtNonOption){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125While(stopAtNonOption&&cmd.length>0){CheckRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(argument,stopAtNonOption,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(argument,stopAtNonOption,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption){checkRequiredParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption)){checkRequiredParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption)?){checkRequiredParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption)>0){checkRequiredParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getGroup(argument.toLowerCase());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getGroup(argument,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getGroup(argument.toString());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption){checkProperties();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,skipParsing){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption){checkParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption)){checkParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption||skipParsing){checkParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=options.parseOption(arguments[0],arguments[1]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=optionGroup.parseOption(arguments[0],arguments[2]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125parsing=stopAtNonOption?null:skipParsing;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125parsing=stopAtNonOption?defaultParsing:null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=group.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=groups.getOption(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125handleRequiredArgs();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125optionGroup.handleRequiredArgs();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125options.handleRequiredArgs();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Context.checkState(currentOption==stopAtNonOption){checkRequiredArgs();}else{cmd.append("null");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Context.checkState(currentOption!=stopAtNonOption){checkRequiredArgs();}else{cmd.append("null");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Context.checkState(true){checkRequiredArgs();}else{cmd.append("null");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Context.checkState(stopAtNonOption){checkProperties();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125pendingParsing||stopAtNonOption){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125pendingParsing){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125pendingParsing){checkRequiredParsers();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,currentOption){checkRequiredArgs();}else{cmd.append("null");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=currentOption.parseOption(argument,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=currentOption.parseOption(argument,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optiongroup=options.getGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optiongroup=options.getOptionGroup(true);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optiongroup=options.getOptionGroup(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,skipParsing){checkRequiredArgs();}else{cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,group){checkRequiredArgs();}else{cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd==null){handleProperties(properties);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd==null){handleRequiredOptions(properties);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125parent!=null&&cmd==null){handleProperties(properties);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125parent!=null&&cmd!=null){handleProperties(properties);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkRequiredArguments();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(!stopAtNonOption){checkRequiredParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getOptionGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=group.getOptionGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOptionCmd();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getOption();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(currentToken,arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(currentToken,expectedOpts,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getOption(currentToken,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption&&cmd==null){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption||cmd!=null){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125&&cmd!=null){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getGroup(arguments,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getGroup(arguments,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getGroup(arguments,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=currentOption.getParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=currentOption.getOption(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125parsing=stopAtNonOption?getRequiredParser():null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125parsing=stopAtNonOption?getRequiredParsers():null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optiongroup=options.getOption("group",null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optiongroup=options.getOption("group",cmd);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optiongroup=options.getOption("group",true);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getOption(arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentToken.getOption(currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getOption(arguments[0]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parseOption(argument,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parseOption(argument,true);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getOptionGroup(arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getOptionGroup(defaultToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=group.parse(argument,options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=group.parse(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptioncurrentOption=options.parseOption(arguments[0]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptioncurrentOption=options.parseOption(arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(argument,stopAtNonOption,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(argument,block);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(arguments[0],arguments[1],stopAtNonOption,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(arguments[0],arguments[1],skipParsing,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){aughtExceptionHandler.handleMissing(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125aughtExceptionHandler.handleMissing(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getOption(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getOption(argument,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getOption(argument,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=currentOption.getOptionGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=group.getOptionGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=currentOption.getOption();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125ters.checkState(stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125ters.checkState(stopAtNonOption){checkProperties();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(arguments[0],arguments[1]+1],stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(arguments[0],arguments[1]+1-1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(argument,stopAtNonOption,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(argument,block);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkParsing();}else{cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupcmd=options.getOptionGroup(group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupcmd=currentOption.getOptionGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupcmd=group.getOptionGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Context.checkState(currentOption==stopAtNonOption){checkRequiredArgs();}else{cmd.append("n");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Context.checkState(currentOption!=stopAtNonOption){checkRequiredArgs();}else{cmd.append("n");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(arguments[0],arguments[1],currentToken,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentToken.parseOption(arguments[0],arguments[1],options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(arguments[0],arguments[1],currentToken,skipParsing);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(arguments[0],arguments[1],currentToken,ignoreAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkRequiredOptions();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parseOption(arguments,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parseOption(arguments[0]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parseOption(arguments[0],arguments[1]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=optionGroup.getOption(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd!=null){handleRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parse(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(argument,currentOption,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getOptionGroup(true);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption("currentToken");
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption("cmd",null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption("md");
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125parse(cmd,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Aleger<?>cmd=findOption(arguments,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Aleger<?>cmd=getCurrentSelection();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Aleger<?>cmd=getCurrentSegment();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd!=null){checkRequiredParser();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd==null||cmd.length()==0){checkRequiredParser();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd==null||cmd.length()!=0){checkRequiredParser();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,currentOption)){checkRequiredArgs();}else{cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,group)){checkRequiredArgs();}else{cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption)&&!skipParsing){checkRequiredArgs();}else{cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(arguments[0],stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(arguments[1]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(arguments[0],currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getGroup(currentToken,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optiongroup=options.getOptionGroup(arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optiongroup=options.getOptionGroup(defaultToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(currentToken,arguments,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=currentOption.getGroup(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optiongroup=options.getGroup(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125pendingParsing=stopAtNonOption?options.checkRequiredArgs():null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125pendingParsing=stopAtNonOption?null:stopAtNonOption?null:stopAtNonOption;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Context.checkState(currentOption!=stopAtNonOption){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Context.checkState(currentOption==stopAtNonOption){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Context.checkState(stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=optionGroup.parseOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption)>2){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption&&cmd!=null){checkParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption&&options.hasOption(argument)){checkParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption&&cmd.isEnabled(Feature.QUOTE_FIELD_NAMES)){checkParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getOption(options,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption){handleRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,currentOption){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption){handleProperties();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,currentOption){checkRequiredArgs();}else{cmd.append("n");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption){cmd.append("n");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optiongroup=options.getOptionGroup(options,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125pendingParsing=stopAtNonOption?parseToken():null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125pendingParsing=stopAtNonOption?stopAtNonOption:getDefaultParser();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125pendingParsing=stopAtNonOption?parseToken(argument):null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125pendingParsing=stopAtNonOption?parseToken():argument;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(!stopAtNonOption){aughtExceptionHandler.handleMissing(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(argument,currentToken,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getOption(argument,arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125parsing=stopAtNonOption?skippeParsing:null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getOption(token);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125parsing=stopAtNonOption?getParsingArgs():null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parseOption(arguments[0],arguments[1],argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(arguments[0],arguments[1],currentToken,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(argument,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(!stopAtNonOption){aughtExceptionHandler.handleError(msg);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(argument,group,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption)){cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption)){checkProperties();}else{cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption&&cmd!=null){checkProperties();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption&&options.hasOption(argument)){checkProperties();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parseOption(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(currentToken,stopAtNonOption,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(currentToken,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125optionGroup.checkProperties();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125options.add(defaultOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Context.checkState(cmd==stopAtNonOption){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Context.checkState(stopAtNonOption){handleRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Context.checkState(true){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125pendingParsing=stopAtNonOption?checkRequiredParsing():null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125pendingParsing=stopAtNonOption?skipParsing:null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125pendingParsing=stopAtNonOption?checkProperties():null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Context.checkState(stopAtNonOption){cmd.append("null");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Context.checkState(false){checkRequiredArgs();}else{cmd.append("null");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Context.checkState(stopAtNonOption){if(!skipParsing){cmd.append("null");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Context.checkState(stopAtNonOption){checkProperties();}else{cmd.append("null");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd==null){handleRequiredParsers();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption("call");
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=option.parseOption(arguments[0],arguments[1]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Context.checkState(stopAtNonOption){checkProperties();}else{cmd.append("n");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Context.checkState(false){checkRequiredArgs();}else{cmd.append("n");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption){if(!skipParsing){cmd.append("no");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption){cmd.append("no");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption){checkProperties();}else{cmd.append("no");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption){cmd.append("null");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption){if(!skipParsing){cmd.append("null");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getOptionGroup(currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){handleProperties();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(arguments[0],arguments[1]+2);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(arguments[0],arguments[1]+0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optiongroup=options.getOption("group",0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getGroup(currentOption,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getGroup(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getGroup(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(argument,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption&&cmd!=null){checkRequiredParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption&&options.isSupported()){checkRequiredParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getOption(currentToken,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getOption(defaultToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption){if(!skipParsing){cmd.append("no-params");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption){cmd.append("no-params");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption){if(skipParsing){cmd.append("no-params");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125parsing||stopAtNonOption){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125parsing|=stopAtNonOption){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptioncurrentToken=options.parseOption(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptioncurrentToken=options.parseOption(argument,null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptioncurrentToken=options.parseOption(argument,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(arguments[0],arguments[1],skipParsing);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption){if(!skipParsing){cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption){if(skipParsing){cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption)&&!skipParsing){cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=currentOption.parseOption(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Preconditions.checkState(stopAtNonOption){CheckRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption&&cmd!=null){CheckRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Preconditions.checkState(stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125optionGroup.checkParsing();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd!=null){handleRequiredOptions(properties);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parse(argument,arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd!=null){handleProperties();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd==null){handleProperties();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Context.checkState(cmd==null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=currentOption.getArguments();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptioncurrentOption=options.parseOption(argument,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,currentToken)){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125CheckRequiredArgs();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Context.checkState(cmd.length()==0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Context.checkState(cmd.length==0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd!=null&&cmd.length()>0){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd!=null){handleProperties(properties);checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(skipParsing){checkParsing();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(skipParsing){checkParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parseOption(arguments,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(!skipParsing){aughtExceptionHandler.handleMissing(argument);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){aughtExceptionHandler.handleMissing(argument);}else{thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){luate(cmd,stopAtNonOption){checkRequiredArgs();}else{cmd.append("no-params");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption)&&!skipParsing){cmd.append("no-params");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){luate(cmd,stopAtNonOption){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd==null||cmd.length()==0){checkRequiredParsers();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd==null||cmd.length<2){checkRequiredParsers();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptioncurrentOption=options.parseOption(currentToken,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptioncurrentOption=options.parseOption(currentToken,cmd);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getOption(options,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getOption(options,options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(arguments[0],arguments[1],argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(exceptionHandler!=null){aughtExceptionHandler.handleError(msg);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(msg!=null){aughtExceptionHandler.handleError(msg);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,group)){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){thrownewIllegalStateException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){handleParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(argument,blockAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,currentToken){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getOptionGroup(options,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd==null||cmd.length<2){handleRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(argument,group,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,currentOption){checkRequiredArgs();}else{cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){luate(cmd,stopAtNonOption){checkRequiredArgs();}else{cmd.append("null");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,group){checkRequiredArgs();}else{cmd.append("null");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkProperties(properties);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(!stopAtNonOption){checkProperties(properties);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(argument,this.stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getOptionGroup(argument.toString());
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getOptionGroup(argument,true);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(argument,group,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){handleRequiredArguments();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(arguments[0],null);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){handleRequiredParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(argument,group,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(argument,group,0);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiincadrincadrincadrincadrincadrincadrincadrincadrincadrincadrincadrincadrincadr
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPolicy();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){handleProperties(properties,skipParsing);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){handleParsing(properties);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(argument,currentToken,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(argument,currentToken,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd==null||cmd.length()==0){thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optiongroup=options.getOptionGroup(options,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optiongroup=options.getOptionGroup(options)+1;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd!=null){handleToken(cmd);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Context.checkState(this.stopAtNonOption){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Context.checkState(stopAtNonOption){if(cmd.length()==0){cmd.append("null");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125parsing=stopAtNonOption?getRequiredArgs():arguments;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,group){checkRequiredArgs();}else{cmd.append("no");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption)&&!skipParsing){checkRequiredArgs();}else{cmd.append("no");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption)&&!skipParsing){cmd.append("no");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd==null||cmd.length()==0){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getGroup(currentOption,cmd);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(currentToken,preferredOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd!=null&&cmd.length()>0){checkRequiredParsers();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd!=null&&cmd.length>0){checkRequiredParsers();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(arguments[0],arguments[1]+4);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptioncurrentOption=options.parseOption(argument,block);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125pendingParsing=stopAtNonOption?checkParsing():null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125pendingParsing=stopAtNonOption?options.parse(argument):null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125pendingParsing=stopAtNonOption?options.nextToken():null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=currentOption.getGroup(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125parsing=stopAtNonOption?options.skipParsing:null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125parsing=stopAtNonOption?skipParsing:defaultParsing;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parseOption(argument,arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(argument,currentToken,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,currentOption)>0){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,currentToken)>0){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,exception)>0){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,currentToken)){checkRequiredArgs();}else{cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125parsing,group){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125parsing){checkRequiredParser();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(arguments[0],arguments[1],block,stopAtNonOption);
