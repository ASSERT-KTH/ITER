bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleRequiredOptions(properties);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption)  {  handleRequiredOptions(properties);  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption)  {  handleRequiredOptions(properties);  }	  if(stopAtNonOption)    {    handleProperties(properties);    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
2	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleRequiredOptions();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption)  {  handleRequiredOptions();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption)  {  handleRequiredOptions();  }	  if(stopAtNonOption)    {    handleProperties(properties);    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
3	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleProperties(cmd);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption)  {  handleProperties(cmd);  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption)  {  handleProperties(cmd);  }	  if(stopAtNonOption)    {    handleProperties(properties);    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
4	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  checkRequiredOptions();  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(!stopAtNonOption)  {  checkRequiredOptions();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(!stopAtNonOption)  {  checkRequiredOptions();  }	  if(!stopAtNonOption)    {    checkProperties();    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
5	[BUG]  [BUGGY]  if(stopAtNonOption)  {  checkRequiredOptions();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption)  {  checkRequiredOptions();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption)  {  checkRequiredOptions();  }	  if(!stopAtNonOption)    {    checkProperties();    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
6	[BUG]  [BUGGY]  Option  currentToken  =  currentOption.parseOption(argument);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  currentToken  =  currentOption.parseOption(argument);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  currentToken  =  currentOption.parseOption(argument);	  Option    currentToken    =    options.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
7	[BUG]  [BUGGY]  Option  currentToken  =  options.parseOption(argument,  group);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  currentToken  =  options.parseOption(argument,  group);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  currentToken  =  options.parseOption(argument,  group);	  Option    currentToken    =    options.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
8	[BUG]  [BUGGY]  Option  currentToken  =  options.parseOption(argument,  cmd);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  currentToken  =  options.parseOption(argument,  cmd);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  currentToken  =  options.parseOption(argument,  cmd);	  Option    currentToken    =    options.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
9	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(currentOption);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(currentOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parseOption(currentOption);	  Option    cmd    =    currentOption.parseOption(options);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
10	[BUG]  [BUGGY]  Option  cmd  =  optionGroup.parseOption(options);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  optionGroup.parseOption(options);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  optionGroup.parseOption(options);	  Option    cmd    =    currentOption.parseOption(options);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
11	[BUG]  [BUGGY]  Option  cmd  =  optionGroup.parseOption(currentOption);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  optionGroup.parseOption(currentOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  optionGroup.parseOption(currentOption);	  Option    cmd    =    currentOption.parseOption(options);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
12	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)  {  handleProperties(properties);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption)  {  handleProperties(properties);  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption)  {  handleProperties(properties);  }	  luate(cmd,    stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "no       ");    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
13	[BUG]  [BUGGY]  luate(cmd,  currentOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "no ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  currentOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "no ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  currentOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "no ");  }	  luate(cmd,    stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "no       ");    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
14	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)&&!skipParsing)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption)&&!skipParsing)  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption)&&!skipParsing)  {  checkRequiredArgs();  }	  luate(cmd,    stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "no       ");    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
15	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)  {  handleProperties(properties);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption)  {  handleProperties(properties);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption)  {  handleProperties(properties);	  luate(cmd,    stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "no       ");    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
16	[BUG]  [BUGGY]  luate(cmd,  skipParsing))  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  skipParsing))  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  skipParsing))  {  checkRequiredArgs();  }	  luate(cmd,    stopAtNonOption))    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
17	[BUG]  [BUGGY]  luate(cmd,  currentOption))  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  currentOption))  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  currentOption))  {  checkRequiredArgs();  }	  luate(cmd,    stopAtNonOption))    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
18	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption))  {  checkProperties();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption))  {  checkProperties();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption))  {  checkProperties();  }	  luate(cmd,    stopAtNonOption))    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
19	[BUG]  [BUGGY]  parsing)  {  checkRequiredOptions();  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  parsing)  {  checkRequiredOptions();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	parsing)  {  checkRequiredOptions();  }	  parsing)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
20	[BUG]  [BUGGY]  parsing)  {  checkRequiredParsers();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  parsing)  {  checkRequiredParsers();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	parsing)  {  checkRequiredParsers();  }	  parsing)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
21	[BUG]  [BUGGY]  parse)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  parse)  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	parse)  {  checkRequiredArgs();  }	  parsing)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
22	[BUG]  [BUGGY]  luate(cmd,  currentOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "no-params ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  currentOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "no-params ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  currentOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "no-params ");  }	  luate(cmd,    stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "no-params   ");    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
23	[BUG]  [BUGGY]  luate(cmd,  skipParsing)?)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  skipParsing)?)  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  skipParsing)?)  {  checkRequiredArgs();  }	  luate(cmd,    stopAtNonOption)?)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
24	[BUG]  [BUGGY]  Option  currentOption  =  options.parseOption(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  currentOption  =  options.parseOption(argument,  stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  currentOption  =  options.parseOption(argument,  stopAtNonOption);	  Option    currentOption    =    options.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
25	[BUG]  [BUGGY]  Option  currentOption  =  options.parseOption(argument,  null);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  currentOption  =  options.parseOption(argument,  null);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  currentOption  =  options.parseOption(argument,  null);	  Option    currentOption    =    options.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
26	[BUG]  [BUGGY]  Option  currentOption  =  options.parseOption(argument,  group);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  currentOption  =  options.parseOption(argument,  group);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  currentOption  =  options.parseOption(argument,  group);	  Option    currentOption    =    options.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
27	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  OptionGroup  group  =  options.getOptionGroup(argument,  currentToken);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	OptionGroup  group  =  options.getOptionGroup(argument,  currentToken);	  OptionGroup    group    =    options.getOptionGroup(argument);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
28	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  OptionGroup  group  =  options.getOptionGroup(argument,  stopAtNonOption);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	OptionGroup  group  =  options.getOptionGroup(argument,  stopAtNonOption);	  OptionGroup    group    =    options.getOptionGroup(argument);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
29	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentToken);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentToken);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	OptionGroup  group  =  options.getOptionGroup(currentToken);	  OptionGroup    group    =    options.getOptionGroup(argument);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
30	[BUG]  [BUGGY]  Option  cmd  =  group.parseOption(argument);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  group.parseOption(argument);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  group.parseOption(argument);	  Option    cmd    =    options.parseOption(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
31	[BUG]  [BUGGY]  Option  cmd  =  group.parseOption(argument,  options);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  group.parseOption(argument,  options);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  group.parseOption(argument,  options);	  Option    cmd    =    options.parseOption(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
32	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  group);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  group);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentOption.parseOption(argument,  group);	  Option    cmd    =    options.parseOption(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
33	[BUG]  [BUGGY]  luate(cmd,  currentOption))  {  checkRequiredArgs();  }  else  {  cmd  =  null;  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  currentOption))  {  checkRequiredArgs();  }  else  {  cmd  =  null;  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  currentOption))  {  checkRequiredArgs();  }  else  {  cmd  =  null;  }	  luate(cmd,    stopAtNonOption))    {    checkRequiredArgs();    }    else    {    cmd    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
34	[BUG]  [BUGGY]  luate(cmd,  currentToken))  {  checkRequiredArgs();  }  else  {  cmd  =  null;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  currentToken))  {  checkRequiredArgs();  }  else  {  cmd  =  null;  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  currentToken))  {  checkRequiredArgs();  }  else  {  cmd  =  null;  }	  luate(cmd,    stopAtNonOption))    {    checkRequiredArgs();    }    else    {    cmd    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
35	[BUG]  [BUGGY]  luate(cmd,  group))  {  checkRequiredArgs();  }  else  {  cmd  =  null;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  group))  {  checkRequiredArgs();  }  else  {  cmd  =  null;  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  group))  {  checkRequiredArgs();  }  else  {  cmd  =  null;  }	  luate(cmd,    stopAtNonOption))    {    checkRequiredArgs();    }    else    {    cmd    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
36	[BUG]  [BUGGY]  Context.checkState(cmd  ==  null  ||  cmd.length()  ==  0)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Context.checkState(cmd  ==  null  ||  cmd.length()  ==  0)  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Context.checkState(cmd  ==  null  ||  cmd.length()  ==  0)  {  checkRequiredArgs();  }	  if(cmd    ==    null    ||    cmd.length()    ==    0)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
37	[BUG]  [BUGGY]  if(cmd!=  null  ||  cmd.length()  ==  0)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(cmd!=  null  ||  cmd.length()  ==  0)  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(cmd!=  null  ||  cmd.length()  ==  0)  {  checkRequiredArgs();  }	  if(cmd    ==    null    ||    cmd.length()    ==    0)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
38	[BUG]  [BUGGY]  if(cmd  ==  null  ||  cmd.length()!=  0)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(cmd  ==  null  ||  cmd.length()!=  0)  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(cmd  ==  null  ||  cmd.length()!=  0)  {  checkRequiredArgs();  }	  if(cmd    ==    null    ||    cmd.length()    ==    0)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
39	[BUG]  [BUGGY]  Options  cmd  =  options.parseOption(currentOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Options  cmd  =  options.parseOption(currentOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Options  cmd  =  options.parseOption(currentOption);	  Options    cmd    =    currentOption.parseOption(options);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
40	[BUG]  [BUGGY]  Options  cmd  =  currentOption.parseOption(arguments);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Options  cmd  =  currentOption.parseOption(arguments);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Options  cmd  =  currentOption.parseOption(arguments);	  Options    cmd    =    currentOption.parseOption(options);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
41	[BUG]  [BUGGY]  Option  group  =  options.getOption(argument);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  group  =  options.getOption(argument);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  group  =  options.getOption(argument);	  Option    group    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
42	[BUG]  [BUGGY]  Option  group  =  options.getOption(currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  group  =  options.getOption(currentToken,  stopAtNonOption);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  group  =  options.getOption(currentToken,  stopAtNonOption);	  Option    group    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
43	[BUG]  [BUGGY]  Option  group  =  options.getOption(currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  group  =  options.getOption(currentToken,  expectedOpts);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  group  =  options.getOption(currentToken,  expectedOpts);	  Option    group    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
44	[BUG]  [BUGGY]  options.add(currentOption);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  options.add(currentOption);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	options.add(currentOption);	  options.add(cmd);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
45	[BUG]  [BUGGY]  options.add(currentToken);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  options.add(currentToken);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	options.add(currentToken);	  options.add(cmd);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
46	[BUG]  [BUGGY]  options.add(argument);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  options.add(argument);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	options.add(argument);	  options.add(cmd);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
47	[BUG]  [BUGGY]  options.add(arguments[0],  arguments[1]);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  options.add(arguments[0],  arguments[1]);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	options.add(arguments[0],  arguments[1]);	  options.add(cmd);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
48	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)>  1)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption)>  1)  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption)>  1)  {  checkRequiredArgs();  }	  luate(cmd,    stopAtNonOption)>    0)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
49	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)>  0)  {  checkProperties();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption)>  0)  {  checkProperties();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption)>  0)  {  checkProperties();  }	  luate(cmd,    stopAtNonOption)>    0)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
50	[BUG]  [BUGGY]  luate(cmd,  skipParsing)>  0)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  skipParsing)>  0)  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  skipParsing)>  0)  {  checkRequiredArgs();  }	  luate(cmd,    stopAtNonOption)>    0)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
51	[BUG]  [BUGGY]  Option  cmd  =  currentToken.parseOption(argument,  options);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentToken.parseOption(argument,  options);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentToken.parseOption(argument,  options);	  Option    cmd    =    options.parseOption(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
52	[BUG]  [BUGGY]  Option  cmd  =  currentToken.parseOption(argument);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentToken.parseOption(argument);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentToken.parseOption(argument);	  Option    cmd    =    options.parseOption(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
53	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  options);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  options);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentOption.parseOption(argument,  options);	  Option    cmd    =    options.parseOption(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
54	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(currentToken,  argument);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(currentToken,  argument);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parseOption(currentToken,  argument);	  Option    cmd    =    options.parseOption(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
55	[BUG]  [BUGGY]  aughtExceptionHandler.handleError(currentToken);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  aughtExceptionHandler.handleError(currentToken);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	aughtExceptionHandler.handleError(currentToken);	  aughtExceptionHandler.handleError(msg);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
56	[BUG]  [BUGGY]  if(stopAtNonOption)  {  aughtExceptionHandler.handleError(msg);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption)  {  aughtExceptionHandler.handleError(msg);  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption)  {  aughtExceptionHandler.handleError(msg);  }	  aughtExceptionHandler.handleError(msg);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
57	[BUG]  [BUGGY]  Option  cmd  =  currentToken.parse(argument,  options);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentToken.parse(argument,  options);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentToken.parse(argument,  options);	  Option    cmd    =    options.parse(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
58	[BUG]  [BUGGY]  Option  cmd  =  options.parse(currentToken,  argument);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parse(currentToken,  argument);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parse(currentToken,  argument);	  Option    cmd    =    options.parse(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
59	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parse(argument,  options);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.parse(argument,  options);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentOption.parse(argument,  options);	  Option    cmd    =    options.parse(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
60	[BUG]  [BUGGY]  Option  cmd  =  currentToken.parse(argument);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentToken.parse(argument);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentToken.parse(argument);	  Option    cmd    =    options.parse(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
61	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(argument,  options);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.getOption(argument,  options);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentOption.getOption(argument,  options);	  Option    cmd    =    options.getOption(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
62	[BUG]  [BUGGY]  Option  cmd  =  currentToken.getOption(argument);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentToken.getOption(argument);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentToken.getOption(argument);	  Option    cmd    =    options.getOption(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
63	[BUG]  [BUGGY]  Option  cmd  =  currentToken.getOption(argument,  options);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentToken.getOption(argument,  options);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentToken.getOption(argument,  options);	  Option    cmd    =    options.getOption(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
64	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken,  argument);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(currentToken,  argument);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.getOption(currentToken,  argument);	  Option    cmd    =    options.getOption(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
65	[BUG]  [BUGGY]  While(stopAtNonOption)  {  CheckRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  While(stopAtNonOption)  {  CheckRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	While(stopAtNonOption)  {  CheckRequiredArgs();  }	  if(stopAtNonOption)    {    CheckRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
66	[BUG]  [BUGGY]  While(stopAtNonOption  &&  cmd!=  null)  {  CheckRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  While(stopAtNonOption  &&  cmd!=  null)  {  CheckRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	While(stopAtNonOption  &&  cmd!=  null)  {  CheckRequiredArgs();  }	  if(stopAtNonOption)    {    CheckRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
67	[BUG]  [BUGGY]  While(stopAtNonOption)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  While(stopAtNonOption)  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	While(stopAtNonOption)  {  checkRequiredArgs();  }	  if(stopAtNonOption)    {    CheckRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
68	[BUG]  [BUGGY]  While(stopAtNonOption  &&  cmd.length  >  0)  {  CheckRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  While(stopAtNonOption  &&  cmd.length  >  0)  {  CheckRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	While(stopAtNonOption  &&  cmd.length  >  0)  {  CheckRequiredArgs();  }	  if(stopAtNonOption)    {    CheckRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
69	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  stopAtNonOption,  group);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(argument,  stopAtNonOption,  group);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.getOption(argument,  stopAtNonOption,  group);	  Option    cmd    =    options.getOption(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
70	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  stopAtNonOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(argument,  stopAtNonOption,  expectedOpts);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.getOption(argument,  stopAtNonOption,  expectedOpts);	  Option    cmd    =    options.getOption(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
71	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)  {  checkRequiredParsing();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption)  {  checkRequiredParsing();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption)  {  checkRequiredParsing();  }	  if(stopAtNonOption)    {    checkRequiredParsing();    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
72	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption))  {  checkRequiredParsing();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption))  {  checkRequiredParsing();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption))  {  checkRequiredParsing();  }	  if(stopAtNonOption)    {    checkRequiredParsing();    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
73	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)?)  {  checkRequiredParsing();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption)?)  {  checkRequiredParsing();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption)?)  {  checkRequiredParsing();  }	  if(stopAtNonOption)    {    checkRequiredParsing();    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
74	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)>  0)  {  checkRequiredParsing();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption)>  0)  {  checkRequiredParsing();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption)>  0)  {  checkRequiredParsing();  }	  if(stopAtNonOption)    {    checkRequiredParsing();    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
75	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(argument.toLowerCase());  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  OptionGroup  group  =  options.getGroup(argument.toLowerCase());  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	OptionGroup  group  =  options.getGroup(argument.toLowerCase());	  OptionGroup    group    =    options.getGroup(argument);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
76	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(argument,  currentOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  OptionGroup  group  =  options.getGroup(argument,  currentOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	OptionGroup  group  =  options.getGroup(argument,  currentOption);	  OptionGroup    group    =    options.getGroup(argument);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
77	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(argument.toString());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  OptionGroup  group  =  options.getGroup(argument.toString());  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	OptionGroup  group  =  options.getGroup(argument.toString());	  OptionGroup    group    =    options.getGroup(argument);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
78	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)  {  checkProperties();  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption)  {  checkProperties();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption)  {  checkProperties();  }	  luate(cmd,    stopAtNonOption)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
79	[BUG]  [BUGGY]  luate(cmd,  skipParsing)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  skipParsing)  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  skipParsing)  {  checkRequiredArgs();  }	  luate(cmd,    stopAtNonOption)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
80	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)  {  checkParsing();  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption)  {  checkParsing();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption)  {  checkParsing();  }	  if(stopAtNonOption)    {    checkParsing();    }    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
81	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption))  {  checkParsing();  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption))  {  checkParsing();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption))  {  checkParsing();  }	  if(stopAtNonOption)    {    checkParsing();    }    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
82	[BUG]  [BUGGY]  if(stopAtNonOption  ||  skipParsing)  {  checkParsing();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption  ||  skipParsing)  {  checkParsing();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption  ||  skipParsing)  {  checkParsing();  }	  if(stopAtNonOption)    {    checkParsing();    }    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
83	[BUG]  [BUGGY]  Options  cmd  =  options.parseOption(arguments[0],  arguments[1]);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Options  cmd  =  options.parseOption(arguments[0],  arguments[1]);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Options  cmd  =  options.parseOption(arguments[0],  arguments[1]);	  Option    cmd    =    options.parseOption(arguments[0],    arguments[2]);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
84	[BUG]  [BUGGY]  Option  cmd  =  optionGroup.parseOption(arguments[0],  arguments[2]);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  optionGroup.parseOption(arguments[0],  arguments[2]);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  optionGroup.parseOption(arguments[0],  arguments[2]);	  Option    cmd    =    options.parseOption(arguments[0],    arguments[2]);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
85	[BUG]  [BUGGY]  parsing  =  stopAtNonOption?  null  :  skipParsing;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  parsing  =  stopAtNonOption?  null  :  skipParsing;  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	parsing  =  stopAtNonOption?  null  :  skipParsing;	  parsing    =    stopAtNonOption?    skipParsing    :    null;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
86	[BUG]  [BUGGY]  parsing  =  stopAtNonOption?  defaultParsing  :  null;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  parsing  =  stopAtNonOption?  defaultParsing  :  null;  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	parsing  =  stopAtNonOption?  defaultParsing  :  null;	  parsing    =    stopAtNonOption?    skipParsing    :    null;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
87	[BUG]  [BUGGY]  Option  cmd  =  group.getOption(argument);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  group.getOption(argument);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  group.getOption(argument);	  Option    cmd    =    options.getOption(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
88	[BUG]  [BUGGY]  Option  cmd  =  groups.getOption(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  groups.getOption(argument,  stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  groups.getOption(argument,  stopAtNonOption);	  Option    cmd    =    options.getOption(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
89	[BUG]  [BUGGY]  handleRequiredArgs();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  handleRequiredArgs();  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	handleRequiredArgs();	  if(stopAtNonOption)    {    handleRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
90	[BUG]  [BUGGY]  optionGroup.handleRequiredArgs();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  optionGroup.handleRequiredArgs();  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	optionGroup.handleRequiredArgs();	  if(stopAtNonOption)    {    handleRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
91	[BUG]  [BUGGY]  options.handleRequiredArgs();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  options.handleRequiredArgs();  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	options.handleRequiredArgs();	  if(stopAtNonOption)    {    handleRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
92	[BUG]  [BUGGY]  Context.checkState(currentOption  ==  stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "null ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Context.checkState(currentOption  ==  stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "null ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Context.checkState(currentOption  ==  stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "null ");  }	  Context.checkState(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "null   ");    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
93	[BUG]  [BUGGY]  Context.checkState(currentOption!=  stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "null ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Context.checkState(currentOption!=  stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "null ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Context.checkState(currentOption!=  stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "null ");  }	  Context.checkState(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "null   ");    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
94	[BUG]  [BUGGY]  Context.checkState(true)  {  checkRequiredArgs();  }  else  {  cmd.append( "null ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Context.checkState(true)  {  checkRequiredArgs();  }  else  {  cmd.append( "null ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Context.checkState(true)  {  checkRequiredArgs();  }  else  {  cmd.append( "null ");  }	  Context.checkState(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "null   ");    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
95	[BUG]  [BUGGY]  Context.checkState(stopAtNonOption)  {  checkProperties();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Context.checkState(stopAtNonOption)  {  checkProperties();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Context.checkState(stopAtNonOption)  {  checkProperties();  }	  Context.checkState(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "null   ");    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
96	[BUG]  [BUGGY]  pendingParsing  ||  stopAtNonOption)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  pendingParsing  ||  stopAtNonOption)  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	pendingParsing  ||  stopAtNonOption)  {  checkRequiredArgs();  }	  pendingParsing)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
97	[BUG]  [BUGGY]  pendingParsing)  {  checkRequiredOptions();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  pendingParsing)  {  checkRequiredOptions();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	pendingParsing)  {  checkRequiredOptions();  }	  pendingParsing)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
98	[BUG]  [BUGGY]  pendingParsing)  {  checkRequiredParsers();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  pendingParsing)  {  checkRequiredParsers();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	pendingParsing)  {  checkRequiredParsers();  }	  pendingParsing)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
99	[BUG]  [BUGGY]  luate(cmd,  currentOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "null ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  currentOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "null ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  currentOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "null ");  }	  luate(cmd,    stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "n       ");    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
100	[BUG]  [BUGGY]  Options  cmd  =  currentOption.parseOption(argument,  group);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Options  cmd  =  currentOption.parseOption(argument,  group);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Options  cmd  =  currentOption.parseOption(argument,  group);	  Options    cmd    =    currentOption.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
101	[BUG]  [BUGGY]  Options  cmd  =  currentOption.parseOption(argument,  null);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Options  cmd  =  currentOption.parseOption(argument,  null);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Options  cmd  =  currentOption.parseOption(argument,  null);	  Options    cmd    =    currentOption.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
102	[BUG]  [BUGGY]  Option  group  =  options.getGroup();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  group  =  options.getGroup();  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  group  =  options.getGroup();	  Option    group    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
103	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(true);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  group  =  options.getOptionGroup(true);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  group  =  options.getOptionGroup(true);	  Option    group    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
104	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(currentToken);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  group  =  options.getOptionGroup(currentToken);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  group  =  options.getOptionGroup(currentToken);	  Option    group    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
105	[BUG]  [BUGGY]  luate(cmd,  skipParsing)  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  skipParsing)  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  skipParsing)  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }	  luate(cmd,    stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
106	[BUG]  [BUGGY]  luate(cmd,  group)  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  group)  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  group)  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }	  luate(cmd,    stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
107	[BUG]  [BUGGY]  if(cmd  ==  null)  {  handleProperties(properties);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(cmd  ==  null)  {  handleProperties(properties);  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(cmd  ==  null)  {  handleProperties(properties);  }	  if(cmd!=    null)    {    handleProperties(properties);    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
108	[BUG]  [BUGGY]  if(cmd  ==  null)  {  handleRequiredOptions(properties);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(cmd  ==  null)  {  handleRequiredOptions(properties);  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(cmd  ==  null)  {  handleRequiredOptions(properties);  }	  if(cmd!=    null)    {    handleProperties(properties);    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
109	[BUG]  [BUGGY]  parent!=  null  &&  cmd  ==  null)  {  handleProperties(properties);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  parent!=  null  &&  cmd  ==  null)  {  handleProperties(properties);  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	parent!=  null  &&  cmd  ==  null)  {  handleProperties(properties);  }	  if(cmd!=    null)    {    handleProperties(properties);    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
110	[BUG]  [BUGGY]  parent!=  null  &&  cmd!=  null)  {  handleProperties(properties);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  parent!=  null  &&  cmd!=  null)  {  handleProperties(properties);  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	parent!=  null  &&  cmd!=  null)  {  handleProperties(properties);  }	  if(cmd!=    null)    {    handleProperties(properties);    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
111	[BUG]  [BUGGY]  if(stopAtNonOption)  {  checkRequiredArguments();  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption)  {  checkRequiredArguments();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption)  {  checkRequiredArguments();  }	  if(!stopAtNonOption)    {    checkRequiredArguments();    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
112	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  checkRequiredParsing();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(!stopAtNonOption)  {  checkRequiredParsing();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(!stopAtNonOption)  {  checkRequiredParsing();  }	  if(!stopAtNonOption)    {    checkRequiredArguments();    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
113	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOptionGroup();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.getOptionGroup();  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentOption.getOptionGroup();	  Option    cmd    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
114	[BUG]  [BUGGY]  Option  cmd  =  group.getOptionGroup();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  group.getOptionGroup();  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  group.getOptionGroup();	  Option    cmd    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
115	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionCmd();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOptionCmd();  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.getOptionCmd();	  Option    cmd    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
116	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.getOption();  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentOption.getOption();	  Option    cmd    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
117	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken,  arguments);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(currentToken,  arguments);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.getOption(currentToken,  arguments);	  Option    cmd    =    options.getOption(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
118	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken,  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(currentToken,  expectedOpts,  stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.getOption(currentToken,  expectedOpts,  stopAtNonOption);	  Option    cmd    =    options.getOption(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
119	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.getOption(currentToken,  expectedOpts);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentOption.getOption(currentToken,  expectedOpts);	  Option    cmd    =    options.getOption(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
120	[BUG]  [BUGGY]  if(stopAtNonOption  &&  cmd  ==  null)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption  &&  cmd  ==  null)  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption  &&  cmd  ==  null)  {  checkRequiredArgs();  }	  if(stopAtNonOption    &&    cmd!=    null)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
121	[BUG]  [BUGGY]  if(stopAtNonOption  ||  cmd!=  null)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption  ||  cmd!=  null)  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption  ||  cmd!=  null)  {  checkRequiredArgs();  }	  if(stopAtNonOption    &&    cmd!=    null)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
122	[BUG]  [BUGGY]  &&  cmd!=  null)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  &&  cmd!=  null)  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	&&  cmd!=  null)  {  checkRequiredArgs();  }	  if(stopAtNonOption    &&    cmd!=    null)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
123	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  OptionGroup  group  =  options.getGroup(arguments,  stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	OptionGroup  group  =  options.getGroup(arguments,  stopAtNonOption);	  OptionGroup    group    =    options.getGroup(arguments);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
124	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(arguments,  currentToken);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  OptionGroup  group  =  options.getGroup(arguments,  currentToken);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	OptionGroup  group  =  options.getGroup(arguments,  currentToken);	  OptionGroup    group    =    options.getGroup(arguments);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
125	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(arguments,  currentOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  OptionGroup  group  =  options.getGroup(arguments,  currentOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	OptionGroup  group  =  options.getGroup(arguments,  currentOption);	  OptionGroup    group    =    options.getGroup(arguments);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
126	[BUG]  [BUGGY]  Options  cmd  =  currentOption.getParser();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Options  cmd  =  currentOption.getParser();  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Options  cmd  =  currentOption.getParser();	  Options    cmd    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
127	[BUG]  [BUGGY]  Options  cmd  =  currentOption.getOption(options);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Options  cmd  =  currentOption.getOption(options);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Options  cmd  =  currentOption.getOption(options);	  Options    cmd    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
128	[BUG]  [BUGGY]  parsing  =  stopAtNonOption?  getRequiredParser()  :  null;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  parsing  =  stopAtNonOption?  getRequiredParser()  :  null;  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	parsing  =  stopAtNonOption?  getRequiredParser()  :  null;	  parsing    =    stopAtNonOption?    getRequiredArgs()    :    null;    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
129	[BUG]  [BUGGY]  parsing  =  stopAtNonOption?  getRequiredParsers()  :  null;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  parsing  =  stopAtNonOption?  getRequiredParsers()  :  null;  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	parsing  =  stopAtNonOption?  getRequiredParsers()  :  null;	  parsing    =    stopAtNonOption?    getRequiredArgs()    :    null;    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
130	[BUG]  [BUGGY]  Option  group  =  options.getOption( "group ",  null);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  group  =  options.getOption( "group ",  null);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  group  =  options.getOption( "group ",  null);	  Option    group    =    options.getOption(   "group   ");    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
131	[BUG]  [BUGGY]  Option  group  =  options.getOption( "group ",  cmd);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  group  =  options.getOption( "group ",  cmd);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  group  =  options.getOption( "group ",  cmd);	  Option    group    =    options.getOption(   "group   ");    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
132	[BUG]  [BUGGY]  Option  group  =  options.getOption( "group ",  true);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  group  =  options.getOption( "group ",  true);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  group  =  options.getOption( "group ",  true);	  Option    group    =    options.getOption(   "group   ");    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
133	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(arguments);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.getOption(arguments);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentOption.getOption(arguments);	  Option    cmd    =    currentOption.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
134	[BUG]  [BUGGY]  Option  cmd  =  currentToken.getOption(currentOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentToken.getOption(currentOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentToken.getOption(currentOption);	  Option    cmd    =    currentOption.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
135	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(arguments[0]);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.getOption(arguments[0]);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentOption.getOption(arguments[0]);	  Option    cmd    =    currentOption.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
136	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  null);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  null);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentOption.parseOption(argument,  null);	  Option    cmd    =    currentOption.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
137	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  true);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  true);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentOption.parseOption(argument,  true);	  Option    cmd    =    currentOption.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
138	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(arguments);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  OptionGroup  group  =  options.getOptionGroup(arguments);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	OptionGroup  group  =  options.getOptionGroup(arguments);	  OptionGroup    group    =    options.getOptionGroup(options);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
139	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(defaultToken);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  OptionGroup  group  =  options.getOptionGroup(defaultToken);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	OptionGroup  group  =  options.getOptionGroup(defaultToken);	  OptionGroup    group    =    options.getOptionGroup(options);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
140	[BUG]  [BUGGY]  Option  cmd  =  group.parse(argument,  options);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  group.parse(argument,  options);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  group.parse(argument,  options);	  Option    cmd    =    options.parse(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
141	[BUG]  [BUGGY]  Option  cmd  =  group.parse(argument);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  group.parse(argument);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  group.parse(argument);	  Option    cmd    =    options.parse(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
142	[BUG]  [BUGGY]  Option  currentOption  =  options.parseOption(arguments[0]);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  currentOption  =  options.parseOption(arguments[0]);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  currentOption  =  options.parseOption(arguments[0]);	  Option    currentOption    =    options.parseOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
143	[BUG]  [BUGGY]  Option  currentOption  =  options.parseOption(arguments);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  currentOption  =  options.parseOption(arguments);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  currentOption  =  options.parseOption(arguments);	  Option    currentOption    =    options.parseOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
144	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(argument,  stopAtNonOption,  group);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(argument,  stopAtNonOption,  group);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parseOption(argument,  stopAtNonOption,  group);	  Option    cmd    =    options.parseOption(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
145	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(argument,  block);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(argument,  block);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parseOption(argument,  block);	  Option    cmd    =    options.parseOption(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
146	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(arguments[0],  arguments[1],  stopAtNonOption,  group);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(arguments[0],  arguments[1],  stopAtNonOption,  group);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parseOption(arguments[0],  arguments[1],  stopAtNonOption,  group);	  Option    cmd    =    options.parseOption(arguments[0],    arguments[1],    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
147	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(arguments[0],  arguments[1],  skipParsing,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(arguments[0],  arguments[1],  skipParsing,  stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parseOption(arguments[0],  arguments[1],  skipParsing,  stopAtNonOption);	  Option    cmd    =    options.parseOption(arguments[0],    arguments[1],    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
148	[BUG]  [BUGGY]  if(stopAtNonOption)  {  aughtExceptionHandler.handleMissing(argument);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption)  {  aughtExceptionHandler.handleMissing(argument);  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption)  {  aughtExceptionHandler.handleMissing(argument);  }	  aughtExceptionHandler.handleMissing(argument);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
149	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissing(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  aughtExceptionHandler.handleMissing(argument,  stopAtNonOption);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	aughtExceptionHandler.handleMissing(argument,  stopAtNonOption);	  aughtExceptionHandler.handleMissing(argument);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
150	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.getOption(argument,  stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentOption.getOption(argument,  stopAtNonOption);	  Option    cmd    =    currentOption.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
151	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(argument,  group);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.getOption(argument,  group);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentOption.getOption(argument,  group);	  Option    cmd    =    currentOption.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
152	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(argument,  null);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.getOption(argument,  null);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentOption.getOption(argument,  null);	  Option    cmd    =    currentOption.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
153	[BUG]  [BUGGY]  Options  cmd  =  currentOption.getOptionGroup();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Options  cmd  =  currentOption.getOptionGroup();  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Options  cmd  =  currentOption.getOptionGroup();	  Options    cmd    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
154	[BUG]  [BUGGY]  Options  cmd  =  group.getOptionGroup();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Options  cmd  =  group.getOptionGroup();  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Options  cmd  =  group.getOptionGroup();	  Options    cmd    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
155	[BUG]  [BUGGY]  Options  cmd  =  currentOption.getOption();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Options  cmd  =  currentOption.getOption();  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Options  cmd  =  currentOption.getOption();	  Options    cmd    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
156	[BUG]  [BUGGY]  ters.checkState(stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  ters.checkState(stopAtNonOption);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	ters.checkState(stopAtNonOption);	  if(stopAtNonOption)    {    checkProperties();    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
157	[BUG]  [BUGGY]  ters.checkState(stopAtNonOption)  {  checkProperties();  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  ters.checkState(stopAtNonOption)  {  checkProperties();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	ters.checkState(stopAtNonOption)  {  checkProperties();  }	  if(stopAtNonOption)    {    checkProperties();    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
158	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(arguments[0],  arguments[1]  +  1],  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(arguments[0],  arguments[1]  +  1],  stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parseOption(arguments[0],  arguments[1]  +  1],  stopAtNonOption);	  Option    cmd    =    options.parseOption(arguments[0],    arguments[1]    +    1);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
159	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(arguments[0],  arguments[1]  +  1  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(arguments[0],  arguments[1]  +  1  -  1);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parseOption(arguments[0],  arguments[1]  +  1  -  1);	  Option    cmd    =    options.parseOption(arguments[0],    arguments[1]    +    1);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
160	[BUG]  [BUGGY]  Option  cmd  =  options.parse(argument,  stopAtNonOption,  group);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parse(argument,  stopAtNonOption,  group);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parse(argument,  stopAtNonOption,  group);	  Option    cmd    =    options.parse(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
161	[BUG]  [BUGGY]  Option  cmd  =  options.parse(argument,  block);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parse(argument,  block);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parse(argument,  block);	  Option    cmd    =    options.parse(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
162	[BUG]  [BUGGY]  if(stopAtNonOption)  {  checkParsing();  }  else  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption)  {  checkParsing();  }  else  {  cmd  =  new  CommandLine();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption)  {  checkParsing();  }  else  {  cmd  =  new  CommandLine();  }	  if(stopAtNonOption)    {    checkParsing();    }    else    {    cmd    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
163	[BUG]  [BUGGY]  OptionGroup  cmd  =  options.getOptionGroup(group);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  OptionGroup  cmd  =  options.getOptionGroup(group);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	OptionGroup  cmd  =  options.getOptionGroup(group);	  OptionGroup    cmd    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
164	[BUG]  [BUGGY]  OptionGroup  cmd  =  currentOption.getOptionGroup();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  OptionGroup  cmd  =  currentOption.getOptionGroup();  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	OptionGroup  cmd  =  currentOption.getOptionGroup();	  OptionGroup    cmd    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
165	[BUG]  [BUGGY]  OptionGroup  cmd  =  group.getOptionGroup();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  OptionGroup  cmd  =  group.getOptionGroup();  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	OptionGroup  cmd  =  group.getOptionGroup();	  OptionGroup    cmd    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
166	[BUG]  [BUGGY]  Context.checkState(currentOption  ==  stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "n   ");  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Context.checkState(currentOption  ==  stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "n   ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Context.checkState(currentOption  ==  stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "n   ");  }	  Context.checkState(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "n       ");    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
167	[BUG]  [BUGGY]  Context.checkState(currentOption!=  stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "n   ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Context.checkState(currentOption!=  stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "n   ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Context.checkState(currentOption!=  stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "n   ");  }	  Context.checkState(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "n       ");    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
168	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(arguments[0],  arguments[1],  currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(arguments[0],  arguments[1],  currentToken,  stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parseOption(arguments[0],  arguments[1],  currentToken,  stopAtNonOption);	  Option    cmd    =    options.parseOption(arguments[0],    arguments[1],    currentToken);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
169	[BUG]  [BUGGY]  Option  cmd  =  currentToken.parseOption(arguments[0],  arguments[1],  options);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentToken.parseOption(arguments[0],  arguments[1],  options);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentToken.parseOption(arguments[0],  arguments[1],  options);	  Option    cmd    =    options.parseOption(arguments[0],    arguments[1],    currentToken);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
170	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(arguments[0],  arguments[1],  currentToken,  skipParsing);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(arguments[0],  arguments[1],  currentToken,  skipParsing);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parseOption(arguments[0],  arguments[1],  currentToken,  skipParsing);	  Option    cmd    =    options.parseOption(arguments[0],    arguments[1],    currentToken);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
171	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(arguments[0],  arguments[1],  currentToken,  ignoreAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(arguments[0],  arguments[1],  currentToken,  ignoreAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parseOption(arguments[0],  arguments[1],  currentToken,  ignoreAtNonOption);	  Option    cmd    =    options.parseOption(arguments[0],    arguments[1],    currentToken);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
172	[BUG]  [BUGGY]  if(stopAtNonOption)  {  checkRequiredOptions();  }  else  {  cmd  =  null;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption)  {  checkRequiredOptions();  }  else  {  cmd  =  null;  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption)  {  checkRequiredOptions();  }  else  {  cmd  =  null;  }	  if(stopAtNonOption)    {    checkProperties();    }    else    {    cmd    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
173	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.parseOption(arguments,  stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentOption.parseOption(arguments,  stopAtNonOption);	  Option    cmd    =    currentOption.parseOption(arguments);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
174	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(arguments[0]);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.parseOption(arguments[0]);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentOption.parseOption(arguments[0]);	  Option    cmd    =    currentOption.parseOption(arguments);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
175	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(arguments[0],  arguments[1]);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.parseOption(arguments[0],  arguments[1]);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentOption.parseOption(arguments[0],  arguments[1]);	  Option    cmd    =    currentOption.parseOption(arguments);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
176	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(currentOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.getOption(currentOption);	  Option    cmd    =    currentOption.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
177	[BUG]  [BUGGY]  Option  cmd  =  optionGroup.getOption(options);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  optionGroup.getOption(options);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  optionGroup.getOption(options);	  Option    cmd    =    currentOption.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
178	[BUG]  [BUGGY]  if(cmd!=  null)  {  handleRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(cmd!=  null)  {  handleRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(cmd!=  null)  {  handleRequiredArgs();  }	  if(cmd    ==    null)    {    handleRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
179	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parse(argument);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.parse(argument);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentOption.parse(argument);	  Option    cmd    =    options.parse(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
180	[BUG]  [BUGGY]  Option  cmd  =  options.parse(argument,  currentOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parse(argument,  currentOption,  expectedOpts);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parse(argument,  currentOption,  expectedOpts);	  Option    cmd    =    options.parse(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
181	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(true);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  OptionGroup  group  =  options.getOptionGroup(true);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	OptionGroup  group  =  options.getOptionGroup(true);	  OptionGroup    group    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
182	[BUG]  [BUGGY]  Option  cmd  =  options.getOption( "currentToken ");  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption( "currentToken ");  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.getOption( "currentToken ");	  Option    cmd    =    options.getOption(   "cmd   ");    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
183	[BUG]  [BUGGY]  Option  cmd  =  options.getOption( "cmd ",  null);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption( "cmd ",  null);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.getOption( "cmd ",  null);	  Option    cmd    =    options.getOption(   "cmd   ");    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
184	[BUG]  [BUGGY]  Option  cmd  =  options.getOption( "md ");  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption( "md ");  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.getOption( "md ");	  Option    cmd    =    options.getOption(   "cmd   ");    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
185	[BUG]  [BUGGY]  parse(cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  parse(cmd,  stopAtNonOption);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	parse(cmd,  stopAtNonOption);	  if(cmd    ==    null)    {    checkRequiredParsers();    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
186	[BUG]  [BUGGY]  Aleger  <?>  cmd  =  findOption(arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Aleger  <?>  cmd  =  findOption(arguments,  stopAtNonOption);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Aleger  <?>  cmd  =  findOption(arguments,  stopAtNonOption);	  if(cmd    ==    null)    {    checkRequiredParsers();    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
187	[BUG]  [BUGGY]  Aleger  <?>  cmd  =  getCurrentSelection();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Aleger  <?>  cmd  =  getCurrentSelection();  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Aleger  <?>  cmd  =  getCurrentSelection();	  if(cmd!=    null)    {    checkRequiredParsers();    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
188	[BUG]  [BUGGY]  Aleger  <?>  cmd  =  getCurrentSegment();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Aleger  <?>  cmd  =  getCurrentSegment();  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Aleger  <?>  cmd  =  getCurrentSegment();	  if(cmd!=    null)    {    checkRequiredParsers();    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
189	[BUG]  [BUGGY]  if(cmd!=  null)  {  checkRequiredParser();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(cmd!=  null)  {  checkRequiredParser();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(cmd!=  null)  {  checkRequiredParser();  }	  if(cmd    ==    null)    {    checkRequiredParser();    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
190	[BUG]  [BUGGY]  if(cmd  ==  null  ||  cmd.length()  ==  0)  {  checkRequiredParser();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(cmd  ==  null  ||  cmd.length()  ==  0)  {  checkRequiredParser();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(cmd  ==  null  ||  cmd.length()  ==  0)  {  checkRequiredParser();  }	  if(cmd    ==    null)    {    checkRequiredParser();    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
191	[BUG]  [BUGGY]  if(cmd  ==  null  ||  cmd.length()!=  0)  {  checkRequiredParser();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(cmd  ==  null  ||  cmd.length()!=  0)  {  checkRequiredParser();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(cmd  ==  null  ||  cmd.length()!=  0)  {  checkRequiredParser();  }	  if(cmd    ==    null)    {    checkRequiredParser();    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
192	[BUG]  [BUGGY]  luate(cmd,  currentOption))  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  currentOption))  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  currentOption))  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }	  luate(cmd,    stopAtNonOption))    {    checkRequiredArgs();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
193	[BUG]  [BUGGY]  luate(cmd,  group))  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  group))  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  group))  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }	  luate(cmd,    stopAtNonOption))    {    checkRequiredArgs();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
194	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)&&!skipParsing)  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption)&&!skipParsing)  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption)&&!skipParsing)  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }	  luate(cmd,    stopAtNonOption))    {    checkRequiredArgs();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
195	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(arguments[0],  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(arguments[0],  stopAtNonOption);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.getOption(arguments[0],  stopAtNonOption);	  Option    cmd    =    options.getOption(arguments[0]);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
196	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(arguments[1]);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(arguments[1]);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.getOption(arguments[1]);	  Option    cmd    =    options.getOption(arguments[0]);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
197	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(arguments[0],  currentToken);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(arguments[0],  currentToken);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.getOption(arguments[0],  currentToken);	  Option    cmd    =    options.getOption(arguments[0]);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
198	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  OptionGroup  group  =  options.getGroup(currentToken,  expectedOpts);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	OptionGroup  group  =  options.getGroup(currentToken,  expectedOpts);	  OptionGroup    group    =    options.getGroup(currentToken);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
199	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(arguments);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  group  =  options.getOptionGroup(arguments);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  group  =  options.getOptionGroup(arguments);	  Option    group    =    options.getOptionGroup(options);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
200	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(defaultToken);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  group  =  options.getOptionGroup(defaultToken);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  group  =  options.getOptionGroup(defaultToken);	  Option    group    =    options.getOptionGroup(options);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
201	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken,  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(currentToken,  arguments,  stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.getOption(currentToken,  arguments,  stopAtNonOption);	  Option    cmd    =    options.getOption(currentToken,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
202	[BUG]  [BUGGY]  OptionGroup  group  =  currentOption.getGroup(options);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  OptionGroup  group  =  currentOption.getGroup(options);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	OptionGroup  group  =  currentOption.getGroup(options);	  OptionGroup    group    =    options.getGroup(currentOption);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
203	[BUG]  [BUGGY]  Option  group  =  options.getGroup(currentToken);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  group  =  options.getGroup(currentToken);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  group  =  options.getGroup(currentToken);	  OptionGroup    group    =    options.getGroup(currentOption);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
204	[BUG]  [BUGGY]  pendingParsing  =  stopAtNonOption?  options.checkRequiredArgs()  :  null;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  pendingParsing  =  stopAtNonOption?  options.checkRequiredArgs()  :  null;  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	pendingParsing  =  stopAtNonOption?  options.checkRequiredArgs()  :  null;	  pendingParsing    =    stopAtNonOption?    checkRequiredArgs()    :    null;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
205	[BUG]  [BUGGY]  pendingParsing  =  stopAtNonOption?  null  :  stopAtNonOption?  null  :  stopAtNonOption;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  pendingParsing  =  stopAtNonOption?  null  :  stopAtNonOption?  null  :  stopAtNonOption;  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	pendingParsing  =  stopAtNonOption?  null  :  stopAtNonOption?  null  :  stopAtNonOption;	  pendingParsing    =    stopAtNonOption?    checkRequiredArgs()    :    null;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
206	[BUG]  [BUGGY]  Context.checkState(currentOption!=  stopAtNonOption)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Context.checkState(currentOption!=  stopAtNonOption)  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Context.checkState(currentOption!=  stopAtNonOption)  {  checkRequiredArgs();  }	  Context.checkState(stopAtNonOption)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
207	[BUG]  [BUGGY]  Context.checkState(currentOption  ==  stopAtNonOption)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Context.checkState(currentOption  ==  stopAtNonOption)  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Context.checkState(currentOption  ==  stopAtNonOption)  {  checkRequiredArgs();  }	  Context.checkState(stopAtNonOption)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
208	[BUG]  [BUGGY]  Context.checkState(stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Context.checkState(stopAtNonOption);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Context.checkState(stopAtNonOption);	  Context.checkState(stopAtNonOption)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
209	[BUG]  [BUGGY]  Option  cmd  =  optionGroup.parseOption(currentToken);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  optionGroup.parseOption(currentToken);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  optionGroup.parseOption(currentToken);	  Option    cmd    =    currentToken.parseOption(options);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
210	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)>  2)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption)>  2)  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption)>  2)  {  checkRequiredArgs();  }	  luate(cmd,    stopAtNonOption)>    0)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
211	[BUG]  [BUGGY]  if(stopAtNonOption  &&  cmd!=  null)  {  checkParsing();  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption  &&  cmd!=  null)  {  checkParsing();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption  &&  cmd!=  null)  {  checkParsing();  }	  if(stopAtNonOption)    {    checkParsing();    }    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
212	[BUG]  [BUGGY]  if(stopAtNonOption  &&  options.hasOption(argument))  {  checkParsing();  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption  &&  options.hasOption(argument))  {  checkParsing();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption  &&  options.hasOption(argument))  {  checkParsing();  }	  if(stopAtNonOption)    {    checkParsing();    }    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
213	[BUG]  [BUGGY]  if(stopAtNonOption  &&  cmd.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  checkParsing();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption  &&  cmd.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  checkParsing();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption  &&  cmd.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  checkParsing();  }	  if(stopAtNonOption)    {    checkParsing();    }    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
214	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.getOption(options,  stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentOption.getOption(options,  stopAtNonOption);	  Option    cmd    =    currentOption.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
215	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)  {  handleRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption)  {  handleRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption)  {  handleRequiredArgs();  }	  luate(cmd,    stopAtNonOption)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
216	[BUG]  [BUGGY]  luate(cmd,  currentOption)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  currentOption)  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  currentOption)  {  checkRequiredArgs();  }	  luate(cmd,    stopAtNonOption)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
217	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)  {  handleProperties();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption)  {  handleProperties();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption)  {  handleProperties();  }	  luate(cmd,    stopAtNonOption)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
218	[BUG]  [BUGGY]  luate(cmd,  currentOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "n   ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  currentOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "n   ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  currentOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "n   ");  }	  luate(cmd,    stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "n       ");    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
219	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)  {  cmd.append( "n ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption)  {  cmd.append( "n ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption)  {  cmd.append( "n ");  }	  luate(cmd,    stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "n       ");    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
220	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(options,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  group  =  options.getOptionGroup(options,  expectedOpts);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  group  =  options.getOptionGroup(options,  expectedOpts);	  Option    group    =    options.getOptionGroup(options);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
221	[BUG]  [BUGGY]  pendingParsing  =  stopAtNonOption?  parseToken()  :  null;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  pendingParsing  =  stopAtNonOption?  parseToken()  :  null;  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	pendingParsing  =  stopAtNonOption?  parseToken()  :  null;	  pendingParsing)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
222	[BUG]  [BUGGY]  pendingParsing  =  stopAtNonOption?  stopAtNonOption  :  getDefaultParser();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  pendingParsing  =  stopAtNonOption?  stopAtNonOption  :  getDefaultParser();  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	pendingParsing  =  stopAtNonOption?  stopAtNonOption  :  getDefaultParser();	  pendingParsing)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
223	[BUG]  [BUGGY]  pendingParsing  =  stopAtNonOption?  parseToken(argument):  null;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  pendingParsing  =  stopAtNonOption?  parseToken(argument):  null;  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	pendingParsing  =  stopAtNonOption?  parseToken(argument):  null;	  pendingParsing)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
224	[BUG]  [BUGGY]  pendingParsing  =  stopAtNonOption?  parseToken()  :  argument;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  pendingParsing  =  stopAtNonOption?  parseToken()  :  argument;  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	pendingParsing  =  stopAtNonOption?  parseToken()  :  argument;	  pendingParsing)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
225	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  aughtExceptionHandler.handleMissing(argument);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(!stopAtNonOption)  {  aughtExceptionHandler.handleMissing(argument);  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(!stopAtNonOption)  {  aughtExceptionHandler.handleMissing(argument);  }	  aughtExceptionHandler.handleMissing(argument);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
226	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken,  stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.getOption(argument,  currentToken,  stopAtNonOption);	  Option    cmd    =    options.getOption(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
227	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(argument,  arguments);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.getOption(argument,  arguments);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentOption.getOption(argument,  arguments);	  Option    cmd    =    options.getOption(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
228	[BUG]  [BUGGY]  parsing  =  stopAtNonOption?  skippeParsing  :  null;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  parsing  =  stopAtNonOption?  skippeParsing  :  null;  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	parsing  =  stopAtNonOption?  skippeParsing  :  null;	  parsing    =    stopAtNonOption?    skipParsing    :    null;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
229	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(token);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.getOption(token);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentOption.getOption(token);	  Option    cmd    =    currentOption.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
230	[BUG]  [BUGGY]  parsing  =  stopAtNonOption?  getParsingArgs()  :  null;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  parsing  =  stopAtNonOption?  getParsingArgs()  :  null;  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	parsing  =  stopAtNonOption?  getParsingArgs()  :  null;	  parsing    =    stopAtNonOption?    getRequiredArgs()    :    null;    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
231	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(arguments[0],  arguments[1],  argument);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.parseOption(arguments[0],  arguments[1],  argument);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentOption.parseOption(arguments[0],  arguments[1],  argument);	  Option    cmd    =    options.parseOption(arguments[0],    arguments[1],    currentToken);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
232	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(arguments[0],  arguments[1],  currentToken,  null);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(arguments[0],  arguments[1],  currentToken,  null);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parseOption(arguments[0],  arguments[1],  currentToken,  null);	  Option    cmd    =    options.parseOption(arguments[0],    arguments[1],    currentToken);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
233	[BUG]  [BUGGY]  Option  cmd  =  options.parse(argument,  null);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parse(argument,  null);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parse(argument,  null);	  Option    cmd    =    options.parse(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
234	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  aughtExceptionHandler.handleError(msg);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(!stopAtNonOption)  {  aughtExceptionHandler.handleError(msg);  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(!stopAtNonOption)  {  aughtExceptionHandler.handleError(msg);  }	  aughtExceptionHandler.handleError(msg);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
235	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  group,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(argument,  group,  stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.getOption(argument,  group,  stopAtNonOption);	  Option    cmd    =    options.getOption(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
236	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption))  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption))  {  cmd  =  new  CommandLine();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption))  {  cmd  =  new  CommandLine();  }	  luate(cmd,    stopAtNonOption))    {    checkRequiredArgs();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
237	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption))  {  checkProperties();  }  else  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption))  {  checkProperties();  }  else  {  cmd  =  new  CommandLine();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption))  {  checkProperties();  }  else  {  cmd  =  new  CommandLine();  }	  luate(cmd,    stopAtNonOption))    {    checkRequiredArgs();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
238	[BUG]  [BUGGY]  if(stopAtNonOption  &&  cmd!=  null)  {  checkProperties();  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption  &&  cmd!=  null)  {  checkProperties();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption  &&  cmd!=  null)  {  checkProperties();  }	  if(stopAtNonOption)    {    checkProperties();    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
239	[BUG]  [BUGGY]  if(stopAtNonOption  &&  options.hasOption(argument))  {  checkProperties();  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption  &&  options.hasOption(argument))  {  checkProperties();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption  &&  options.hasOption(argument))  {  checkProperties();  }	  if(stopAtNonOption)    {    checkProperties();    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
240	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentOption.parseOption(argument,  stopAtNonOption);	  Option    cmd    =    currentOption.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
241	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken,  stopAtNonOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(currentToken,  stopAtNonOption,  expectedOpts);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.getOption(currentToken,  stopAtNonOption,  expectedOpts);	  Option    cmd    =    options.getOption(currentToken,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
242	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken,  null);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(currentToken,  null);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.getOption(currentToken,  null);	  Option    cmd    =    options.getOption(currentToken,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
243	[BUG]  [BUGGY]  optionGroup.checkProperties();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  optionGroup.checkProperties();  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	optionGroup.checkProperties();	  if(stopAtNonOption)    {    checkProperties();    }    else    {    cmd    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
244	[BUG]  [BUGGY]  options.add(defaultOption);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  options.add(defaultOption);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	options.add(defaultOption);	  options.add(cmd);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
245	[BUG]  [BUGGY]  Context.checkState(cmd  ==  stopAtNonOption)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Context.checkState(cmd  ==  stopAtNonOption)  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Context.checkState(cmd  ==  stopAtNonOption)  {  checkRequiredArgs();  }	  Context.checkState(stopAtNonOption)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
246	[BUG]  [BUGGY]  Context.checkState(stopAtNonOption)  {  handleRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Context.checkState(stopAtNonOption)  {  handleRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Context.checkState(stopAtNonOption)  {  handleRequiredArgs();  }	  Context.checkState(stopAtNonOption)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
247	[BUG]  [BUGGY]  Context.checkState(true)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Context.checkState(true)  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Context.checkState(true)  {  checkRequiredArgs();  }	  Context.checkState(stopAtNonOption)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
248	[BUG]  [BUGGY]  pendingParsing  =  stopAtNonOption?  checkRequiredParsing()  :  null;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  pendingParsing  =  stopAtNonOption?  checkRequiredParsing()  :  null;  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	pendingParsing  =  stopAtNonOption?  checkRequiredParsing()  :  null;	  pendingParsing    =    stopAtNonOption?    checkRequiredArgs()    :    null;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
249	[BUG]  [BUGGY]  pendingParsing  =  stopAtNonOption?  skipParsing  :  null;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  pendingParsing  =  stopAtNonOption?  skipParsing  :  null;  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	pendingParsing  =  stopAtNonOption?  skipParsing  :  null;	  pendingParsing    =    stopAtNonOption?    checkRequiredArgs()    :    null;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
250	[BUG]  [BUGGY]  pendingParsing  =  stopAtNonOption?  checkProperties()  :  null;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  pendingParsing  =  stopAtNonOption?  checkProperties()  :  null;  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	pendingParsing  =  stopAtNonOption?  checkProperties()  :  null;	  pendingParsing    =    stopAtNonOption?    checkRequiredArgs()    :    null;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
251	[BUG]  [BUGGY]  Context.checkState(stopAtNonOption)  {  cmd.append( "null ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Context.checkState(stopAtNonOption)  {  cmd.append( "null ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Context.checkState(stopAtNonOption)  {  cmd.append( "null ");  }	  Context.checkState(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "null   ");    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
252	[BUG]  [BUGGY]  Context.checkState(false)  {  checkRequiredArgs();  }  else  {  cmd.append( "null ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Context.checkState(false)  {  checkRequiredArgs();  }  else  {  cmd.append( "null ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Context.checkState(false)  {  checkRequiredArgs();  }  else  {  cmd.append( "null ");  }	  Context.checkState(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "null   ");    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
253	[BUG]  [BUGGY]  Context.checkState(stopAtNonOption)  {  if(!skipParsing)  {  cmd.append( "null ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Context.checkState(stopAtNonOption)  {  if(!skipParsing)  {  cmd.append( "null ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Context.checkState(stopAtNonOption)  {  if(!skipParsing)  {  cmd.append( "null ");  }	  Context.checkState(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "null   ");    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
254	[BUG]  [BUGGY]  Context.checkState(stopAtNonOption)  {  checkProperties();  }  else  {  cmd.append( "null ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Context.checkState(stopAtNonOption)  {  checkProperties();  }  else  {  cmd.append( "null ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Context.checkState(stopAtNonOption)  {  checkProperties();  }  else  {  cmd.append( "null ");  }	  Context.checkState(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "null   ");    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
255	[BUG]  [BUGGY]  if(cmd  ==  null)  {  handleRequiredParsers();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(cmd  ==  null)  {  handleRequiredParsers();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(cmd  ==  null)  {  handleRequiredParsers();  }	  if(cmd    ==    null)    {    checkRequiredParsers();    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
256	[BUG]  [BUGGY]  Option  cmd  =  options.getOption( "call ");  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption( "call ");  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.getOption( "call ");	  Option    cmd    =    options.getOption(   "cmd   ");    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
257	[BUG]  [BUGGY]  Option  cmd  =  option.parseOption(arguments[0],  arguments[1]);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  option.parseOption(arguments[0],  arguments[1]);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  option.parseOption(arguments[0],  arguments[1]);	  Option    cmd    =    options.parseOption(arguments[0],    arguments[2]);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
258	[BUG]  [BUGGY]  Context.checkState(stopAtNonOption)  {  checkProperties();  }  else  {  cmd.append( "n   ");  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Context.checkState(stopAtNonOption)  {  checkProperties();  }  else  {  cmd.append( "n   ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Context.checkState(stopAtNonOption)  {  checkProperties();  }  else  {  cmd.append( "n   ");  }	  Context.checkState(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "n       ");    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
259	[BUG]  [BUGGY]  Context.checkState(false)  {  checkRequiredArgs();  }  else  {  cmd.append( "n   ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Context.checkState(false)  {  checkRequiredArgs();  }  else  {  cmd.append( "n   ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Context.checkState(false)  {  checkRequiredArgs();  }  else  {  cmd.append( "n   ");  }	  Context.checkState(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "n       ");    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
260	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)  {  if(!skipParsing)  {  cmd.append( "no ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption)  {  if(!skipParsing)  {  cmd.append( "no ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption)  {  if(!skipParsing)  {  cmd.append( "no ");  }	  luate(cmd,    stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "no       ");    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
261	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)  {  cmd.append( "no ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption)  {  cmd.append( "no ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption)  {  cmd.append( "no ");  }	  luate(cmd,    stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "no       ");    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
262	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)  {  checkProperties();  }  else  {  cmd.append( "no ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption)  {  checkProperties();  }  else  {  cmd.append( "no ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption)  {  checkProperties();  }  else  {  cmd.append( "no ");  }	  luate(cmd,    stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "no       ");    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
263	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)  {  cmd.append( "null ");  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption)  {  cmd.append( "null ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption)  {  cmd.append( "null ");  }	  luate(cmd,    stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "null   ");    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
264	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)  {  if(!skipParsing)  {  cmd.append( "null ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption)  {  if(!skipParsing)  {  cmd.append( "null ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption)  {  if(!skipParsing)  {  cmd.append( "null ");  }	  luate(cmd,    stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "null   ");    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
265	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentOption);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentOption);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	OptionGroup  group  =  options.getOptionGroup(currentOption);	  OptionGroup    group    =    options.getOptionGroup(options);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
266	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleProperties();  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption)  {  handleProperties();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption)  {  handleProperties();  }	  if(stopAtNonOption)    {    handleRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
267	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(arguments[0],  arguments[1]  +  2);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(arguments[0],  arguments[1]  +  2);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parseOption(arguments[0],  arguments[1]  +  2);	  Option    cmd    =    options.parseOption(arguments[0],    arguments[1]    +    1);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
268	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(arguments[0],  arguments[1]  +  0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(arguments[0],  arguments[1]  +  0);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parseOption(arguments[0],  arguments[1]  +  0);	  Option    cmd    =    options.parseOption(arguments[0],    arguments[1]    +    1);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
269	[BUG]  [BUGGY]  Option  group  =  options.getOption( "group ",  0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  group  =  options.getOption( "group ",  0);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  group  =  options.getOption( "group ",  0);	  Option    group    =    options.getOption(   "group   ");    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
270	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(currentOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  OptionGroup  group  =  options.getGroup(currentOption,  expectedOpts);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	OptionGroup  group  =  options.getGroup(currentOption,  expectedOpts);	  OptionGroup    group    =    options.getGroup(currentOption);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
271	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  OptionGroup  group  =  options.getGroup(argument,  stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	OptionGroup  group  =  options.getGroup(argument,  stopAtNonOption);	  OptionGroup    group    =    options.getGroup(argument);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
272	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  OptionGroup  group  =  options.getGroup(argument,  currentToken);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	OptionGroup  group  =  options.getGroup(argument,  currentToken);	  OptionGroup    group    =    options.getGroup(argument);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
273	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(argument,  null);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(argument,  null);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parseOption(argument,  null);	  Option    cmd    =    options.parseOption(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
274	[BUG]  [BUGGY]  if(stopAtNonOption  &&  cmd!=  null)  {  checkRequiredParsing();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption  &&  cmd!=  null)  {  checkRequiredParsing();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption  &&  cmd!=  null)  {  checkRequiredParsing();  }	  if(stopAtNonOption)    {    checkRequiredParsing();    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
275	[BUG]  [BUGGY]  if(stopAtNonOption  &&  options.isSupported())  {  checkRequiredParsing();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption  &&  options.isSupported())  {  checkRequiredParsing();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption  &&  options.isSupported())  {  checkRequiredParsing();  }	  if(stopAtNonOption)    {    checkRequiredParsing();    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
276	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.getOption(currentToken,  stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentOption.getOption(currentToken,  stopAtNonOption);	  Option    cmd    =    currentOption.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
277	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(defaultToken);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.getOption(defaultToken);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentOption.getOption(defaultToken);	  Option    cmd    =    currentOption.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
278	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)  {  if(!skipParsing)  {  cmd.append( "no-params ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption)  {  if(!skipParsing)  {  cmd.append( "no-params ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption)  {  if(!skipParsing)  {  cmd.append( "no-params ");  }	  luate(cmd,    stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "no-params   ");    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
279	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)  {  cmd.append( "no-params ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption)  {  cmd.append( "no-params ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption)  {  cmd.append( "no-params ");  }	  luate(cmd,    stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "no-params   ");    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
280	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)  {  if(skipParsing)  {  cmd.append( "no-params ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption)  {  if(skipParsing)  {  cmd.append( "no-params ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption)  {  if(skipParsing)  {  cmd.append( "no-params ");  }	  luate(cmd,    stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "no-params   ");    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
281	[BUG]  [BUGGY]  parsing  ||  stopAtNonOption)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  parsing  ||  stopAtNonOption)  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	parsing  ||  stopAtNonOption)  {  checkRequiredArgs();  }	  parsing)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
282	[BUG]  [BUGGY]  parsing  |=  stopAtNonOption)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  parsing  |=  stopAtNonOption)  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	parsing  |=  stopAtNonOption)  {  checkRequiredArgs();  }	  parsing)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
283	[BUG]  [BUGGY]  Option  currentToken  =  options.parseOption(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  currentToken  =  options.parseOption(argument,  stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  currentToken  =  options.parseOption(argument,  stopAtNonOption);	  Option    currentToken    =    options.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
284	[BUG]  [BUGGY]  Option  currentToken  =  options.parseOption(argument,  null);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  currentToken  =  options.parseOption(argument,  null);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  currentToken  =  options.parseOption(argument,  null);	  Option    currentToken    =    options.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
285	[BUG]  [BUGGY]  Option  currentToken  =  options.parseOption(argument,  0);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  currentToken  =  options.parseOption(argument,  0);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  currentToken  =  options.parseOption(argument,  0);	  Option    currentToken    =    options.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
286	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(arguments[0],  arguments[1],  skipParsing);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(arguments[0],  arguments[1],  skipParsing);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parseOption(arguments[0],  arguments[1],  skipParsing);	  Option    cmd    =    options.parseOption(arguments[0],    arguments[1],    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
287	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)  {  if(!skipParsing)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption)  {  if(!skipParsing)  {  cmd  =  new  CommandLine();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption)  {  if(!skipParsing)  {  cmd  =  new  CommandLine();  }	  luate(cmd,    stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
288	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)  {  if(skipParsing)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption)  {  if(skipParsing)  {  cmd  =  new  CommandLine();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption)  {  if(skipParsing)  {  cmd  =  new  CommandLine();  }	  luate(cmd,    stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
289	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)&&!skipParsing)  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption)&&!skipParsing)  {  cmd  =  new  CommandLine();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption)&&!skipParsing)  {  cmd  =  new  CommandLine();  }	  luate(cmd,    stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
290	[BUG]  [BUGGY]  Options  cmd  =  currentOption.parseOption(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Options  cmd  =  currentOption.parseOption(argument,  stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Options  cmd  =  currentOption.parseOption(argument,  stopAtNonOption);	  Options    cmd    =    currentOption.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
291	[BUG]  [BUGGY]  Preconditions.checkState(stopAtNonOption)  {  CheckRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Preconditions.checkState(stopAtNonOption)  {  CheckRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Preconditions.checkState(stopAtNonOption)  {  CheckRequiredArgs();  }	  if(stopAtNonOption)    {    CheckRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
292	[BUG]  [BUGGY]  if(stopAtNonOption  &&  cmd!=  null)  {  CheckRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption  &&  cmd!=  null)  {  CheckRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption  &&  cmd!=  null)  {  CheckRequiredArgs();  }	  if(stopAtNonOption)    {    CheckRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
293	[BUG]  [BUGGY]  Preconditions.checkState(stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Preconditions.checkState(stopAtNonOption);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Preconditions.checkState(stopAtNonOption);	  if(stopAtNonOption)    {    CheckRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
294	[BUG]  [BUGGY]  optionGroup.checkParsing();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  optionGroup.checkParsing();  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	optionGroup.checkParsing();	  if(stopAtNonOption)    {    checkParsing();    }    else    {    cmd    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
295	[BUG]  [BUGGY]  if(cmd!=  null)  {  handleRequiredOptions(properties);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(cmd!=  null)  {  handleRequiredOptions(properties);  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(cmd!=  null)  {  handleRequiredOptions(properties);  }	  if(cmd!=    null)    {    handleProperties(properties);    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
296	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parse(argument,  arguments);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.parse(argument,  arguments);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentOption.parse(argument,  arguments);	  Option    cmd    =    options.parse(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
297	[BUG]  [BUGGY]  if(cmd!=  null)  {  handleProperties();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(cmd!=  null)  {  handleProperties();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(cmd!=  null)  {  handleProperties();  }	  if(cmd    ==    null)    {    handleRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
298	[BUG]  [BUGGY]  if(cmd  ==  null)  {  handleProperties();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(cmd  ==  null)  {  handleProperties();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(cmd  ==  null)  {  handleProperties();  }	  if(cmd    ==    null)    {    handleRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
299	[BUG]  [BUGGY]  Context.checkState(cmd  ==  null);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Context.checkState(cmd  ==  null);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Context.checkState(cmd  ==  null);	  if(cmd    ==    null)    {    checkRequiredParser();    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
300	[BUG]  [BUGGY]  Options  cmd  =  currentOption.getArguments();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Options  cmd  =  currentOption.getArguments();  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Options  cmd  =  currentOption.getArguments();	  Options    cmd    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
301	[BUG]  [BUGGY]  Option  currentOption  =  options.parseOption(argument,  0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  currentOption  =  options.parseOption(argument,  0);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  currentOption  =  options.parseOption(argument,  0);	  Option    currentOption    =    options.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
302	[BUG]  [BUGGY]  luate(cmd,  currentToken))  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  currentToken))  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  currentToken))  {  checkRequiredArgs();  }	  luate(cmd,    stopAtNonOption)?)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
303	[BUG]  [BUGGY]  CheckRequiredArgs();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  CheckRequiredArgs();  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	CheckRequiredArgs();	  if(stopAtNonOption)    {    CheckRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
304	[BUG]  [BUGGY]  Context.checkState(cmd.length()  ==  0);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Context.checkState(cmd.length()  ==  0);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Context.checkState(cmd.length()  ==  0);	  Context.checkState(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "n       ");    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
305	[BUG]  [BUGGY]  Context.checkState(cmd.length  ==  0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Context.checkState(cmd.length  ==  0);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Context.checkState(cmd.length  ==  0);	  Context.checkState(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "n       ");    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
306	[BUG]  [BUGGY]  if(cmd!=  null  &&  cmd.length()  >  0)  {  checkRequiredOptions();  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(cmd!=  null  &&  cmd.length()  >  0)  {  checkRequiredOptions();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(cmd!=  null  &&  cmd.length()  >  0)  {  checkRequiredOptions();  }	  if(cmd!=    null)    {    checkRequiredOptions();    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
307	[BUG]  [BUGGY]  if(cmd!=  null)  {  handleProperties(properties);  checkRequiredOptions();  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(cmd!=  null)  {  handleProperties(properties);  checkRequiredOptions();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(cmd!=  null)  {  handleProperties(properties);  checkRequiredOptions();  }	  if(cmd!=    null)    {    checkRequiredOptions();    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
308	[BUG]  [BUGGY]  if(skipParsing)  {  checkParsing();  }  else  {  cmd  =  null;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(skipParsing)  {  checkParsing();  }  else  {  cmd  =  null;  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(skipParsing)  {  checkParsing();  }  else  {  cmd  =  null;  }	  if(stopAtNonOption)    {    checkParsing();    }    else    {    cmd    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
309	[BUG]  [BUGGY]  if(skipParsing)  {  checkParsing();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(skipParsing)  {  checkParsing();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(skipParsing)  {  checkParsing();  }	  if(stopAtNonOption)    {    checkParsing();    }    else    {    cmd    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
310	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(arguments);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(arguments);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parseOption(arguments);	  Option    cmd    =    currentOption.parseOption(arguments);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
311	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(arguments,  group);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.parseOption(arguments,  group);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentOption.parseOption(arguments,  group);	  Option    cmd    =    currentOption.parseOption(arguments);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
312	[BUG]  [BUGGY]  if(!skipParsing)  {  aughtExceptionHandler.handleMissing(argument);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(!skipParsing)  {  aughtExceptionHandler.handleMissing(argument);  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(!skipParsing)  {  aughtExceptionHandler.handleMissing(argument);  }	  aughtExceptionHandler.handleMissing(argument);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
313	[BUG]  [BUGGY]  if(stopAtNonOption)  {  aughtExceptionHandler.handleMissing(argument);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption)  {  aughtExceptionHandler.handleMissing(argument);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption)  {  aughtExceptionHandler.handleMissing(argument);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  aughtExceptionHandler.handleMissing(argument);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
314	[BUG]  [BUGGY]  if(stopAtNonOption)  {  luate(cmd,  stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "no-params ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption)  {  luate(cmd,  stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "no-params ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption)  {  luate(cmd,  stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "no-params ");  }	  luate(cmd,    stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "no-params   ");    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
315	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)&&!skipParsing)  {  cmd.append( "no-params ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption)&&!skipParsing)  {  cmd.append( "no-params ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption)&&!skipParsing)  {  cmd.append( "no-params ");  }	  luate(cmd,    stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "no-params   ");    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
316	[BUG]  [BUGGY]  if(stopAtNonOption)  {  luate(cmd,  stopAtNonOption)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption)  {  luate(cmd,  stopAtNonOption)  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption)  {  luate(cmd,  stopAtNonOption)  {  checkRequiredArgs();  }	  luate(cmd,    stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "no-params   ");    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
317	[BUG]  [BUGGY]  if(cmd  ==  null  ||  cmd.length()  ==  0)  {  checkRequiredParsers();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(cmd  ==  null  ||  cmd.length()  ==  0)  {  checkRequiredParsers();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(cmd  ==  null  ||  cmd.length()  ==  0)  {  checkRequiredParsers();  }	  if(cmd    ==    null)    {    checkRequiredParsers();    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
318	[BUG]  [BUGGY]  if(cmd  ==  null  ||  cmd.length  <  2)  {  checkRequiredParsers();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(cmd  ==  null  ||  cmd.length  <  2)  {  checkRequiredParsers();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(cmd  ==  null  ||  cmd.length  <  2)  {  checkRequiredParsers();  }	  if(cmd    ==    null)    {    checkRequiredParsers();    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
319	[BUG]  [BUGGY]  Option  currentOption  =  options.parseOption(currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  currentOption  =  options.parseOption(currentToken,  expectedOpts);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  currentOption  =  options.parseOption(currentToken,  expectedOpts);	  Option    currentOption    =    options.parseOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
320	[BUG]  [BUGGY]  Option  currentOption  =  options.parseOption(currentToken,  cmd);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  currentOption  =  options.parseOption(currentToken,  cmd);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  currentOption  =  options.parseOption(currentToken,  cmd);	  Option    currentOption    =    options.parseOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
321	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(options,  group);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.getOption(options,  group);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentOption.getOption(options,  group);	  Option    cmd    =    currentOption.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
322	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(options,  options);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.getOption(options,  options);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentOption.getOption(options,  options);	  Option    cmd    =    currentOption.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
323	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(arguments[0],  arguments[1],  argument);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(arguments[0],  arguments[1],  argument);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parseOption(arguments[0],  arguments[1],  argument);	  Option    cmd    =    options.parseOption(arguments[0],    arguments[1],    currentToken);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
324	[BUG]  [BUGGY]  if(exceptionHandler!=  null)  {  aughtExceptionHandler.handleError(msg);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(exceptionHandler!=  null)  {  aughtExceptionHandler.handleError(msg);  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(exceptionHandler!=  null)  {  aughtExceptionHandler.handleError(msg);  }	  aughtExceptionHandler.handleError(msg);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
325	[BUG]  [BUGGY]  if(msg!=  null)  {  aughtExceptionHandler.handleError(msg);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(msg!=  null)  {  aughtExceptionHandler.handleError(msg);  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(msg!=  null)  {  aughtExceptionHandler.handleError(msg);  }	  aughtExceptionHandler.handleError(msg);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
326	[BUG]  [BUGGY]  luate(cmd,  group))  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  group))  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  group))  {  checkRequiredArgs();  }	  luate(cmd,    stopAtNonOption))    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
327	[BUG]  [BUGGY]  if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  if(stopAtNonOption)    {    checkParsing();    }    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
328	[BUG]  [BUGGY]  if(stopAtNonOption)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption)  {  throw  new  IllegalStateException( " ");  }	  if(stopAtNonOption)    {    checkParsing();    }    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
329	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleParsing();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption)  {  handleParsing();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption)  {  handleParsing();  }	  if(stopAtNonOption)    {    checkParsing();    }    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
330	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(argument,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(argument,  blockAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parseOption(argument,  blockAtNonOption);	  Option    cmd    =    options.parseOption(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
331	[BUG]  [BUGGY]  luate(cmd,  currentToken)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  currentToken)  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  currentToken)  {  checkRequiredArgs();  }	  luate(cmd,    stopAtNonOption)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
332	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options,  currentToken);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options,  currentToken);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	OptionGroup  group  =  options.getOptionGroup(options,  currentToken);	  OptionGroup    group    =    options.getOptionGroup(options);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
333	[BUG]  [BUGGY]  if(cmd  ==  null  ||  cmd.length  <  2)  {  handleRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(cmd  ==  null  ||  cmd.length  <  2)  {  handleRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(cmd  ==  null  ||  cmd.length  <  2)  {  handleRequiredArgs();  }	  if(cmd    ==    null)    {    handleRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
334	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(argument,  group,  currentToken);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(argument,  group,  currentToken);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parseOption(argument,  group,  currentToken);	  Option    cmd    =    options.parseOption(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
335	[BUG]  [BUGGY]  luate(cmd,  currentOption)  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  currentOption)  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  currentOption)  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }	  luate(cmd,    stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
336	[BUG]  [BUGGY]  if(stopAtNonOption)  {  luate(cmd,  stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "null ");  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption)  {  luate(cmd,  stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "null ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption)  {  luate(cmd,  stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "null ");  }	  luate(cmd,    stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "null   ");    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
337	[BUG]  [BUGGY]  luate(cmd,  group)  {  checkRequiredArgs();  }  else  {  cmd.append( "null ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  group)  {  checkRequiredArgs();  }  else  {  cmd.append( "null ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  group)  {  checkRequiredArgs();  }  else  {  cmd.append( "null ");  }	  luate(cmd,    stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "null   ");    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
338	[BUG]  [BUGGY]  if(stopAtNonOption)  {  checkProperties(properties);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption)  {  checkProperties(properties);  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption)  {  checkProperties(properties);  }	  if(!stopAtNonOption)    {    checkProperties();    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
339	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  checkProperties(properties);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(!stopAtNonOption)  {  checkProperties(properties);  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(!stopAtNonOption)  {  checkProperties(properties);  }	  if(!stopAtNonOption)    {    checkProperties();    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
340	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  this.stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(argument,  this.stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.getOption(argument,  this.stopAtNonOption);	  Option    cmd    =    options.getOption(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
341	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(argument.toString());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  OptionGroup  group  =  options.getOptionGroup(argument.toString());  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	OptionGroup  group  =  options.getOptionGroup(argument.toString());	  OptionGroup    group    =    options.getOptionGroup(argument);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
342	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(argument,  true);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  OptionGroup  group  =  options.getOptionGroup(argument,  true);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	OptionGroup  group  =  options.getOptionGroup(argument,  true);	  OptionGroup    group    =    options.getOptionGroup(argument);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
343	[BUG]  [BUGGY]  Option  cmd  =  options.parse(argument,  group,  currentToken);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parse(argument,  group,  currentToken);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parse(argument,  group,  currentToken);	  Option    cmd    =    options.parse(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
344	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleRequiredArguments();  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption)  {  handleRequiredArguments();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption)  {  handleRequiredArguments();  }	  if(!stopAtNonOption)    {    checkRequiredArguments();    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
345	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(arguments[0],  null);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(arguments[0],  null);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.getOption(arguments[0],  null);	  Option    cmd    =    options.getOption(arguments[0]);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
346	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleRequiredParsing();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption)  {  handleRequiredParsing();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption)  {  handleRequiredParsing();  }	  if(stopAtNonOption)    {    checkRequiredParsing();    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
347	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  group,  currentToken);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(argument,  group,  currentToken);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.getOption(argument,  group,  currentToken);	  Option    cmd    =    options.getOption(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
348	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  group,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(argument,  group,  0);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.getOption(argument,  group,  0);	  Option    cmd    =    options.getOption(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
349	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti	  if(stopAtNonOption)    {    checkProperties();    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
350	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr	  if(stopAtNonOption)    {    checkProperties();    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
351	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti	  if(stopAtNonOption)    {    checkProperties();    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
352	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPolicy();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPolicy();  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPolicy();	  if(stopAtNonOption)    {    checkProperties();    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
353	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleProperties(properties,  skipParsing);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption)  {  handleProperties(properties,  skipParsing);  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption)  {  handleProperties(properties,  skipParsing);  }	  if(stopAtNonOption)    {    handleProperties(properties);    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
354	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleParsing(properties);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption)  {  handleParsing(properties);  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption)  {  handleParsing(properties);  }	  if(stopAtNonOption)    {    handleProperties(properties);    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
355	[BUG]  [BUGGY]  Option  cmd  =  options.parse(argument,  currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parse(argument,  currentToken,  stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parse(argument,  currentToken,  stopAtNonOption);	  Option    cmd    =    options.parse(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
356	[BUG]  [BUGGY]  Option  cmd  =  options.parse(argument,  currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parse(argument,  currentToken,  expectedOpts);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parse(argument,  currentToken,  expectedOpts);	  Option    cmd    =    options.parse(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
357	[BUG]  [BUGGY]  if(cmd  ==  null  ||  cmd.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(cmd  ==  null  ||  cmd.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(cmd  ==  null  ||  cmd.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(cmd    ==    null    ||    cmd.length()    ==    0)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
358	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(options,  currentToken);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  group  =  options.getOptionGroup(options,  currentToken);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  group  =  options.getOptionGroup(options,  currentToken);	  Option    group    =    options.getOptionGroup(options);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
359	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(options)+  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  group  =  options.getOptionGroup(options)+  1;  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  group  =  options.getOptionGroup(options)+  1;	  Option    group    =    options.getOptionGroup(options);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
360	[BUG]  [BUGGY]  if(cmd!=  null)  {  handleToken(cmd);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(cmd!=  null)  {  handleToken(cmd);  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(cmd!=  null)  {  handleToken(cmd);  }	  if(cmd!=    null)    {    handleProperties(properties);    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
361	[BUG]  [BUGGY]  Context.checkState(this.stopAtNonOption)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Context.checkState(this.stopAtNonOption)  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Context.checkState(this.stopAtNonOption)  {  checkRequiredArgs();  }	  Context.checkState(stopAtNonOption)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
362	[BUG]  [BUGGY]  Context.checkState(stopAtNonOption)  {  if(cmd.length()  ==  0)  {  cmd.append( "null ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Context.checkState(stopAtNonOption)  {  if(cmd.length()  ==  0)  {  cmd.append( "null ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Context.checkState(stopAtNonOption)  {  if(cmd.length()  ==  0)  {  cmd.append( "null ");  }	  Context.checkState(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "null   ");    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
363	[BUG]  [BUGGY]  parsing  =  stopAtNonOption?  getRequiredArgs()  :  arguments;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  parsing  =  stopAtNonOption?  getRequiredArgs()  :  arguments;  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	parsing  =  stopAtNonOption?  getRequiredArgs()  :  arguments;	  parsing    =    stopAtNonOption?    getRequiredArgs()    :    null;    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
364	[BUG]  [BUGGY]  luate(cmd,  group)  {  checkRequiredArgs();  }  else  {  cmd.append( "no ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  group)  {  checkRequiredArgs();  }  else  {  cmd.append( "no ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  group)  {  checkRequiredArgs();  }  else  {  cmd.append( "no ");  }	  luate(cmd,    stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "no       ");    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
365	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)&&!skipParsing)  {  checkRequiredArgs();  }  else  {  cmd.append( "no ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption)&&!skipParsing)  {  checkRequiredArgs();  }  else  {  cmd.append( "no ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption)&&!skipParsing)  {  checkRequiredArgs();  }  else  {  cmd.append( "no ");  }	  luate(cmd,    stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "no       ");    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
366	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)&&!skipParsing)  {  cmd.append( "no ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption)&&!skipParsing)  {  cmd.append( "no ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption)&&!skipParsing)  {  cmd.append( "no ");  }	  luate(cmd,    stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "no       ");    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
367	[BUG]  [BUGGY]  if(cmd  ==  null  ||  cmd.length()  ==  0)  {  checkRequiredOptions();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(cmd  ==  null  ||  cmd.length()  ==  0)  {  checkRequiredOptions();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(cmd  ==  null  ||  cmd.length()  ==  0)  {  checkRequiredOptions();  }	  if(cmd    ==    null)    {    checkRequiredOptions();    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
368	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(currentOption,  cmd);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  OptionGroup  group  =  options.getGroup(currentOption,  cmd);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	OptionGroup  group  =  options.getGroup(currentOption,  cmd);	  OptionGroup    group    =    options.getGroup(currentOption);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
369	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken,  preferredOpts);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(currentToken,  preferredOpts);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.getOption(currentToken,  preferredOpts);	  Option    cmd    =    options.getOption(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
370	[BUG]  [BUGGY]  if(cmd!=  null  &&  cmd.length()  >  0)  {  checkRequiredParsers();  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(cmd!=  null  &&  cmd.length()  >  0)  {  checkRequiredParsers();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(cmd!=  null  &&  cmd.length()  >  0)  {  checkRequiredParsers();  }	  if(cmd!=    null)    {    checkRequiredParsers();    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
371	[BUG]  [BUGGY]  if(cmd!=  null  &&  cmd.length  >  0)  {  checkRequiredParsers();  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(cmd!=  null  &&  cmd.length  >  0)  {  checkRequiredParsers();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(cmd!=  null  &&  cmd.length  >  0)  {  checkRequiredParsers();  }	  if(cmd!=    null)    {    checkRequiredParsers();    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
372	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(arguments[0],  arguments[1]  +  4);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(arguments[0],  arguments[1]  +  4);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parseOption(arguments[0],  arguments[1]  +  4);	  Option    cmd    =    options.parseOption(arguments[0],    arguments[1]    +    1);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
373	[BUG]  [BUGGY]  Option  currentOption  =  options.parseOption(argument,  block);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  currentOption  =  options.parseOption(argument,  block);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  currentOption  =  options.parseOption(argument,  block);	  Option    currentOption    =    options.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
374	[BUG]  [BUGGY]  pendingParsing  =  stopAtNonOption?  checkParsing()  :  null;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  pendingParsing  =  stopAtNonOption?  checkParsing()  :  null;  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	pendingParsing  =  stopAtNonOption?  checkParsing()  :  null;	  pendingParsing    =    stopAtNonOption?    checkRequiredArgs()    :    null;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
375	[BUG]  [BUGGY]  pendingParsing  =  stopAtNonOption?  options.parse(argument):  null;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  pendingParsing  =  stopAtNonOption?  options.parse(argument):  null;  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	pendingParsing  =  stopAtNonOption?  options.parse(argument):  null;	  pendingParsing)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
376	[BUG]  [BUGGY]  pendingParsing  =  stopAtNonOption?  options.nextToken()  :  null;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  pendingParsing  =  stopAtNonOption?  options.nextToken()  :  null;  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	pendingParsing  =  stopAtNonOption?  options.nextToken()  :  null;	  pendingParsing)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
377	[BUG]  [BUGGY]  OptionGroup  group  =  currentOption.getGroup(currentToken);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  OptionGroup  group  =  currentOption.getGroup(currentToken);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	OptionGroup  group  =  currentOption.getGroup(currentToken);	  OptionGroup    group    =    options.getGroup(currentToken);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
378	[BUG]  [BUGGY]  parsing  =  stopAtNonOption?  options.skipParsing  :  null;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  parsing  =  stopAtNonOption?  options.skipParsing  :  null;  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	parsing  =  stopAtNonOption?  options.skipParsing  :  null;	  parsing    =    stopAtNonOption?    skipParsing    :    null;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
379	[BUG]  [BUGGY]  parsing  =  stopAtNonOption?  skipParsing  :  defaultParsing;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  parsing  =  stopAtNonOption?  skipParsing  :  defaultParsing;  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	parsing  =  stopAtNonOption?  skipParsing  :  defaultParsing;	  parsing    =    stopAtNonOption?    skipParsing    :    null;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
380	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  arguments);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  arguments);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentOption.parseOption(argument,  arguments);	  Option    cmd    =    options.parseOption(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
381	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(argument,  currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(argument,  currentToken,  stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parseOption(argument,  currentToken,  stopAtNonOption);	  Option    cmd    =    options.parseOption(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
382	[BUG]  [BUGGY]  luate(cmd,  currentOption)>  0)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  currentOption)>  0)  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  currentOption)>  0)  {  checkRequiredArgs();  }	  luate(cmd,    stopAtNonOption)>    0)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
383	[BUG]  [BUGGY]  luate(cmd,  currentToken)>  0)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  currentToken)>  0)  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  currentToken)>  0)  {  checkRequiredArgs();  }	  luate(cmd,    stopAtNonOption)>    0)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
384	[BUG]  [BUGGY]  luate(cmd,  exception)>  0)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  exception)>  0)  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  exception)>  0)  {  checkRequiredArgs();  }	  luate(cmd,    stopAtNonOption)>    0)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
385	[BUG]  [BUGGY]  luate(cmd,  currentToken))  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  currentToken))  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  currentToken))  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }	  luate(cmd,    stopAtNonOption))    {    checkRequiredArgs();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
386	[BUG]  [BUGGY]  parsing,  group)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  parsing,  group)  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	parsing,  group)  {  checkRequiredArgs();  }	  parsing)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
387	[BUG]  [BUGGY]  parsing)  {  checkRequiredParser();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  parsing)  {  checkRequiredParser();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	parsing)  {  checkRequiredParser();  }	  parsing)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
388	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(arguments[0],  arguments[1],  block,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(arguments[0],  arguments[1],  block,  stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parseOption(arguments[0],  arguments[1],  block,  stopAtNonOption);	  Option    cmd    =    options.parseOption(arguments[0],    arguments[1],    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
