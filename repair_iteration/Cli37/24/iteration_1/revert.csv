projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=options.parseOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=options.getOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125checkRequiredArgs();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(!stopAtNonOption){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkRequiredArgs();}else{thrownewIllegalArgumentException("");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkRequiredArgs();}else{cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkRequiredArgs();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkRequiredArgs();}else{cmd.append("n");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(arguments[0],arguments[1]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd!=null){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(!skipParsing){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd==null){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(argument,currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getOptionGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optiongroup=options.getOptionGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125options.add(cmd);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getOptionGroup(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd==null){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd==null){checkRequiredParser();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Context.checkState(stopAtNonOption){checkRequiredArgs();}else{cmd.append("n");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Context.checkState(stopAtNonOption){checkRequiredArgs();}else{cmd.append("null");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Context.checkState(stopAtNonOption){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=currentOption.parseOption(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parseOption(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentToken.parseOption(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getOption(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optiongroup=options.getOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125parsing){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125pendingParsing){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){CheckRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupcmd=options.getOptionGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(arguments[0]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd!=null){checkRequiredOptions();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(!stopAtNonOption){checkRequiredArguments();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=currentOption.getOptions();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=options.getOptionGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption("cmd");
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getGroup(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getGroup(arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getGroup(currentOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(arguments[0],arguments[1],stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(arguments[0],arguments[1]+1);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(argument,currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parseOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption)?){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption)>0){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption)){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd!=null){checkRequiredParsers();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(currentToken,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd==null){handleRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd==null){checkRequiredParsers();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optiongroup=options.getOptionGroup(options);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(arguments[0],arguments[2]);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(argument,stopAtNonOption);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optiongroup=options.getOption("group");
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkProperties();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption&&cmd!=null){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(!stopAtNonOption){checkProperties();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption){checkRequiredArgs();}else{cmd.append("null");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption){checkRequiredArgs();}else{cmd.append("n");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption){checkRequiredArgs();}else{cmd.append("no-params");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption){checkRequiredArgs();}else{cmd.append("no");}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125parsing=stopAtNonOption?getRequiredArgs():null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125parsing=stopAtNonOption?skipParsing:null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getGroup(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=currentOption.parseOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parseOption(arguments);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOptionGroup();
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(argument,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(argument,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125[Delete]
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125aughtExceptionHandler.handleMissing(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125aughtExceptionHandler.handleError(msg);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd!=null){handleProperties(properties);}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(arguments[0],arguments[1],currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){handleRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkRequiredParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptioncurrentOption=options.parseOption(currentToken);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptioncurrentOption=options.parseOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptioncurrentToken=options.parseOption(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption)){checkRequiredArgs();}else{cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption){checkRequiredArgs();}else{cmd=newCommandLine();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125pendingParsing=stopAtNonOption?checkRequiredArgs():null;
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getOptionGroup(argument);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd==null||cmd.length()==0){checkRequiredArgs();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(currentToken,expectedOpts);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125luate(cmd,stopAtNonOption)){checkRequiredArgs();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkProperties();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkParsing();}else{cmd=null;}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(argument,group);
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkParsing();}
projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){handleProperties(properties);}
