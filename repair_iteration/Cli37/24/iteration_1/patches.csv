bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  cmd  =  options.parse(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  options.parse(argument,  currentToken);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parse(argument,  currentToken);	      Option    cmd    =    options.parse(argument);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
2	[BUG]  [BUGGY]  Option  cmd  =  options.parse(argument,  currentOption);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  options.parse(argument,  currentOption);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parse(argument,  currentOption);	      Option    cmd    =    options.parse(argument);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
3	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  OptionGroup  group  =  options.getOptionGroup();  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	OptionGroup  group  =  options.getOptionGroup();	  if(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
4	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  group  =  options.getOptionGroup();  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  group  =  options.getOptionGroup();	  if(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
5	[BUG]  [BUGGY]  options.add(cmd);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  options.add(cmd);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	options.add(cmd);	  if(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
6	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	OptionGroup  group  =  options.getOptionGroup(options);	  if(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
7	[BUG]  [BUGGY]  if(cmd  ==  null)  {  checkRequiredOptions();  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(cmd  ==  null)  {  checkRequiredOptions();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(cmd  ==  null)  {  checkRequiredOptions();  }	  if(cmd    ==    null)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
8	[BUG]  [BUGGY]  if(cmd  ==  null)  {  checkRequiredParser();  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(cmd  ==  null)  {  checkRequiredParser();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(cmd  ==  null)  {  checkRequiredParser();  }	  if(cmd    ==    null)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
9	[BUG]  [BUGGY]  Context.checkState(stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "n   ");  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Context.checkState(stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "n   ");  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Context.checkState(stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "n   ");  }	  if(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
10	[BUG]  [BUGGY]  Context.checkState(stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "null ");  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Context.checkState(stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "null ");  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Context.checkState(stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "null ");  }	  if(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
11	[BUG]  [BUGGY]  Context.checkState(stopAtNonOption)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Context.checkState(stopAtNonOption)  {  checkRequiredArgs();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Context.checkState(stopAtNonOption)  {  checkRequiredArgs();  }	  if(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
12	[BUG]  [BUGGY]  Options  cmd  =  currentOption.parseOption(options);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Options  cmd  =  currentOption.parseOption(options);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Options  cmd  =  currentOption.parseOption(options);	      Options    cmd    =    options.parseOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
13	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(options);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  currentOption.parseOption(options);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentOption.parseOption(options);	      Options    cmd    =    options.parseOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
14	[BUG]  [BUGGY]  Option  cmd  =  currentToken.parseOption(options);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  currentToken.parseOption(options);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentToken.parseOption(options);	      Option    cmd    =    options.parseOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
15	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(options);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  currentOption.getOption(options);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentOption.getOption(options);	      Option    cmd    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
16	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(currentToken);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  currentOption.getOption(currentToken);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentOption.getOption(currentToken);	      Option    cmd    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
17	[BUG]  [BUGGY]  Option  group  =  options.getOption(currentToken);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  group  =  options.getOption(currentToken);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  group  =  options.getOption(currentToken);	  if(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
18	[BUG]  [BUGGY]  parsing)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  parsing)  {  checkRequiredArgs();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	parsing)  {  checkRequiredArgs();  }	  if(!skipParsing)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
19	[BUG]  [BUGGY]  pendingParsing)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  pendingParsing)  {  checkRequiredArgs();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	pendingParsing)  {  checkRequiredArgs();  }	  if(!skipParsing)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
20	[BUG]  [BUGGY]  if(stopAtNonOption)  {  CheckRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(stopAtNonOption)  {  CheckRequiredArgs();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption)  {  CheckRequiredArgs();  }	  if(!skipParsing)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
21	[BUG]  [BUGGY]  OptionGroup  cmd  =  options.getOptionGroup();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  OptionGroup  cmd  =  options.getOptionGroup();  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	OptionGroup  cmd  =  options.getOptionGroup();	  if(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
22	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(arguments[0]);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  options.getOption(arguments[0]);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.getOption(arguments[0]);	  if(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
23	[BUG]  [BUGGY]  if(cmd!=  null)  {  checkRequiredOptions();  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(cmd!=  null)  {  checkRequiredOptions();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(cmd!=  null)  {  checkRequiredOptions();  }	  if(cmd!=    null)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
24	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  checkRequiredArguments();  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(!stopAtNonOption)  {  checkRequiredArguments();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(!stopAtNonOption)  {  checkRequiredArguments();  }	  if(!stopAtNonOption)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
25	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.getOption(argument,  currentToken);	      Option    cmd    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
26	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  options.getOption(argument,  stopAtNonOption);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.getOption(argument,  stopAtNonOption);	      Option    cmd    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
27	[BUG]  [BUGGY]  Options  cmd  =  currentOption.getOptions();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Options  cmd  =  currentOption.getOptions();  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Options  cmd  =  currentOption.getOptions();	      Options    cmd    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
28	[BUG]  [BUGGY]  Options  cmd  =  options.getOptionGroup();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Options  cmd  =  options.getOptionGroup();  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Options  cmd  =  options.getOptionGroup();	      Options    cmd    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
29	[BUG]  [BUGGY]  Option  cmd  =  options.getOption( "cmd ");  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  options.getOption( "cmd ");  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.getOption( "cmd ");	      Options    cmd    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
30	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(argument);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  OptionGroup  group  =  options.getGroup(argument);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	OptionGroup  group  =  options.getGroup(argument);	      OptionGroup    group    =    options.getGroup();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
31	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(arguments);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  OptionGroup  group  =  options.getGroup(arguments);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	OptionGroup  group  =  options.getGroup(arguments);	      OptionGroup    group    =    options.getGroup();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
32	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(currentOption);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  OptionGroup  group  =  options.getGroup(currentOption);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	OptionGroup  group  =  options.getGroup(currentOption);	      OptionGroup    group    =    options.getGroup();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
33	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(arguments[0],  arguments[1],  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  options.parseOption(arguments[0],  arguments[1],  stopAtNonOption);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parseOption(arguments[0],  arguments[1],  stopAtNonOption);	      Option    cmd    =    options.parseOption(arguments[0],    arguments[1]);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
34	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(arguments[0],  arguments[1]  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  options.parseOption(arguments[0],  arguments[1]  +  1);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parseOption(arguments[0],  arguments[1]  +  1);	      Option    cmd    =    options.parseOption(arguments[0],    arguments[1]);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
35	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  options.parseOption(argument,  currentToken);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parseOption(argument,  currentToken);	      Option    cmd    =    options.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
36	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(argument);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  currentOption.parseOption(argument);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentOption.parseOption(argument);	      Option    cmd    =    options.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
37	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  options.parseOption(argument,  stopAtNonOption);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parseOption(argument,  stopAtNonOption);	      Option    cmd    =    options.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
38	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  luate(cmd,  stopAtNonOption)  {  checkRequiredArgs();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption)  {  checkRequiredArgs();  }	  if(stopAtNonOption)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
39	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)?)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  luate(cmd,  stopAtNonOption)?)  {  checkRequiredArgs();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption)?)  {  checkRequiredArgs();  }	  if(stopAtNonOption)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
40	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)>  0)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  luate(cmd,  stopAtNonOption)>  0)  {  checkRequiredArgs();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption)>  0)  {  checkRequiredArgs();  }	  if(stopAtNonOption)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
41	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption))  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  luate(cmd,  stopAtNonOption))  {  checkRequiredArgs();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption))  {  checkRequiredArgs();  }	  if(stopAtNonOption)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
42	[BUG]  [BUGGY]  if(cmd!=  null)  {  checkRequiredParsers();  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(cmd!=  null)  {  checkRequiredParsers();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(cmd!=  null)  {  checkRequiredParsers();  }	  if(cmd!=    null)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
43	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  options.getOption(currentToken,  stopAtNonOption);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.getOption(currentToken,  stopAtNonOption);	      Option    cmd    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
44	[BUG]  [BUGGY]  if(cmd  ==  null)  {  handleRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(cmd  ==  null)  {  handleRequiredArgs();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(cmd  ==  null)  {  handleRequiredArgs();  }	  if(cmd    ==    null)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
45	[BUG]  [BUGGY]  if(cmd  ==  null)  {  checkRequiredParsers();  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(cmd  ==  null)  {  checkRequiredParsers();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(cmd  ==  null)  {  checkRequiredParsers();  }	  if(cmd    ==    null)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
46	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(options);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  group  =  options.getOptionGroup(options);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  group  =  options.getOptionGroup(options);	  if(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
47	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(arguments[0],  arguments[2]);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  options.parseOption(arguments[0],  arguments[2]);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parseOption(arguments[0],  arguments[2]);	      Option    cmd    =    options.parseOption(arguments[0],    arguments[1]);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
48	[BUG]  [BUGGY]  Option  cmd  =  options.parse(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  options.parse(argument,  stopAtNonOption);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parse(argument,  stopAtNonOption);	      Option    cmd    =    options.parse(argument);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
49	[BUG]  [BUGGY]  Option  group  =  options.getOption( "group ");  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  group  =  options.getOption( "group ");  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  group  =  options.getOption( "group ");	  if(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
50	[BUG]  [BUGGY]  if(stopAtNonOption)  {  checkProperties();  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(stopAtNonOption)  {  checkProperties();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption)  {  checkProperties();  }	  if(stopAtNonOption)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
51	[BUG]  [BUGGY]  if(stopAtNonOption  &&  cmd!=  null)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(stopAtNonOption  &&  cmd!=  null)  {  checkRequiredArgs();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption  &&  cmd!=  null)  {  checkRequiredArgs();  }	  if(stopAtNonOption)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
52	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(argument);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  currentOption.getOption(argument);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentOption.getOption(argument);	      Option    cmd    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
53	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  checkProperties();  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(!stopAtNonOption)  {  checkProperties();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(!stopAtNonOption)  {  checkProperties();  }	  if(!stopAtNonOption)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
54	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "null ");  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  luate(cmd,  stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "null ");  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "null ");  }	  if(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
55	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "n   ");  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  luate(cmd,  stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "n   ");  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "n   ");  }	  if(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
56	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "no-params ");  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  luate(cmd,  stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "no-params ");  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "no-params ");  }	  if(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
57	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "no   ");  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  luate(cmd,  stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "no   ");  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd.append( "no   ");  }	  if(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
58	[BUG]  [BUGGY]  parsing  =  stopAtNonOption?  getRequiredArgs()  :  null;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  parsing  =  stopAtNonOption?  getRequiredArgs()  :  null;  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	parsing  =  stopAtNonOption?  getRequiredArgs()  :  null;	  if(!skipParsing)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
59	[BUG]  [BUGGY]  parsing  =  stopAtNonOption?  skipParsing  :  null;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  parsing  =  stopAtNonOption?  skipParsing  :  null;  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	parsing  =  stopAtNonOption?  skipParsing  :  null;	  if(!skipParsing)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
60	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(currentToken);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  OptionGroup  group  =  options.getGroup(currentToken);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	OptionGroup  group  =  options.getGroup(currentToken);	      OptionGroup    group    =    options.getGroup();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
61	[BUG]  [BUGGY]  Options  cmd  =  currentOption.parseOption(argument);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Options  cmd  =  currentOption.parseOption(argument);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Options  cmd  =  currentOption.parseOption(argument);	      Options    cmd    =    options.parseOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
62	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(arguments);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  currentOption.parseOption(arguments);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  currentOption.parseOption(arguments);	      Option    cmd    =    options.parseOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
63	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionGroup();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  options.getOptionGroup();  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.getOptionGroup();	      Options    cmd    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
64	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  group);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  options.getOption(argument,  group);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.getOption(argument,  group);	      Option    cmd    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
65	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(argument,  group);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  options.parseOption(argument,  group);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parseOption(argument,  group);	      Option    cmd    =    options.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
66	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  [Delete]  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	[Delete]	  if(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
67	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissing(argument);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  aughtExceptionHandler.handleMissing(argument);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	aughtExceptionHandler.handleMissing(argument);	  if(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
68	[BUG]  [BUGGY]  aughtExceptionHandler.handleError(msg);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  aughtExceptionHandler.handleError(msg);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	aughtExceptionHandler.handleError(msg);	  if(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
69	[BUG]  [BUGGY]  if(cmd!=  null)  {  handleProperties(properties);  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(cmd!=  null)  {  handleProperties(properties);  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(cmd!=  null)  {  handleProperties(properties);  }	  if(cmd!=    null)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
70	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(arguments[0],  arguments[1],  currentToken);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  options.parseOption(arguments[0],  arguments[1],  currentToken);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parseOption(arguments[0],  arguments[1],  currentToken);	      Option    cmd    =    options.parseOption(arguments[0],    arguments[1]);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
71	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(stopAtNonOption)  {  handleRequiredArgs();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption)  {  handleRequiredArgs();  }	  if(!stopAtNonOption)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
72	[BUG]  [BUGGY]  if(stopAtNonOption)  {  checkRequiredParsing();  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(stopAtNonOption)  {  checkRequiredParsing();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption)  {  checkRequiredParsing();  }	  if(!stopAtNonOption)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
73	[BUG]  [BUGGY]  Option  currentOption  =  options.parseOption(currentToken);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  currentOption  =  options.parseOption(currentToken);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  currentOption  =  options.parseOption(currentToken);	      Options    cmd    =    options.parseOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
74	[BUG]  [BUGGY]  Option  currentOption  =  options.parseOption(argument);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  currentOption  =  options.parseOption(argument);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  currentOption  =  options.parseOption(argument);	      Options    cmd    =    options.parseOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
75	[BUG]  [BUGGY]  Option  currentToken  =  options.parseOption(argument);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  currentToken  =  options.parseOption(argument);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  currentToken  =  options.parseOption(argument);	      Options    cmd    =    options.parseOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
76	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption))  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  luate(cmd,  stopAtNonOption))  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption))  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }	  if(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
77	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  luate(cmd,  stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }	  if(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
78	[BUG]  [BUGGY]  pendingParsing  =  stopAtNonOption?  checkRequiredArgs()  :  null;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  pendingParsing  =  stopAtNonOption?  checkRequiredArgs()  :  null;  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	pendingParsing  =  stopAtNonOption?  checkRequiredArgs()  :  null;	  if(!skipParsing)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
79	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(argument);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(argument);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	OptionGroup  group  =  options.getOptionGroup(argument);	  if(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
80	[BUG]  [BUGGY]  if(cmd  ==  null  ||  cmd.length()  ==  0)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(cmd  ==  null  ||  cmd.length()  ==  0)  {  checkRequiredArgs();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(cmd  ==  null  ||  cmd.length()  ==  0)  {  checkRequiredArgs();  }	  if(cmd    ==    null)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
81	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  options.getOption(currentToken,  expectedOpts);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.getOption(currentToken,  expectedOpts);	      Option    cmd    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
82	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption))  {  checkRequiredArgs();  }  else  {  cmd  =  null;  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  luate(cmd,  stopAtNonOption))  {  checkRequiredArgs();  }  else  {  cmd  =  null;  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	luate(cmd,  stopAtNonOption))  {  checkRequiredArgs();  }  else  {  cmd  =  null;  }	  if(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
83	[BUG]  [BUGGY]  if(stopAtNonOption)  {  checkProperties();  }  else  {  cmd  =  null;  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(stopAtNonOption)  {  checkProperties();  }  else  {  cmd  =  null;  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption)  {  checkProperties();  }  else  {  cmd  =  null;  }	  if(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
84	[BUG]  [BUGGY]  if(stopAtNonOption)  {  checkParsing();  }  else  {  cmd  =  null;  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(stopAtNonOption)  {  checkParsing();  }  else  {  cmd  =  null;  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption)  {  checkParsing();  }  else  {  cmd  =  null;  }	  if(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
85	[BUG]  [BUGGY]  Option  cmd  =  options.parse(argument,  group);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  options.parse(argument,  group);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	Option  cmd  =  options.parse(argument,  group);	      Option    cmd    =    options.parse(argument);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
86	[BUG]  [BUGGY]  if(stopAtNonOption)  {  checkParsing();  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(stopAtNonOption)  {  checkParsing();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption)  {  checkParsing();  }	  if(stopAtNonOption)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
87	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleProperties(properties);  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(stopAtNonOption)  {  handleProperties(properties);  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	125	125	1	replace	if(stopAtNonOption)  {  handleProperties(properties);  }	  if(stopAtNonOption)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
