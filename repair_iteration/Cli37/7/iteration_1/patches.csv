bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  value  =  t.substring(i  +  1,  token);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  value  =  t.substring(i  +  1,  token);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  value  =  t.substring(i  +  1,  token);	      String    value    =    t.substring(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
2	[BUG]  [BUGGY]  String  value  =  t.substring(i  +  1,  token.length());  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  value  =  t.substring(i  +  1,  token.length());  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  value  =  t.substring(i  +  1,  token.length());	      String    value    =    t.substring(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
3	[BUG]  [BUGGY]  String  value  =  t.substring(i  +  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  value  =  t.substring(i  +  2);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  value  =  t.substring(i  +  2);	      String    value    =    t.substring(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
4	[BUG]  [BUGGY]  String  opt  =  options.getOption(t);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  opt  =  options.getOption(t);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  opt  =  options.getOption(t);	  String    opt    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
5	[BUG]  [BUGGY]  String  opt  =  options.get(token);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  opt  =  options.get(token);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  opt  =  options.get(token);	  String    opt    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
6	[BUG]  [BUGGY]  String  opt  =  options.getOption(token,  t);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  opt  =  options.getOption(token,  t);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  opt  =  options.getOption(token,  t);	  String    opt    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
7	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(token,  i);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(token,  i);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  opt  =  Util.stripLeadingHyphens(token,  i);	  String    opt    =    Util.stripLeadingHyphens(token);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
8	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(token  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(token  +  1);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  opt  =  Util.stripLeadingHyphens(token  +  1);	  String    opt    =    Util.stripLeadingHyphens(token);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
9	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(opt);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(opt);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  opt  =  Util.stripLeadingHyphens(opt);	  String    opt    =    Util.stripLeadingHyphens(token);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
10	[BUG]  [BUGGY]  Option  option  =  options.getOption(t);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  Option  option  =  options.getOption(t);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	Option  option  =  options.getOption(t);	      Option    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
11	[BUG]  [BUGGY]  Option  option  =  options.getOption(token)+  1;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  Option  option  =  options.getOption(token)+  1;  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	Option  option  =  options.getOption(token)+  1;	      Option    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
12	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  t);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  Option  option  =  options.getOption(token,  t);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	Option  option  =  options.getOption(token,  t);	      Option    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
13	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  t  =  Util.stripLeadingHyphens(token);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  t  =  Util.stripLeadingHyphens(token);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
14	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token);  int  i  =  0;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  t  =  Util.stripLeadingHyphens(token);  int  i  =  0;  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  t  =  Util.stripLeadingHyphens(token);  int  i  =  0;	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
15	[BUG]  [BUGGY]  String  t  =  Util.stripLeadingHyphens(token);  int  i;  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  t  =  Util.stripLeadingHyphens(token);  int  i;  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  t  =  Util.stripLeadingHyphens(token);  int  i;	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
16	[BUG]  [BUGGY]  String  opt  =  t.toLowerCase();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  opt  =  t.toLowerCase();  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  opt  =  t.toLowerCase();	  String    opt    =    t;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
17	[BUG]  [BUGGY]  String  opt  =  t.substring(i  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  opt  =  t.substring(i  +  1);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  opt  =  t.substring(i  +  1);	  String    opt    =    t;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
18	[BUG]  [BUGGY]  String  value  =(String)options.get(t);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  value  =(String)options.get(t);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  value  =(String)options.get(t);	      String    value    =(String)options.get(token);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
19	[BUG]  [BUGGY]  String  value  =(String)this.options.get(token);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  value  =(String)this.options.get(token);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  value  =(String)this.options.get(token);	      String    value    =(String)options.get(token);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
20	[BUG]  [BUGGY]  String  value  =(String)options.getValue(token);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  value  =(String)options.getValue(token);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  value  =(String)options.getValue(token);	      String    value    =(String)options.get(token);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
21	[BUG]  [BUGGY]  String  opt  =(t  ==  null)?  null  :  t.substring(0,  i  +  1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  opt  =(t  ==  null)?  null  :  t.substring(0,  i  +  1);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  opt  =(t  ==  null)?  null  :  t.substring(0,  i  +  1);	  String    opt    =(t    ==    null)?    null    :    t.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
22	[BUG]  [BUGGY]  String  opt  =(t!=  null)?  null  :  t.substring(0,  i  +  1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  opt  =(t!=  null)?  null  :  t.substring(0,  i  +  1);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  opt  =(t!=  null)?  null  :  t.substring(0,  i  +  1);	  String    opt    =(t    ==    null)?    null    :    t.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
23	[BUG]  [BUGGY]  String  opt  =  token.trim();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  opt  =  token.trim();  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  opt  =  token.trim();	  String    opt    =    token;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
24	[BUG]  [BUGGY]  String  opt  =  token.toLowerCase();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  opt  =  token.toLowerCase();  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  opt  =  token.toLowerCase();	  String    opt    =    token;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
25	[BUG]  [BUGGY]  String  opt  =  token.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  opt  =  token.substring(0,  i);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  opt  =  token.substring(0,  i);	  String    opt    =    token;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
26	[BUG]  [BUGGY]  String  opt  =  t.substring(0,  i  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  opt  =  t.substring(0,  i  +  1);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  opt  =  t.substring(0,  i  +  1);	  String    opt    =    t.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
27	[BUG]  [BUGGY]  String  opt  =  t.substring(0,  i  +  2);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  opt  =  t.substring(0,  i  +  2);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  opt  =  t.substring(0,  i  +  2);	  String    opt    =    t.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
28	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(token);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  Option  currentOption  =  options.getOption(token);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	Option  currentOption  =  options.getOption(token);	      if(options.hasOption(opt))    {    opt    =    option;    break;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
29	[BUG]  [BUGGY]  Option  option  =  options.hasOption(opt);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  Option  option  =  options.hasOption(opt);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	Option  option  =  options.hasOption(opt);	      if(options.hasOption(opt))    {    opt    =    option;    break;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
30	[BUG]  [BUGGY]  String  value  =  t.substring(0,  i  +  1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  value  =  t.substring(0,  i  +  1);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  value  =  t.substring(0,  i  +  1);	      String    value    =    t.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
31	[BUG]  [BUGGY]  String  value  =  t.substring(0,  i  +  2);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  value  =  t.substring(0,  i  +  2);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  value  =  t.substring(0,  i  +  2);	      String    value    =    t.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
32	[BUG]  [BUGGY]  String  value  =  t.substring(0,  i  +  1,  token.length());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  value  =  t.substring(0,  i  +  1,  token.length());  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  value  =  t.substring(0,  i  +  1,  token.length());	      String    value    =    t.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
33	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(t);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  Option  currentOption  =  options.getOption(t);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	Option  currentOption  =  options.getOption(t);	      if(options.hasOption(t))    {    opt    =    option;    break;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
34	[BUG]  [BUGGY]  Option  option  =  options.hasOption(t);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  Option  option  =  options.hasOption(t);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	Option  option  =  options.hasOption(t);	      if(options.hasOption(t))    {    opt    =    option;    break;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
35	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption(t);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  Option  currentToken  =  options.getOption(t);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	Option  currentToken  =  options.getOption(t);	      if(options.hasOption(t))    {    opt    =    option;    break;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
36	[BUG]  [BUGGY]  Option  option  =  options.hasOption(t)?  option.substring(0,  i):  token;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  Option  option  =  options.hasOption(t)?  option.substring(0,  i):  token;  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	Option  option  =  options.hasOption(t)?  option.substring(0,  i):  token;	      if(options.hasOption(t))    {    opt    =    option.substring(0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
37	[BUG]  [BUGGY]  Option  option  =  options.hasOption(t)?  opt  :  t.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  Option  option  =  options.hasOption(t)?  opt  :  t.substring(0,  i);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	Option  option  =  options.hasOption(t)?  opt  :  t.substring(0,  i);	      if(options.hasOption(t))    {    opt    =    option.substring(0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
38	[BUG]  [BUGGY]  String  value  =  Util.stripValue(token);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  value  =  Util.stripValue(token);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  value  =  Util.stripValue(token);	      String    value    =    Util.stripLeadingHyphens(token);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
39	[BUG]  [BUGGY]  String  value  =  Util.stripLong(token);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  value  =  Util.stripLong(token);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  value  =  Util.stripLong(token);	      String    value    =    Util.stripLeadingHyphens(token);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
40	[BUG]  [BUGGY]  String  value  =  Util.stripLeadingHyphens(token,  i);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  value  =  Util.stripLeadingHyphens(token,  i);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  value  =  Util.stripLeadingHyphens(token,  i);	      String    value    =    Util.stripLeadingHyphens(token);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
41	[BUG]  [BUGGY]  Option  option  =  options.hasOption(opt);  break;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  Option  option  =  options.hasOption(opt);  break;  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	Option  option  =  options.hasOption(opt);  break;	      if(options.hasOption(opt))    {    option    =    option;    break;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
42	[BUG]  [BUGGY]  option  =  options.hasOption(opt);  break;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  option  =  options.hasOption(opt);  break;  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	option  =  options.hasOption(opt);  break;	      if(options.hasOption(opt))    {    option    =    option;    break;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
43	[BUG]  [BUGGY]  Option  option  =  options.getOption(t);  break;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  Option  option  =  options.getOption(t);  break;  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	Option  option  =  options.getOption(t);  break;	      if(options.hasOption(opt))    {    option    =    option;    break;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
44	[BUG]  [BUGGY]  Option  option  =  options.getOption(token);  break;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  Option  option  =  options.getOption(token);  break;  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	Option  option  =  options.getOption(token);  break;	      if(options.hasOption(opt))    {    option    =    option;    break;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
45	[BUG]  [BUGGY]  Option  currentOption  =  options.get(t);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  Option  currentOption  =  options.get(t);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	Option  currentOption  =  options.get(t);	      if(options.hasLongOption(t))    {    opt    =    option.substring(0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
46	[BUG]  [BUGGY]  options.hasLongOption(t))  {  opt  =  option.substring(0,  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  options.hasLongOption(t))  {  opt  =  option.substring(0,  i);  }  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	options.hasLongOption(t))  {  opt  =  option.substring(0,  i);  }	      if(options.hasLongOption(t))    {    opt    =    option.substring(0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
47	[BUG]  [BUGGY]  options.hasLongOption(t))  {  opt  =  option.substring(0,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  options.hasLongOption(t))  {  opt  =  option.substring(0,  i  +  1);  }  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	options.hasLongOption(t))  {  opt  =  option.substring(0,  i  +  1);  }	      if(options.hasLongOption(t))    {    opt    =    option.substring(0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
48	[BUG]  [BUGGY]  String  opt  =(t  ==  null)?  null  :  token.trim();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  opt  =(t  ==  null)?  null  :  token.trim();  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  opt  =(t  ==  null)?  null  :  token.trim();	  String    opt    =(token!=    null)?    null    :    token.trim();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
49	[BUG]  [BUGGY]  String  opt  =(t  ==  null)?  null  :  t.trim();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  opt  =(t  ==  null)?  null  :  t.trim();  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  opt  =(t  ==  null)?  null  :  t.trim();	  String    opt    =(token!=    null)?    null    :    token.trim();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
50	[BUG]  [BUGGY]  String  opt  =(token  ==  null)?  null  :  token.trim()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  opt  =(token  ==  null)?  null  :  token.trim()  +  1;  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  opt  =(token  ==  null)?  null  :  token.trim()  +  1;	  String    opt    =(token    ==    null)?    null    :    token.trim();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
51	[BUG]  [BUGGY]  option  =  option.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  option  =  option.substring(0,  i);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	option  =  option.substring(0,  i);	      if(options.hasOption(t))    {    option    =    option.substring(0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
52	[BUG]  [BUGGY]  String  value  =  token.substring(0,  i  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  value  =  token.substring(0,  i  +  1);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  value  =  token.substring(0,  i  +  1);	      String    value    =    token.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
53	[BUG]  [BUGGY]  String  value  =  t.substring(0,  i).trim();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  value  =  t.substring(0,  i).trim();  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  value  =  t.substring(0,  i).trim();	      String    value    =    token.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
54	[BUG]  [BUGGY]  char  value  =  token.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  char  value  =  token.substring(0,  i);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	char  value  =  token.substring(0,  i);	      String    value    =    token.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
55	[BUG]  [BUGGY]  String  opt  =  options.getOption(token).t;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  opt  =  options.getOption(token).t;  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  opt  =  options.getOption(token).t;	  String    opt    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
56	[BUG]  [BUGGY]  String  opt  =  options.getOption(token  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  opt  =  options.getOption(token  +  1);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  opt  =  options.getOption(token  +  1);	  String    opt    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
57	[BUG]  [BUGGY]  String  value  =  Util.stripLeadingHyphens(token  +  1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  value  =  Util.stripLeadingHyphens(token  +  1);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  value  =  Util.stripLeadingHyphens(token  +  1);	      String    value    =    Util.stripLeadingHyphens(token);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
58	[BUG]  [BUGGY]  String  value  =(String)options.get(i);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  value  =(String)options.get(i);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  value  =(String)options.get(i);	      String    value    =(String)options.get(token);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
59	[BUG]  [BUGGY]  String  value  =(String)options.get(key);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  value  =(String)options.get(key);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  value  =(String)options.get(key);	      String    value    =(String)options.get(token);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
60	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt);  break;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  Option  option  =  options.getOption(opt);  break;  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	Option  option  =  options.getOption(opt);  break;	      if(options.hasOption(opt))    {    option    =    option;    break;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
61	[BUG]  [BUGGY]  Option  option  =  options.getOption(token  +  1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  Option  option  =  options.getOption(token  +  1);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	Option  option  =  options.getOption(token  +  1);	      Option    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
62	[BUG]  [BUGGY]  String  opt  =(t  ==  null)?  token  :  t;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  opt  =(t  ==  null)?  token  :  t;  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  opt  =(t  ==  null)?  token  :  t;	  String    opt    =    t;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
63	[BUG]  [BUGGY]  String  opt  =(t  ==  null)?  null  :  t;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  opt  =(t  ==  null)?  null  :  t;  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  opt  =(t  ==  null)?  null  :  t;	  String    opt    =    t;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
64	[BUG]  [BUGGY]  String  value  =  t.substring(i,  token);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  value  =  t.substring(i,  token);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  value  =  t.substring(i,  token);	      String    value    =    token.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
65	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(opt);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  Option  currentOption  =  options.getOption(opt);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	Option  currentOption  =  options.getOption(opt);	      if(options.hasLongOption(t))    {    opt    =    option.substring(0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
66	[BUG]  [BUGGY]  Option  option  =  options.hasLongOption(t);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  Option  option  =  options.hasLongOption(t);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	Option  option  =  options.hasLongOption(t);	      if(options.hasLongOption(t))    {    opt    =    option.substring(0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
67	[BUG]  [BUGGY]  Option  currentOption  =  options.hasOption(t);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  Option  currentOption  =  options.hasOption(t);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	Option  currentOption  =  options.hasOption(t);	      if(options.hasOption(t))    {    opt    =    option;    break;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
68	[BUG]  [BUGGY]  String  opt  =  t.substring(i,  i);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  opt  =  t.substring(i,  i);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  opt  =  t.substring(i,  i);	  String    opt    =    t.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
69	[BUG]  [BUGGY]  String  value  =  t.substring(i,  i);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  value  =  t.substring(i,  i);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  value  =  t.substring(i,  i);	      String    value    =    t.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
70	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  Option  option  =  options.getOption(opt);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	Option  option  =  options.getOption(opt);	      if(options.hasOption(opt))    {    opt    =    option;    break;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
71	[BUG]  [BUGGY]  String  opt  =(t  ==  null)?  null  :  t.substring(0,  i  +  2);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  opt  =(t  ==  null)?  null  :  t.substring(0,  i  +  2);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  opt  =(t  ==  null)?  null  :  t.substring(0,  i  +  2);	  String    opt    =(t    ==    null)?    null    :    t.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
72	[BUG]  [BUGGY]  String  opt  =(t!=  null)?  null  :  token.trim();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  opt  =(t!=  null)?  null  :  token.trim();  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  opt  =(t!=  null)?  null  :  token.trim();	  String    opt    =(token!=    null)?    null    :    token.trim();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
73	[BUG]  [BUGGY]  options.hasOption(opt))  {  opt  =  option.substring(0,  i);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  options.hasOption(opt))  {  opt  =  option.substring(0,  i);  }  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	options.hasOption(opt))  {  opt  =  option.substring(0,  i);  }	      if(options.hasOption(t))    {    opt    =    option.substring(0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
74	[BUG]  [BUGGY]  Option  option  =  options.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  Option  option  =  options.substring(0,  i);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	Option  option  =  options.substring(0,  i);	      if(options.hasOption(t))    {    option    =    option.substring(0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
75	[BUG]  [BUGGY]  option  =  options.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  option  =  options.substring(0,  i);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	option  =  options.substring(0,  i);	      if(options.hasOption(t))    {    option    =    option.substring(0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
76	[BUG]  [BUGGY]  String  opt  =  Util.stripLeadingHyphens(t);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  opt  =  Util.stripLeadingHyphens(t);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  opt  =  Util.stripLeadingHyphens(t);	  String    opt    =    Util.stripLeadingHyphens(token);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
77	[BUG]  [BUGGY]  String  opt  =(t!=  null)?  null  :  t.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  opt  =(t!=  null)?  null  :  t.substring(0,  i);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  opt  =(t!=  null)?  null  :  t.substring(0,  i);	  String    opt    =(t    ==    null)?    null    :    t.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
78	[BUG]  [BUGGY]  if(options.hasOption(opt))  {  opt  =  option.substring(0,  i);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  if(options.hasOption(opt))  {  opt  =  option.substring(0,  i);  }  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	if(options.hasOption(opt))  {  opt  =  option.substring(0,  i);  }	      if(options.hasOption(t))    {    opt    =    option.substring(0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
79	[BUG]  [BUGGY]  if(options.hasOption(t))  {  opt  =  t.substring(0,  i);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  if(options.hasOption(t))  {  opt  =  t.substring(0,  i);  }  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	if(options.hasOption(t))  {  opt  =  t.substring(0,  i);  }	      if(options.hasOption(t))    {    opt    =    option.substring(0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
80	[BUG]  [BUGGY]  if(options.hasOption(opt))  {  opt  =  t.substring(0,  i);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  if(options.hasOption(opt))  {  opt  =  t.substring(0,  i);  }  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	if(options.hasOption(opt))  {  opt  =  t.substring(0,  i);  }	      if(options.hasOption(t))    {    opt    =    option.substring(0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
81	[BUG]  [BUGGY]  String  opt  =(t!=  null)?  null  :  t.trim();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  opt  =(t!=  null)?  null  :  t.trim();  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  opt  =(t!=  null)?  null  :  t.trim();	  String    opt    =(token!=    null)?    null    :    token.trim();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
82	[BUG]  [BUGGY]  String  value  =(String)this.options.get(t);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  value  =(String)this.options.get(t);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  value  =(String)this.options.get(t);	      String    value    =(String)options.get(token);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
83	[BUG]  [BUGGY]  String  value  =(String)options.getValue(t);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  value  =(String)options.getValue(t);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  value  =(String)options.getValue(t);	      String    value    =(String)options.get(token);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
84	[BUG]  [BUGGY]  String  opt  =  options.getOption(token).trim();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  opt  =  options.getOption(token).trim();  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  opt  =  options.getOption(token).trim();	  String    opt    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
85	[BUG]  [BUGGY]  String  opt  =  options.getOption(token)+  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  opt  =  options.getOption(token)+  1;  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  opt  =  options.getOption(token)+  1;	  String    opt    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
86	[BUG]  [BUGGY]  String  value  =  t.substring(i  +  1,  i);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  value  =  t.substring(i  +  1,  i);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  value  =  t.substring(i  +  1,  i);	      String    value    =    t.substring(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
87	[BUG]  [BUGGY]  Option  option  =  options.hasOption(t);  break;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  Option  option  =  options.hasOption(t);  break;  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	Option  option  =  options.hasOption(t);  break;	      if(options.hasOption(opt))    {    option    =    option;    break;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
88	[BUG]  [BUGGY]  if(options.hasLongOption(t))  {  opt  =  t.substring(0,  i);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  if(options.hasLongOption(t))  {  opt  =  t.substring(0,  i);  }  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	if(options.hasLongOption(t))  {  opt  =  t.substring(0,  i);  }	      if(options.hasLongOption(t))    {    opt    =    option.substring(0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
89	[BUG]  [BUGGY]  if(options.hasLongOption(opt))  {  opt  =  t.substring(0,  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  if(options.hasLongOption(opt))  {  opt  =  t.substring(0,  i);  }  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	if(options.hasLongOption(opt))  {  opt  =  t.substring(0,  i);  }	      if(options.hasLongOption(t))    {    opt    =    option.substring(0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
90	[BUG]  [BUGGY]  String  value  =  Util.stripLeadingHyphens(t);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  value  =  Util.stripLeadingHyphens(t);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  value  =  Util.stripLeadingHyphens(t);	      String    value    =    Util.stripLeadingHyphens(token);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
91	[BUG]  [BUGGY]  String  opt  =(token  ==  null)?  null  :  token.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  opt  =(token  ==  null)?  null  :  token.substring(0,  i);  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  opt  =(token  ==  null)?  null  :  token.substring(0,  i);	  String    opt    =(token    ==    null)?    null    :    token.trim();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
92	[BUG]  [BUGGY]  String  opt  =  t.trim();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  String  opt  =  t.trim();  [BUGGY]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	String  opt  =  t.trim();	  String    opt    =    t;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
93	[BUG]  [BUGGY]  Option  option  =  currentOption.getOption(token);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  String  getLongPrefix(String  token)  {  String  t  =  Util.stripLeadingHyphens(token);  int  i;    [BUGGY]  Option  option  =  currentOption.getOption(token);  [BUGGY]    String  opt  =  null;  for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  option  prefix  t  token  value  int  i  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	1.0	573	573	1	replace	Option  option  =  currentOption.getOption(token);	      Option    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
