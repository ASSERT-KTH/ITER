bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  OptionGroup  group  =  cmd.getOptionGroup(options);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  OptionGroup  group  =  cmd.getOptionGroup(options);  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	OptionGroup  group  =  cmd.getOptionGroup(options);	      OptionGroup    group    =    options.getOptionGroup(cmd);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
2	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  OptionGroup  group  =  options.getOptionGroup(cmd,  stopAtNonOption);  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	OptionGroup  group  =  options.getOptionGroup(cmd,  stopAtNonOption);	      OptionGroup    group    =    options.getOptionGroup(cmd);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
3	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentToken);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentToken);  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	OptionGroup  group  =  options.getOptionGroup(currentToken);	      OptionGroup    group    =    options.getOptionGroup(cmd);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
4	[BUG]  [BUGGY]  String[]  arguments  =  cmd.split( "- ");  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  String[]  arguments  =  cmd.split( "- ");  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String[]  arguments  =  cmd.split( "- ");	      String[]    arguments    =    cmd.split(   "n   ");    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
5	[BUG]  [BUGGY]  String[]  arguments  =  cmd.split( "/ ");  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  String[]  arguments  =  cmd.split( "/ ");  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String[]  arguments  =  cmd.split( "/ ");	      String[]    arguments    =    cmd.split(   "n   ");    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
6	[BUG]  [BUGGY]  String[]  arguments  =  cmd.toArray(new  String[cmd.size()  -  1]);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  String[]  arguments  =  cmd.toArray(new  String[cmd.size()  -  1]);  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String[]  arguments  =  cmd.toArray(new  String[cmd.size()  -  1]);	      String[]    arguments    =    cmd.toArray(new    String[cmd.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
7	[BUG]  [BUGGY]  String[]  arguments  =  cmd.toArray(new  String[cmd.size()  +  1]);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  String[]  arguments  =  cmd.toArray(new  String[cmd.size()  +  1]);  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String[]  arguments  =  cmd.toArray(new  String[cmd.size()  +  1]);	      String[]    arguments    =    cmd.toArray(new    String[cmd.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
8	[BUG]  [BUGGY]  for(String  argument  :  arguments.toArray(new  String[arguments.size()  ]),  cmd)  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  for(String  argument  :  arguments.toArray(new  String[arguments.size()  ]),  cmd)  {  [BUGGY]    {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  arguments.toArray(new  String[arguments.size()  ]),  cmd)  {	  for(String    argument    :    arguments.toArray(new    String[arguments.size()    ]))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
9	[BUG]  [BUGGY]  for(String  argument  :  options.toArray(new  String[arguments.size()  ]))  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  for(String  argument  :  options.toArray(new  String[arguments.size()  ]))  {  [BUGGY]    {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  options.toArray(new  String[arguments.size()  ]))  {	  for(String    argument    :    arguments.toArray(new    String[arguments.size()    ]))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
10	[BUG]  [BUGGY]  for(String  argument  :  properties.toArray(new  String[arguments.size()  ]))  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  for(String  argument  :  properties.toArray(new  String[arguments.size()  ]))  {  [BUGGY]    {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  properties.toArray(new  String[arguments.size()  ]))  {	  for(String    argument    :    arguments.toArray(new    String[arguments.size()    ]))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
11	[BUG]  [BUGGY]  String[]  arguments  =  cmd.toArray(new  String[cmd.length()  -  1]);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  String[]  arguments  =  cmd.toArray(new  String[cmd.length()  -  1]);  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String[]  arguments  =  cmd.toArray(new  String[cmd.length()  -  1]);	      String[]    arguments    =    cmd.toArray(new    String[cmd.length()    ]);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
12	[BUG]  [BUGGY]  String[]  arguments  =  cmd.toArray(new  String[cmd.length()  +  1]);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  String[]  arguments  =  cmd.toArray(new  String[cmd.length()  +  1]);  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String[]  arguments  =  cmd.toArray(new  String[cmd.length()  +  1]);	      String[]    arguments    =    cmd.toArray(new    String[cmd.length()    ]);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
13	[BUG]  [BUGGY]  for(String  argument  :  arguments.length,  cmd)  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  for(String  argument  :  arguments.length,  cmd)  {  [BUGGY]    {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  arguments.length,  cmd)  {	  for(String    argument    :    arguments.length)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
14	[BUG]  [BUGGY]  Options  options  =  cmd.getOptions();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  Options  options  =  cmd.getOptions();  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Options  options  =  cmd.getOptions();	      Options    options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
15	[BUG]  [BUGGY]  Options  options  =  currentOption.getOptions();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  Options  options  =  currentOption.getOptions();  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Options  options  =  currentOption.getOptions();	      Options    options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
16	[BUG]  [BUGGY]  Options  options  =  group.getOptions();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  Options  options  =  group.getOptions();  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Options  options  =  group.getOptions();	      Options    options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
17	[BUG]  [BUGGY]  Option  options  =  cmd.getOptions();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  Option  options  =  cmd.getOptions();  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  options  =  cmd.getOptions();	      Options    options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
18	[BUG]  [BUGGY]  Options  properties  =  cmd.getOptions();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  Options  properties  =  cmd.getOptions();  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Options  properties  =  cmd.getOptions();	      Options    properties    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
19	[BUG]  [BUGGY]  Options  properties  =  options.getOptions(cmd);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  Options  properties  =  options.getOptions(cmd);  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Options  properties  =  options.getOptions(cmd);	      Options    properties    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
20	[BUG]  [BUGGY]  Option  properties  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  Option  properties  =  options.getOptions();  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  properties  =  options.getOptions();	      Options    properties    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
21	[BUG]  [BUGGY]  for(String  argument  :  options.values())  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  for(String  argument  :  options.values())  {  [BUGGY]    {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  options.values())  {	  for(String    argument    :    arguments.values())    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
22	[BUG]  [BUGGY]  for(String  argument  :  properties.values())  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  for(String  argument  :  properties.values())  {  [BUGGY]    {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  properties.values())  {	  for(String    argument    :    arguments.values())    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
23	[BUG]  [BUGGY]  for(String  argument  :  properties.split( "null "))  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  for(String  argument  :  properties.split( "null "))  {  [BUGGY]    {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  properties.split( "null "))  {	  for(String    argument    :    arguments.split(   "n   "))    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
24	[BUG]  [BUGGY]  for(String  argument  :  arguments.split( "- "))  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  for(String  argument  :  arguments.split( "- "))  {  [BUGGY]    {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  arguments.split( "- "))  {	  for(String    argument    :    arguments.split(   "n   "))    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
25	[BUG]  [BUGGY]  for(String  argument  :  options.split( "null "))  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  for(String  argument  :  options.split( "null "))  {  [BUGGY]    {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  options.split( "null "))  {	  for(String    argument    :    arguments.split(   "n   "))    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
26	[BUG]  [BUGGY]  for(String  argument  :  options.getOptionArgs())  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  for(String  argument  :  options.getOptionArgs())  {  [BUGGY]    {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  options.getOptionArgs())  {	  for(String    argument    :    options.getArguments())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
27	[BUG]  [BUGGY]  for(String  argument  :  arguments.getArguments())  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  for(String  argument  :  arguments.getArguments())  {  [BUGGY]    {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  arguments.getArguments())  {	  for(String    argument    :    options.getArguments())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
28	[BUG]  [BUGGY]  for(String  argument  :  properties.getArguments())  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  for(String  argument  :  properties.getArguments())  {  [BUGGY]    {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  properties.getArguments())  {	  for(String    argument    :    options.getArguments())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
29	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  arguments);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  arguments);  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  arguments);	      Argument[]    arguments    =    cmd.toArray(new    Arguments);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
30	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  options);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  options);  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  options);	      Argument[]    arguments    =    cmd.toArray(new    Arguments);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
31	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  group);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  group);  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  group);	      Argument[]    arguments    =    cmd.toArray(new    Arguments);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
32	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  0);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  0);  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  0);	      Argument[]    arguments    =    cmd.toArray(new    Arguments);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
33	[BUG]  [BUGGY]  String  argument  =  group.toString();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  String  argument  =  group.toString();  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String  argument  =  group.toString();	      String    argument    =    cmd.toString();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
34	[BUG]  [BUGGY]  String  argument  =(cmd  ==  null)?  null  :  cmd.toString();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  String  argument  =(cmd  ==  null)?  null  :  cmd.toString();  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String  argument  =(cmd  ==  null)?  null  :  cmd.toString();	      String    argument    =    cmd.toString();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
35	[BUG]  [BUGGY]  String  argument  =(cmd!=  null)?  null  :  cmd.toString();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  String  argument  =(cmd!=  null)?  null  :  cmd.toString();  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String  argument  =(cmd!=  null)?  null  :  cmd.toString();	      String    argument    =    cmd.toString();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
36	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(group);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  Option  currentOption  =  options.getOption(group);  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  currentOption  =  options.getOption(group);	      Option    currentOption    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
37	[BUG]  [BUGGY]  Option  currentOption  =  cmd.getOption(options);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  Option  currentOption  =  cmd.getOption(options);  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  currentOption  =  cmd.getOption(options);	      Option    currentOption    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
38	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  Option  currentOption  =  options.getOption(cmd,  stopAtNonOption);  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  currentOption  =  options.getOption(cmd,  stopAtNonOption);	      Option    currentOption    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
39	[BUG]  [BUGGY]  String[]  arguments  =  cmd.split( ":n ");  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  String[]  arguments  =  cmd.split( ":n ");  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String[]  arguments  =  cmd.split( ":n ");	      String[]    arguments    =    cmd.split(   ":   ");    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
40	[BUG]  [BUGGY]  String[]  arguments  =  cmd.split( ": "  +  group.getName());  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  String[]  arguments  =  cmd.split( ": "  +  group.getName());  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String[]  arguments  =  cmd.split( ": "  +  group.getName());	      String[]    arguments    =    cmd.split(   ":   ");    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
41	[BUG]  [BUGGY]  for(String  argument  :  options.keySet())  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  for(String  argument  :  options.keySet())  {  [BUGGY]    {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  options.keySet())  {	  for(String    argument    :    arguments.keySet())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
42	[BUG]  [BUGGY]  for(String  argument  :  properties.keySet())  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  for(String  argument  :  properties.keySet())  {  [BUGGY]    {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  properties.keySet())  {	  for(String    argument    :    arguments.keySet())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
43	[BUG]  [BUGGY]  for(String  argument  :  options.properties)  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  for(String  argument  :  options.properties)  {  [BUGGY]    {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  options.properties)  {	  for(String    argument    :    properties)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
44	[BUG]  [BUGGY]  for(String  argument  :  cmd.properties)  {  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  for(String  argument  :  cmd.properties)  {  [BUGGY]    {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  cmd.properties)  {	  for(String    argument    :    properties)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
45	[BUG]  [BUGGY]  String  argument  =  this.cmd.toString();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  String  argument  =  this.cmd.toString();  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String  argument  =  this.cmd.toString();	      String    argument    =    cmd.toString();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
46	[BUG]  [BUGGY]  String  argument  =  cmd.toString()  + "n ";  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  String  argument  =  cmd.toString()  + "n ";  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String  argument  =  cmd.toString()  + "n ";	      String    argument    =    cmd.toString();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
47	[BUG]  [BUGGY]  for(String  argument  :  options.getArgumentNames())  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  for(String  argument  :  options.getArgumentNames())  {  [BUGGY]    {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  options.getArgumentNames())  {	  for(String    argument    :    options.getArguments())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
48	[BUG]  [BUGGY]  for(String  argument  :  cmd.getArguments())  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  for(String  argument  :  cmd.getArguments())  {  [BUGGY]    {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  cmd.getArguments())  {	  for(String    argument    :    options.getArguments())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
49	[BUG]  [BUGGY]  Option  options  =  currentOption.getOptions();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  Option  options  =  currentOption.getOptions();  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  options  =  currentOption.getOptions();	      Options    options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
50	[BUG]  [BUGGY]  for(String  argument  :  properties.length)  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  for(String  argument  :  properties.length)  {  [BUGGY]    {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  properties.length)  {	  for(String    argument    :    arguments.length)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
51	[BUG]  [BUGGY]  Options  properties  =  currentOption.getOptions();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  Options  properties  =  currentOption.getOptions();  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Options  properties  =  currentOption.getOptions();	      Options    properties    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
52	[BUG]  [BUGGY]  String[]  arguments  =  group.split( ": ");  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  String[]  arguments  =  group.split( ": ");  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String[]  arguments  =  group.split( ": ");	      String[]    arguments    =    cmd.split(   ":   ");    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
53	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentOption);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentOption);  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	OptionGroup  group  =  options.getOptionGroup(currentOption);	      OptionGroup    group    =    options.getOptionGroup(cmd);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
54	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(arguments);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  Argument[]  arguments  =  cmd.toArray(arguments);  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(arguments);	      Argument[]    arguments    =    cmd.toArray(new    Arguments);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
55	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  exceptions);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  exceptions);  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  exceptions);	      Argument[]    arguments    =    cmd.toArray(new    Arguments);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
56	[BUG]  [BUGGY]  for(String  argument  :  arguments.toArray(new  String[arguments.size()  ]),  currentToken)  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  for(String  argument  :  arguments.toArray(new  String[arguments.size()  ]),  currentToken)  {  [BUGGY]    {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  arguments.toArray(new  String[arguments.size()  ]),  currentToken)  {	  for(String    argument    :    arguments.toArray(new    String[arguments.size()    ]))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
57	[BUG]  [BUGGY]  Options  properties  =  options.getOptionGroups();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  Options  properties  =  options.getOptionGroups();  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Options  properties  =  options.getOptionGroups();	      Options    properties    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
58	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(cmd,  currentToken);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  OptionGroup  group  =  options.getOptionGroup(cmd,  currentToken);  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	OptionGroup  group  =  options.getOptionGroup(cmd,  currentToken);	      OptionGroup    group    =    options.getOptionGroup(cmd);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
59	[BUG]  [BUGGY]  for(String  argument  :  options.getArgumentArgs())  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  for(String  argument  :  options.getArgumentArgs())  {  [BUGGY]    {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  options.getArgumentArgs())  {	  for(String    argument    :    cmd)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
60	[BUG]  [BUGGY]  Option  options  =  group.getOptions();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  Option  options  =  group.getOptions();  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  options  =  group.getOptions();	      Options    options    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
61	[BUG]  [BUGGY]  for(String  argument  :  arguments.split( "/ "))  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  for(String  argument  :  arguments.split( "/ "))  {  [BUGGY]    {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  arguments.split( "/ "))  {	  for(String    argument    :    arguments.split(   "n   "))    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
62	[BUG]  [BUGGY]  for(String  argument  :  arguments.toArray(new  String[arguments.size()  ]),  stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  for(String  argument  :  arguments.toArray(new  String[arguments.size()  ]),  stopAtNonOption)  {  [BUGGY]    {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  arguments.toArray(new  String[arguments.size()  ]),  stopAtNonOption)  {	  for(String    argument    :    arguments.toArray(new    String[arguments.size()    ]))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
63	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  group);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  Option  currentOption  =  options.getOption(cmd,  group);  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  currentOption  =  options.getOption(cmd,  group);	      Option    currentOption    =    options.getOption(cmd);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
64	[BUG]  [BUGGY]  for(String  argument  :  arguments.toArray(new  String[arguments.length]))  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  for(String  argument  :  arguments.toArray(new  String[arguments.length]))  {  [BUGGY]    {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  arguments.toArray(new  String[arguments.length]))  {	  for(String    argument    :    arguments.length)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
65	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  currentToken);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  currentToken);  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  currentToken);	      Argument[]    arguments    =    cmd.toArray(new    Arguments);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
66	[BUG]  [BUGGY]  Argument[]  arguments  =  options.toArray(new  Arguments);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  Argument[]  arguments  =  options.toArray(new  Arguments);  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  options.toArray(new  Arguments);	      Argument[]    arguments    =    cmd.toArray(new    Arguments);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
67	[BUG]  [BUGGY]  String  argument  =  arguments.toString();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {    [BUGGY]  String  argument  =  arguments.toString();  [BUGGY]    for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String  argument  =  arguments.toString();	      String    argument    =    cmd.toString();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
