bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(String  argument  :  properties.split( "- "))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  properties.split( "- "))  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  properties.split( "- "))  {	  for(String    argument    :    arguments.split(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
2	[BUG]  [BUGGY]  for(String  argument  :  options.split( "- "))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  options.split( "- "))  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  options.split( "- "))  {	  for(String    argument    :    arguments.split(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
3	[BUG]  [BUGGY]  String[]  arguments  =  cmd.toArray(new  String[cmd.size()  *  1]);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.toArray(new  String[cmd.size()  *  1]);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String[]  arguments  =  cmd.toArray(new  String[cmd.size()  *  1]);	  String[]    arguments    =    cmd.toArray(new    String[cmd.size()    +    1]);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
4	[BUG]  [BUGGY]  Argument[]  arguments  =  group.toArray(new  Arguments,  cmd);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  group.toArray(new  Arguments,  cmd);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  group.toArray(new  Arguments,  cmd);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    group);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
5	[BUG]  [BUGGY]  Argument[]  arguments  =  group.toArray(new  Arguments);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  group.toArray(new  Arguments);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  group.toArray(new  Arguments);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    group);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
6	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  group,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  group,  expectedOpts);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  group,  expectedOpts);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    group);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
7	[BUG]  [BUGGY]  Option  options  =  cmd.getOptionGroups();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  options  =  cmd.getOptionGroups();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  options  =  cmd.getOptionGroups();	  Option    options    =    cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
8	[BUG]  [BUGGY]  Option  options  =  group.getOptions(),  cmd);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  options  =  group.getOptions(),  cmd);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  options  =  group.getOptions(),  cmd);	  Option    options    =    group.getOptions();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
9	[BUG]  [BUGGY]  Option  options  =  currentOption.getOptions(),  cmd);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  options  =  currentOption.getOptions(),  cmd);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  options  =  currentOption.getOptions(),  cmd);	  Option    options    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
10	[BUG]  [BUGGY]  for(String  argument  :  cmd.toArray(new  String[arguments.size()  ]),  currentToken)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  cmd.toArray(new  String[arguments.size()  ]),  currentToken)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  cmd.toArray(new  String[arguments.size()  ]),  currentToken)  {	  for(String    argument    :    arguments.toArray(new    String[arguments.size()    ]),    currentToken)    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
11	[BUG]  [BUGGY]  for(String  argument  :  options.toArray(new  String[arguments.size()  ]),  currentToken)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  options.toArray(new  String[arguments.size()  ]),  currentToken)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  options.toArray(new  String[arguments.size()  ]),  currentToken)  {	  for(String    argument    :    arguments.toArray(new    String[arguments.size()    ]),    currentToken)    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
12	[BUG]  [BUGGY]  for(String  argument  :  properties.toArray(new  String[arguments.size()  ]),  currentToken)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  properties.toArray(new  String[arguments.size()  ]),  currentToken)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  properties.toArray(new  String[arguments.size()  ]),  currentToken)  {	  for(String    argument    :    arguments.toArray(new    String[arguments.size()    ]),    currentToken)    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
13	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(group,  cmd);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOption(group,  cmd);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  currentOption  =  options.getOption(group,  cmd);	  Option    currentOption    =    options.getOption(cmd,    group);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
14	[BUG]  [BUGGY]  Option  currentOption  =  cmd.getOption(options,  group);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  cmd.getOption(options,  group);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  currentOption  =  cmd.getOption(options,  group);	  Option    currentOption    =    options.getOption(cmd,    group);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
15	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  group,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOption(cmd,  group,  stopAtNonOption);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  currentOption  =  options.getOption(cmd,  group,  stopAtNonOption);	  Option    currentOption    =    options.getOption(cmd,    group);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
16	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  group,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOption(cmd,  group,  0);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  currentOption  =  options.getOption(cmd,  group,  0);	  Option    currentOption    =    options.getOption(cmd,    group);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
17	[BUG]  [BUGGY]  for(String  argument  :  options.toArray(new  String[arguments.size()  ]),  cmd)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  options.toArray(new  String[arguments.size()  ]),  cmd)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  options.toArray(new  String[arguments.size()  ]),  cmd)  {	  for(String    argument    :    options.toArray(new    String[arguments.size()    ]))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
18	[BUG]  [BUGGY]  for(String  argument  :  options.toArray(new  String[arguments.size()  -  1]))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  options.toArray(new  String[arguments.size()  -  1]))  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  options.toArray(new  String[arguments.size()  -  1]))  {	  for(String    argument    :    options.toArray(new    String[arguments.size()    ]))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
19	[BUG]  [BUGGY]  for(String  argument  :  properties.properties)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  properties.properties)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  properties.properties)  {	  for(String    argument    :    options.properties)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
20	[BUG]  [BUGGY]  for(String  argument  :  properties.split( "n "))  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  properties.split( "n "))  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  properties.split( "n "))  {	  for(String    argument    :    properties.split(   "null   "))    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
21	[BUG]  [BUGGY]  for(String  argument  :  arguments.split( "null "))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  arguments.split( "null "))  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  arguments.split( "null "))  {	  for(String    argument    :    properties.split(   "null   "))    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
22	[BUG]  [BUGGY]  for(String  argument  :  properties.split( "_ "))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  properties.split( "_ "))  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  properties.split( "_ "))  {	  for(String    argument    :    properties.split(   "null   "))    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
23	[BUG]  [BUGGY]  String  argument  =(cmd  ==  null)?  null  :  cmd.toString()  + "n ";  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String  argument  =(cmd  ==  null)?  null  :  cmd.toString()  + "n ";  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String  argument  =(cmd  ==  null)?  null  :  cmd.toString()  + "n ";	  String    argument    =(cmd!=    null)?    null    :    cmd.toString();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
24	[BUG]  [BUGGY]  String[]  arguments  =  cmd.toArray(new  String[cmd.length()  *  1]);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.toArray(new  String[cmd.length()  *  1]);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String[]  arguments  =  cmd.toArray(new  String[cmd.length()  *  1]);	  String[]    arguments    =    cmd.toArray(new    String[cmd.length()    +    1]);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
25	[BUG]  [BUGGY]  String[]  arguments  =  cmd.split( "/> ");  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.split( "/> ");  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String[]  arguments  =  cmd.split( "/> ");	  String[]    arguments    =    cmd.split(   "/   ");    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
26	[BUG]  [BUGGY]  String[]  arguments  =  cmd.split( "/.* ");  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.split( "/.* ");  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String[]  arguments  =  cmd.split( "/.* ");	  String[]    arguments    =    cmd.split(   "/   ");    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
27	[BUG]  [BUGGY]  String[]  arguments  =  cmd.split( "/. ");  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.split( "/. ");  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String[]  arguments  =  cmd.split( "/. ");	  String[]    arguments    =    cmd.split(   "/   ");    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
28	[BUG]  [BUGGY]  for(String  argument  :  options.properties.length)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  options.properties.length)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  options.properties.length)  {	  for(String    argument    :    properties.length)    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
29	[BUG]  [BUGGY]  String[]  arguments  =  group.split( ": "  +  cmd.getName());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  group.split( ": "  +  cmd.getName());  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String[]  arguments  =  group.split( ": "  +  cmd.getName());	  String[]    arguments    =    cmd.split(   ":   "    +    group.getName());    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
30	[BUG]  [BUGGY]  String[]  arguments  =  cmd.split( ": "  +  group.getName()  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.split( ": "  +  group.getName()  +  1);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String[]  arguments  =  cmd.split( ": "  +  group.getName()  +  1);	  String[]    arguments    =    cmd.split(   ":   "    +    group.getName());    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
31	[BUG]  [BUGGY]  String[]  arguments  =  cmd.split( ": "  +  group.getName()  + ";n ");  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.split( ": "  +  group.getName()  + ";n ");  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String[]  arguments  =  cmd.split( ": "  +  group.getName()  + ";n ");	  String[]    arguments    =    cmd.split(   ":   "    +    group.getName());    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
32	[BUG]  [BUGGY]  for(String  argument  :  cmd.values())  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  cmd.values())  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  cmd.values())  {	  for(String    argument    :    properties.values())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
33	[BUG]  [BUGGY]  String[]  arguments  =  cmd.toArray(new  String[group.size()]);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.toArray(new  String[group.size()]);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String[]  arguments  =  cmd.toArray(new  String[group.size()]);	  String[]    arguments    =    cmd.toArray(new    String[cmd.size()    -    1]);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
34	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  arguments,  currentToken);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  arguments,  currentToken);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  arguments,  currentToken);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    arguments);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
35	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  arguments,  stopAtNonOption);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  arguments,  stopAtNonOption);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    arguments);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
36	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  arguments,  true);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  arguments,  true);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  arguments,  true);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    arguments);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
37	[BUG]  [BUGGY]  for(String  argument  :  arguments.getArgumentNames())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  arguments.getArgumentNames())  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  arguments.getArgumentNames())  {	  for(String    argument    :    options.getArgumentNames())    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
38	[BUG]  [BUGGY]  for(String  argument  :  properties.getArgumentNames())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  properties.getArgumentNames())  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  properties.getArgumentNames())  {	  for(String    argument    :    options.getArgumentNames())    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
39	[BUG]  [BUGGY]  for(String  argument  :  options.getOptionNames())  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  options.getOptionNames())  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  options.getOptionNames())  {	  for(String    argument    :    options.getArgumentNames())    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
40	[BUG]  [BUGGY]  OptionGroup  group  =  cmd.getOptionGroup(options,  currentToken);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  OptionGroup  group  =  cmd.getOptionGroup(options,  currentToken);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	OptionGroup  group  =  cmd.getOptionGroup(options,  currentToken);	  OptionGroup    group    =    cmd.getOptionGroup(options);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
41	[BUG]  [BUGGY]  OptionGroup  group  =  cmd.getOptionGroup(options,  true);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  OptionGroup  group  =  cmd.getOptionGroup(options,  true);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	OptionGroup  group  =  cmd.getOptionGroup(options,  true);	  OptionGroup    group    =    cmd.getOptionGroup(options);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
42	[BUG]  [BUGGY]  Argument[]  arguments  =  options.toArray(new  Arguments,  cmd);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  options.toArray(new  Arguments,  cmd);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  options.toArray(new  Arguments,  cmd);	  Argument[]    arguments    =    options.toArray(new    Arguments);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
43	[BUG]  [BUGGY]  Argument[]  arguments  =  options.toArray(cmd);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  options.toArray(cmd);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  options.toArray(cmd);	  Argument[]    arguments    =    options.toArray(new    Arguments);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
44	[BUG]  [BUGGY]  Option[]  arguments  =  options.toArray(new  Option[arguments.size()  ]);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option[]  arguments  =  options.toArray(new  Option[arguments.size()  ]);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option[]  arguments  =  options.toArray(new  Option[arguments.size()  ]);	  Argument[]    arguments    =    options.toArray(new    Arguments);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
45	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentToken,  cmd);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentToken,  cmd);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	OptionGroup  group  =  options.getOptionGroup(currentToken,  cmd);	  OptionGroup    group    =    options.getOptionGroup(cmd,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
46	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(cmd,  currentToken,  skipParsing);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(cmd,  currentToken,  skipParsing);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	OptionGroup  group  =  options.getOptionGroup(cmd,  currentToken,  skipParsing);	  OptionGroup    group    =    options.getOptionGroup(cmd,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
47	[BUG]  [BUGGY]  OptionGroup  group  =  currentOption.getOptionGroup(cmd,  options);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  OptionGroup  group  =  currentOption.getOptionGroup(cmd,  options);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	OptionGroup  group  =  currentOption.getOptionGroup(cmd,  options);	  OptionGroup    group    =    options.getOptionGroup(cmd,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
48	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(cmd,  currentToken,  ignoreParsing);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(cmd,  currentToken,  ignoreParsing);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	OptionGroup  group  =  options.getOptionGroup(cmd,  currentToken,  ignoreParsing);	  OptionGroup    group    =    options.getOptionGroup(cmd,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
49	[BUG]  [BUGGY]  for(String  argument  :  arguments.getArgumentArgs())  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  arguments.getArgumentArgs())  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  arguments.getArgumentArgs())  {	  for(String    argument    :    options.getArgumentArgs())    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
50	[BUG]  [BUGGY]  for(String  argument  :  properties.toArray(new  String[arguments.size()  ]),  cmd)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  properties.toArray(new  String[arguments.size()  ]),  cmd)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  properties.toArray(new  String[arguments.size()  ]),  cmd)  {	  for(String    argument    :    arguments.toArray(new    String[arguments.size()    ]),    cmd)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
51	[BUG]  [BUGGY]  for(String  argument  :  arguments.toArray(new  String[arguments.size()  ]),  command)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  arguments.toArray(new  String[arguments.size()  ]),  command)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  arguments.toArray(new  String[arguments.size()  ]),  command)  {	  for(String    argument    :    arguments.toArray(new    String[arguments.size()    ]),    cmd)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
52	[BUG]  [BUGGY]  for(String  argument  :  properties.split( "/ "))  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  properties.split( "/ "))  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  properties.split( "/ "))  {	  for(String    argument    :    arguments.split(   "/   "))    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
53	[BUG]  [BUGGY]  for(String  argument  :  options.split( "/ "))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  options.split( "/ "))  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  options.split( "/ "))  {	  for(String    argument    :    arguments.split(   "/   "))    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
54	[BUG]  [BUGGY]  for(String  argument  :  options.split( "/.* "))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  options.split( "/.* "))  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  options.split( "/.* "))  {	  for(String    argument    :    arguments.split(   "/   "))    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
55	[BUG]  [BUGGY]  for(String  argument  :  arguments.getOptionArgs())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  arguments.getOptionArgs())  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  arguments.getOptionArgs())  {	  for(String    argument    :    options.getOptionArgs())    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
56	[BUG]  [BUGGY]  for(String  argument  :  options.getArgs())  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  options.getArgs())  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  options.getArgs())  {	  for(String    argument    :    options.getOptionArgs())    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
57	[BUG]  [BUGGY]  String  argument  =  cmd.toString()  + ": ";  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String  argument  =  cmd.toString()  + ": ";  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String  argument  =  cmd.toString()  + ": ";	  String    argument    =    cmd.toString()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
58	[BUG]  [BUGGY]  String  argument  =  cmd.toString()  + ";n ";  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String  argument  =  cmd.toString()  + ";n ";  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String  argument  =  cmd.toString()  + ";n ";	  String    argument    =    cmd.toString()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
59	[BUG]  [BUGGY]  String  argument  =  cmd.toString()  + "  - ";  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String  argument  =  cmd.toString()  + "  - ";  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String  argument  =  cmd.toString()  + "  - ";	  String    argument    =    cmd.toString()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
60	[BUG]  [BUGGY]  for(String  argument  :  properties.toArray(new  String[arguments.size()  ]),  stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  properties.toArray(new  String[arguments.size()  ]),  stopAtNonOption)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  properties.toArray(new  String[arguments.size()  ]),  stopAtNonOption)  {	  for(String    argument    :    arguments.toArray(new    String[arguments.size()    ]),    stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
61	[BUG]  [BUGGY]  for(String  argument  :  options.toArray(new  String[arguments.size()  ]),  stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  options.toArray(new  String[arguments.size()  ]),  stopAtNonOption)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  options.toArray(new  String[arguments.size()  ]),  stopAtNonOption)  {	  for(String    argument    :    arguments.toArray(new    String[arguments.size()    ]),    stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
62	[BUG]  [BUGGY]  for(String  argument  :  cmd.toArray(new  String[arguments.size()  ]),  stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  cmd.toArray(new  String[arguments.size()  ]),  stopAtNonOption)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  cmd.toArray(new  String[arguments.size()  ]),  stopAtNonOption)  {	  for(String    argument    :    arguments.toArray(new    String[arguments.size()    ]),    stopAtNonOption)    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
63	[BUG]  [BUGGY]  for(String  argument  :  arguments.keySet(),  cmd)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  arguments.keySet(),  cmd)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  arguments.keySet(),  cmd)  {	  for(String    argument    :    arguments.length,    cmd)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
64	[BUG]  [BUGGY]  for(String  argument  :  arguments.length,  commandLine)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  arguments.length,  commandLine)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  arguments.length,  commandLine)  {	  for(String    argument    :    arguments.length,    cmd)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
65	[BUG]  [BUGGY]  for(String  argument  :  arguments.length,  command)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  arguments.length,  command)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  arguments.length,  command)  {	  for(String    argument    :    arguments.length,    cmd)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
66	[BUG]  [BUGGY]  Option  currentOption  =  cmd.getOption(group);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  cmd.getOption(group);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  currentOption  =  cmd.getOption(group);	  Option    currentOption    =    options.getOption(group);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
67	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currentToken);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOption(currentToken);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  currentOption  =  options.getOption(currentToken);	  Option    currentOption    =    options.getOption(group);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
68	[BUG]  [BUGGY]  Argument[]  arguments  =  exceptions.toArray(new  Arguments,  cmd);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  exceptions.toArray(new  Arguments,  cmd);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  exceptions.toArray(new  Arguments,  cmd);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    exceptions);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
69	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  exceptions,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  exceptions,  expectedOpts);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  exceptions,  expectedOpts);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    exceptions);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
70	[BUG]  [BUGGY]  Argument[]  arguments  =  options.toArray(new  Arguments,  exceptions);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  options.toArray(new  Arguments,  exceptions);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  options.toArray(new  Arguments,  exceptions);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    exceptions);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
71	[BUG]  [BUGGY]  Argument[]  arguments  =  currentToken.toArray(new  Arguments);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  currentToken.toArray(new  Arguments);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  currentToken.toArray(new  Arguments);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
72	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  currentToken,  expectedOpts);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  currentToken,  expectedOpts);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
73	[BUG]  [BUGGY]  Argument[]  arguments  =  currentToken.toArray(new  Arguments,  cmd);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  currentToken.toArray(new  Arguments,  cmd);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  currentToken.toArray(new  Arguments,  cmd);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
74	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(arguments,  true);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  cmd.toArray(arguments,  true);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(arguments,  true);	  Argument[]    arguments    =    cmd.toArray(arguments);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
75	[BUG]  [BUGGY]  Argument[]  arguments  =  options.toArray(arguments);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  options.toArray(arguments);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  options.toArray(arguments);	  Argument[]    arguments    =    cmd.toArray(arguments);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
76	[BUG]  [BUGGY]  Options  properties  =  group.getOptions();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Options  properties  =  group.getOptions();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Options  properties  =  group.getOptions();	  Options    properties    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
77	[BUG]  [BUGGY]  for(String  argument  :  arguments.toArray(new  String[arguments.length  -  1]))  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  arguments.toArray(new  String[arguments.length  -  1]))  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  arguments.toArray(new  String[arguments.length  -  1]))  {	  for(String    argument    :    arguments.toArray(new    String[arguments.length]))    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
78	[BUG]  [BUGGY]  for(String  argument  :  options.toArray(new  String[arguments.length]))  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  options.toArray(new  String[arguments.length]))  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  options.toArray(new  String[arguments.length]))  {	  for(String    argument    :    arguments.toArray(new    String[arguments.length]))    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
79	[BUG]  [BUGGY]  for(String  argument  :  properties.toArray(new  String[arguments.length]))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  properties.toArray(new  String[arguments.length]))  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  properties.toArray(new  String[arguments.length]))  {	  for(String    argument    :    arguments.toArray(new    String[arguments.length]))    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
80	[BUG]  [BUGGY]  String  argument  =(cmd  ==  null)?  null  :  cmd.toString()  + ", ";  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String  argument  =(cmd  ==  null)?  null  :  cmd.toString()  + ", ";  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String  argument  =(cmd  ==  null)?  null  :  cmd.toString()  + ", ";	  String    argument    =(cmd    ==    null)?    null    :    cmd.toString();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
81	[BUG]  [BUGGY]  OptionGroup  group  =  currentOption.getOptionGroup(options);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  OptionGroup  group  =  currentOption.getOptionGroup(options);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	OptionGroup  group  =  currentOption.getOptionGroup(options);	  OptionGroup    group    =    options.getOptionGroup(currentToken);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
82	[BUG]  [BUGGY]  Option  properties  =  cmd.getOptions();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  properties  =  cmd.getOptions();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  properties  =  cmd.getOptions();	  Option    properties    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
83	[BUG]  [BUGGY]  Option  properties  =  options.getOptions(cmd);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  properties  =  options.getOptions(cmd);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  properties  =  options.getOptions(cmd);	  Option    properties    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
84	[BUG]  [BUGGY]  Option  properties  =  options.getOptions(),  cmd);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  properties  =  options.getOptions(),  cmd);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  properties  =  options.getOptions(),  cmd);	  Option    properties    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
85	[BUG]  [BUGGY]  String  argument  =(arguments!=  null)?  null  :  arguments.toString();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String  argument  =(arguments!=  null)?  null  :  arguments.toString();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String  argument  =(arguments!=  null)?  null  :  arguments.toString();	  String    argument    =    arguments.toString();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
86	[BUG]  [BUGGY]  String  argument  =  options.toString();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String  argument  =  options.toString();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String  argument  =  options.toString();	  String    argument    =    arguments.toString();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
87	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  stopAtNonOption,  properties);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOption(cmd,  stopAtNonOption,  properties);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  currentOption  =  options.getOption(cmd,  stopAtNonOption,  properties);	  Option    currentOption    =    options.getOption(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
88	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOption(cmd,  blockAtNonOption);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  currentOption  =  options.getOption(cmd,  blockAtNonOption);	  Option    currentOption    =    options.getOption(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
89	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  block);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOption(cmd,  block);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  currentOption  =  options.getOption(cmd,  block);	  Option    currentOption    =    options.getOption(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
90	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(cmd,  stopAtNonOption,  properties);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(cmd,  stopAtNonOption,  properties);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	OptionGroup  group  =  options.getOptionGroup(cmd,  stopAtNonOption,  properties);	  OptionGroup    group    =    options.getOptionGroup(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
91	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(cmd,  skipParsing);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(cmd,  skipParsing);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	OptionGroup  group  =  options.getOptionGroup(cmd,  skipParsing);	  OptionGroup    group    =    options.getOptionGroup(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
92	[BUG]  [BUGGY]  String[]  arguments  =  cmd.split( "- "  +  group.getName());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.split( "- "  +  group.getName());  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String[]  arguments  =  cmd.split( "- "  +  group.getName());	  String[]    arguments    =    cmd.split(   "-   ");    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
93	[BUG]  [BUGGY]  String[]  arguments  =  cmd.split( "- ")+  Arrays.asList(properties);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.split( "- ")+  Arrays.asList(properties);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String[]  arguments  =  cmd.split( "- ")+  Arrays.asList(properties);	  String[]    arguments    =    cmd.split(   "-   ");    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
94	[BUG]  [BUGGY]  Options  properties  =  options.getOptions(group);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Options  properties  =  options.getOptions(group);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Options  properties  =  options.getOptions(group);	  Options    properties    =    options.getOptions(cmd);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
95	[BUG]  [BUGGY]  Options  properties  =  options.getOptions(cmd,  currentToken);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Options  properties  =  options.getOptions(cmd,  currentToken);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Options  properties  =  options.getOptions(cmd,  currentToken);	  Options    properties    =    options.getOptions(cmd);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
96	[BUG]  [BUGGY]  Options  properties  =  options.getOptions(currentOption);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Options  properties  =  options.getOptions(currentOption);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Options  properties  =  options.getOptions(currentOption);	  Options    properties    =    options.getOptions(cmd);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
97	[BUG]  [BUGGY]  OptionGroup  group  =  cmd.getOptionGroup(currentOption);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  OptionGroup  group  =  cmd.getOptionGroup(currentOption);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	OptionGroup  group  =  cmd.getOptionGroup(currentOption);	  OptionGroup    group    =    options.getOptionGroup(currentOption);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
98	[BUG]  [BUGGY]  Options  properties  =  options.getOptionProperties();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Options  properties  =  options.getOptionProperties();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Options  properties  =  options.getOptionProperties();	  Options    properties    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
99	[BUG]  [BUGGY]  Options  properties  =  options.getOptionFactory();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Options  properties  =  options.getOptionFactory();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Options  properties  =  options.getOptionFactory();	  Options    properties    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
100	[BUG]  [BUGGY]  for(String  argument  :  options.split( "n "))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  options.split( "n "))  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  options.split( "n "))  {	  for(String    argument    :    options.split(   "null   "))    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
101	[BUG]  [BUGGY]  for(String  argument  :  options.split( "_ "))  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  options.split( "_ "))  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  options.split( "_ "))  {	  for(String    argument    :    options.split(   "null   "))    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
102	[BUG]  [BUGGY]  String  argument  =  group.toString()  + ": "  +  cmd.toString();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String  argument  =  group.toString()  + ": "  +  cmd.toString();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String  argument  =  group.toString()  + ": "  +  cmd.toString();	  String    argument    =    group.toString();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
103	[BUG]  [BUGGY]  String  argument  =  group.getName();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String  argument  =  group.getName();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String  argument  =  group.getName();	  String    argument    =    group.toString();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
104	[BUG]  [BUGGY]  Option  currentOption  =  cmd.getOption(options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  cmd.getOption(options,  stopAtNonOption);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  currentOption  =  cmd.getOption(options,  stopAtNonOption);	  Option    currentOption    =    cmd.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
105	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  options,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  options,  expectedOpts);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  options,  expectedOpts);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    options);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
106	[BUG]  [BUGGY]  String[]  arguments  =  cmd.toArray(new  String[Cmd.length()]);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.toArray(new  String[Cmd.length()]);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String[]  arguments  =  cmd.toArray(new  String[Cmd.length()]);	  String[]    arguments    =    cmd.toArray(new    String[cmd.length()    -    1]);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
107	[BUG]  [BUGGY]  String  argument  =(this.cmd!=  null)?  null  :  this.cmd.toString();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String  argument  =(this.cmd!=  null)?  null  :  this.cmd.toString();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String  argument  =(this.cmd!=  null)?  null  :  this.cmd.toString();	  String    argument    =    this.cmd.toString();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
108	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  0,  arguments.length);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  0,  arguments.length);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  0,  arguments.length);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    0);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
109	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  1);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  1);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    0);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
110	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  null);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  null);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  null);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    0);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
111	[BUG]  [BUGGY]  Options  properties  =  cmd.getProperties();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Options  properties  =  cmd.getProperties();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Options  properties  =  cmd.getProperties();	  Options    properties    =    cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
112	[BUG]  [BUGGY]  String[]  arguments  =  cmd.split( "- ")+  Arrays.asList(arguments);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.split( "- ")+  Arrays.asList(arguments);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String[]  arguments  =  cmd.split( "- ")+  Arrays.asList(arguments);	  String[]    arguments    =    cmd.split(   "-   ");    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
113	[BUG]  [BUGGY]  String[]  arguments  =  cmd.split( "- ",  -1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.split( "- ",  -1);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String[]  arguments  =  cmd.split( "- ",  -1);	  String[]    arguments    =    cmd.split(   "-   ");    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
114	[BUG]  [BUGGY]  String[]  arguments  =  cmd.split( "- ",  0);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.split( "- ",  0);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String[]  arguments  =  cmd.split( "- ",  0);	  String[]    arguments    =    cmd.split(   "-   ");    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
115	[BUG]  [BUGGY]  String[]  arguments  =  cmd.toArray(new  String[cmd.size()  1]);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.toArray(new  String[cmd.size()  1]);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String[]  arguments  =  cmd.toArray(new  String[cmd.size()  1]);	  String[]    arguments    =    cmd.toArray(new    String[cmd.size()    +    1]);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
116	[BUG]  [BUGGY]  String  argument  =  group.toString()  + "n ";  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String  argument  =  group.toString()  + "n ";  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String  argument  =  group.toString()  + "n ";	  String    argument    =    group.toString();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
117	[BUG]  [BUGGY]  Option  options  =  currentOption.getOptionGroups();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  options  =  currentOption.getOptionGroups();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  options  =  currentOption.getOptionGroups();	  Option    options    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
118	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(true);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOption(true);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  currentOption  =  options.getOption(true);	  Option    currentOption    =    options.getOption(group);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
119	[BUG]  [BUGGY]  Option  options  =  cmd.getOptions(true);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  options  =  cmd.getOptions(true);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  options  =  cmd.getOptions(true);	  Option    options    =    cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
120	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentToken  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentToken  +  1);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	OptionGroup  group  =  options.getOptionGroup(currentToken  +  1);	  OptionGroup    group    =    options.getOptionGroup(currentToken);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
121	[BUG]  [BUGGY]  String[]  arguments  =  group.split( ":n ");  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  group.split( ":n ");  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String[]  arguments  =  group.split( ":n ");	  String[]    arguments    =    group.split(   ":   ");    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
122	[BUG]  [BUGGY]  String  argument  =(this.cmd  ==  null)?  null  :  this.cmd.toString();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String  argument  =(this.cmd  ==  null)?  null  :  this.cmd.toString();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String  argument  =(this.cmd  ==  null)?  null  :  this.cmd.toString();	  String    argument    =    this.cmd.toString();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
123	[BUG]  [BUGGY]  String  argument  =  groups.toString();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String  argument  =  groups.toString();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String  argument  =  groups.toString();	  String    argument    =    arguments.toString();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
124	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  group,  null);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOption(cmd,  group,  null);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  currentOption  =  options.getOption(cmd,  group,  null);	  Option    currentOption    =    options.getOption(cmd,    group);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
125	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  argument);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  argument);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  argument);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
126	[BUG]  [BUGGY]  for(String  argument  :  options.properties.keySet())  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  options.properties.keySet())  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  options.properties.keySet())  {	  for(String    argument    :    properties.keySet())    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
127	[BUG]  [BUGGY]  Options  properties  =  options.getOptions(cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Options  properties  =  options.getOptions(cmd,  stopAtNonOption);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Options  properties  =  options.getOptions(cmd,  stopAtNonOption);	  Options    properties    =    options.getOptions(cmd);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
128	[BUG]  [BUGGY]  Argument[]  arguments  =  exceptions.toArray(new  Arguments);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  exceptions.toArray(new  Arguments);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  exceptions.toArray(new  Arguments);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    exceptions);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
129	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(exceptions,  new  Arguments);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  cmd.toArray(exceptions,  new  Arguments);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(exceptions,  new  Arguments);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    exceptions);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
130	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(cmd,  currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(cmd,  currentToken,  stopAtNonOption);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	OptionGroup  group  =  options.getOptionGroup(cmd,  currentToken,  stopAtNonOption);	  OptionGroup    group    =    options.getOptionGroup(cmd,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
131	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(cmd,  currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(cmd,  currentToken,  expectedOpts);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	OptionGroup  group  =  options.getOptionGroup(cmd,  currentToken,  expectedOpts);	  OptionGroup    group    =    options.getOptionGroup(cmd,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
132	[BUG]  [BUGGY]  for(String  argument  :  groups.toArray(new  String[arguments.size()  ]),  cmd)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  groups.toArray(new  String[arguments.size()  ]),  cmd)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  groups.toArray(new  String[arguments.size()  ]),  cmd)  {	  for(String    argument    :    arguments.toArray(new    String[arguments.size()    ]),    cmd)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
133	[BUG]  [BUGGY]  Option  options  =  group.getOptions(true);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  options  =  group.getOptions(true);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  options  =  group.getOptions(true);	  Option    options    =    group.getOptions();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
134	[BUG]  [BUGGY]  for(String  argument  :  cmd.toArray(new  String[arguments.length]))  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  cmd.toArray(new  String[arguments.length]))  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  cmd.toArray(new  String[arguments.length]))  {	  for(String    argument    :    arguments.toArray(new    String[arguments.length]))    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
135	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  String[cmd.size()  ]);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  String[cmd.size()  ]);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(new  String[cmd.size()  ]);	  Argument[]    arguments    =    cmd.toArray(arguments);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
136	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  cmd.toArray(arguments,  stopAtNonOption);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(arguments,  stopAtNonOption);	  Argument[]    arguments    =    cmd.toArray(arguments);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
137	[BUG]  [BUGGY]  Option  properties  =  currentOption.getOptions();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  properties  =  currentOption.getOptions();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  properties  =  currentOption.getOptions();	  Option    properties    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
138	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(defaultToken);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(defaultToken);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	OptionGroup  group  =  options.getOptionGroup(defaultToken);	  OptionGroup    group    =    options.getOptionGroup(currentOption);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
139	[BUG]  [BUGGY]  OptionGroup  currentOption  =  options.getOptionGroup(currentToken);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  OptionGroup  currentOption  =  options.getOptionGroup(currentToken);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	OptionGroup  currentOption  =  options.getOptionGroup(currentToken);	  OptionGroup    group    =    options.getOptionGroup(currentOption);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
140	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(cmd,  stopAtNonOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(cmd,  stopAtNonOption,  expectedOpts);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	OptionGroup  group  =  options.getOptionGroup(cmd,  stopAtNonOption,  expectedOpts);	  OptionGroup    group    =    options.getOptionGroup(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
141	[BUG]  [BUGGY]  String[]  arguments  =  cmd.toArray(new  String[cmd.length()  1]);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.toArray(new  String[cmd.length()  1]);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String[]  arguments  =  cmd.toArray(new  String[cmd.length()  1]);	  String[]    arguments    =    cmd.toArray(new    String[cmd.length()    +    1]);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
142	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(category);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(category);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	OptionGroup  group  =  options.getOptionGroup(category);	  OptionGroup    group    =    cmd.getOptionGroup(options);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
143	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(group);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(group);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	OptionGroup  group  =  options.getOptionGroup(group);	  OptionGroup    group    =    cmd.getOptionGroup(options);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
144	[BUG]  [BUGGY]  String  argument  =(cmd  ==  null)?  null  :  cmd.getText();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String  argument  =(cmd  ==  null)?  null  :  cmd.getText();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String  argument  =(cmd  ==  null)?  null  :  cmd.getText();	  String    argument    =(cmd    ==    null)?    null    :    cmd.toString();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
145	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  stopAtNonOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOption(cmd,  stopAtNonOption,  expectedOpts);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  currentOption  =  options.getOption(cmd,  stopAtNonOption,  expectedOpts);	  Option    currentOption    =    options.getOption(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
146	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOption(cmd,  null);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  currentOption  =  options.getOption(cmd,  null);	  Option    currentOption    =    options.getOption(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
147	[BUG]  [BUGGY]  for(String  argument  :  options.getArguments(),  cmd)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  options.getArguments(),  cmd)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  options.getArguments(),  cmd)  {	  for(String    argument    :    arguments.length,    cmd)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
148	[BUG]  [BUGGY]  for(String  argument  :  properties.keySet(),  cmd)  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  properties.keySet(),  cmd)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  properties.keySet(),  cmd)  {	  for(String    argument    :    arguments.length,    cmd)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
149	[BUG]  [BUGGY]  for(String  argument  :  properties.length,  cmd)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  properties.length,  cmd)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  properties.length,  cmd)  {	  for(String    argument    :    arguments.length,    cmd)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
150	[BUG]  [BUGGY]  String[]  arguments  =  cmd.split( "/ ")+  Arrays.asList(arguments);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.split( "/ ")+  Arrays.asList(arguments);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String[]  arguments  =  cmd.split( "/ ")+  Arrays.asList(arguments);	  String[]    arguments    =    cmd.split(   "/   ");    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
151	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	OptionGroup  group  =  options.getOptionGroup(options);	  OptionGroup    group    =    cmd.getOptionGroup(options);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
152	[BUG]  [BUGGY]  String  argument  =(this.cmd!=  null?  this.cmd.toString()  : "null ");  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String  argument  =(this.cmd!=  null?  this.cmd.toString()  : "null ");  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String  argument  =(this.cmd!=  null?  this.cmd.toString()  : "null ");	  String    argument    =    this.cmd.toString();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
153	[BUG]  [BUGGY]  String  argument  =(this.cmd!=  null)?  this.cmd.toString()  : " ";  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String  argument  =(this.cmd!=  null)?  this.cmd.toString()  : " ";  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String  argument  =(this.cmd!=  null)?  this.cmd.toString()  : " ";	  String    argument    =    this.cmd.toString();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
154	[BUG]  [BUGGY]  Argument[]  arguments  =  options.toArray(new  Arguments,  arguments);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  options.toArray(new  Arguments,  arguments);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  options.toArray(new  Arguments,  arguments);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    arguments);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
155	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentToken,  arguments);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentToken,  arguments);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	OptionGroup  group  =  options.getOptionGroup(currentToken,  arguments);	  OptionGroup    group    =    options.getOptionGroup(cmd,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
156	[BUG]  [BUGGY]  for(String  argument  :  arguments.toArray(new  String[arguments.size()  ]),  this.currentToken)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  arguments.toArray(new  String[arguments.size()  ]),  this.currentToken)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  arguments.toArray(new  String[arguments.size()  ]),  this.currentToken)  {	  for(String    argument    :    arguments.toArray(new    String[arguments.size()    ]),    currentToken)    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
157	[BUG]  [BUGGY]  for(String  argument  :  arguments.properties)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  arguments.properties)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  arguments.properties)  {	  for(String    argument    :    options.properties)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
158	[BUG]  [BUGGY]  Option  options  =  group.getOptionGroups();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  options  =  group.getOptionGroups();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  options  =  group.getOptionGroups();	  Option    options    =    group.getOptions();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
159	[BUG]  [BUGGY]  String  argument  =(cmd  ==  null)?  null  :  cmd.toString()  + "  [null] ";  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String  argument  =(cmd  ==  null)?  null  :  cmd.toString()  + "  [null] ";  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String  argument  =(cmd  ==  null)?  null  :  cmd.toString()  + "  [null] ";	  String    argument    =(cmd    ==    null)?    null    :    cmd.toString();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
160	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  options,  group);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  options,  group);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  options,  group);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    options);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
161	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  options,  currentToken);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  options,  currentToken);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  options,  currentToken);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    options);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
162	[BUG]  [BUGGY]  for(String  argument  :  arguments.length,  options.getArguments())  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  arguments.length,  options.getArguments())  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  arguments.length,  options.getArguments())  {	  for(String    argument    :    arguments.length,    cmd)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
163	[BUG]  [BUGGY]  for(String  argument  :  arguments.split( "/> "))  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  arguments.split( "/> "))  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  arguments.split( "/> "))  {	  for(String    argument    :    arguments.split(   "/   "))    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
164	[BUG]  [BUGGY]  Argument[]  arguments  =  group.toArray(new  Arguments,  exceptions);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  group.toArray(new  Arguments,  exceptions);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  group.toArray(new  Arguments,  exceptions);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    exceptions);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
165	[BUG]  [BUGGY]  for(String  argument  :  options.split( "[null] "))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  options.split( "[null] "))  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  options.split( "[null] "))  {	  for(String    argument    :    options.split(   "null   "))    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
166	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentToken,  expectedOpts);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	OptionGroup  group  =  options.getOptionGroup(currentToken,  expectedOpts);	  OptionGroup    group    =    options.getOptionGroup(currentToken);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
167	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentToken  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentToken  -  1);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	OptionGroup  group  =  options.getOptionGroup(currentToken  -  1);	  OptionGroup    group    =    options.getOptionGroup(currentToken);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
168	[BUG]  [BUGGY]  Options  options  =  currentOption.getOptionGroups();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Options  options  =  currentOption.getOptionGroups();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Options  options  =  currentOption.getOptionGroups();	  Options    options    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
169	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Argument[cmd.size()  ]);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Argument[cmd.size()  ]);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(new  Argument[cmd.size()  ]);	  Argument[]    arguments    =    cmd.toArray(arguments);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
170	[BUG]  [BUGGY]  Argument[]  arguments  =  group.toArray(arguments);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  group.toArray(arguments);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  group.toArray(arguments);	  Argument[]    arguments    =    cmd.toArray(arguments);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
171	[BUG]  [BUGGY]  Option  properties  =  options.getOptionGroups();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  properties  =  options.getOptionGroups();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  properties  =  options.getOptionGroups();	  Option    properties    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
172	[BUG]  [BUGGY]  Option  properties  =  options.getOptionProperties();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  properties  =  options.getOptionProperties();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  properties  =  options.getOptionProperties();	  Option    properties    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
173	[BUG]  [BUGGY]  Options  properties  =  options.getOptions(cmd,  group);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Options  properties  =  options.getOptions(cmd,  group);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Options  properties  =  options.getOptions(cmd,  group);	  Options    properties    =    options.getOptions(cmd);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
174	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  group,  arguments);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  group,  arguments);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  group,  arguments);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    group);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
175	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(cmd,  stopAtNonOption,  skipParsing);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(cmd,  stopAtNonOption,  skipParsing);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	OptionGroup  group  =  options.getOptionGroup(cmd,  stopAtNonOption,  skipParsing);	  OptionGroup    group    =    options.getOptionGroup(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
176	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(cmd,  stopAtNonOption,  handleToken);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(cmd,  stopAtNonOption,  handleToken);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	OptionGroup  group  =  options.getOptionGroup(cmd,  stopAtNonOption,  handleToken);	  OptionGroup    group    =    options.getOptionGroup(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
177	[BUG]  [BUGGY]  Argument[]  arguments  =  options.toArray(new  Arguments,  currentToken);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  options.toArray(new  Arguments,  currentToken);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Argument[]  arguments  =  options.toArray(new  Arguments,  currentToken);	  Argument[]    arguments    =    options.toArray(new    Arguments);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
178	[BUG]  [BUGGY]  String  argument  =(md  ==  null)?  null  :  cmd.toString();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String  argument  =(md  ==  null)?  null  :  cmd.toString();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String  argument  =(md  ==  null)?  null  :  cmd.toString();	  String    argument    =(cmd!=    null)?    null    :    cmd.toString();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
179	[BUG]  [BUGGY]  for(String  argument  :  properties.split( "[null] "))  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  properties.split( "[null] "))  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  properties.split( "[null] "))  {	  for(String    argument    :    properties.split(   "null   "))    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
180	[BUG]  [BUGGY]  for(String  argument  :  arguments.toArray(new  String[properties.length]))  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  arguments.toArray(new  String[properties.length]))  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  arguments.toArray(new  String[properties.length]))  {	  for(String    argument    :    properties.length)    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
181	[BUG]  [BUGGY]  for(String  argument  :  arguments.toArray(new  String[properties.size()  ]))  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  arguments.toArray(new  String[properties.size()  ]))  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  arguments.toArray(new  String[properties.size()  ]))  {	  for(String    argument    :    properties.length)    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
182	[BUG]  [BUGGY]  for(String  argument  :  arguments.toArray(new  String[arguments.length]),  cmd)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  arguments.toArray(new  String[arguments.length]),  cmd)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  arguments.toArray(new  String[arguments.length]),  cmd)  {	  for(String    argument    :    arguments.toArray(new    String[arguments.length]))    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
183	[BUG]  [BUGGY]  Option  currentOption  =  cmd.getOption(options)+  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  cmd.getOption(options)+  1;  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  currentOption  =  cmd.getOption(options)+  1;	  Option    currentOption    =    cmd.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
184	[BUG]  [BUGGY]  for(String  argument  :  arguments.toArray(new  String[arguments.size()  ]),  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  arguments.toArray(new  String[arguments.size()  ]),  null)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  arguments.toArray(new  String[arguments.size()  ]),  null)  {	  for(String    argument    :    arguments.toArray(new    String[arguments.size()    ]),    cmd)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
185	[BUG]  [BUGGY]  String[]  arguments  =  cmd.split( "/ ".split( "/ "));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.split( "/ ".split( "/ "));  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String[]  arguments  =  cmd.split( "/ ".split( "/ "));	  String[]    arguments    =    cmd.split(   "/   ");    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
186	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  group,  expectedOpts);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOption(cmd,  group,  expectedOpts);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  currentOption  =  options.getOption(cmd,  group,  expectedOpts);	  Option    currentOption    =    options.getOption(cmd,    group);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
187	[BUG]  [BUGGY]  Option  currentOption  =  options.getOptionGroup(group);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOptionGroup(group);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  currentOption  =  options.getOptionGroup(group);	  Option    currentOption    =    options.getOption(group);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
188	[BUG]  [BUGGY]  String  argument  =  this.arguments.toString();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String  argument  =  this.arguments.toString();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String  argument  =  this.arguments.toString();	  String    argument    =    arguments.toString();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
189	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroups(currentOption);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroups(currentOption);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	OptionGroup  group  =  options.getOptionGroups(currentOption);	  OptionGroup    group    =    options.getOptionGroup(currentOption);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
190	[BUG]  [BUGGY]  String[]  arguments  =  cmd.split( ": "  +  group.getName(),  options);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.split( ": "  +  group.getName(),  options);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String[]  arguments  =  cmd.split( ": "  +  group.getName(),  options);	  String[]    arguments    =    cmd.split(   ":   "    +    group.getName());    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
191	[BUG]  [BUGGY]  String[]  arguments  =  group.split( ": ",  2);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  group.split( ": ",  2);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String[]  arguments  =  group.split( ": ",  2);	  String[]    arguments    =    group.split(   ":   ");    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
192	[BUG]  [BUGGY]  String  argument  =  cmd.toString()  + "  arguments ";  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String  argument  =  cmd.toString()  + "  arguments ";  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String  argument  =  cmd.toString()  + "  arguments ";	  String    argument    =    cmd.toString()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
193	[BUG]  [BUGGY]  Option  options  =  currentOption.getOptionGroup();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  options  =  currentOption.getOptionGroup();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  options  =  currentOption.getOptionGroup();	  Option    options    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
194	[BUG]  [BUGGY]  String[]  arguments  =  cmd.split( "- ",  2);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.split( "- ",  2);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String[]  arguments  =  cmd.split( "- ",  2);	  String[]    arguments    =    cmd.split(   "-   ");    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
195	[BUG]  [BUGGY]  String[]  arguments  =  cmd.split( "- ",  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.split( "- ",  1);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	String[]  arguments  =  cmd.split( "- ",  1);	  String[]    arguments    =    cmd.split(   "-   ");    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
196	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  stopAtNonOption,  arguments);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOption(cmd,  stopAtNonOption,  arguments);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	Option  currentOption  =  options.getOption(cmd,  stopAtNonOption,  arguments);	  Option    currentOption    =    options.getOption(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
197	[BUG]  [BUGGY]  for(String  argument  :  options.getArgumentParameters())  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  options.getArgumentParameters())  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli37/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	118	119	1	replace	for(String  argument  :  options.getArgumentParameters())  {	  for(String    argument    :    options.getArgumentNames())    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
